
// Verilog netlist produced by program ldbanno, Version Diamond (64-bit) 3.11.2.446

// ldbanno -n Verilog -o FPGASDR_impl1_mapvo.vo -w -neg -gui -msgset C:/Users/user/lattice/1BitADCFPGASDR/promote.xml FPGASDR_impl1_map.ncd 
// Netlist created on Mon Apr 06 16:32:29 2020
// Netlist written on Mon Apr 06 16:32:42 2020
// Design is for device LCMXO2-7000HE
// Design is for package TQFP144
// Design is for performance grade 4

`timescale 1 ns / 1 ps

module top ( i_Rx_Serial, o_Tx_Serial, MYLED, XOut, RFIn, DiffOut, PWMOut, 
             PWMOutP1, PWMOutP2, PWMOutP3, PWMOutP4, PWMOutN1, PWMOutN2, 
             PWMOutN3, PWMOutN4, sinGen, sin_out, CIC_out_clkSin );
  input  i_Rx_Serial, RFIn;
  output o_Tx_Serial;
  output [7:0] MYLED;
  output XOut, DiffOut, PWMOut, PWMOutP1, PWMOutP2, PWMOutP3, PWMOutP4, 
         PWMOutN1, PWMOutN2, PWMOutN3, PWMOutN4, sinGen, sin_out, 
         CIC_out_clkSin;
  wire   \PWM1/counter_9 , \PWM1/n46 , osc_clk, \PWM1/n11509 , 
         \PWM1/counter_8 , \PWM1/counter_7 , \PWM1/n47 , \PWM1/n48 , 
         \PWM1/n11508 , \PWM1/counter_6 , \PWM1/counter_5 , \PWM1/n49 , 
         \PWM1/n50 , \PWM1/n11507 , \PWM1/counter_4 , \PWM1/counter_3 , 
         \PWM1/n51 , \PWM1/n52 , \PWM1/n11506 , \PWM1/counter_2 , 
         \PWM1/counter_1 , \PWM1/n53 , \PWM1/n54 , \PWM1/n11505 , 
         \PWM1/counter_0 , \PWM1/n55 , \PWM1/DataInReg_9 , 
         \PWM1/PWMOut_N_1869 , \PWM1/n10974 , PWMOutP4_c, \PWM1/DataInReg_8 , 
         \PWM1/DataInReg_7 , \PWM1/n10973 , \PWM1/DataInReg_6 , 
         \PWM1/DataInReg_5 , \PWM1/n10972 , \PWM1/DataInReg_4 , 
         \PWM1/DataInReg_3 , \PWM1/n10971 , \PWM1/DataInReg_2 , 
         \PWM1/DataInReg_1 , \PWM1/n10970 , \PWM1/DataInReg_0 , 
         \uart_rx1/UartClk[2] , \uart_rx1/n2 , \uart_rx1/n18 , \uart_rx1/n19 , 
         \uart_rx1/n11510 , \uart_rx1/n3 , \uart_rx1/n20 , 
         \uart_rx1/r_Clock_Count_15 , \uart_rx1/n70 , 
         \uart_rx1/UartClk_2_enable_30 , \uart_rx1/n8431 , \uart_rx1/n12113 , 
         \uart_rx1/r_Clock_Count_14 , \uart_rx1/r_Clock_Count_13 , 
         \uart_rx1/n71 , \uart_rx1/n72 , \uart_rx1/n12112 , 
         \uart_rx1/r_Clock_Count_12 , \uart_rx1/r_Clock_Count_11 , 
         \uart_rx1/n73 , \uart_rx1/n74 , \uart_rx1/n12111 , 
         \uart_rx1/r_Clock_Count_10 , \uart_rx1/r_Clock_Count_9 , 
         \uart_rx1/n75 , \uart_rx1/n76 , \uart_rx1/n12110 , 
         \uart_rx1/r_Clock_Count_8 , \uart_rx1/r_Clock_Count_7 , 
         \uart_rx1/n77 , \uart_rx1/n78 , \uart_rx1/n12109 , 
         \uart_rx1/r_Clock_Count_6 , \uart_rx1/r_Clock_Count_5 , 
         \uart_rx1/n79 , \uart_rx1/n80 , \uart_rx1/n12108 , 
         \uart_rx1/r_Clock_Count_4 , \uart_rx1/r_Clock_Count_3 , 
         \uart_rx1/n81 , \uart_rx1/n82 , \uart_rx1/n12107 , 
         \uart_rx1/r_Clock_Count_2 , \uart_rx1/r_Clock_Count_1 , 
         \uart_rx1/n83 , \uart_rx1/n84 , \uart_rx1/n12106 , 
         \uart_rx1/r_Clock_Count_0 , \uart_rx1/n85 , phase_inc_carrGen_63, 
         phase_inc_carrGen_62, n11047, n1093, n1092, phase_inc_carrGen_61, 
         phase_inc_carrGen_60, n11046, n1095, n1094, phase_inc_carrGen_59, 
         phase_inc_carrGen_58, n11045, n1097, n1096, phase_inc_carrGen_57, 
         phase_inc_carrGen_56, n11044, n1099, n1098, phase_inc_carrGen_55, 
         phase_inc_carrGen_54, n11043, n1101, n1100, phase_inc_carrGen_53, 
         phase_inc_carrGen_52, n11042, n1103, n1102, phase_inc_carrGen_51, 
         phase_inc_carrGen_50, n11041, n1105, n1104, phase_inc_carrGen_49, 
         phase_inc_carrGen_48, n11040, n1107, n1106, phase_inc_carrGen_47, 
         phase_inc_carrGen_46, n11039, n1109, n1108, phase_inc_carrGen_45, 
         phase_inc_carrGen_44, n11038, n1111, n1110, phase_inc_carrGen_43, 
         phase_inc_carrGen_42, n11037, n1113, n1112, phase_inc_carrGen_41, 
         phase_inc_carrGen_40, n11036, n1115, n1114, phase_inc_carrGen_39, 
         phase_inc_carrGen_38, n11035, n1117, n1116, phase_inc_carrGen_37, 
         phase_inc_carrGen_36, n11034, n1119, n1118, phase_inc_carrGen_35, 
         phase_inc_carrGen_34, n11033, n1121, n1120, phase_inc_carrGen_33, 
         phase_inc_carrGen_32, n11032, n1123, n1122, phase_inc_carrGen_31, 
         phase_inc_carrGen_30, n11031, n1125, n1124, phase_inc_carrGen_29, 
         phase_inc_carrGen_28, n11030, n1127, n1126, phase_inc_carrGen_27, 
         phase_inc_carrGen_26, n11029, n1129, n1128, phase_inc_carrGen_25, 
         phase_inc_carrGen_24, n11028, n1131, n1130, phase_inc_carrGen_23, 
         phase_inc_carrGen_22, n11027, n1133, n1132, phase_inc_carrGen_21, 
         phase_inc_carrGen_20, n11026, n1135, n1134, phase_inc_carrGen_19, 
         phase_inc_carrGen_18, n11025, n1137, n1136, phase_inc_carrGen_17, 
         phase_inc_carrGen_16, n11024, n1139, n1138, phase_inc_carrGen_15, 
         phase_inc_carrGen_14, n11023, n1141, n1140, phase_inc_carrGen_13, 
         phase_inc_carrGen_12, n11022, n1143, n1142, phase_inc_carrGen_11, 
         phase_inc_carrGen_10, n11021, n1145, n1144, phase_inc_carrGen_9, 
         phase_inc_carrGen_8, n11020, n1147, n1146, phase_inc_carrGen_7, 
         phase_inc_carrGen_6, n11019, n1149, n1148, phase_inc_carrGen_5, 
         phase_inc_carrGen_4, n11018, n1151, n1150, phase_inc_carrGen_3, 
         phase_inc_carrGen_2, n11017, n1153, n1152, phase_inc_carrGen_1, n1154, 
         n8036, n13062, n3634, n8034, n2817, n2818, osc_clk_enable_1471, 
         n11009, n8032, n2302, n2819, n2820, n11008, n2303, n2304, n2821, 
         n2822, n11007, n2305, n2306, n2823, n2824, n11006, n2307, n2308, 
         n2825, n2826, n11005, n2309, n8030, n2827, n2828, osc_clk_enable_1461, 
         n11004, n2311, n2312, n3648, n2829, n2830, n11003, n2313, n2314, 
         n2831, n2832, n11002, n2315, n3652, n2316, n2833, n2834, n11001, 
         n2317, n2318, n2835, n2836, n11000, n2319, n3673, n2320, n2837, n2838, 
         n10999, n8028, n2322, n2839, n2840, n10998, n2323, n2324, n2841, 
         n2842, n10997, n2325, n3669, n2326, n2843, n2844, n10996, n2327, 
         n2328, n2845, n2846, n10995, n2329, n2330, n2847, n2848, n10994, 
         n2331, n3683, n2332, n2849, n2850, n10993, n2333, n2334, n2851, n2852, 
         n10992, n2335, n2336, n2853, n2854, n10991, n2337, n2338, n2855, 
         n2856, n10990, n2339, n2340, n2857, n2858, n10989, n2341, n2342, 
         n2859, n2860, n10988, n8026, n2344, n2861, n2862, n10987, n8024, 
         n2346, n2863, n2864, n10986, n2347, n2348, n2865, n2866, n10985, 
         n8022, n2350, n2867, n2868, n10984, n2351, n2352, n2869, n2870, 
         n10983, n2353, n2354, n2871, n2872, n10982, n2355, n8020, n2873, 
         n2874, n10981, n2357, n2358, n2875, n2876, n10980, n2359, n2360, 
         n2877, n2878, osc_clk_enable_1411, n10979, n2361, phase_inc_carrGen_0, 
         n2628, n2880, osc_clk_enable_1408, n10978, n2879, LOCosine_12, 
         \Mixer1/n11054 , \Mixer1/MixerOutCos_11_N_250_11 , LOCosine_11, 
         LOCosine_10, \Mixer1/n11053 , \Mixer1/MixerOutCos_11_N_250_9 , 
         \Mixer1/MixerOutCos_11_N_250_10 , LOCosine_9, LOCosine_8, 
         \Mixer1/n11052 , \Mixer1/MixerOutCos_11_N_250_7 , 
         \Mixer1/MixerOutCos_11_N_250_8 , LOCosine_7, LOCosine_6, 
         \Mixer1/n11051 , \Mixer1/MixerOutCos_11_N_250_5 , 
         \Mixer1/MixerOutCos_11_N_250_6 , LOCosine_5, LOCosine_4, 
         \Mixer1/n11050 , \Mixer1/MixerOutCos_11_N_250_3 , 
         \Mixer1/MixerOutCos_11_N_250_4 , LOCosine_3, LOCosine_2, 
         \Mixer1/n11049 , \Mixer1/MixerOutCos_11_N_250_1 , 
         \Mixer1/MixerOutCos_11_N_250_2 , LOCosine_1, 
         \Mixer1/MixerOutCos_11_N_250_0 , LOSine_12, \Mixer1/n11016 , 
         \Mixer1/MixerOutSin_11_N_236_11 , LOSine_11, LOSine_10, 
         \Mixer1/n11015 , \Mixer1/MixerOutSin_11_N_236_9 , 
         \Mixer1/MixerOutSin_11_N_236_10 , LOSine_9, LOSine_8, \Mixer1/n11014 , 
         \Mixer1/MixerOutSin_11_N_236_7 , \Mixer1/MixerOutSin_11_N_236_8 , 
         LOSine_7, LOSine_6, \Mixer1/n11013 , \Mixer1/MixerOutSin_11_N_236_5 , 
         \Mixer1/MixerOutSin_11_N_236_6 , LOSine_5, LOSine_4, \Mixer1/n11012 , 
         \Mixer1/MixerOutSin_11_N_236_3 , \Mixer1/MixerOutSin_11_N_236_4 , 
         LOSine_3, LOSine_2, \Mixer1/n11011 , \Mixer1/MixerOutSin_11_N_236_1 , 
         \Mixer1/MixerOutSin_11_N_236_2 , LOSine_1, 
         \Mixer1/MixerOutSin_11_N_236_0 , n10836, n1031, n10835, n1033, n1032, 
         n10834, n1035, n1034, n10833, n1037, n1036, n10832, n1039, n1038, 
         n10831, n1041, n1040, n10830, n1043, n1042, n10829, n1045, n1044, 
         n10828, n1047, n1046, n10827, n1049, n1048, n10826, n1051, n1050, 
         n10825, n1053, n1052, n10824, n1055, n1054, n10823, n1057, n1056, 
         n10822, n1059, n1058, n10821, n1061, n1060, n10820, n1063, n1062, 
         n10819, n1065, n1064, n10818, n1067, n1066, n10817, n1069, n1068, 
         n10816, n1071, n1070, n10815, n1073, n1072, n10814, n1075, n1074, 
         n10813, n1077, n1076, n10812, n1079, n1078, n10811, n1081, n1080, 
         n10810, n1083, n1082, n10809, n1085, n1084, n10808, n1087, n1086, 
         n10807, n1089, n1088, n1090, \SinCos1/rom_addr0_r , phase_accum_56, 
         \SinCos1/rom_addr0_r_n , \SinCos1/co0 , \SinCos1/rom_addr0_r_2 , 
         \SinCos1/rom_addr0_r_1 , phase_accum_58, \SinCos1/rom_addr0_r_n_1 , 
         \SinCos1/rom_addr0_r_n_2 , \SinCos1/co1 , \SinCos1/rom_addr0_r_4 , 
         \SinCos1/rom_addr0_r_3 , phase_accum_60, \SinCos1/rom_addr0_r_n_3 , 
         \SinCos1/rom_addr0_r_n_4 , \SinCos1/co2 , \SinCos1/rom_addr0_r_5 , 
         \SinCos1/rom_addr0_r_n_5 , \SinCos1/rom_dout_2 , \SinCos1/rom_dout_1 , 
         \SinCos1/co0_1 , \SinCos1/rom_dout_s_n_1 , \SinCos1/rom_dout_s_n_2 , 
         \SinCos1/co1_1 , \SinCos1/rom_dout_4 , \SinCos1/rom_dout_3 , 
         \SinCos1/rom_dout_s_n_3 , \SinCos1/rom_dout_s_n_4 , \SinCos1/co2_1 , 
         \SinCos1/rom_dout_6 , \SinCos1/rom_dout_5 , \SinCos1/rom_dout_s_n_5 , 
         \SinCos1/rom_dout_s_n_6 , \SinCos1/co3 , \SinCos1/rom_dout_8 , 
         \SinCos1/rom_dout_7 , \SinCos1/rom_dout_s_n_7 , 
         \SinCos1/rom_dout_s_n_8 , \SinCos1/co4 , \SinCos1/rom_dout_10 , 
         \SinCos1/rom_dout_9 , \SinCos1/rom_dout_s_n_9 , 
         \SinCos1/rom_dout_s_n_10 , \SinCos1/co5 , \SinCos1/rom_dout_12 , 
         \SinCos1/rom_dout_11 , \SinCos1/rom_dout_s_n_11 , 
         \SinCos1/rom_dout_s_n_12 , \SinCos1/rom_dout_13 , \SinCos1/co0_2 , 
         \SinCos1/rom_dout_15 , \SinCos1/rom_dout_14 , 
         \SinCos1/rom_dout_c_n_1 , \SinCos1/rom_dout_c_n_2 , \SinCos1/co1_2 , 
         \SinCos1/rom_dout_17 , \SinCos1/rom_dout_16 , 
         \SinCos1/rom_dout_c_n_3 , \SinCos1/rom_dout_c_n_4 , \SinCos1/co2_2 , 
         \SinCos1/rom_dout_19 , \SinCos1/rom_dout_18 , 
         \SinCos1/rom_dout_c_n_5 , \SinCos1/rom_dout_c_n_6 , \SinCos1/co3_1 , 
         \SinCos1/rom_dout_21 , \SinCos1/rom_dout_20 , 
         \SinCos1/rom_dout_c_n_7 , \SinCos1/rom_dout_c_n_8 , \SinCos1/co4_1 , 
         \SinCos1/rom_dout_23 , \SinCos1/rom_dout_22 , 
         \SinCos1/rom_dout_c_n_9 , \SinCos1/rom_dout_c_n_10 , \SinCos1/co5_1 , 
         \SinCos1/rom_dout_25 , \SinCos1/rom_dout_24 , 
         \SinCos1/rom_dout_c_n_11 , \SinCos1/rom_dout_c_n_12 , 
         \SinCos1/rom_dout , MixerOutSin_11, \CIC1Sin/n4326 , \CIC1Sin/n4296 , 
         \CIC1Sin/d1_43 , \CIC1Sin/n4327 , \CIC1Sin/d1_42 , 
         \CIC1Sin/d1_71_N_418_43 , \CIC1Sin/d1_71_N_418_42 , \CIC1Sin/n11963 , 
         \CIC1Sin/n11964 , \CIC1Sin/d_d9_58 , \CIC1Sin/d9_58 , 
         \CIC1Sin/d_d9_57 , \CIC1Sin/d9_57 , \CIC1Sin/n11540 , \CIC1Sin/n5984 , 
         \CIC1Sin/n5983 , \CIC1Sin/n11541 , \CIC1Sin/d_d9_42 , \CIC1Sin/d9_42 , 
         \CIC1Sin/d_d9_41 , \CIC1Sin/d9_41 , \CIC1Sin/n11532 , 
         \CIC1Sin/n11533 , \CIC1Sin/d_d9_10 , \CIC1Sin/d9_10 , 
         \CIC1Sin/d_d9_9 , \CIC1Sin/d9_9 , \CIC1Sin/n11335 , \CIC1Sin/n11336 , 
         \CIC1Sin/n4328 , \CIC1Sin/d1_41 , \CIC1Sin/n4329 , \CIC1Sin/d1_40 , 
         \CIC1Sin/d1_71_N_418_41 , \CIC1Sin/d1_71_N_418_40 , \CIC1Sin/n11962 , 
         \CIC1Sin/n4330 , \CIC1Sin/d1_39 , \CIC1Sin/n4331 , \CIC1Sin/d1_38 , 
         \CIC1Sin/d1_71_N_418_39 , \CIC1Sin/d1_71_N_418_38 , \CIC1Sin/n11961 , 
         \CIC1Sin/n4332 , \CIC1Sin/d1_37 , \CIC1Sin/n4333 , \CIC1Sin/d1_36 , 
         \CIC1Sin/d1_71_N_418_37 , \CIC1Sin/d1_71_N_418_36 , \CIC1Sin/n11960 , 
         \CIC1Sin/d2_71 , \CIC1Sin/d1_71 , \CIC1Sin/d2_70 , \CIC1Sin/d1_70 , 
         \CIC1Sin/n11955 , \CIC1Sin/n4451 , \CIC1Sin/n4450 , \CIC1Sin/d2_69 , 
         \CIC1Sin/d1_69 , \CIC1Sin/d2_68 , \CIC1Sin/d1_68 , \CIC1Sin/n11954 , 
         \CIC1Sin/n4453 , \CIC1Sin/n4452 , \CIC1Sin/d2_67 , \CIC1Sin/d1_67 , 
         \CIC1Sin/d2_66 , \CIC1Sin/d1_66 , \CIC1Sin/n11953 , \CIC1Sin/n4455 , 
         \CIC1Sin/n4454 , \CIC1Sin/d2_65 , \CIC1Sin/d1_65 , \CIC1Sin/d2_64 , 
         \CIC1Sin/d1_64 , \CIC1Sin/n11952 , \CIC1Sin/n4457 , \CIC1Sin/n4456 , 
         \CIC1Sin/d2_63 , \CIC1Sin/d1_63 , \CIC1Sin/d2_62 , \CIC1Sin/d1_62 , 
         \CIC1Sin/n11951 , \CIC1Sin/n4459 , \CIC1Sin/n4458 , \CIC1Sin/d2_61 , 
         \CIC1Sin/d1_61 , \CIC1Sin/d2_60 , \CIC1Sin/d1_60 , \CIC1Sin/n11950 , 
         \CIC1Sin/n4461 , \CIC1Sin/n4460 , \CIC1Sin/d_d9_8 , \CIC1Sin/d9_8 , 
         \CIC1Sin/d_d9_7 , \CIC1Sin/d9_7 , \CIC1Sin/n11334 , \CIC1Sin/d_d9_6 , 
         \CIC1Sin/d9_6 , \CIC1Sin/d_d9_5 , \CIC1Sin/d9_5 , \CIC1Sin/n11333 , 
         \CIC1Sin/d_d9_4 , \CIC1Sin/d9_4 , \CIC1Sin/d_d9_3 , \CIC1Sin/d9_3 , 
         \CIC1Sin/n11332 , \CIC1Sin/d_d9_2 , \CIC1Sin/d9_2 , \CIC1Sin/d_d9_1 , 
         \CIC1Sin/d9_1 , \CIC1Sin/n11331 , \CIC1Sin/d_d9_0 , \CIC1Sin/d9_0 , 
         \CIC1Sin/d_d8_71 , \CIC1Sin/d8_71 , \CIC1Sin/n11587 , \CIC1Sin/n5818 , 
         \CIC1Sin/d_d8_70 , \CIC1Sin/d8_70 , \CIC1Sin/d_d8_69 , 
         \CIC1Sin/d8_69 , \CIC1Sin/n11586 , \CIC1Sin/n5820 , \CIC1Sin/n5819 , 
         \CIC1Sin/d_d8_68 , \CIC1Sin/d8_68 , \CIC1Sin/d_d8_67 , 
         \CIC1Sin/d8_67 , \CIC1Sin/n11585 , \CIC1Sin/n5822 , \CIC1Sin/n5821 , 
         \CIC1Sin/d_d8_66 , \CIC1Sin/d8_66 , \CIC1Sin/d_d8_65 , 
         \CIC1Sin/d8_65 , \CIC1Sin/n11584 , \CIC1Sin/n5824 , \CIC1Sin/n5823 , 
         \CIC1Sin/d_d8_64 , \CIC1Sin/d8_64 , \CIC1Sin/d_d8_63 , 
         \CIC1Sin/d8_63 , \CIC1Sin/n11583 , \CIC1Sin/n5826 , \CIC1Sin/n5825 , 
         \CIC1Sin/d_d8_62 , \CIC1Sin/d8_62 , \CIC1Sin/d_d8_61 , 
         \CIC1Sin/d8_61 , \CIC1Sin/n11582 , \CIC1Sin/n5828 , \CIC1Sin/n5827 , 
         \CIC1Sin/d_d8_60 , \CIC1Sin/d8_60 , \CIC1Sin/d_d8_59 , 
         \CIC1Sin/d8_59 , \CIC1Sin/n11581 , \CIC1Sin/n5830 , \CIC1Sin/n5829 , 
         \CIC1Sin/d_d8_58 , \CIC1Sin/d8_58 , \CIC1Sin/d_d8_57 , 
         \CIC1Sin/d8_57 , \CIC1Sin/n11580 , \CIC1Sin/n5832 , \CIC1Sin/n5831 , 
         \CIC1Sin/d_d8_56 , \CIC1Sin/d8_56 , \CIC1Sin/d_d8_55 , 
         \CIC1Sin/d8_55 , \CIC1Sin/n11579 , \CIC1Sin/n5834 , \CIC1Sin/n5833 , 
         \CIC1Sin/d_d8_54 , \CIC1Sin/d8_54 , \CIC1Sin/d_d8_53 , 
         \CIC1Sin/d8_53 , \CIC1Sin/n11578 , \CIC1Sin/n5836 , \CIC1Sin/n5835 , 
         \CIC1Sin/d_d8_52 , \CIC1Sin/d8_52 , \CIC1Sin/d_d8_51 , 
         \CIC1Sin/d8_51 , \CIC1Sin/n11577 , \CIC1Sin/n5838 , \CIC1Sin/n5837 , 
         \CIC1Sin/d_d8_50 , \CIC1Sin/d8_50 , \CIC1Sin/d_d8_49 , 
         \CIC1Sin/d8_49 , \CIC1Sin/n11576 , \CIC1Sin/n5840 , \CIC1Sin/n5839 , 
         \CIC1Sin/d_d8_48 , \CIC1Sin/d8_48 , \CIC1Sin/d_d8_47 , 
         \CIC1Sin/d8_47 , \CIC1Sin/n11575 , \CIC1Sin/n5842 , \CIC1Sin/n5841 , 
         \CIC1Sin/d_d8_46 , \CIC1Sin/d8_46 , \CIC1Sin/d_d8_45 , 
         \CIC1Sin/d8_45 , \CIC1Sin/n11574 , \CIC1Sin/n5844 , \CIC1Sin/n5843 , 
         \CIC1Sin/d_d8_44 , \CIC1Sin/d8_44 , \CIC1Sin/d_d8_43 , 
         \CIC1Sin/d8_43 , \CIC1Sin/n11573 , \CIC1Sin/n5846 , \CIC1Sin/n5845 , 
         \CIC1Sin/d_d8_42 , \CIC1Sin/d8_42 , \CIC1Sin/d_d8_41 , 
         \CIC1Sin/d8_41 , \CIC1Sin/n11572 , \CIC1Sin/n5848 , \CIC1Sin/n5847 , 
         \CIC1Sin/d_d8_40 , \CIC1Sin/d8_40 , \CIC1Sin/d_d8_39 , 
         \CIC1Sin/d8_39 , \CIC1Sin/n11571 , \CIC1Sin/n5850 , \CIC1Sin/n5849 , 
         \CIC1Sin/d_d8_38 , \CIC1Sin/d8_38 , \CIC1Sin/d_d8_37 , 
         \CIC1Sin/d8_37 , \CIC1Sin/n11570 , \CIC1Sin/n5852 , \CIC1Sin/n5851 , 
         \CIC1Sin/d_d8_36 , \CIC1Sin/d8_36 , \CIC1Sin/n5853 , \CIC1Sin/d2_59 , 
         \CIC1Sin/d1_59 , \CIC1Sin/d2_58 , \CIC1Sin/d1_58 , \CIC1Sin/n11949 , 
         \CIC1Sin/n4463 , \CIC1Sin/n4462 , \CIC1Sin/d_d9_40 , \CIC1Sin/d9_40 , 
         \CIC1Sin/d_d9_39 , \CIC1Sin/d9_39 , \CIC1Sin/n11531 , 
         \CIC1Sin/d_d9_38 , \CIC1Sin/d9_38 , \CIC1Sin/d_d9_37 , 
         \CIC1Sin/d9_37 , \CIC1Sin/n11530 , \CIC1Sin/d_d9_36 , \CIC1Sin/d9_36 , 
         \CIC1Sin/d_d9_71 , \CIC1Sin/d9_71 , \CIC1Sin/n11529 , \CIC1Sin/n6008 , 
         \CIC1Sin/d_d9_70 , \CIC1Sin/d9_70 , \CIC1Sin/d_d9_69 , 
         \CIC1Sin/d9_69 , \CIC1Sin/n11528 , \CIC1Sin/n6010 , \CIC1Sin/n6009 , 
         \CIC1Sin/d_d9_68 , \CIC1Sin/d9_68 , \CIC1Sin/d_d9_67 , 
         \CIC1Sin/d9_67 , \CIC1Sin/n11527 , \CIC1Sin/n6012 , \CIC1Sin/n6011 , 
         \CIC1Sin/d_d9_66 , \CIC1Sin/d9_66 , \CIC1Sin/d_d9_65 , 
         \CIC1Sin/d9_65 , \CIC1Sin/n11526 , \CIC1Sin/n6014 , \CIC1Sin/n6013 , 
         \CIC1Sin/d_d9_64 , \CIC1Sin/d9_64 , \CIC1Sin/d_d9_63 , 
         \CIC1Sin/d9_63 , \CIC1Sin/n11525 , \CIC1Sin/n6016 , \CIC1Sin/n6015 , 
         \CIC1Sin/d_d9_62 , \CIC1Sin/d9_62 , \CIC1Sin/d_d9_61 , 
         \CIC1Sin/d9_61 , \CIC1Sin/n11524 , \CIC1Sin/n6018 , \CIC1Sin/n6017 , 
         \CIC1Sin/d_d9_60 , \CIC1Sin/d9_60 , \CIC1Sin/d_d9_59 , 
         \CIC1Sin/d9_59 , \CIC1Sin/n11523 , \CIC1Sin/n6020 , \CIC1Sin/n6019 , 
         \CIC1Sin/n11522 , \CIC1Sin/n6022 , \CIC1Sin/n6021 , \CIC1Sin/d_d9_56 , 
         \CIC1Sin/d9_56 , \CIC1Sin/d_d9_55 , \CIC1Sin/d9_55 , \CIC1Sin/n11521 , 
         \CIC1Sin/d_d9_54 , \CIC1Sin/d9_54 , \CIC1Sin/d_d9_53 , 
         \CIC1Sin/d9_53 , \CIC1Sin/n11520 , \CIC1Sin/n11539 , 
         \CIC1Sin/d_d9_52 , \CIC1Sin/d9_52 , \CIC1Sin/d_d9_51 , 
         \CIC1Sin/d9_51 , \CIC1Sin/n11519 , \CIC1Sin/d_d9_50 , \CIC1Sin/d9_50 , 
         \CIC1Sin/d_d9_49 , \CIC1Sin/d9_49 , \CIC1Sin/n11518 , 
         \CIC1Sin/d_d9_48 , \CIC1Sin/d9_48 , \CIC1Sin/d_d9_47 , 
         \CIC1Sin/d9_47 , \CIC1Sin/n11517 , \CIC1Sin/n5816 , 
         \CIC1Sin/d9_71_N_1675_71 , \CIC1Sin/d9_71_N_1675_70 , 
         \CIC1Sin/osc_clk_enable_660 , \CIC1Sin/n11568 , 
         \CIC1Sin/d9_71_N_1675_69 , \CIC1Sin/d9_71_N_1675_68 , 
         \CIC1Sin/n11567 , \CIC1Sin/d_d9_46 , \CIC1Sin/d9_46 , 
         \CIC1Sin/d_d9_45 , \CIC1Sin/d9_45 , \CIC1Sin/n11516 , 
         \CIC1Sin/d9_71_N_1675_67 , \CIC1Sin/d9_71_N_1675_66 , 
         \CIC1Sin/n11566 , \CIC1Sin/d_d9_44 , \CIC1Sin/d9_44 , 
         \CIC1Sin/d_d9_43 , \CIC1Sin/d9_43 , \CIC1Sin/n11515 , 
         \CIC1Sin/d9_71_N_1675_65 , \CIC1Sin/d9_71_N_1675_64 , 
         \CIC1Sin/n11565 , \CIC1Sin/d9_71_N_1675_63 , 
         \CIC1Sin/d9_71_N_1675_62 , \CIC1Sin/n11564 , 
         \CIC1Sin/d9_71_N_1675_61 , \CIC1Sin/d9_71_N_1675_60 , 
         \CIC1Sin/n11563 , \CIC1Sin/n11514 , \CIC1Sin/d9_71_N_1675_59 , 
         \CIC1Sin/d9_71_N_1675_58 , \CIC1Sin/n11562 , 
         \CIC1Sin/d9_71_N_1675_57 , \CIC1Sin/d9_71_N_1675_56 , 
         \CIC1Sin/n11561 , \CIC1Sin/d9_71_N_1675_55 , 
         \CIC1Sin/d9_71_N_1675_54 , \CIC1Sin/n11560 , 
         \CIC1Sin/d9_71_N_1675_53 , \CIC1Sin/d9_71_N_1675_52 , 
         \CIC1Sin/n11559 , \CIC1Sin/d9_71_N_1675_51 , 
         \CIC1Sin/d9_71_N_1675_50 , \CIC1Sin/n11558 , 
         \CIC1Sin/d9_71_N_1675_49 , \CIC1Sin/d9_71_N_1675_48 , 
         \CIC1Sin/n11557 , \CIC1Sin/d9_71_N_1675_47 , 
         \CIC1Sin/d9_71_N_1675_46 , \CIC1Sin/n11556 , 
         \CIC1Sin/d9_71_N_1675_45 , \CIC1Sin/d9_71_N_1675_44 , 
         \CIC1Sin/n11555 , \CIC1Sin/d9_71_N_1675_43 , 
         \CIC1Sin/d9_71_N_1675_42 , \CIC1Sin/osc_clk_enable_610 , 
         \CIC1Sin/n11554 , \CIC1Sin/n11513 , \CIC1Sin/d9_71_N_1675_41 , 
         \CIC1Sin/d9_71_N_1675_40 , \CIC1Sin/n11553 , \CIC1Sin/n11512 , 
         \CIC1Sin/d9_71_N_1675_39 , \CIC1Sin/d9_71_N_1675_38 , 
         \CIC1Sin/n11552 , \CIC1Sin/d9_71_N_1675_37 , 
         \CIC1Sin/d9_71_N_1675_36 , \CIC1Sin/n11551 , \CIC1Sin/n11547 , 
         \CIC1Sin/n5970 , \CIC1Sin/n11546 , \CIC1Sin/n5972 , \CIC1Sin/n5971 , 
         \CIC1Sin/n11545 , \CIC1Sin/n5974 , \CIC1Sin/n5973 , \CIC1Sin/n11544 , 
         \CIC1Sin/n5976 , \CIC1Sin/n5975 , \CIC1Sin/d2_57 , \CIC1Sin/d1_57 , 
         \CIC1Sin/d2_56 , \CIC1Sin/d1_56 , \CIC1Sin/n11948 , \CIC1Sin/n4465 , 
         \CIC1Sin/n4464 , \CIC1Sin/n11538 , \CIC1Sin/n11537 , \CIC1Sin/n11536 , 
         \CIC1Sin/d2_55 , \CIC1Sin/d1_55 , \CIC1Sin/d2_54 , \CIC1Sin/d1_54 , 
         \CIC1Sin/n11947 , \CIC1Sin/n4467 , \CIC1Sin/n4466 , \CIC1Sin/d2_53 , 
         \CIC1Sin/d1_53 , \CIC1Sin/d2_52 , \CIC1Sin/d1_52 , \CIC1Sin/n11946 , 
         \CIC1Sin/n4469 , \CIC1Sin/n4468 , \CIC1Sin/d2_51 , \CIC1Sin/d1_51 , 
         \CIC1Sin/d2_50 , \CIC1Sin/d1_50 , \CIC1Sin/n11945 , \CIC1Sin/n4471 , 
         \CIC1Sin/n4470 , \CIC1Sin/d2_49 , \CIC1Sin/d1_49 , \CIC1Sin/d2_48 , 
         \CIC1Sin/d1_48 , \CIC1Sin/n11944 , \CIC1Sin/n4473 , \CIC1Sin/n4472 , 
         \CIC1Sin/d2_47 , \CIC1Sin/d1_47 , \CIC1Sin/d2_46 , \CIC1Sin/d1_46 , 
         \CIC1Sin/n11943 , \CIC1Sin/n4475 , \CIC1Sin/n4474 , \CIC1Sin/d2_45 , 
         \CIC1Sin/d1_45 , \CIC1Sin/d2_44 , \CIC1Sin/d1_44 , \CIC1Sin/n11942 , 
         \CIC1Sin/n4477 , \CIC1Sin/n4476 , \CIC1Sin/d2_43 , \CIC1Sin/d2_42 , 
         \CIC1Sin/n11941 , \CIC1Sin/n4479 , \CIC1Sin/n4478 , \CIC1Sin/d2_41 , 
         \CIC1Sin/d2_40 , \CIC1Sin/n11940 , \CIC1Sin/n4481 , \CIC1Sin/n4480 , 
         \CIC1Sin/d2_39 , \CIC1Sin/d2_38 , \CIC1Sin/n11939 , \CIC1Sin/n4483 , 
         \CIC1Sin/n4482 , \CIC1Sin/d2_37 , \CIC1Sin/d2_36 , \CIC1Sin/n4484 , 
         \CIC1Sin/n4448 , \CIC1Sin/d2_71_N_490_71 , \CIC1Sin/d2_71_N_490_70 , 
         \CIC1Sin/n11936 , \CIC1Sin/d2_71_N_490_69 , \CIC1Sin/d2_71_N_490_68 , 
         \CIC1Sin/n11935 , \CIC1Sin/d2_71_N_490_67 , \CIC1Sin/d2_71_N_490_66 , 
         \CIC1Sin/n11934 , \CIC1Sin/d2_71_N_490_65 , \CIC1Sin/d2_71_N_490_64 , 
         \CIC1Sin/n11933 , \CIC1Sin/d2_71_N_490_63 , \CIC1Sin/d2_71_N_490_62 , 
         \CIC1Sin/n11932 , \CIC1Sin/d2_71_N_490_61 , \CIC1Sin/d2_71_N_490_60 , 
         \CIC1Sin/n11931 , \CIC1Sin/d2_71_N_490_59 , \CIC1Sin/d2_71_N_490_58 , 
         \CIC1Sin/n11930 , \CIC1Sin/d2_71_N_490_57 , \CIC1Sin/d2_71_N_490_56 , 
         \CIC1Sin/n11929 , \CIC1Sin/d2_71_N_490_55 , \CIC1Sin/d2_71_N_490_54 , 
         \CIC1Sin/n11928 , \CIC1Sin/d2_71_N_490_53 , \CIC1Sin/d2_71_N_490_52 , 
         \CIC1Sin/n11927 , \CIC1Sin/d2_71_N_490_51 , \CIC1Sin/d2_71_N_490_50 , 
         \CIC1Sin/n11926 , \CIC1Sin/d2_71_N_490_49 , \CIC1Sin/d2_71_N_490_48 , 
         \CIC1Sin/n11925 , \CIC1Sin/d2_71_N_490_47 , \CIC1Sin/d2_71_N_490_46 , 
         \CIC1Sin/n11924 , \CIC1Sin/d2_71_N_490_45 , \CIC1Sin/d2_71_N_490_44 , 
         \CIC1Sin/n11923 , \CIC1Sin/d2_71_N_490_43 , \CIC1Sin/d2_71_N_490_42 , 
         \CIC1Sin/n11922 , \CIC1Sin/d2_71_N_490_41 , \CIC1Sin/d2_71_N_490_40 , 
         \CIC1Sin/n11921 , \CIC1Sin/d2_71_N_490_39 , \CIC1Sin/d2_71_N_490_38 , 
         \CIC1Sin/n11920 , \CIC1Sin/n4485 , \CIC1Sin/d2_71_N_490_37 , 
         \CIC1Sin/d2_71_N_490_36 , \CIC1Sin/n11919 , \CIC1Sin/d3_71 , 
         \CIC1Sin/d3_70 , \CIC1Sin/n11914 , \CIC1Sin/n4603 , \CIC1Sin/n4602 , 
         \CIC1Sin/d3_69 , \CIC1Sin/d3_68 , \CIC1Sin/n11913 , \CIC1Sin/n4605 , 
         \CIC1Sin/n4604 , \CIC1Sin/d3_67 , \CIC1Sin/d3_66 , \CIC1Sin/n11912 , 
         \CIC1Sin/n4607 , \CIC1Sin/n4606 , \CIC1Sin/d3_65 , \CIC1Sin/d3_64 , 
         \CIC1Sin/n11911 , \CIC1Sin/n4609 , \CIC1Sin/n4608 , \CIC1Sin/d3_63 , 
         \CIC1Sin/d3_62 , \CIC1Sin/n11910 , \CIC1Sin/n4611 , \CIC1Sin/n4610 , 
         \CIC1Sin/d3_61 , \CIC1Sin/d3_60 , \CIC1Sin/n11909 , \CIC1Sin/n4613 , 
         \CIC1Sin/n4612 , \CIC1Sin/n11535 , \CIC1Sin/d3_59 , \CIC1Sin/d3_58 , 
         \CIC1Sin/n11908 , \CIC1Sin/n4615 , \CIC1Sin/n4614 , \CIC1Sin/n11534 , 
         \CIC1Sin/d3_57 , \CIC1Sin/d3_56 , \CIC1Sin/n11907 , \CIC1Sin/n4617 , 
         \CIC1Sin/n4616 , \CIC1Sin/d3_55 , \CIC1Sin/d3_54 , \CIC1Sin/n11906 , 
         \CIC1Sin/n4619 , \CIC1Sin/n4618 , \CIC1Sin/d_d7_71 , \CIC1Sin/d7_71 , 
         \CIC1Sin/n11134 , \CIC1Sin/n6882 , \CIC1Sin/d_d7_70 , \CIC1Sin/d7_70 , 
         \CIC1Sin/d_d7_69 , \CIC1Sin/d7_69 , \CIC1Sin/n11133 , \CIC1Sin/n6884 , 
         \CIC1Sin/n6883 , \CIC1Sin/d_d7_68 , \CIC1Sin/d7_68 , 
         \CIC1Sin/d_d7_67 , \CIC1Sin/d7_67 , \CIC1Sin/n11132 , \CIC1Sin/n6886 , 
         \CIC1Sin/n6885 , \CIC1Sin/d_d7_66 , \CIC1Sin/d7_66 , 
         \CIC1Sin/d_d7_65 , \CIC1Sin/d7_65 , \CIC1Sin/n11131 , \CIC1Sin/n6888 , 
         \CIC1Sin/n6887 , \CIC1Sin/d_d7_64 , \CIC1Sin/d7_64 , 
         \CIC1Sin/d_d7_63 , \CIC1Sin/d7_63 , \CIC1Sin/n11130 , \CIC1Sin/n6890 , 
         \CIC1Sin/n6889 , \CIC1Sin/d_d7_62 , \CIC1Sin/d7_62 , 
         \CIC1Sin/d_d7_61 , \CIC1Sin/d7_61 , \CIC1Sin/n11129 , \CIC1Sin/n6892 , 
         \CIC1Sin/n6891 , \CIC1Sin/d_d7_60 , \CIC1Sin/d7_60 , 
         \CIC1Sin/d_d7_59 , \CIC1Sin/d7_59 , \CIC1Sin/n11128 , \CIC1Sin/n6894 , 
         \CIC1Sin/n6893 , \CIC1Sin/d_d7_58 , \CIC1Sin/d7_58 , 
         \CIC1Sin/d_d7_57 , \CIC1Sin/d7_57 , \CIC1Sin/n11127 , \CIC1Sin/n6896 , 
         \CIC1Sin/n6895 , \CIC1Sin/d_d7_56 , \CIC1Sin/d7_56 , 
         \CIC1Sin/d_d7_55 , \CIC1Sin/d7_55 , \CIC1Sin/n11126 , \CIC1Sin/n6898 , 
         \CIC1Sin/n6897 , \CIC1Sin/d_d7_54 , \CIC1Sin/d7_54 , 
         \CIC1Sin/d_d7_53 , \CIC1Sin/d7_53 , \CIC1Sin/n11125 , \CIC1Sin/n6900 , 
         \CIC1Sin/n6899 , \CIC1Sin/d_d7_52 , \CIC1Sin/d7_52 , 
         \CIC1Sin/d_d7_51 , \CIC1Sin/d7_51 , \CIC1Sin/n11124 , \CIC1Sin/n6902 , 
         \CIC1Sin/n6901 , \CIC1Sin/d_d7_50 , \CIC1Sin/d7_50 , 
         \CIC1Sin/d_d7_49 , \CIC1Sin/d7_49 , \CIC1Sin/n11123 , \CIC1Sin/n6904 , 
         \CIC1Sin/n6903 , \CIC1Sin/d_d7_48 , \CIC1Sin/d7_48 , 
         \CIC1Sin/d_d7_47 , \CIC1Sin/d7_47 , \CIC1Sin/n11122 , \CIC1Sin/n6906 , 
         \CIC1Sin/n6905 , \CIC1Sin/d_d7_46 , \CIC1Sin/d7_46 , 
         \CIC1Sin/d_d7_45 , \CIC1Sin/d7_45 , \CIC1Sin/n11121 , \CIC1Sin/n6908 , 
         \CIC1Sin/n6907 , \CIC1Sin/d_d7_44 , \CIC1Sin/d7_44 , 
         \CIC1Sin/d_d7_43 , \CIC1Sin/d7_43 , \CIC1Sin/n11120 , \CIC1Sin/n6910 , 
         \CIC1Sin/n6909 , \CIC1Sin/d_d7_42 , \CIC1Sin/d7_42 , 
         \CIC1Sin/d_d7_41 , \CIC1Sin/d7_41 , \CIC1Sin/n11119 , \CIC1Sin/n6912 , 
         \CIC1Sin/n6911 , \CIC1Sin/d_d7_40 , \CIC1Sin/d7_40 , 
         \CIC1Sin/d_d7_39 , \CIC1Sin/d7_39 , \CIC1Sin/n11118 , \CIC1Sin/n6914 , 
         \CIC1Sin/n6913 , \CIC1Sin/d_d7_38 , \CIC1Sin/d7_38 , 
         \CIC1Sin/d_d7_37 , \CIC1Sin/d7_37 , \CIC1Sin/n11117 , \CIC1Sin/n6916 , 
         \CIC1Sin/n6915 , \CIC1Sin/d_d7_36 , \CIC1Sin/d7_36 , \CIC1Sin/n6917 , 
         \CIC1Sin/n6880 , \CIC1Sin/d8_71_N_1603_71 , \CIC1Sin/d8_71_N_1603_70 , 
         \CIC1Sin/osc_clk_enable_510 , \CIC1Sin/n11115 , 
         \CIC1Sin/d8_71_N_1603_69 , \CIC1Sin/d8_71_N_1603_68 , 
         \CIC1Sin/n11114 , \CIC1Sin/d8_71_N_1603_67 , 
         \CIC1Sin/d8_71_N_1603_66 , \CIC1Sin/n11113 , 
         \CIC1Sin/d8_71_N_1603_65 , \CIC1Sin/d8_71_N_1603_64 , 
         \CIC1Sin/n11112 , \CIC1Sin/d8_71_N_1603_63 , 
         \CIC1Sin/d8_71_N_1603_62 , \CIC1Sin/n11111 , 
         \CIC1Sin/d8_71_N_1603_61 , \CIC1Sin/d8_71_N_1603_60 , 
         \CIC1Sin/n11110 , \CIC1Sin/d8_71_N_1603_59 , 
         \CIC1Sin/d8_71_N_1603_58 , \CIC1Sin/n11109 , 
         \CIC1Sin/d8_71_N_1603_57 , \CIC1Sin/d8_71_N_1603_56 , 
         \CIC1Sin/n11108 , \CIC1Sin/d8_71_N_1603_55 , 
         \CIC1Sin/d8_71_N_1603_54 , \CIC1Sin/n11107 , 
         \CIC1Sin/d8_71_N_1603_53 , \CIC1Sin/d8_71_N_1603_52 , 
         \CIC1Sin/n11106 , \CIC1Sin/d8_71_N_1603_51 , 
         \CIC1Sin/d8_71_N_1603_50 , \CIC1Sin/n11105 , 
         \CIC1Sin/d8_71_N_1603_49 , \CIC1Sin/d8_71_N_1603_48 , 
         \CIC1Sin/n11104 , \CIC1Sin/d8_71_N_1603_47 , 
         \CIC1Sin/d8_71_N_1603_46 , \CIC1Sin/n11103 , 
         \CIC1Sin/d8_71_N_1603_45 , \CIC1Sin/d8_71_N_1603_44 , 
         \CIC1Sin/n11102 , \CIC1Sin/d8_71_N_1603_43 , 
         \CIC1Sin/d8_71_N_1603_42 , \CIC1Sin/n11101 , 
         \CIC1Sin/d8_71_N_1603_41 , \CIC1Sin/d8_71_N_1603_40 , 
         \CIC1Sin/n11100 , \CIC1Sin/d8_71_N_1603_39 , 
         \CIC1Sin/d8_71_N_1603_38 , \CIC1Sin/n11099 , 
         \CIC1Sin/d8_71_N_1603_37 , \CIC1Sin/d8_71_N_1603_36 , 
         \CIC1Sin/n11098 , \CIC1Sin/d_d6_71 , \CIC1Sin/d6_71 , 
         \CIC1Sin/n11094 , \CIC1Sin/n7034 , \CIC1Sin/d_d6_70 , \CIC1Sin/d6_70 , 
         \CIC1Sin/d_d6_69 , \CIC1Sin/d6_69 , \CIC1Sin/n11093 , \CIC1Sin/n7036 , 
         \CIC1Sin/n7035 , \CIC1Sin/d_d6_68 , \CIC1Sin/d6_68 , 
         \CIC1Sin/d_d6_67 , \CIC1Sin/d6_67 , \CIC1Sin/n11092 , \CIC1Sin/n7038 , 
         \CIC1Sin/n7037 , \CIC1Sin/d_d6_66 , \CIC1Sin/d6_66 , 
         \CIC1Sin/d_d6_65 , \CIC1Sin/d6_65 , \CIC1Sin/n11091 , \CIC1Sin/n7040 , 
         \CIC1Sin/n7039 , \CIC1Sin/d_d6_64 , \CIC1Sin/d6_64 , 
         \CIC1Sin/d_d6_63 , \CIC1Sin/d6_63 , \CIC1Sin/n11090 , \CIC1Sin/n7042 , 
         \CIC1Sin/n7041 , \CIC1Sin/d_d6_62 , \CIC1Sin/d6_62 , 
         \CIC1Sin/d_d6_61 , \CIC1Sin/d6_61 , \CIC1Sin/n11089 , \CIC1Sin/n7044 , 
         \CIC1Sin/n7043 , \CIC1Sin/d_d6_60 , \CIC1Sin/d6_60 , 
         \CIC1Sin/d_d6_59 , \CIC1Sin/d6_59 , \CIC1Sin/n11088 , \CIC1Sin/n7046 , 
         \CIC1Sin/n7045 , \CIC1Sin/d_d6_58 , \CIC1Sin/d6_58 , 
         \CIC1Sin/d_d6_57 , \CIC1Sin/d6_57 , \CIC1Sin/n11087 , \CIC1Sin/n7048 , 
         \CIC1Sin/n7047 , \CIC1Sin/d_d6_56 , \CIC1Sin/d6_56 , 
         \CIC1Sin/d_d6_55 , \CIC1Sin/d6_55 , \CIC1Sin/n11086 , \CIC1Sin/n7050 , 
         \CIC1Sin/n7049 , \CIC1Sin/d_d6_54 , \CIC1Sin/d6_54 , 
         \CIC1Sin/d_d6_53 , \CIC1Sin/d6_53 , \CIC1Sin/n11085 , \CIC1Sin/n7052 , 
         \CIC1Sin/n7051 , \CIC1Sin/d_d6_52 , \CIC1Sin/d6_52 , 
         \CIC1Sin/d_d6_51 , \CIC1Sin/d6_51 , \CIC1Sin/n11084 , \CIC1Sin/n7054 , 
         \CIC1Sin/n7053 , \CIC1Sin/d_d6_50 , \CIC1Sin/d6_50 , 
         \CIC1Sin/d_d6_49 , \CIC1Sin/d6_49 , \CIC1Sin/n11083 , \CIC1Sin/n7056 , 
         \CIC1Sin/n7055 , \CIC1Sin/d_d6_48 , \CIC1Sin/d6_48 , 
         \CIC1Sin/d_d6_47 , \CIC1Sin/d6_47 , \CIC1Sin/n11082 , \CIC1Sin/n7058 , 
         \CIC1Sin/n7057 , \CIC1Sin/d_d6_46 , \CIC1Sin/d6_46 , 
         \CIC1Sin/d_d6_45 , \CIC1Sin/d6_45 , \CIC1Sin/n11081 , \CIC1Sin/n7060 , 
         \CIC1Sin/n7059 , \CIC1Sin/d_d6_44 , \CIC1Sin/d6_44 , 
         \CIC1Sin/d_d6_43 , \CIC1Sin/d6_43 , \CIC1Sin/n11080 , \CIC1Sin/n7062 , 
         \CIC1Sin/n7061 , \CIC1Sin/d_d6_42 , \CIC1Sin/d6_42 , 
         \CIC1Sin/d_d6_41 , \CIC1Sin/d6_41 , \CIC1Sin/n11079 , \CIC1Sin/n7064 , 
         \CIC1Sin/n7063 , \CIC1Sin/d_d6_40 , \CIC1Sin/d6_40 , 
         \CIC1Sin/d_d6_39 , \CIC1Sin/d6_39 , \CIC1Sin/n11078 , \CIC1Sin/n7066 , 
         \CIC1Sin/n7065 , \CIC1Sin/d_d6_38 , \CIC1Sin/d6_38 , 
         \CIC1Sin/d_d6_37 , \CIC1Sin/d6_37 , \CIC1Sin/n11077 , \CIC1Sin/n7068 , 
         \CIC1Sin/n7067 , \CIC1Sin/d_d6_36 , \CIC1Sin/d6_36 , \CIC1Sin/n7069 , 
         \CIC1Sin/n7032 , \CIC1Sin/d7_71_N_1531_71 , \CIC1Sin/d7_71_N_1531_70 , 
         \CIC1Sin/osc_clk_enable_360 , \CIC1Sin/n11075 , 
         \CIC1Sin/d7_71_N_1531_69 , \CIC1Sin/d7_71_N_1531_68 , 
         \CIC1Sin/n11074 , \CIC1Sin/d7_71_N_1531_67 , 
         \CIC1Sin/d7_71_N_1531_66 , \CIC1Sin/n11073 , 
         \CIC1Sin/d7_71_N_1531_65 , \CIC1Sin/d7_71_N_1531_64 , 
         \CIC1Sin/n11072 , \CIC1Sin/d7_71_N_1531_63 , 
         \CIC1Sin/d7_71_N_1531_62 , \CIC1Sin/n11071 , 
         \CIC1Sin/d7_71_N_1531_61 , \CIC1Sin/d7_71_N_1531_60 , 
         \CIC1Sin/n11070 , \CIC1Sin/d7_71_N_1531_59 , 
         \CIC1Sin/d7_71_N_1531_58 , \CIC1Sin/n11069 , 
         \CIC1Sin/d7_71_N_1531_57 , \CIC1Sin/d7_71_N_1531_56 , 
         \CIC1Sin/n11068 , \CIC1Sin/d7_71_N_1531_55 , 
         \CIC1Sin/d7_71_N_1531_54 , \CIC1Sin/n11067 , 
         \CIC1Sin/d7_71_N_1531_53 , \CIC1Sin/d7_71_N_1531_52 , 
         \CIC1Sin/n11066 , \CIC1Sin/d7_71_N_1531_51 , 
         \CIC1Sin/d7_71_N_1531_50 , \CIC1Sin/n11065 , 
         \CIC1Sin/d7_71_N_1531_49 , \CIC1Sin/d7_71_N_1531_48 , 
         \CIC1Sin/n11064 , \CIC1Sin/d7_71_N_1531_47 , 
         \CIC1Sin/d7_71_N_1531_46 , \CIC1Sin/n11063 , 
         \CIC1Sin/d7_71_N_1531_45 , \CIC1Sin/d7_71_N_1531_44 , 
         \CIC1Sin/n11062 , \CIC1Sin/d7_71_N_1531_43 , 
         \CIC1Sin/d7_71_N_1531_42 , \CIC1Sin/n11061 , 
         \CIC1Sin/d7_71_N_1531_41 , \CIC1Sin/d7_71_N_1531_40 , 
         \CIC1Sin/n11060 , \CIC1Sin/d7_71_N_1531_39 , 
         \CIC1Sin/d7_71_N_1531_38 , \CIC1Sin/n11059 , 
         \CIC1Sin/d7_71_N_1531_37 , \CIC1Sin/d7_71_N_1531_36 , 
         \CIC1Sin/n11058 , \CIC1Sin/d_d_tmp_35 , \CIC1Sin/d_tmp_35 , 
         \CIC1Sin/d6_71_N_1459_35 , \CIC1Sin/osc_clk_enable_210 , 
         \CIC1Sin/n10969 , \CIC1Sin/d6_35 , \CIC1Sin/n4144 , 
         \CIC1Sin/d_d_tmp_34 , \CIC1Sin/d_tmp_34 , \CIC1Sin/d_d_tmp_33 , 
         \CIC1Sin/d_tmp_33 , \CIC1Sin/d6_71_N_1459_34 , 
         \CIC1Sin/d6_71_N_1459_33 , \CIC1Sin/n10968 , \CIC1Sin/d6_33 , 
         \CIC1Sin/d6_34 , \CIC1Sin/d_d_tmp_32 , \CIC1Sin/d_tmp_32 , 
         \CIC1Sin/d_d_tmp_31 , \CIC1Sin/d_tmp_31 , \CIC1Sin/d6_71_N_1459_32 , 
         \CIC1Sin/d6_71_N_1459_31 , \CIC1Sin/n10967 , \CIC1Sin/d6_31 , 
         \CIC1Sin/d6_32 , \CIC1Sin/d_d_tmp_30 , \CIC1Sin/d_tmp_30 , 
         \CIC1Sin/d_d_tmp_29 , \CIC1Sin/d_tmp_29 , \CIC1Sin/d6_71_N_1459_30 , 
         \CIC1Sin/d6_71_N_1459_29 , \CIC1Sin/n10966 , \CIC1Sin/d6_29 , 
         \CIC1Sin/d6_30 , \CIC1Sin/d_d_tmp_28 , \CIC1Sin/d_tmp_28 , 
         \CIC1Sin/d_d_tmp_27 , \CIC1Sin/d_tmp_27 , \CIC1Sin/d6_71_N_1459_28 , 
         \CIC1Sin/d6_71_N_1459_27 , \CIC1Sin/n10965 , \CIC1Sin/d6_27 , 
         \CIC1Sin/d6_28 , \CIC1Sin/d_d_tmp_26 , \CIC1Sin/d_tmp_26 , 
         \CIC1Sin/d_d_tmp_25 , \CIC1Sin/d_tmp_25 , \CIC1Sin/d6_71_N_1459_26 , 
         \CIC1Sin/d6_71_N_1459_25 , \CIC1Sin/n10964 , \CIC1Sin/d6_25 , 
         \CIC1Sin/d6_26 , \CIC1Sin/d_d_tmp_24 , \CIC1Sin/d_tmp_24 , 
         \CIC1Sin/d_d_tmp_23 , \CIC1Sin/d_tmp_23 , \CIC1Sin/d6_71_N_1459_24 , 
         \CIC1Sin/d6_71_N_1459_23 , \CIC1Sin/n10963 , \CIC1Sin/d6_23 , 
         \CIC1Sin/d6_24 , \CIC1Sin/d_d_tmp_22 , \CIC1Sin/d_tmp_22 , 
         \CIC1Sin/d_d_tmp_21 , \CIC1Sin/d_tmp_21 , \CIC1Sin/d6_71_N_1459_22 , 
         \CIC1Sin/d6_71_N_1459_21 , \CIC1Sin/n10962 , \CIC1Sin/d6_21 , 
         \CIC1Sin/d6_22 , \CIC1Sin/d_d_tmp_20 , \CIC1Sin/d_tmp_20 , 
         \CIC1Sin/d_d_tmp_19 , \CIC1Sin/d_tmp_19 , \CIC1Sin/d6_71_N_1459_19 , 
         \CIC1Sin/osc_clk_enable_160 , \CIC1Sin/n10961 , \CIC1Sin/d6_19 , 
         \CIC1Sin/d6_71_N_1459_20 , \CIC1Sin/d_d_tmp_18 , \CIC1Sin/d_tmp_18 , 
         \CIC1Sin/d_d_tmp_17 , \CIC1Sin/d_tmp_17 , \CIC1Sin/d6_71_N_1459_18 , 
         \CIC1Sin/d6_71_N_1459_17 , \CIC1Sin/n10960 , \CIC1Sin/d6_17 , 
         \CIC1Sin/d6_18 , \CIC1Sin/d_d_tmp_16 , \CIC1Sin/d_tmp_16 , 
         \CIC1Sin/d_d_tmp_15 , \CIC1Sin/d_tmp_15 , \CIC1Sin/d6_71_N_1459_16 , 
         \CIC1Sin/d6_71_N_1459_15 , \CIC1Sin/n10959 , \CIC1Sin/d6_15 , 
         \CIC1Sin/d6_16 , \CIC1Sin/d_d_tmp_14 , \CIC1Sin/d_tmp_14 , 
         \CIC1Sin/d_d_tmp_13 , \CIC1Sin/d_tmp_13 , \CIC1Sin/d6_71_N_1459_14 , 
         \CIC1Sin/d6_71_N_1459_13 , \CIC1Sin/n10958 , \CIC1Sin/d6_13 , 
         \CIC1Sin/d6_14 , \CIC1Sin/d_d_tmp_12 , \CIC1Sin/d_tmp_12 , 
         \CIC1Sin/d_d_tmp_11 , \CIC1Sin/d_tmp_11 , \CIC1Sin/d6_71_N_1459_12 , 
         \CIC1Sin/d6_71_N_1459_11 , \CIC1Sin/n10957 , \CIC1Sin/d6_11 , 
         \CIC1Sin/d6_12 , \CIC1Sin/d_d_tmp_10 , \CIC1Sin/d_tmp_10 , 
         \CIC1Sin/d_d_tmp_9 , \CIC1Sin/d_tmp_9 , \CIC1Sin/d6_71_N_1459_10 , 
         \CIC1Sin/d6_71_N_1459_9 , \CIC1Sin/n10956 , \CIC1Sin/d6_9 , 
         \CIC1Sin/d6_10 , \CIC1Sin/d_d_tmp_8 , \CIC1Sin/d_tmp_8 , 
         \CIC1Sin/d_d_tmp_7 , \CIC1Sin/d_tmp_7 , \CIC1Sin/d6_71_N_1459_8 , 
         \CIC1Sin/d6_71_N_1459_7 , \CIC1Sin/n10955 , \CIC1Sin/d6_7 , 
         \CIC1Sin/d6_8 , \CIC1Sin/d_d_tmp_6 , \CIC1Sin/d_tmp_6 , 
         \CIC1Sin/d_d_tmp_5 , \CIC1Sin/d_tmp_5 , \CIC1Sin/d6_71_N_1459_6 , 
         \CIC1Sin/d6_71_N_1459_5 , \CIC1Sin/n10954 , \CIC1Sin/d6_5 , 
         \CIC1Sin/d6_6 , \CIC1Sin/d_d_tmp_4 , \CIC1Sin/d_tmp_4 , 
         \CIC1Sin/d_d_tmp_3 , \CIC1Sin/d_tmp_3 , \CIC1Sin/d6_71_N_1459_4 , 
         \CIC1Sin/d6_71_N_1459_3 , \CIC1Sin/n10953 , \CIC1Sin/d6_3 , 
         \CIC1Sin/d6_4 , \CIC1Sin/d_d_tmp_2 , \CIC1Sin/d_tmp_2 , 
         \CIC1Sin/d_d_tmp_1 , \CIC1Sin/d_tmp_1 , \CIC1Sin/d6_71_N_1459_2 , 
         \CIC1Sin/d6_71_N_1459_1 , \CIC1Sin/n10952 , \CIC1Sin/d6_1 , 
         \CIC1Sin/d6_2 , \CIC1Sin/d_d_tmp_0 , \CIC1Sin/d_tmp_0 , 
         \CIC1Sin/d6_71_N_1459_0 , \CIC1Sin/osc_clk_enable_69 , \CIC1Sin/d6_0 , 
         \CIC1Sin/d_d8_35 , \CIC1Sin/d8_35 , \CIC1Sin/d9_71_N_1675_35 , 
         \CIC1Sin/n10930 , \CIC1Sin/d9_35 , \CIC1Sin/d_d8_34 , \CIC1Sin/d8_34 , 
         \CIC1Sin/d_d8_33 , \CIC1Sin/d8_33 , \CIC1Sin/d9_71_N_1675_34 , 
         \CIC1Sin/d9_71_N_1675_33 , \CIC1Sin/n10929 , \CIC1Sin/d9_33 , 
         \CIC1Sin/d9_34 , \CIC1Sin/d_d8_32 , \CIC1Sin/d8_32 , 
         \CIC1Sin/d_d8_31 , \CIC1Sin/d8_31 , \CIC1Sin/d9_71_N_1675_32 , 
         \CIC1Sin/d9_71_N_1675_31 , \CIC1Sin/n10928 , \CIC1Sin/d9_31 , 
         \CIC1Sin/d9_32 , \CIC1Sin/d_d8_30 , \CIC1Sin/d8_30 , 
         \CIC1Sin/d_d8_29 , \CIC1Sin/d8_29 , \CIC1Sin/d9_71_N_1675_30 , 
         \CIC1Sin/d9_71_N_1675_29 , \CIC1Sin/n10927 , \CIC1Sin/d9_29 , 
         \CIC1Sin/d9_30 , \CIC1Sin/d_d8_28 , \CIC1Sin/d8_28 , 
         \CIC1Sin/d_d8_27 , \CIC1Sin/d8_27 , \CIC1Sin/d9_71_N_1675_28 , 
         \CIC1Sin/d9_71_N_1675_27 , \CIC1Sin/n10926 , \CIC1Sin/d9_27 , 
         \CIC1Sin/d9_28 , \CIC1Sin/d_d8_26 , \CIC1Sin/d8_26 , 
         \CIC1Sin/d_d8_25 , \CIC1Sin/d8_25 , \CIC1Sin/d9_71_N_1675_26 , 
         \CIC1Sin/d9_71_N_1675_25 , \CIC1Sin/n10925 , \CIC1Sin/d9_25 , 
         \CIC1Sin/d9_26 , \CIC1Sin/d_d8_24 , \CIC1Sin/d8_24 , 
         \CIC1Sin/d_d8_23 , \CIC1Sin/d8_23 , \CIC1Sin/d9_71_N_1675_24 , 
         \CIC1Sin/d9_71_N_1675_23 , \CIC1Sin/n10924 , \CIC1Sin/d9_23 , 
         \CIC1Sin/d9_24 , \CIC1Sin/d_d8_22 , \CIC1Sin/d8_22 , 
         \CIC1Sin/d_d8_21 , \CIC1Sin/d8_21 , \CIC1Sin/d9_71_N_1675_22 , 
         \CIC1Sin/d9_71_N_1675_21 , \CIC1Sin/n10923 , \CIC1Sin/d9_21 , 
         \CIC1Sin/d9_22 , \CIC1Sin/d_d8_20 , \CIC1Sin/d8_20 , 
         \CIC1Sin/d_d8_19 , \CIC1Sin/d8_19 , \CIC1Sin/d9_71_N_1675_20 , 
         \CIC1Sin/d9_71_N_1675_19 , \CIC1Sin/n10922 , \CIC1Sin/d9_19 , 
         \CIC1Sin/d9_20 , \CIC1Sin/d_d8_18 , \CIC1Sin/d8_18 , 
         \CIC1Sin/d_d8_17 , \CIC1Sin/d8_17 , \CIC1Sin/d9_71_N_1675_18 , 
         \CIC1Sin/d9_71_N_1675_17 , \CIC1Sin/n10921 , \CIC1Sin/d9_17 , 
         \CIC1Sin/d9_18 , \CIC1Sin/d_d8_16 , \CIC1Sin/d8_16 , 
         \CIC1Sin/d_d8_15 , \CIC1Sin/d8_15 , \CIC1Sin/d9_71_N_1675_16 , 
         \CIC1Sin/d9_71_N_1675_15 , \CIC1Sin/n10920 , \CIC1Sin/d9_15 , 
         \CIC1Sin/d9_16 , \CIC1Sin/d_d8_14 , \CIC1Sin/d8_14 , 
         \CIC1Sin/d_d8_13 , \CIC1Sin/d8_13 , \CIC1Sin/d9_71_N_1675_14 , 
         \CIC1Sin/d9_71_N_1675_13 , \CIC1Sin/n10919 , \CIC1Sin/d9_13 , 
         \CIC1Sin/d9_14 , \CIC1Sin/d_d8_12 , \CIC1Sin/d8_12 , 
         \CIC1Sin/d_d8_11 , \CIC1Sin/d8_11 , \CIC1Sin/d9_71_N_1675_12 , 
         \CIC1Sin/d9_71_N_1675_11 , \CIC1Sin/n10918 , \CIC1Sin/d9_11 , 
         \CIC1Sin/d9_12 , \CIC1Sin/d_d8_10 , \CIC1Sin/d8_10 , \CIC1Sin/d_d8_9 , 
         \CIC1Sin/d8_9 , \CIC1Sin/d9_71_N_1675_10 , \CIC1Sin/d9_71_N_1675_9 , 
         \CIC1Sin/n10917 , \CIC1Sin/d_d8_8 , \CIC1Sin/d8_8 , \CIC1Sin/d_d8_7 , 
         \CIC1Sin/d8_7 , \CIC1Sin/d9_71_N_1675_8 , \CIC1Sin/d9_71_N_1675_7 , 
         \CIC1Sin/n10916 , \CIC1Sin/d_d8_6 , \CIC1Sin/d8_6 , \CIC1Sin/d_d8_5 , 
         \CIC1Sin/d8_5 , \CIC1Sin/d9_71_N_1675_6 , \CIC1Sin/d9_71_N_1675_5 , 
         \CIC1Sin/n10915 , \CIC1Sin/d_d8_4 , \CIC1Sin/d8_4 , \CIC1Sin/d_d8_3 , 
         \CIC1Sin/d8_3 , \CIC1Sin/d9_71_N_1675_4 , \CIC1Sin/d9_71_N_1675_3 , 
         \CIC1Sin/n10914 , \CIC1Sin/d_d8_2 , \CIC1Sin/d8_2 , \CIC1Sin/d_d8_1 , 
         \CIC1Sin/d8_1 , \CIC1Sin/d9_71_N_1675_2 , \CIC1Sin/d9_71_N_1675_1 , 
         \CIC1Sin/n10913 , \CIC1Sin/d_d8_0 , \CIC1Sin/d8_0 , 
         \CIC1Sin/d9_71_N_1675_0 , \CIC1Sin/count_15 , \CIC1Sin/n376 , 
         \CIC1Sin/n8418 , \CIC1Sin/n10806 , \CIC1Sin/count_14 , 
         \CIC1Sin/count_13 , \CIC1Sin/n377 , \CIC1Sin/n378 , \CIC1Sin/n10805 , 
         \CIC1Sin/count_12 , \CIC1Sin/count_11 , \CIC1Sin/n379 , 
         \CIC1Sin/n10804 , \CIC1Sin/n380 , \CIC1Sin/count_10 , 
         \CIC1Sin/count_9 , \CIC1Sin/n381 , \CIC1Sin/n382 , \CIC1Sin/n10803 , 
         \CIC1Sin/count_8 , \CIC1Sin/count_7 , \CIC1Sin/n383 , \CIC1Sin/n384 , 
         \CIC1Sin/n10802 , \CIC1Sin/count_6 , \CIC1Sin/count_5 , 
         \CIC1Sin/n385 , \CIC1Sin/n386 , \CIC1Sin/n10801 , \CIC1Sin/count_4 , 
         \CIC1Sin/count_3 , \CIC1Sin/n387 , \CIC1Sin/n388 , \CIC1Sin/n10800 , 
         \CIC1Sin/count_2 , \CIC1Sin/count_1 , \CIC1Sin/n389 , \CIC1Sin/n390 , 
         \CIC1Sin/n10799 , \CIC1Sin/count_0 , \CIC1Sin/n391 , \CIC1Sin/n10779 , 
         \CIC1Sin/n4904 , \CIC1Sin/d5_35 , \CIC1Sin/d4_35 , \CIC1Sin/d5_34 , 
         \CIC1Sin/d4_34 , \CIC1Sin/d5_71_N_706_35 , \CIC1Sin/d5_71_N_706_34 , 
         \CIC1Sin/n10778 , \CIC1Sin/d5_33 , \CIC1Sin/d4_33 , \CIC1Sin/d5_32 , 
         \CIC1Sin/d4_32 , \CIC1Sin/d5_71_N_706_33 , \CIC1Sin/d5_71_N_706_32 , 
         \CIC1Sin/n10777 , \CIC1Sin/d5_31 , \CIC1Sin/d4_31 , \CIC1Sin/d5_30 , 
         \CIC1Sin/d4_30 , \CIC1Sin/d5_71_N_706_31 , \CIC1Sin/d5_71_N_706_30 , 
         \CIC1Sin/n10776 , \CIC1Sin/d5_29 , \CIC1Sin/d4_29 , \CIC1Sin/d5_28 , 
         \CIC1Sin/d4_28 , \CIC1Sin/d5_71_N_706_29 , \CIC1Sin/d5_71_N_706_28 , 
         \CIC1Sin/n10775 , \CIC1Sin/d5_27 , \CIC1Sin/d4_27 , \CIC1Sin/d5_26 , 
         \CIC1Sin/d4_26 , \CIC1Sin/d5_71_N_706_27 , \CIC1Sin/d5_71_N_706_26 , 
         \CIC1Sin/n10774 , \CIC1Sin/d5_25 , \CIC1Sin/d4_25 , \CIC1Sin/d5_24 , 
         \CIC1Sin/d4_24 , \CIC1Sin/d5_71_N_706_25 , \CIC1Sin/d5_71_N_706_24 , 
         \CIC1Sin/n10773 , \CIC1Sin/d5_23 , \CIC1Sin/d4_23 , \CIC1Sin/d5_22 , 
         \CIC1Sin/d4_22 , \CIC1Sin/d5_71_N_706_23 , \CIC1Sin/d5_71_N_706_22 , 
         \CIC1Sin/n10772 , \CIC1Sin/d5_21 , \CIC1Sin/d4_21 , \CIC1Sin/d5_20 , 
         \CIC1Sin/d4_20 , \CIC1Sin/d5_71_N_706_21 , \CIC1Sin/d5_71_N_706_20 , 
         \CIC1Sin/n10771 , \CIC1Sin/d5_19 , \CIC1Sin/d4_19 , \CIC1Sin/d5_18 , 
         \CIC1Sin/d4_18 , \CIC1Sin/d5_71_N_706_19 , \CIC1Sin/d5_71_N_706_18 , 
         \CIC1Sin/n10770 , \CIC1Sin/d5_17 , \CIC1Sin/d4_17 , \CIC1Sin/d5_16 , 
         \CIC1Sin/d4_16 , \CIC1Sin/d5_71_N_706_17 , \CIC1Sin/d5_71_N_706_16 , 
         \CIC1Sin/n10769 , \CIC1Sin/d5_15 , \CIC1Sin/d4_15 , \CIC1Sin/d5_14 , 
         \CIC1Sin/d4_14 , \CIC1Sin/d5_71_N_706_15 , \CIC1Sin/d5_71_N_706_14 , 
         \CIC1Sin/n10768 , \CIC1Sin/d5_13 , \CIC1Sin/d4_13 , \CIC1Sin/d5_12 , 
         \CIC1Sin/d4_12 , \CIC1Sin/d5_71_N_706_13 , \CIC1Sin/d5_71_N_706_12 , 
         \CIC1Sin/n10767 , \CIC1Sin/d5_11 , \CIC1Sin/d4_11 , \CIC1Sin/d5_10 , 
         \CIC1Sin/d4_10 , \CIC1Sin/d5_71_N_706_11 , \CIC1Sin/d5_71_N_706_10 , 
         \CIC1Sin/n10766 , \CIC1Sin/d5_9 , \CIC1Sin/d4_9 , \CIC1Sin/d5_8 , 
         \CIC1Sin/d4_8 , \CIC1Sin/d5_71_N_706_9 , \CIC1Sin/d5_71_N_706_8 , 
         \CIC1Sin/n10765 , \CIC1Sin/d5_7 , \CIC1Sin/d4_7 , \CIC1Sin/d5_6 , 
         \CIC1Sin/d4_6 , \CIC1Sin/d5_71_N_706_7 , \CIC1Sin/d5_71_N_706_6 , 
         \CIC1Sin/n10764 , \CIC1Sin/d5_5 , \CIC1Sin/d4_5 , \CIC1Sin/d5_4 , 
         \CIC1Sin/d4_4 , \CIC1Sin/d5_71_N_706_5 , \CIC1Sin/d5_71_N_706_4 , 
         \CIC1Sin/n10763 , \CIC1Sin/d5_3 , \CIC1Sin/d4_3 , \CIC1Sin/d5_2 , 
         \CIC1Sin/d4_2 , \CIC1Sin/d5_71_N_706_3 , \CIC1Sin/d5_71_N_706_2 , 
         \CIC1Sin/n10762 , \CIC1Sin/d5_1 , \CIC1Sin/d4_1 , \CIC1Sin/d5_0 , 
         \CIC1Sin/d4_0 , \CIC1Sin/d5_71_N_706_1 , \CIC1Sin/n10760 , 
         \CIC1Sin/n4752 , \CIC1Sin/d3_35 , \CIC1Sin/d3_34 , 
         \CIC1Sin/d4_71_N_634_35 , \CIC1Sin/d4_71_N_634_34 , \CIC1Sin/n10759 , 
         \CIC1Sin/d3_33 , \CIC1Sin/d3_32 , \CIC1Sin/d4_71_N_634_33 , 
         \CIC1Sin/d4_71_N_634_32 , \CIC1Sin/n10758 , \CIC1Sin/d3_31 , 
         \CIC1Sin/d3_30 , \CIC1Sin/d4_71_N_634_31 , \CIC1Sin/d4_71_N_634_30 , 
         \CIC1Sin/n10757 , \CIC1Sin/d3_29 , \CIC1Sin/d3_28 , 
         \CIC1Sin/d4_71_N_634_29 , \CIC1Sin/d4_71_N_634_28 , \CIC1Sin/n10756 , 
         \CIC1Sin/d3_27 , \CIC1Sin/d3_26 , \CIC1Sin/d4_71_N_634_27 , 
         \CIC1Sin/d4_71_N_634_26 , \CIC1Sin/n10755 , \CIC1Sin/d3_25 , 
         \CIC1Sin/d3_24 , \CIC1Sin/d4_71_N_634_25 , \CIC1Sin/d4_71_N_634_24 , 
         \CIC1Sin/n10754 , \CIC1Sin/d3_23 , \CIC1Sin/d3_22 , 
         \CIC1Sin/d4_71_N_634_23 , \CIC1Sin/d4_71_N_634_22 , \CIC1Sin/n10753 , 
         \CIC1Sin/d3_21 , \CIC1Sin/d3_20 , \CIC1Sin/d4_71_N_634_21 , 
         \CIC1Sin/d4_71_N_634_20 , \CIC1Sin/n10752 , \CIC1Sin/d3_19 , 
         \CIC1Sin/d3_18 , \CIC1Sin/d4_71_N_634_19 , \CIC1Sin/d4_71_N_634_18 , 
         \CIC1Sin/n10751 , \CIC1Sin/d3_17 , \CIC1Sin/d3_16 , 
         \CIC1Sin/d4_71_N_634_17 , \CIC1Sin/d4_71_N_634_16 , \CIC1Sin/n10750 , 
         \CIC1Sin/d3_15 , \CIC1Sin/d3_14 , \CIC1Sin/d4_71_N_634_15 , 
         \CIC1Sin/d4_71_N_634_14 , \CIC1Sin/n10749 , \CIC1Sin/d3_13 , 
         \CIC1Sin/d3_12 , \CIC1Sin/d4_71_N_634_13 , \CIC1Sin/d4_71_N_634_12 , 
         \CIC1Sin/n10748 , \CIC1Sin/d3_11 , \CIC1Sin/d3_10 , 
         \CIC1Sin/d4_71_N_634_11 , \CIC1Sin/d4_71_N_634_10 , \CIC1Sin/n10747 , 
         \CIC1Sin/d3_9 , \CIC1Sin/d3_8 , \CIC1Sin/d4_71_N_634_9 , 
         \CIC1Sin/d4_71_N_634_8 , \CIC1Sin/n10746 , \CIC1Sin/d3_7 , 
         \CIC1Sin/d3_6 , \CIC1Sin/d4_71_N_634_7 , \CIC1Sin/d4_71_N_634_6 , 
         \CIC1Sin/n10745 , \CIC1Sin/d3_5 , \CIC1Sin/d3_4 , 
         \CIC1Sin/d4_71_N_634_5 , \CIC1Sin/d4_71_N_634_4 , \CIC1Sin/n10744 , 
         \CIC1Sin/d3_3 , \CIC1Sin/d3_2 , \CIC1Sin/d4_71_N_634_3 , 
         \CIC1Sin/d4_71_N_634_2 , \CIC1Sin/n10743 , \CIC1Sin/d3_1 , 
         \CIC1Sin/d3_0 , \CIC1Sin/d4_71_N_634_1 , \CIC1Sin/n10741 , 
         \CIC1Sin/n4600 , \CIC1Sin/d2_35 , \CIC1Sin/d2_34 , 
         \CIC1Sin/d3_71_N_562_35 , \CIC1Sin/d3_71_N_562_34 , \CIC1Sin/n10740 , 
         \CIC1Sin/d2_33 , \CIC1Sin/d2_32 , \CIC1Sin/d3_71_N_562_33 , 
         \CIC1Sin/d3_71_N_562_32 , \CIC1Sin/n10739 , \CIC1Sin/d2_31 , 
         \CIC1Sin/d2_30 , \CIC1Sin/d3_71_N_562_31 , \CIC1Sin/d3_71_N_562_30 , 
         \CIC1Sin/n10738 , \CIC1Sin/d2_29 , \CIC1Sin/d2_28 , 
         \CIC1Sin/d3_71_N_562_29 , \CIC1Sin/d3_71_N_562_28 , \CIC1Sin/n10737 , 
         \CIC1Sin/d2_27 , \CIC1Sin/d2_26 , \CIC1Sin/d3_71_N_562_27 , 
         \CIC1Sin/d3_71_N_562_26 , \CIC1Sin/n10736 , \CIC1Sin/d2_25 , 
         \CIC1Sin/d2_24 , \CIC1Sin/d3_71_N_562_25 , \CIC1Sin/d3_71_N_562_24 , 
         \CIC1Sin/n10735 , \CIC1Sin/d2_23 , \CIC1Sin/d2_22 , 
         \CIC1Sin/d3_71_N_562_23 , \CIC1Sin/d3_71_N_562_22 , \CIC1Sin/n10734 , 
         \CIC1Sin/d2_21 , \CIC1Sin/d2_20 , \CIC1Sin/d3_71_N_562_21 , 
         \CIC1Sin/d3_71_N_562_20 , \CIC1Sin/n10733 , \CIC1Sin/d2_19 , 
         \CIC1Sin/d2_18 , \CIC1Sin/d3_71_N_562_19 , \CIC1Sin/d3_71_N_562_18 , 
         \CIC1Sin/n10732 , \CIC1Sin/d2_17 , \CIC1Sin/d2_16 , 
         \CIC1Sin/d3_71_N_562_17 , \CIC1Sin/d3_71_N_562_16 , \CIC1Sin/n10731 , 
         \CIC1Sin/d2_15 , \CIC1Sin/d2_14 , \CIC1Sin/d3_71_N_562_15 , 
         \CIC1Sin/d3_71_N_562_14 , \CIC1Sin/n10730 , \CIC1Sin/d2_13 , 
         \CIC1Sin/d2_12 , \CIC1Sin/d3_71_N_562_13 , \CIC1Sin/d3_71_N_562_12 , 
         \CIC1Sin/n10729 , \CIC1Sin/d2_11 , \CIC1Sin/d2_10 , 
         \CIC1Sin/d3_71_N_562_11 , \CIC1Sin/d3_71_N_562_10 , \CIC1Sin/n10728 , 
         \CIC1Sin/d2_9 , \CIC1Sin/d2_8 , \CIC1Sin/d3_71_N_562_9 , 
         \CIC1Sin/d3_71_N_562_8 , \CIC1Sin/n10727 , \CIC1Sin/d2_7 , 
         \CIC1Sin/d2_6 , \CIC1Sin/d3_71_N_562_7 , \CIC1Sin/d3_71_N_562_6 , 
         \CIC1Sin/n10726 , \CIC1Sin/d2_5 , \CIC1Sin/d2_4 , 
         \CIC1Sin/d3_71_N_562_5 , \CIC1Sin/d3_71_N_562_4 , \CIC1Sin/n10725 , 
         \CIC1Sin/d2_3 , \CIC1Sin/d2_2 , \CIC1Sin/d3_71_N_562_3 , 
         \CIC1Sin/d3_71_N_562_2 , \CIC1Sin/n10724 , \CIC1Sin/d2_1 , 
         \CIC1Sin/d2_0 , \CIC1Sin/d3_71_N_562_1 , \CIC1Sin/n10722 , 
         \CIC1Sin/d1_35 , \CIC1Sin/d1_34 , \CIC1Sin/d2_71_N_490_35 , 
         \CIC1Sin/d2_71_N_490_34 , \CIC1Sin/n10721 , \CIC1Sin/d1_33 , 
         \CIC1Sin/d1_32 , \CIC1Sin/d2_71_N_490_33 , \CIC1Sin/d2_71_N_490_32 , 
         \CIC1Sin/n10720 , \CIC1Sin/d1_31 , \CIC1Sin/d1_30 , 
         \CIC1Sin/d2_71_N_490_31 , \CIC1Sin/d2_71_N_490_30 , \CIC1Sin/n10719 , 
         \CIC1Sin/d1_29 , \CIC1Sin/d1_28 , \CIC1Sin/d2_71_N_490_29 , 
         \CIC1Sin/d2_71_N_490_28 , \CIC1Sin/n10718 , \CIC1Sin/d1_27 , 
         \CIC1Sin/d1_26 , \CIC1Sin/d2_71_N_490_27 , \CIC1Sin/d2_71_N_490_26 , 
         \CIC1Sin/n10717 , \CIC1Sin/d1_25 , \CIC1Sin/d1_24 , 
         \CIC1Sin/d2_71_N_490_25 , \CIC1Sin/d2_71_N_490_24 , \CIC1Sin/n10716 , 
         \CIC1Sin/d1_23 , \CIC1Sin/d1_22 , \CIC1Sin/d2_71_N_490_23 , 
         \CIC1Sin/d2_71_N_490_22 , \CIC1Sin/n10715 , \CIC1Sin/d1_21 , 
         \CIC1Sin/d1_20 , \CIC1Sin/d2_71_N_490_21 , \CIC1Sin/d2_71_N_490_20 , 
         \CIC1Sin/n10714 , \CIC1Sin/d1_19 , \CIC1Sin/d1_18 , 
         \CIC1Sin/d2_71_N_490_19 , \CIC1Sin/d2_71_N_490_18 , \CIC1Sin/n10713 , 
         \CIC1Sin/d1_17 , \CIC1Sin/d1_16 , \CIC1Sin/d2_71_N_490_17 , 
         \CIC1Sin/d2_71_N_490_16 , \CIC1Sin/n10712 , \CIC1Sin/d1_15 , 
         \CIC1Sin/d1_14 , \CIC1Sin/d2_71_N_490_15 , \CIC1Sin/d2_71_N_490_14 , 
         \CIC1Sin/n10711 , \CIC1Sin/d1_13 , \CIC1Sin/d1_12 , 
         \CIC1Sin/d2_71_N_490_13 , \CIC1Sin/d2_71_N_490_12 , \CIC1Sin/n10710 , 
         \CIC1Sin/d1_11 , \CIC1Sin/d1_10 , \CIC1Sin/d2_71_N_490_11 , 
         \CIC1Sin/d2_71_N_490_10 , \CIC1Sin/n10709 , \CIC1Sin/d1_9 , 
         \CIC1Sin/d1_8 , \CIC1Sin/d2_71_N_490_9 , \CIC1Sin/d2_71_N_490_8 , 
         \CIC1Sin/n10708 , \CIC1Sin/d1_7 , \CIC1Sin/d1_6 , 
         \CIC1Sin/d2_71_N_490_7 , \CIC1Sin/d2_71_N_490_6 , \CIC1Sin/n10707 , 
         \CIC1Sin/d1_5 , \CIC1Sin/d1_4 , \CIC1Sin/d2_71_N_490_5 , 
         \CIC1Sin/d2_71_N_490_4 , \CIC1Sin/n10706 , \CIC1Sin/d1_3 , 
         \CIC1Sin/d1_2 , \CIC1Sin/d2_71_N_490_3 , \CIC1Sin/d2_71_N_490_2 , 
         \CIC1Sin/n10705 , \CIC1Sin/d1_1 , \CIC1Sin/d1_0 , 
         \CIC1Sin/d2_71_N_490_1 , \CIC1Sin/n10660 , \CIC1Sin/d1_71_N_418_35 , 
         \CIC1Sin/d1_71_N_418_34 , \CIC1Sin/n10659 , \CIC1Sin/d1_71_N_418_33 , 
         \CIC1Sin/d1_71_N_418_32 , \CIC1Sin/n10658 , \CIC1Sin/d1_71_N_418_31 , 
         \CIC1Sin/d1_71_N_418_30 , \CIC1Sin/n10657 , \CIC1Sin/d1_71_N_418_29 , 
         \CIC1Sin/d1_71_N_418_28 , \CIC1Sin/n10656 , \CIC1Sin/d1_71_N_418_27 , 
         \CIC1Sin/d1_71_N_418_26 , \CIC1Sin/n10655 , \CIC1Sin/d1_71_N_418_25 , 
         \CIC1Sin/d1_71_N_418_24 , \CIC1Sin/n10654 , \CIC1Sin/d1_71_N_418_23 , 
         \CIC1Sin/d1_71_N_418_22 , \CIC1Sin/n10653 , \CIC1Sin/d1_71_N_418_21 , 
         \CIC1Sin/d1_71_N_418_20 , \CIC1Sin/n10652 , \CIC1Sin/d1_71_N_418_19 , 
         \CIC1Sin/d1_71_N_418_18 , \CIC1Sin/n10651 , \CIC1Sin/d1_71_N_418_17 , 
         \CIC1Sin/d1_71_N_418_16 , \CIC1Sin/n10650 , \CIC1Sin/d1_71_N_418_15 , 
         \CIC1Sin/d1_71_N_418_14 , \CIC1Sin/n10649 , \CIC1Sin/d1_71_N_418_13 , 
         \CIC1Sin/d1_71_N_418_12 , \CIC1Sin/n10648 , MixerOutSin_10, 
         \CIC1Sin/d1_71_N_418_11 , \CIC1Sin/d1_71_N_418_10 , \CIC1Sin/n10647 , 
         MixerOutSin_9, MixerOutSin_8, \CIC1Sin/d1_71_N_418_9 , 
         \CIC1Sin/d1_71_N_418_8 , \CIC1Sin/n10646 , MixerOutSin_7, 
         MixerOutSin_6, \CIC1Sin/d1_71_N_418_7 , \CIC1Sin/d1_71_N_418_6 , 
         \CIC1Sin/n10645 , MixerOutSin_5, MixerOutSin_4, 
         \CIC1Sin/d1_71_N_418_5 , \CIC1Sin/d1_71_N_418_4 , \CIC1Sin/n10644 , 
         MixerOutSin_3, MixerOutSin_2, \CIC1Sin/d1_71_N_418_3 , 
         \CIC1Sin/d1_71_N_418_2 , \CIC1Sin/n10643 , MixerOutSin_1, 
         MixerOutSin_0, \CIC1Sin/d1_71_N_418_1 , \CIC1Sin/d_d6_35 , 
         \CIC1Sin/d7_71_N_1531_35 , \CIC1Sin/n12131 , \CIC1Sin/d7_35 , 
         \CIC1Sin/d_d6_34 , \CIC1Sin/d_d6_33 , \CIC1Sin/d7_71_N_1531_34 , 
         \CIC1Sin/d7_71_N_1531_33 , \CIC1Sin/n12130 , \CIC1Sin/d7_33 , 
         \CIC1Sin/d7_34 , \CIC1Sin/d_d6_32 , \CIC1Sin/d_d6_31 , 
         \CIC1Sin/d7_71_N_1531_32 , \CIC1Sin/d7_71_N_1531_31 , 
         \CIC1Sin/n12129 , \CIC1Sin/d7_31 , \CIC1Sin/d7_32 , \CIC1Sin/d_d6_30 , 
         \CIC1Sin/d_d6_29 , \CIC1Sin/d7_71_N_1531_30 , 
         \CIC1Sin/d7_71_N_1531_29 , \CIC1Sin/n12128 , \CIC1Sin/d7_29 , 
         \CIC1Sin/d7_30 , \CIC1Sin/d_d6_28 , \CIC1Sin/d_d6_27 , 
         \CIC1Sin/d7_71_N_1531_27 , \CIC1Sin/osc_clk_enable_310 , 
         \CIC1Sin/n12127 , \CIC1Sin/d7_27 , \CIC1Sin/d7_71_N_1531_28 , 
         \CIC1Sin/d_d6_26 , \CIC1Sin/d_d6_25 , \CIC1Sin/d7_71_N_1531_26 , 
         \CIC1Sin/d7_71_N_1531_25 , \CIC1Sin/n12126 , \CIC1Sin/d7_25 , 
         \CIC1Sin/d7_26 , \CIC1Sin/d_d6_24 , \CIC1Sin/d_d6_23 , 
         \CIC1Sin/d7_71_N_1531_24 , \CIC1Sin/d7_71_N_1531_23 , 
         \CIC1Sin/n12125 , \CIC1Sin/d7_23 , \CIC1Sin/d7_24 , \CIC1Sin/d_d6_22 , 
         \CIC1Sin/d_d6_21 , \CIC1Sin/d7_71_N_1531_22 , 
         \CIC1Sin/d7_71_N_1531_21 , \CIC1Sin/n12124 , \CIC1Sin/d7_21 , 
         \CIC1Sin/d7_22 , \CIC1Sin/d_d6_20 , \CIC1Sin/d6_20 , 
         \CIC1Sin/d_d6_19 , \CIC1Sin/d7_71_N_1531_20 , 
         \CIC1Sin/d7_71_N_1531_19 , \CIC1Sin/n12123 , \CIC1Sin/d7_19 , 
         \CIC1Sin/d7_20 , \CIC1Sin/d_d6_18 , \CIC1Sin/d_d6_17 , 
         \CIC1Sin/d7_71_N_1531_18 , \CIC1Sin/d7_71_N_1531_17 , 
         \CIC1Sin/n12122 , \CIC1Sin/d7_17 , \CIC1Sin/d7_18 , \CIC1Sin/d_d7_35 , 
         \CIC1Sin/d8_71_N_1603_35 , \CIC1Sin/osc_clk_enable_460 , 
         \CIC1Sin/n11484 , \CIC1Sin/d_d7_34 , \CIC1Sin/d_d7_33 , 
         \CIC1Sin/d8_71_N_1603_34 , \CIC1Sin/d8_71_N_1603_33 , 
         \CIC1Sin/n11483 , \CIC1Sin/d_d7_32 , \CIC1Sin/d_d7_31 , 
         \CIC1Sin/d8_71_N_1603_32 , \CIC1Sin/d8_71_N_1603_31 , 
         \CIC1Sin/n11482 , \CIC1Sin/d_d7_30 , \CIC1Sin/d_d7_29 , 
         \CIC1Sin/d8_71_N_1603_30 , \CIC1Sin/d8_71_N_1603_29 , 
         \CIC1Sin/n11481 , \CIC1Sin/d_d7_28 , \CIC1Sin/d7_28 , 
         \CIC1Sin/d_d7_27 , \CIC1Sin/d8_71_N_1603_28 , 
         \CIC1Sin/d8_71_N_1603_27 , \CIC1Sin/n11480 , \CIC1Sin/d_d7_26 , 
         \CIC1Sin/d_d7_25 , \CIC1Sin/d8_71_N_1603_26 , 
         \CIC1Sin/d8_71_N_1603_25 , \CIC1Sin/n11479 , \CIC1Sin/d_d7_24 , 
         \CIC1Sin/d_d7_23 , \CIC1Sin/d8_71_N_1603_24 , 
         \CIC1Sin/d8_71_N_1603_23 , \CIC1Sin/n11478 , \CIC1Sin/d_d7_22 , 
         \CIC1Sin/d_d7_21 , \CIC1Sin/d8_71_N_1603_22 , 
         \CIC1Sin/d8_71_N_1603_21 , \CIC1Sin/n11477 , \CIC1Sin/d_d7_20 , 
         \CIC1Sin/d_d7_19 , \CIC1Sin/d8_71_N_1603_20 , 
         \CIC1Sin/d8_71_N_1603_19 , \CIC1Sin/n11476 , \CIC1Sin/d_d7_18 , 
         \CIC1Sin/d_d7_17 , \CIC1Sin/d8_71_N_1603_18 , 
         \CIC1Sin/d8_71_N_1603_17 , \CIC1Sin/n11475 , \CIC1Sin/d_d7_16 , 
         \CIC1Sin/d7_16 , \CIC1Sin/d_d7_15 , \CIC1Sin/d7_15 , 
         \CIC1Sin/d8_71_N_1603_16 , \CIC1Sin/d8_71_N_1603_15 , 
         \CIC1Sin/n11474 , \CIC1Sin/d_d7_14 , \CIC1Sin/d7_14 , 
         \CIC1Sin/d_d7_13 , \CIC1Sin/d7_13 , \CIC1Sin/d8_71_N_1603_14 , 
         \CIC1Sin/d8_71_N_1603_13 , \CIC1Sin/n11473 , \CIC1Sin/d_d7_12 , 
         \CIC1Sin/d7_12 , \CIC1Sin/d_d7_11 , \CIC1Sin/d7_11 , 
         \CIC1Sin/d8_71_N_1603_12 , \CIC1Sin/d8_71_N_1603_11 , 
         \CIC1Sin/n11472 , \CIC1Sin/d_d7_10 , \CIC1Sin/d7_10 , 
         \CIC1Sin/d_d7_9 , \CIC1Sin/d7_9 , \CIC1Sin/d8_71_N_1603_10 , 
         \CIC1Sin/d8_71_N_1603_9 , \CIC1Sin/n11471 , \CIC1Sin/d_d7_8 , 
         \CIC1Sin/d7_8 , \CIC1Sin/d_d7_7 , \CIC1Sin/d7_7 , 
         \CIC1Sin/d8_71_N_1603_8 , \CIC1Sin/d8_71_N_1603_7 , \CIC1Sin/n11470 , 
         \CIC1Sin/d_d7_6 , \CIC1Sin/d7_6 , \CIC1Sin/d_d7_5 , \CIC1Sin/d7_5 , 
         \CIC1Sin/d8_71_N_1603_6 , \CIC1Sin/d8_71_N_1603_5 , \CIC1Sin/n11469 , 
         \CIC1Sin/d_d7_4 , \CIC1Sin/d7_4 , \CIC1Sin/d_d7_3 , \CIC1Sin/d7_3 , 
         \CIC1Sin/d8_71_N_1603_4 , \CIC1Sin/d8_71_N_1603_3 , \CIC1Sin/n11468 , 
         \CIC1Sin/d_d7_2 , \CIC1Sin/d7_2 , \CIC1Sin/d_d7_1 , \CIC1Sin/d7_1 , 
         \CIC1Sin/d8_71_N_1603_2 , \CIC1Sin/d8_71_N_1603_1 , \CIC1Sin/n11467 , 
         \CIC1Sin/d_d7_0 , \CIC1Sin/d7_0 , \CIC1Sin/d8_71_N_1603_0 , 
         \CIC1Sin/d_d9_35 , \CIC1Sin/n11348 , \CIC1Sin/n5968 , 
         \CIC1Sin/d_d9_34 , \CIC1Sin/d_d9_33 , \CIC1Sin/n11347 , 
         \CIC1Sin/d_d9_32 , \CIC1Sin/d_d9_31 , \CIC1Sin/n11346 , 
         \CIC1Sin/d_d9_30 , \CIC1Sin/d_d9_29 , \CIC1Sin/n11345 , 
         \CIC1Sin/d_d9_28 , \CIC1Sin/d_d9_27 , \CIC1Sin/n11344 , 
         \CIC1Sin/d_d9_26 , \CIC1Sin/d_d9_25 , \CIC1Sin/n11343 , 
         \CIC1Sin/d_d9_24 , \CIC1Sin/d_d9_23 , \CIC1Sin/n11342 , 
         \CIC1Sin/d_d9_22 , \CIC1Sin/d_d9_21 , \CIC1Sin/n11341 , 
         \CIC1Sin/d_d9_20 , \CIC1Sin/d_d9_19 , \CIC1Sin/n11340 , 
         \CIC1Sin/d_d9_18 , \CIC1Sin/d_d9_17 , \CIC1Sin/n11339 , 
         \CIC1Sin/d_d9_16 , \CIC1Sin/d_d9_15 , \CIC1Sin/n11338 , 
         \CIC1Sin/d_d9_14 , \CIC1Sin/d_d9_13 , \CIC1Sin/n11337 , 
         \CIC1Sin/d_d9_12 , \CIC1Sin/d_d9_11 , \CIC1Sin/d_d6_16 , 
         \CIC1Sin/d_d6_15 , \CIC1Sin/d7_71_N_1531_16 , 
         \CIC1Sin/d7_71_N_1531_15 , \CIC1Sin/n12121 , \CIC1Sin/d_d6_14 , 
         \CIC1Sin/d_d6_13 , \CIC1Sin/d7_71_N_1531_14 , 
         \CIC1Sin/d7_71_N_1531_13 , \CIC1Sin/n12120 , \CIC1Sin/d_d6_12 , 
         \CIC1Sin/d_d6_11 , \CIC1Sin/d7_71_N_1531_12 , 
         \CIC1Sin/d7_71_N_1531_11 , \CIC1Sin/n12119 , \CIC1Sin/d_d6_10 , 
         \CIC1Sin/d_d6_9 , \CIC1Sin/d7_71_N_1531_10 , \CIC1Sin/d7_71_N_1531_9 , 
         \CIC1Sin/n12118 , \CIC1Sin/d_d6_8 , \CIC1Sin/d_d6_7 , 
         \CIC1Sin/d7_71_N_1531_8 , \CIC1Sin/d7_71_N_1531_7 , \CIC1Sin/n12117 , 
         \CIC1Sin/d_d6_6 , \CIC1Sin/d_d6_5 , \CIC1Sin/d7_71_N_1531_6 , 
         \CIC1Sin/d7_71_N_1531_5 , \CIC1Sin/n12116 , \CIC1Sin/d_d6_4 , 
         \CIC1Sin/d_d6_3 , \CIC1Sin/d7_71_N_1531_4 , \CIC1Sin/d7_71_N_1531_3 , 
         \CIC1Sin/n12115 , \CIC1Sin/d_d6_2 , \CIC1Sin/d_d6_1 , 
         \CIC1Sin/d7_71_N_1531_2 , \CIC1Sin/d7_71_N_1531_1 , \CIC1Sin/n12114 , 
         \CIC1Sin/d_d6_0 , \CIC1Sin/d7_71_N_1531_0 , \CIC1Sin/d3_53 , 
         \CIC1Sin/d3_52 , \CIC1Sin/n11905 , \CIC1Sin/n4621 , \CIC1Sin/n4620 , 
         \CIC1Sin/d3_51 , \CIC1Sin/d3_50 , \CIC1Sin/n11904 , \CIC1Sin/n4623 , 
         \CIC1Sin/n4622 , \CIC1Sin/d3_49 , \CIC1Sin/d3_48 , \CIC1Sin/n11903 , 
         \CIC1Sin/n4625 , \CIC1Sin/n4624 , \CIC1Sin/d3_47 , \CIC1Sin/d3_46 , 
         \CIC1Sin/n11902 , \CIC1Sin/n4627 , \CIC1Sin/n4626 , \CIC1Sin/d3_45 , 
         \CIC1Sin/d3_44 , \CIC1Sin/n11901 , \CIC1Sin/n4629 , \CIC1Sin/n4628 , 
         \CIC1Sin/d3_43 , \CIC1Sin/d3_42 , \CIC1Sin/n11900 , \CIC1Sin/n4631 , 
         \CIC1Sin/n4630 , \CIC1Sin/d3_41 , \CIC1Sin/d3_40 , \CIC1Sin/n11899 , 
         \CIC1Sin/n4633 , \CIC1Sin/n4632 , \CIC1Sin/d3_39 , \CIC1Sin/d3_38 , 
         \CIC1Sin/n11898 , \CIC1Sin/n4635 , \CIC1Sin/n4634 , \CIC1Sin/d3_37 , 
         \CIC1Sin/d3_36 , \CIC1Sin/n4636 , \CIC1Sin/d3_71_N_562_71 , 
         \CIC1Sin/d3_71_N_562_70 , \CIC1Sin/n11895 , \CIC1Sin/d3_71_N_562_69 , 
         \CIC1Sin/d3_71_N_562_68 , \CIC1Sin/n11894 , \CIC1Sin/d3_71_N_562_67 , 
         \CIC1Sin/d3_71_N_562_66 , \CIC1Sin/n11893 , \CIC1Sin/d3_71_N_562_65 , 
         \CIC1Sin/d3_71_N_562_64 , \CIC1Sin/n11892 , \CIC1Sin/d3_71_N_562_63 , 
         \CIC1Sin/d3_71_N_562_62 , \CIC1Sin/n11891 , \CIC1Sin/d3_71_N_562_61 , 
         \CIC1Sin/d3_71_N_562_60 , \CIC1Sin/n11890 , \CIC1Sin/d3_71_N_562_59 , 
         \CIC1Sin/d3_71_N_562_58 , \CIC1Sin/n11889 , \CIC1Sin/d3_71_N_562_57 , 
         \CIC1Sin/d3_71_N_562_56 , \CIC1Sin/n11888 , \CIC1Sin/d3_71_N_562_55 , 
         \CIC1Sin/d3_71_N_562_54 , \CIC1Sin/n11887 , \CIC1Sin/d3_71_N_562_53 , 
         \CIC1Sin/d3_71_N_562_52 , \CIC1Sin/n11886 , \CIC1Sin/d3_71_N_562_51 , 
         \CIC1Sin/d3_71_N_562_50 , \CIC1Sin/n11885 , \CIC1Sin/d3_71_N_562_49 , 
         \CIC1Sin/d3_71_N_562_48 , \CIC1Sin/n11884 , \CIC1Sin/d3_71_N_562_47 , 
         \CIC1Sin/d3_71_N_562_46 , \CIC1Sin/n11883 , \CIC1Sin/d3_71_N_562_45 , 
         \CIC1Sin/d3_71_N_562_44 , \CIC1Sin/n11882 , \CIC1Sin/d3_71_N_562_43 , 
         \CIC1Sin/d3_71_N_562_42 , \CIC1Sin/n11881 , \CIC1Sin/d3_71_N_562_41 , 
         \CIC1Sin/d3_71_N_562_40 , \CIC1Sin/n11880 , \CIC1Sin/d3_71_N_562_39 , 
         \CIC1Sin/d3_71_N_562_38 , \CIC1Sin/n11879 , \CIC1Sin/n4637 , 
         \CIC1Sin/d3_71_N_562_37 , \CIC1Sin/d3_71_N_562_36 , \CIC1Sin/n11878 , 
         \CIC1Sin/d4_71 , \CIC1Sin/d4_70 , \CIC1Sin/n11873 , \CIC1Sin/n4755 , 
         \CIC1Sin/n4754 , \CIC1Sin/d4_69 , \CIC1Sin/d4_68 , \CIC1Sin/n11872 , 
         \CIC1Sin/n4757 , \CIC1Sin/n4756 , \CIC1Sin/d4_67 , \CIC1Sin/d4_66 , 
         \CIC1Sin/n11871 , \CIC1Sin/n4759 , \CIC1Sin/n4758 , \CIC1Sin/d4_65 , 
         \CIC1Sin/d4_64 , \CIC1Sin/n11870 , \CIC1Sin/n4761 , \CIC1Sin/n4760 , 
         \CIC1Sin/d4_63 , \CIC1Sin/d4_62 , \CIC1Sin/n11869 , \CIC1Sin/n4763 , 
         \CIC1Sin/n4762 , \CIC1Sin/d4_61 , \CIC1Sin/d4_60 , \CIC1Sin/n11868 , 
         \CIC1Sin/n4765 , \CIC1Sin/n4764 , \CIC1Sin/d4_59 , \CIC1Sin/d4_58 , 
         \CIC1Sin/n11867 , \CIC1Sin/n4767 , \CIC1Sin/n4766 , \CIC1Sin/d4_57 , 
         \CIC1Sin/d4_56 , \CIC1Sin/n11866 , \CIC1Sin/n4769 , \CIC1Sin/n4768 , 
         \CIC1Sin/d4_55 , \CIC1Sin/d4_54 , \CIC1Sin/n11865 , \CIC1Sin/n4771 , 
         \CIC1Sin/n4770 , \CIC1Sin/d4_53 , \CIC1Sin/d4_52 , \CIC1Sin/n11864 , 
         \CIC1Sin/n4773 , \CIC1Sin/n4772 , \CIC1Sin/d4_51 , \CIC1Sin/d4_50 , 
         \CIC1Sin/n11863 , \CIC1Sin/n4775 , \CIC1Sin/n4774 , \CIC1Sin/d4_49 , 
         \CIC1Sin/d4_48 , \CIC1Sin/n11862 , \CIC1Sin/n4777 , \CIC1Sin/n4776 , 
         \CIC1Sin/d4_47 , \CIC1Sin/d4_46 , \CIC1Sin/n11861 , \CIC1Sin/n4779 , 
         \CIC1Sin/n4778 , \CIC1Sin/d4_45 , \CIC1Sin/d4_44 , \CIC1Sin/n11860 , 
         \CIC1Sin/n4781 , \CIC1Sin/n4780 , \CIC1Sin/d4_43 , \CIC1Sin/d4_42 , 
         \CIC1Sin/n11859 , \CIC1Sin/n4783 , \CIC1Sin/n4782 , \CIC1Sin/d4_41 , 
         \CIC1Sin/d4_40 , \CIC1Sin/n11858 , \CIC1Sin/n4785 , \CIC1Sin/n4784 , 
         \CIC1Sin/d4_39 , \CIC1Sin/d4_38 , \CIC1Sin/n11857 , \CIC1Sin/n4787 , 
         \CIC1Sin/n4786 , \CIC1Sin/d4_37 , \CIC1Sin/d4_36 , \CIC1Sin/n4788 , 
         \CIC1Sin/d4_71_N_634_71 , \CIC1Sin/d4_71_N_634_70 , \CIC1Sin/n11854 , 
         \CIC1Sin/d4_71_N_634_69 , \CIC1Sin/d4_71_N_634_68 , \CIC1Sin/n11853 , 
         \CIC1Sin/d4_71_N_634_67 , \CIC1Sin/d4_71_N_634_66 , \CIC1Sin/n11852 , 
         \CIC1Sin/d4_71_N_634_65 , \CIC1Sin/d4_71_N_634_64 , \CIC1Sin/n11851 , 
         \CIC1Sin/d4_71_N_634_63 , \CIC1Sin/d4_71_N_634_62 , \CIC1Sin/n11850 , 
         \CIC1Sin/d4_71_N_634_61 , \CIC1Sin/d4_71_N_634_60 , \CIC1Sin/n11849 , 
         \CIC1Sin/d_d_tmp_71 , \CIC1Sin/d_tmp_71 , \CIC1Sin/n12037 , 
         \CIC1Sin/n4146 , \CIC1Sin/d_d_tmp_70 , \CIC1Sin/d_tmp_70 , 
         \CIC1Sin/d_d_tmp_69 , \CIC1Sin/d_tmp_69 , \CIC1Sin/n12036 , 
         \CIC1Sin/n4148 , \CIC1Sin/n4147 , \CIC1Sin/d_d_tmp_68 , 
         \CIC1Sin/d_tmp_68 , \CIC1Sin/d_d_tmp_67 , \CIC1Sin/d_tmp_67 , 
         \CIC1Sin/n12035 , \CIC1Sin/n4150 , \CIC1Sin/n4149 , 
         \CIC1Sin/d4_71_N_634_59 , \CIC1Sin/d4_71_N_634_58 , \CIC1Sin/n11848 , 
         \CIC1Sin/d_d_tmp_66 , \CIC1Sin/d_tmp_66 , \CIC1Sin/d_d_tmp_65 , 
         \CIC1Sin/d_tmp_65 , \CIC1Sin/n12034 , \CIC1Sin/n4152 , 
         \CIC1Sin/n4151 , \CIC1Sin/d_d_tmp_64 , \CIC1Sin/d_tmp_64 , 
         \CIC1Sin/d_d_tmp_63 , \CIC1Sin/d_tmp_63 , \CIC1Sin/n12033 , 
         \CIC1Sin/n4154 , \CIC1Sin/n4153 , \CIC1Sin/d_d_tmp_62 , 
         \CIC1Sin/d_tmp_62 , \CIC1Sin/d_d_tmp_61 , \CIC1Sin/d_tmp_61 , 
         \CIC1Sin/n12032 , \CIC1Sin/n4156 , \CIC1Sin/n4155 , 
         \CIC1Sin/d4_71_N_634_57 , \CIC1Sin/d4_71_N_634_56 , \CIC1Sin/n11847 , 
         \CIC1Sin/d4_71_N_634_55 , \CIC1Sin/d4_71_N_634_54 , \CIC1Sin/n11846 , 
         \CIC1Sin/d_d_tmp_60 , \CIC1Sin/d_tmp_60 , \CIC1Sin/d_d_tmp_59 , 
         \CIC1Sin/d_tmp_59 , \CIC1Sin/n12031 , \CIC1Sin/n4158 , 
         \CIC1Sin/n4157 , \CIC1Sin/d_d_tmp_58 , \CIC1Sin/d_tmp_58 , 
         \CIC1Sin/d_d_tmp_57 , \CIC1Sin/d_tmp_57 , \CIC1Sin/n12030 , 
         \CIC1Sin/n4160 , \CIC1Sin/n4159 , \CIC1Sin/d_d_tmp_56 , 
         \CIC1Sin/d_tmp_56 , \CIC1Sin/d_d_tmp_55 , \CIC1Sin/d_tmp_55 , 
         \CIC1Sin/n12029 , \CIC1Sin/n4162 , \CIC1Sin/n4161 , 
         \CIC1Sin/d4_71_N_634_53 , \CIC1Sin/d4_71_N_634_52 , \CIC1Sin/n11845 , 
         \CIC1Sin/d_d_tmp_54 , \CIC1Sin/d_tmp_54 , \CIC1Sin/d_d_tmp_53 , 
         \CIC1Sin/d_tmp_53 , \CIC1Sin/n12028 , \CIC1Sin/n4164 , 
         \CIC1Sin/n4163 , \CIC1Sin/d_d_tmp_52 , \CIC1Sin/d_tmp_52 , 
         \CIC1Sin/d_d_tmp_51 , \CIC1Sin/d_tmp_51 , \CIC1Sin/n12027 , 
         \CIC1Sin/n4166 , \CIC1Sin/n4165 , \CIC1Sin/d_d_tmp_50 , 
         \CIC1Sin/d_tmp_50 , \CIC1Sin/d_d_tmp_49 , \CIC1Sin/d_tmp_49 , 
         \CIC1Sin/n12026 , \CIC1Sin/n4168 , \CIC1Sin/n4167 , 
         \CIC1Sin/d4_71_N_634_51 , \CIC1Sin/d4_71_N_634_50 , \CIC1Sin/n11844 , 
         \CIC1Sin/d4_71_N_634_49 , \CIC1Sin/d4_71_N_634_48 , \CIC1Sin/n11843 , 
         \CIC1Sin/d_d_tmp_48 , \CIC1Sin/d_tmp_48 , \CIC1Sin/d_d_tmp_47 , 
         \CIC1Sin/d_tmp_47 , \CIC1Sin/n12025 , \CIC1Sin/n4170 , 
         \CIC1Sin/n4169 , \CIC1Sin/d_d_tmp_46 , \CIC1Sin/d_tmp_46 , 
         \CIC1Sin/d_d_tmp_45 , \CIC1Sin/d_tmp_45 , \CIC1Sin/n12024 , 
         \CIC1Sin/n4172 , \CIC1Sin/n4171 , \CIC1Sin/d_d_tmp_44 , 
         \CIC1Sin/d_tmp_44 , \CIC1Sin/d_d_tmp_43 , \CIC1Sin/d_tmp_43 , 
         \CIC1Sin/n12023 , \CIC1Sin/n4174 , \CIC1Sin/n4173 , 
         \CIC1Sin/d4_71_N_634_47 , \CIC1Sin/d4_71_N_634_46 , \CIC1Sin/n11842 , 
         \CIC1Sin/d_d_tmp_42 , \CIC1Sin/d_tmp_42 , \CIC1Sin/d_d_tmp_41 , 
         \CIC1Sin/d_tmp_41 , \CIC1Sin/n12022 , \CIC1Sin/n4176 , 
         \CIC1Sin/n4175 , \CIC1Sin/d_d_tmp_40 , \CIC1Sin/d_tmp_40 , 
         \CIC1Sin/d_d_tmp_39 , \CIC1Sin/d_tmp_39 , \CIC1Sin/n12021 , 
         \CIC1Sin/n4178 , \CIC1Sin/n4177 , \CIC1Sin/d_d_tmp_38 , 
         \CIC1Sin/d_tmp_38 , \CIC1Sin/d_d_tmp_37 , \CIC1Sin/d_tmp_37 , 
         \CIC1Sin/n12020 , \CIC1Sin/n4180 , \CIC1Sin/n4179 , 
         \CIC1Sin/d4_71_N_634_45 , \CIC1Sin/d4_71_N_634_44 , \CIC1Sin/n11841 , 
         \CIC1Sin/d4_71_N_634_43 , \CIC1Sin/d4_71_N_634_42 , \CIC1Sin/n11840 , 
         \CIC1Sin/d_d_tmp_36 , \CIC1Sin/d_tmp_36 , \CIC1Sin/n4181 , 
         \CIC1Sin/d6_71_N_1459_71 , \CIC1Sin/d6_71_N_1459_70 , 
         \CIC1Sin/osc_clk_enable_260 , \CIC1Sin/n12018 , 
         \CIC1Sin/d6_71_N_1459_69 , \CIC1Sin/d6_71_N_1459_68 , 
         \CIC1Sin/n12017 , \CIC1Sin/d6_71_N_1459_67 , 
         \CIC1Sin/d6_71_N_1459_66 , \CIC1Sin/n12016 , 
         \CIC1Sin/d6_71_N_1459_65 , \CIC1Sin/d6_71_N_1459_64 , 
         \CIC1Sin/n12015 , \CIC1Sin/d6_71_N_1459_63 , 
         \CIC1Sin/d6_71_N_1459_62 , \CIC1Sin/n12014 , 
         \CIC1Sin/d6_71_N_1459_61 , \CIC1Sin/d6_71_N_1459_60 , 
         \CIC1Sin/n12013 , \CIC1Sin/d6_71_N_1459_59 , 
         \CIC1Sin/d6_71_N_1459_58 , \CIC1Sin/n12012 , 
         \CIC1Sin/d6_71_N_1459_57 , \CIC1Sin/d6_71_N_1459_56 , 
         \CIC1Sin/n12011 , \CIC1Sin/d6_71_N_1459_55 , 
         \CIC1Sin/d6_71_N_1459_54 , \CIC1Sin/n12010 , 
         \CIC1Sin/d6_71_N_1459_53 , \CIC1Sin/d6_71_N_1459_52 , 
         \CIC1Sin/n12009 , \CIC1Sin/d6_71_N_1459_51 , 
         \CIC1Sin/d6_71_N_1459_50 , \CIC1Sin/n12008 , 
         \CIC1Sin/d6_71_N_1459_49 , \CIC1Sin/d6_71_N_1459_48 , 
         \CIC1Sin/n12007 , \CIC1Sin/d6_71_N_1459_47 , 
         \CIC1Sin/d6_71_N_1459_46 , \CIC1Sin/n12006 , 
         \CIC1Sin/d6_71_N_1459_45 , \CIC1Sin/d6_71_N_1459_44 , 
         \CIC1Sin/n12005 , \CIC1Sin/d6_71_N_1459_43 , 
         \CIC1Sin/d6_71_N_1459_42 , \CIC1Sin/n12004 , 
         \CIC1Sin/d6_71_N_1459_41 , \CIC1Sin/d6_71_N_1459_40 , 
         \CIC1Sin/n12003 , \CIC1Sin/d4_71_N_634_41 , \CIC1Sin/d4_71_N_634_40 , 
         \CIC1Sin/n11839 , \CIC1Sin/d6_71_N_1459_39 , 
         \CIC1Sin/d6_71_N_1459_38 , \CIC1Sin/n12002 , 
         \CIC1Sin/d6_71_N_1459_37 , \CIC1Sin/d6_71_N_1459_36 , 
         \CIC1Sin/n12001 , \CIC1Sin/n11996 , \CIC1Sin/n4299 , \CIC1Sin/n4298 , 
         \CIC1Sin/n11995 , \CIC1Sin/n4301 , \CIC1Sin/n4300 , \CIC1Sin/n11994 , 
         \CIC1Sin/n4303 , \CIC1Sin/n4302 , \CIC1Sin/d4_71_N_634_39 , 
         \CIC1Sin/d4_71_N_634_38 , \CIC1Sin/n11838 , \CIC1Sin/n11993 , 
         \CIC1Sin/n4305 , \CIC1Sin/n4304 , \CIC1Sin/n11992 , \CIC1Sin/n4307 , 
         \CIC1Sin/n4306 , \CIC1Sin/n11991 , \CIC1Sin/n4309 , \CIC1Sin/n4308 , 
         \CIC1Sin/n11990 , \CIC1Sin/n4311 , \CIC1Sin/n4310 , \CIC1Sin/n11989 , 
         \CIC1Sin/n4313 , \CIC1Sin/n4312 , \CIC1Sin/n4789 , 
         \CIC1Sin/d4_71_N_634_37 , \CIC1Sin/d4_71_N_634_36 , \CIC1Sin/n11837 , 
         \CIC1Sin/n11988 , \CIC1Sin/n4315 , \CIC1Sin/n4314 , \CIC1Sin/n11987 , 
         \CIC1Sin/n4317 , \CIC1Sin/n4316 , \CIC1Sin/n11986 , \CIC1Sin/n4319 , 
         \CIC1Sin/n4318 , \CIC1Sin/n11985 , \CIC1Sin/n4321 , \CIC1Sin/n4320 , 
         \CIC1Sin/n11543 , \CIC1Sin/n5978 , \CIC1Sin/n5977 , \CIC1Sin/n5982 , 
         \CIC1Sin/n5981 , \CIC1Sin/n11542 , \CIC1Sin/n5980 , \CIC1Sin/n5979 , 
         \CIC1Sin/n11984 , \CIC1Sin/n4323 , \CIC1Sin/n4322 , \CIC1Sin/n11983 , 
         \CIC1Sin/n4325 , \CIC1Sin/n4324 , \CIC1Sin/n11982 , \CIC1Sin/n11981 , 
         \CIC1Sin/n11980 , \CIC1Sin/d1_71_N_418_71 , \CIC1Sin/d1_71_N_418_70 , 
         \CIC1Sin/n11977 , \CIC1Sin/d1_71_N_418_69 , \CIC1Sin/d1_71_N_418_68 , 
         \CIC1Sin/n11976 , \CIC1Sin/d5_71 , \CIC1Sin/d5_70 , \CIC1Sin/n11832 , 
         \CIC1Sin/n4907 , \CIC1Sin/n4906 , \CIC1Sin/d5_69 , \CIC1Sin/d5_68 , 
         \CIC1Sin/n11831 , \CIC1Sin/n4909 , \CIC1Sin/n4908 , \CIC1Sin/d5_67 , 
         \CIC1Sin/d5_66 , \CIC1Sin/n11830 , \CIC1Sin/n4911 , \CIC1Sin/n4910 , 
         \CIC1Sin/d5_65 , \CIC1Sin/d5_64 , \CIC1Sin/n11829 , \CIC1Sin/n4913 , 
         \CIC1Sin/n4912 , \CIC1Sin/d5_63 , \CIC1Sin/d5_62 , \CIC1Sin/n11828 , 
         \CIC1Sin/n4915 , \CIC1Sin/n4914 , \CIC1Sin/d5_61 , \CIC1Sin/d5_60 , 
         \CIC1Sin/n11827 , \CIC1Sin/n4917 , \CIC1Sin/n4916 , \CIC1Sin/d5_59 , 
         \CIC1Sin/d5_58 , \CIC1Sin/n11826 , \CIC1Sin/n4919 , \CIC1Sin/n4918 , 
         \CIC1Sin/d5_57 , \CIC1Sin/d5_56 , \CIC1Sin/n11825 , \CIC1Sin/n4921 , 
         \CIC1Sin/n4920 , \CIC1Sin/d5_55 , \CIC1Sin/d5_54 , \CIC1Sin/n11824 , 
         \CIC1Sin/n4923 , \CIC1Sin/n4922 , \CIC1Sin/d5_53 , \CIC1Sin/d5_52 , 
         \CIC1Sin/n11823 , \CIC1Sin/n4925 , \CIC1Sin/n4924 , \CIC1Sin/d5_51 , 
         \CIC1Sin/d5_50 , \CIC1Sin/n11822 , \CIC1Sin/n4927 , \CIC1Sin/n4926 , 
         \CIC1Sin/d5_49 , \CIC1Sin/d5_48 , \CIC1Sin/n11821 , \CIC1Sin/n4929 , 
         \CIC1Sin/n4928 , \CIC1Sin/d5_47 , \CIC1Sin/d5_46 , \CIC1Sin/n11820 , 
         \CIC1Sin/n4931 , \CIC1Sin/n4930 , \CIC1Sin/d5_45 , \CIC1Sin/d5_44 , 
         \CIC1Sin/n11819 , \CIC1Sin/n4933 , \CIC1Sin/n4932 , \CIC1Sin/d5_43 , 
         \CIC1Sin/d5_42 , \CIC1Sin/n11818 , \CIC1Sin/n4935 , \CIC1Sin/n4934 , 
         \CIC1Sin/d5_41 , \CIC1Sin/d5_40 , \CIC1Sin/n11817 , \CIC1Sin/n4937 , 
         \CIC1Sin/n4936 , \CIC1Sin/d5_39 , \CIC1Sin/d5_38 , \CIC1Sin/n11816 , 
         \CIC1Sin/n4939 , \CIC1Sin/n4938 , \CIC1Sin/d5_37 , \CIC1Sin/d5_36 , 
         \CIC1Sin/n4940 , \CIC1Sin/d5_71_N_706_71 , \CIC1Sin/d5_71_N_706_70 , 
         \CIC1Sin/n11813 , \CIC1Sin/d5_71_N_706_69 , \CIC1Sin/d5_71_N_706_68 , 
         \CIC1Sin/n11812 , \CIC1Sin/d5_71_N_706_67 , \CIC1Sin/d5_71_N_706_66 , 
         \CIC1Sin/n11811 , \CIC1Sin/d5_71_N_706_65 , \CIC1Sin/d5_71_N_706_64 , 
         \CIC1Sin/n11810 , \CIC1Sin/d5_71_N_706_63 , \CIC1Sin/d5_71_N_706_62 , 
         \CIC1Sin/n11809 , \CIC1Sin/d1_71_N_418_67 , \CIC1Sin/d1_71_N_418_66 , 
         \CIC1Sin/n11975 , \CIC1Sin/d5_71_N_706_61 , \CIC1Sin/d5_71_N_706_60 , 
         \CIC1Sin/n11808 , \CIC1Sin/d5_71_N_706_59 , \CIC1Sin/d5_71_N_706_58 , 
         \CIC1Sin/n11807 , \CIC1Sin/d1_71_N_418_65 , \CIC1Sin/d1_71_N_418_64 , 
         \CIC1Sin/n11974 , \CIC1Sin/d1_71_N_418_63 , \CIC1Sin/d1_71_N_418_62 , 
         \CIC1Sin/n11973 , \CIC1Sin/d5_71_N_706_57 , \CIC1Sin/d5_71_N_706_56 , 
         \CIC1Sin/n11806 , \CIC1Sin/d5_71_N_706_55 , \CIC1Sin/d5_71_N_706_54 , 
         \CIC1Sin/n11805 , \CIC1Sin/d5_71_N_706_53 , \CIC1Sin/d5_71_N_706_52 , 
         \CIC1Sin/n11804 , \CIC1Sin/d5_71_N_706_51 , \CIC1Sin/d5_71_N_706_50 , 
         \CIC1Sin/n11803 , \CIC1Sin/d5_71_N_706_49 , \CIC1Sin/d5_71_N_706_48 , 
         \CIC1Sin/n11802 , \CIC1Sin/d5_71_N_706_47 , \CIC1Sin/d5_71_N_706_46 , 
         \CIC1Sin/n11801 , \CIC1Sin/d5_71_N_706_45 , \CIC1Sin/d5_71_N_706_44 , 
         \CIC1Sin/n11800 , \CIC1Sin/d5_71_N_706_43 , \CIC1Sin/d5_71_N_706_42 , 
         \CIC1Sin/n11799 , \CIC1Sin/d5_71_N_706_41 , \CIC1Sin/d5_71_N_706_40 , 
         \CIC1Sin/n11798 , \CIC1Sin/d5_71_N_706_39 , \CIC1Sin/d5_71_N_706_38 , 
         \CIC1Sin/n11797 , \CIC1Sin/n4941 , \CIC1Sin/d5_71_N_706_37 , 
         \CIC1Sin/d5_71_N_706_36 , \CIC1Sin/n11796 , \CIC1Sin/d1_71_N_418_61 , 
         \CIC1Sin/d1_71_N_418_60 , \CIC1Sin/n11972 , \CIC1Sin/d1_71_N_418_59 , 
         \CIC1Sin/d1_71_N_418_58 , \CIC1Sin/n11971 , \CIC1Sin/d1_71_N_418_57 , 
         \CIC1Sin/d1_71_N_418_56 , \CIC1Sin/n11970 , \CIC1Sin/d1_71_N_418_55 , 
         \CIC1Sin/d1_71_N_418_54 , \CIC1Sin/n11969 , \CIC1Sin/d1_71_N_418_53 , 
         \CIC1Sin/d1_71_N_418_52 , \CIC1Sin/n11968 , \CIC1Sin/d1_71_N_418_51 , 
         \CIC1Sin/d1_71_N_418_50 , \CIC1Sin/n11967 , \CIC1Sin/d1_71_N_418_49 , 
         \CIC1Sin/d1_71_N_418_48 , \CIC1Sin/n11966 , \CIC1Sin/d1_71_N_418_47 , 
         \CIC1Sin/d1_71_N_418_46 , \CIC1Sin/n11965 , \CIC1Sin/d1_71_N_418_45 , 
         \CIC1Sin/d1_71_N_418_44 , phase_inc_carrGen1_63, phase_accum_63, 
         phase_inc_carrGen1_62, phase_accum_62, 
         \ncoGen/phase_accum_63_N_146_63 , \ncoGen/phase_accum_63_N_146_62 , 
         \ncoGen/n10692 , phase_inc_carrGen1_61, phase_accum_61, 
         phase_inc_carrGen1_60, \ncoGen/phase_accum_63_N_146_61 , 
         \ncoGen/phase_accum_63_N_146_60 , \ncoGen/n10691 , 
         phase_inc_carrGen1_59, phase_accum_59, phase_inc_carrGen1_58, 
         \ncoGen/phase_accum_63_N_146_59 , \ncoGen/phase_accum_63_N_146_58 , 
         \ncoGen/n10690 , phase_inc_carrGen1_57, phase_accum_57, 
         phase_inc_carrGen1_56, \ncoGen/phase_accum_63_N_146_57 , 
         \ncoGen/phase_accum_63_N_146_56 , \ncoGen/n10689 , 
         phase_inc_carrGen1_55, \ncoGen/phase_accum_55 , phase_inc_carrGen1_54, 
         \ncoGen/phase_accum_54 , \ncoGen/phase_accum_63_N_146_55 , 
         \ncoGen/phase_accum_63_N_146_54 , \ncoGen/n10688 , 
         phase_inc_carrGen1_53, \ncoGen/phase_accum_53 , phase_inc_carrGen1_52, 
         \ncoGen/phase_accum_52 , \ncoGen/phase_accum_63_N_146_53 , 
         \ncoGen/phase_accum_63_N_146_52 , \ncoGen/n10687 , 
         phase_inc_carrGen1_51, \ncoGen/phase_accum_51 , phase_inc_carrGen1_50, 
         \ncoGen/phase_accum_50 , \ncoGen/phase_accum_63_N_146_51 , 
         \ncoGen/phase_accum_63_N_146_50 , \ncoGen/n10686 , 
         phase_inc_carrGen1_49, \ncoGen/phase_accum_49 , phase_inc_carrGen1_48, 
         \ncoGen/phase_accum_48 , \ncoGen/phase_accum_63_N_146_49 , 
         \ncoGen/phase_accum_63_N_146_48 , \ncoGen/n10685 , 
         phase_inc_carrGen1_47, \ncoGen/phase_accum_47 , phase_inc_carrGen1_46, 
         \ncoGen/phase_accum_46 , \ncoGen/phase_accum_63_N_146_47 , 
         \ncoGen/phase_accum_63_N_146_46 , \ncoGen/n10684 , 
         phase_inc_carrGen1_45, \ncoGen/phase_accum_45 , phase_inc_carrGen1_44, 
         \ncoGen/phase_accum_44 , \ncoGen/phase_accum_63_N_146_45 , 
         \ncoGen/phase_accum_63_N_146_44 , \ncoGen/n10683 , 
         phase_inc_carrGen1_43, \ncoGen/phase_accum_43 , phase_inc_carrGen1_42, 
         \ncoGen/phase_accum_42 , \ncoGen/phase_accum_63_N_146_43 , 
         \ncoGen/phase_accum_63_N_146_42 , \ncoGen/n10682 , 
         phase_inc_carrGen1_41, \ncoGen/phase_accum_41 , phase_inc_carrGen1_40, 
         \ncoGen/phase_accum_40 , \ncoGen/phase_accum_63_N_146_41 , 
         \ncoGen/phase_accum_63_N_146_40 , \ncoGen/n10681 , 
         phase_inc_carrGen1_39, \ncoGen/phase_accum_39 , phase_inc_carrGen1_38, 
         \ncoGen/phase_accum_38 , \ncoGen/phase_accum_63_N_146_39 , 
         \ncoGen/phase_accum_63_N_146_38 , \ncoGen/n10680 , 
         phase_inc_carrGen1_37, \ncoGen/phase_accum_37 , phase_inc_carrGen1_36, 
         \ncoGen/phase_accum_36 , \ncoGen/phase_accum_63_N_146_37 , 
         \ncoGen/phase_accum_63_N_146_36 , \ncoGen/n10679 , 
         phase_inc_carrGen1_35, \ncoGen/phase_accum_35 , phase_inc_carrGen1_34, 
         \ncoGen/phase_accum_34 , \ncoGen/phase_accum_63_N_146_35 , 
         \ncoGen/phase_accum_63_N_146_34 , \ncoGen/n10678 , 
         phase_inc_carrGen1_33, \ncoGen/phase_accum_33 , phase_inc_carrGen1_32, 
         \ncoGen/phase_accum_32 , \ncoGen/phase_accum_63_N_146_33 , 
         \ncoGen/phase_accum_63_N_146_32 , \ncoGen/n10677 , 
         phase_inc_carrGen1_31, \ncoGen/phase_accum_31 , phase_inc_carrGen1_30, 
         \ncoGen/phase_accum_30 , \ncoGen/phase_accum_63_N_146_31 , 
         \ncoGen/phase_accum_63_N_146_30 , \ncoGen/n10676 , 
         phase_inc_carrGen1_29, \ncoGen/phase_accum_29 , phase_inc_carrGen1_28, 
         \ncoGen/phase_accum_28 , \ncoGen/phase_accum_63_N_146_29 , 
         \ncoGen/phase_accum_63_N_146_28 , \ncoGen/n10675 , 
         phase_inc_carrGen1_27, \ncoGen/phase_accum_27 , phase_inc_carrGen1_26, 
         \ncoGen/phase_accum_26 , \ncoGen/phase_accum_63_N_146_27 , 
         \ncoGen/phase_accum_63_N_146_26 , \ncoGen/n10674 , 
         phase_inc_carrGen1_25, \ncoGen/phase_accum_25 , phase_inc_carrGen1_24, 
         \ncoGen/phase_accum_24 , \ncoGen/phase_accum_63_N_146_25 , 
         \ncoGen/phase_accum_63_N_146_24 , \ncoGen/n10673 , 
         phase_inc_carrGen1_23, \ncoGen/phase_accum_23 , phase_inc_carrGen1_22, 
         \ncoGen/phase_accum_22 , \ncoGen/phase_accum_63_N_146_23 , 
         \ncoGen/phase_accum_63_N_146_22 , \ncoGen/n10672 , 
         phase_inc_carrGen1_21, \ncoGen/phase_accum_21 , phase_inc_carrGen1_20, 
         \ncoGen/phase_accum_20 , \ncoGen/phase_accum_63_N_146_21 , 
         \ncoGen/phase_accum_63_N_146_20 , \ncoGen/n10671 , 
         phase_inc_carrGen1_19, \ncoGen/phase_accum_19 , phase_inc_carrGen1_18, 
         \ncoGen/phase_accum_18 , \ncoGen/phase_accum_63_N_146_19 , 
         \ncoGen/phase_accum_63_N_146_18 , \ncoGen/n10670 , 
         phase_inc_carrGen1_17, \ncoGen/phase_accum_17 , phase_inc_carrGen1_16, 
         \ncoGen/phase_accum_16 , \ncoGen/phase_accum_63_N_146_17 , 
         \ncoGen/phase_accum_63_N_146_16 , \ncoGen/n10669 , 
         phase_inc_carrGen1_15, \ncoGen/phase_accum_15 , phase_inc_carrGen1_14, 
         \ncoGen/phase_accum_14 , \ncoGen/phase_accum_63_N_146_15 , 
         \ncoGen/phase_accum_63_N_146_14 , \ncoGen/n10668 , 
         phase_inc_carrGen1_13, \ncoGen/phase_accum_13 , phase_inc_carrGen1_12, 
         \ncoGen/phase_accum_12 , \ncoGen/phase_accum_63_N_146_13 , 
         \ncoGen/phase_accum_63_N_146_12 , \ncoGen/n10667 , 
         phase_inc_carrGen1_11, \ncoGen/phase_accum_11 , phase_inc_carrGen1_10, 
         \ncoGen/phase_accum_10 , \ncoGen/phase_accum_63_N_146_11 , 
         \ncoGen/phase_accum_63_N_146_10 , \ncoGen/n10666 , 
         phase_inc_carrGen1_9, \ncoGen/phase_accum_9 , phase_inc_carrGen1_8, 
         \ncoGen/phase_accum_8 , \ncoGen/phase_accum_63_N_146_9 , 
         \ncoGen/phase_accum_63_N_146_8 , \ncoGen/n10665 , 
         phase_inc_carrGen1_7, \ncoGen/phase_accum_7 , phase_inc_carrGen1_6, 
         \ncoGen/phase_accum_6 , \ncoGen/phase_accum_63_N_146_7 , 
         \ncoGen/phase_accum_63_N_146_6 , \ncoGen/n10664 , 
         phase_inc_carrGen1_5, \ncoGen/phase_accum_5 , phase_inc_carrGen1_4, 
         \ncoGen/phase_accum_4 , \ncoGen/phase_accum_63_N_146_5 , 
         \ncoGen/phase_accum_63_N_146_4 , \ncoGen/n10663 , 
         phase_inc_carrGen1_3, \ncoGen/phase_accum_3 , phase_inc_carrGen1_2, 
         \ncoGen/phase_accum_2 , \ncoGen/phase_accum_63_N_146_3 , 
         \ncoGen/phase_accum_63_N_146_2 , \ncoGen/n10662 , 
         phase_inc_carrGen1_1, \ncoGen/phase_accum_1 , phase_inc_carrGen1_0, 
         \ncoGen/phase_accum_0 , \ncoGen/phase_accum_63_N_146_1 , 
         \AMDemodulator1/d_out_d_11__N_1873 , 
         \AMDemodulator1/d_out_d_11_N_1874_17 , \AMDemodulator1/n11503 , 
         \AMDemodulator1/n438 , \AMDemodulator1/d_out_d_11_N_1876_17 , 
         \AMDemodulator1/n380 , \AMDemodulator1/n381 , \AMDemodulator1/n11502 , 
         \AMDemodulator1/n440 , \AMDemodulator1/n439 , \AMDemodulator1/n382 , 
         \AMDemodulator1/ISquare_31 , \AMDemodulator1/n383 , 
         \AMDemodulator1/n11501 , \AMDemodulator1/n442 , \AMDemodulator1/n441 , 
         \AMDemodulator1/n384 , \AMDemodulator1/n385 , \AMDemodulator1/n11500 , 
         \AMDemodulator1/n444 , \AMDemodulator1/n443 , \AMDemodulator1/n386 , 
         \AMDemodulator1/d_out_d_11_N_1872_17 , \AMDemodulator1/n387 , 
         \AMDemodulator1/n11499 , \AMDemodulator1/n446 , \AMDemodulator1/n445 , 
         \AMDemodulator1/ISquare_19 , \AMDemodulator1/ISquare_18 , 
         \AMDemodulator1/n11498 , \AMDemodulator1/n447 , \AMDemodulator1/n912 , 
         \AMDemodulator1/n913 , \AMDemodulator1/n11492 , 
         \AMDemodulator1/d_out_d_11_N_2335_17 , \AMDemodulator1/n12158 , 
         \AMDemodulator1/n914 , \AMDemodulator1/n915 , \AMDemodulator1/n11491 , 
         \AMDemodulator1/n209 , \AMDemodulator1/n12157 , \AMDemodulator1/n323 , 
         \AMDemodulator1/n322 , \AMDemodulator1/n12156 , \AMDemodulator1/n325 , 
         \AMDemodulator1/n324 , \AMDemodulator1/ISquare_22 , 
         \AMDemodulator1/ISquare_23 , \AMDemodulator1/n326 , 
         \AMDemodulator1/n916 , \AMDemodulator1/n917 , \AMDemodulator1/n11490 , 
         \AMDemodulator1/d_out_d_11__N_1877 , 
         \AMDemodulator1/d_out_d_11_N_1878_17 , \AMDemodulator1/n12152 , 
         \AMDemodulator1/n554 , \AMDemodulator1/d_out_d_11_N_1880_17 , 
         \AMDemodulator1/n918 , \AMDemodulator1/n919 , \AMDemodulator1/n11489 , 
         \AMDemodulator1/n920 , \AMDemodulator1/n921 , \AMDemodulator1/n11488 , 
         \AMDemodulator1/d_out_d_11_N_1882_17 , \AMDemodulator1/n922 , 
         \AMDemodulator1/d_out_d_11_N_1884_17 , \AMDemodulator1/n923 , 
         \AMDemodulator1/n11487 , \AMDemodulator1/MultResult2_23 , 
         \AMDemodulator1/MultResult1_23 , 
         \AMDemodulator1/ISquare_31_N_1895_24 , CIC1_out_clkSin, 
         \AMDemodulator1/n10951 , \AMDemodulator1/MultResult2_22 , 
         \AMDemodulator1/MultResult1_22 , 
         \AMDemodulator1/ISquare_31_N_1895_23 , 
         \AMDemodulator1/ISquare_31_N_1895_22 , \AMDemodulator1/n10950 , 
         \AMDemodulator1/MultResult2_21 , \AMDemodulator1/MultResult1_21 , 
         \AMDemodulator1/MultResult2_20 , \AMDemodulator1/MultResult1_20 , 
         \AMDemodulator1/ISquare_31_N_1895_21 , 
         \AMDemodulator1/ISquare_31_N_1895_20 , \AMDemodulator1/n10949 , 
         \AMDemodulator1/ISquare_20 , \AMDemodulator1/ISquare_21 , 
         \AMDemodulator1/MultResult2_19 , \AMDemodulator1/MultResult1_19 , 
         \AMDemodulator1/MultResult2_18 , \AMDemodulator1/MultResult1_18 , 
         \AMDemodulator1/ISquare_31_N_1895_19 , 
         \AMDemodulator1/ISquare_31_N_1895_18 , \AMDemodulator1/n10948 , 
         \AMDemodulator1/MultResult2_17 , \AMDemodulator1/MultResult1_17 , 
         \AMDemodulator1/MultResult2_16 , \AMDemodulator1/MultResult1_16 , 
         \AMDemodulator1/ISquare_31_N_1895_17 , 
         \AMDemodulator1/ISquare_31_N_1895_16 , \AMDemodulator1/n10947 , 
         \AMDemodulator1/ISquare_16 , \AMDemodulator1/ISquare_17 , 
         \AMDemodulator1/MultResult2_15 , \AMDemodulator1/MultResult1_15 , 
         \AMDemodulator1/MultResult2_14 , \AMDemodulator1/MultResult1_14 , 
         \AMDemodulator1/ISquare_31_N_1895_15 , 
         \AMDemodulator1/ISquare_31_N_1895_14 , \AMDemodulator1/n10946 , 
         \AMDemodulator1/ISquare_14 , \AMDemodulator1/ISquare_15 , 
         \AMDemodulator1/MultResult2_13 , \AMDemodulator1/MultResult1_13 , 
         \AMDemodulator1/MultResult2_12 , \AMDemodulator1/MultResult1_12 , 
         \AMDemodulator1/ISquare_31_N_1895_13 , 
         \AMDemodulator1/ISquare_31_N_1895_12 , \AMDemodulator1/n10945 , 
         \AMDemodulator1/ISquare_12 , \AMDemodulator1/ISquare_13 , 
         \AMDemodulator1/MultResult2_11 , \AMDemodulator1/MultResult1_11 , 
         \AMDemodulator1/MultResult2_10 , \AMDemodulator1/MultResult1_10 , 
         \AMDemodulator1/ISquare_31_N_1895_11 , 
         \AMDemodulator1/ISquare_31_N_1895_10 , \AMDemodulator1/n10944 , 
         \AMDemodulator1/ISquare_10 , \AMDemodulator1/ISquare_11 , 
         \AMDemodulator1/MultResult2_9 , \AMDemodulator1/MultResult1_9 , 
         \AMDemodulator1/MultResult2_8 , \AMDemodulator1/MultResult1_8 , 
         \AMDemodulator1/ISquare_31_N_1895_9 , 
         \AMDemodulator1/ISquare_31_N_1895_8 , \AMDemodulator1/n10943 , 
         \AMDemodulator1/ISquare_8 , \AMDemodulator1/ISquare_9 , 
         \AMDemodulator1/MultResult2_7 , \AMDemodulator1/MultResult1_7 , 
         \AMDemodulator1/MultResult2_6 , \AMDemodulator1/MultResult1_6 , 
         \AMDemodulator1/ISquare_31_N_1895_7 , 
         \AMDemodulator1/ISquare_31_N_1895_6 , \AMDemodulator1/n10942 , 
         \AMDemodulator1/ISquare_6 , \AMDemodulator1/ISquare_7 , 
         \AMDemodulator1/MultResult2_5 , \AMDemodulator1/MultResult1_5 , 
         \AMDemodulator1/MultResult2_4 , \AMDemodulator1/MultResult1_4 , 
         \AMDemodulator1/ISquare_31_N_1895_5 , 
         \AMDemodulator1/ISquare_31_N_1895_4 , \AMDemodulator1/n10941 , 
         \AMDemodulator1/ISquare_4 , \AMDemodulator1/ISquare_5 , 
         \AMDemodulator1/MultResult2_3 , \AMDemodulator1/MultResult1_3 , 
         \AMDemodulator1/MultResult2_2 , \AMDemodulator1/MultResult1_2 , 
         \AMDemodulator1/ISquare_31_N_1895_3 , 
         \AMDemodulator1/ISquare_31_N_1895_2 , \AMDemodulator1/n10940 , 
         \AMDemodulator1/ISquare_2 , \AMDemodulator1/ISquare_3 , 
         \AMDemodulator1/MultResult2_1 , \AMDemodulator1/MultResult1_1 , 
         \AMDemodulator1/MultResult2_0 , \AMDemodulator1/MultResult1_0 , 
         \AMDemodulator1/ISquare_31_N_1895_1 , \AMDemodulator1/ISquare_1 , 
         \AMDemodulator1/d_out_d_11__N_1871 , \AMDemodulator1/n10702 , 
         \AMDemodulator1/n10701 , \AMDemodulator1/n10700 , 
         \AMDemodulator1/n12154 , \AMDemodulator1/n10699 , 
         \AMDemodulator1/n10698 , \AMDemodulator1/n496 , \AMDemodulator1/n497 , 
         \AMDemodulator1/n12151 , \AMDemodulator1/n556 , \AMDemodulator1/n555 , 
         \AMDemodulator1/n498 , \AMDemodulator1/n499 , \AMDemodulator1/n12150 , 
         \AMDemodulator1/n558 , \AMDemodulator1/n557 , \AMDemodulator1/n500 , 
         \AMDemodulator1/n501 , \AMDemodulator1/n12149 , \AMDemodulator1/n560 , 
         \AMDemodulator1/n559 , \AMDemodulator1/n502 , \AMDemodulator1/n503 , 
         \AMDemodulator1/n12148 , \AMDemodulator1/n562 , \AMDemodulator1/n561 , 
         \AMDemodulator1/n504 , \AMDemodulator1/n505 , \AMDemodulator1/n12147 , 
         \AMDemodulator1/n564 , \AMDemodulator1/n563 , \AMDemodulator1/n506 , 
         \AMDemodulator1/n507 , \AMDemodulator1/n12146 , \AMDemodulator1/n566 , 
         \AMDemodulator1/n565 , \AMDemodulator1/n12145 , \AMDemodulator1/n567 , 
         \AMDemodulator1/n12139 , \AMDemodulator1/d_out_d_11_N_2353_17 , 
         \AMDemodulator1/d_out_d_11_N_1886_17 , \AMDemodulator1/n924 , 
         \AMDemodulator1/d_out_d_11_N_1888_17 , \AMDemodulator1/n925 , 
         \AMDemodulator1/n11486 , \AMDemodulator1/n12138 , 
         \AMDemodulator1/n12137 , \AMDemodulator1/n12136 , 
         \AMDemodulator1/n12135 , \AMDemodulator1/n12134 , 
         \AMDemodulator1/n12133 , \AMDemodulator1/d_out_d_11_N_1890_17 , 
         \AMDemodulator1/n926 , \AMDemodulator1/d_out_d_11_N_1892_17 , 
         \AMDemodulator1/n927 , \AMDemodulator1/n12132 , 
         \AMDemodulator1/ISquare_0 , \AMDemodulator1/n11485 , 
         \AMDemodulator1/n732 , \AMDemodulator1/n733 , \AMDemodulator1/n11465 , 
         \AMDemodulator1/n792 , \AMDemodulator1/n734 , \AMDemodulator1/n735 , 
         \AMDemodulator1/n11464 , \AMDemodulator1/n794 , \AMDemodulator1/n793 , 
         \AMDemodulator1/n736 , \AMDemodulator1/n737 , \AMDemodulator1/n11463 , 
         \AMDemodulator1/n796 , \AMDemodulator1/n795 , \AMDemodulator1/n738 , 
         \AMDemodulator1/n739 , \AMDemodulator1/n11462 , \AMDemodulator1/n798 , 
         \AMDemodulator1/n797 , \AMDemodulator1/n740 , \AMDemodulator1/n741 , 
         \AMDemodulator1/n11461 , \AMDemodulator1/n800 , \AMDemodulator1/n799 , 
         \AMDemodulator1/n742 , \AMDemodulator1/n743 , \AMDemodulator1/n11460 , 
         \AMDemodulator1/n802 , \AMDemodulator1/n801 , \AMDemodulator1/n744 , 
         \AMDemodulator1/n745 , \AMDemodulator1/n11459 , \AMDemodulator1/n804 , 
         \AMDemodulator1/n803 , \AMDemodulator1/n746 , \AMDemodulator1/n747 , 
         \AMDemodulator1/n11458 , \AMDemodulator1/n806 , \AMDemodulator1/n805 , 
         \AMDemodulator1/n11457 , \AMDemodulator1/n807 , 
         \AMDemodulator1/d_out_d_11__N_1879 , \AMDemodulator1/n11361 , 
         \AMDemodulator1/n612 , \AMDemodulator1/n11360 , \AMDemodulator1/n614 , 
         \AMDemodulator1/n613 , \AMDemodulator1/n11359 , \AMDemodulator1/n616 , 
         \AMDemodulator1/n615 , \AMDemodulator1/n11358 , \AMDemodulator1/n618 , 
         \AMDemodulator1/n617 , \AMDemodulator1/n11357 , \AMDemodulator1/n620 , 
         \AMDemodulator1/n619 , \AMDemodulator1/n11356 , \AMDemodulator1/n622 , 
         \AMDemodulator1/n621 , \AMDemodulator1/n11355 , \AMDemodulator1/n624 , 
         \AMDemodulator1/n623 , \AMDemodulator1/n11354 , \AMDemodulator1/n626 , 
         \AMDemodulator1/n625 , \AMDemodulator1/n11353 , \AMDemodulator1/n627 , 
         \AMDemodulator1/n672 , \AMDemodulator1/n673 , \AMDemodulator1/n12104 , 
         \AMDemodulator1/n674 , \AMDemodulator1/n675 , \AMDemodulator1/n12103 , 
         \AMDemodulator1/n676 , \AMDemodulator1/n677 , \AMDemodulator1/n12102 , 
         \AMDemodulator1/n678 , \AMDemodulator1/n679 , \AMDemodulator1/n12101 , 
         \AMDemodulator1/n680 , \AMDemodulator1/n681 , \AMDemodulator1/n12100 , 
         \AMDemodulator1/n682 , \AMDemodulator1/n683 , \AMDemodulator1/n12099 , 
         \AMDemodulator1/n684 , \AMDemodulator1/n685 , \AMDemodulator1/n12098 , 
         \AMDemodulator1/n686 , \AMDemodulator1/n687 , \AMDemodulator1/n12097 , 
         \AMDemodulator1/n12096 , \AMDemodulator1/n12090 , 
         \AMDemodulator1/n12089 , \AMDemodulator1/n12088 , 
         \AMDemodulator1/n12087 , \AMDemodulator1/n12086 , 
         \AMDemodulator1/n12085 , \AMDemodulator1/n12084 , 
         \AMDemodulator1/n12083 , \AMDemodulator1/n12082 , 
         \AMDemodulator1/n852 , \AMDemodulator1/n853 , \AMDemodulator1/n12076 , 
         \AMDemodulator1/n854 , \AMDemodulator1/n855 , \AMDemodulator1/n12075 , 
         \AMDemodulator1/n856 , \AMDemodulator1/n857 , \AMDemodulator1/n12074 , 
         \AMDemodulator1/n858 , \AMDemodulator1/n859 , \AMDemodulator1/n12073 , 
         \AMDemodulator1/n860 , \AMDemodulator1/n861 , \AMDemodulator1/n12072 , 
         \AMDemodulator1/n862 , \AMDemodulator1/n863 , \AMDemodulator1/n12071 , 
         \AMDemodulator1/n864 , \AMDemodulator1/n865 , \AMDemodulator1/n12070 , 
         \AMDemodulator1/n866 , \AMDemodulator1/n867 , \AMDemodulator1/n12069 , 
         \AMDemodulator1/n12068 , \AMDemodulator1/n12062 , 
         \AMDemodulator1/n12061 , \AMDemodulator1/n12060 , 
         \AMDemodulator1/n12059 , \AMDemodulator1/n12058 , 
         \AMDemodulator1/n12057 , \AMDemodulator1/n12056 , 
         \AMDemodulator1/n12055 , \AMDemodulator1/n12054 , 
         \AMDemodulator1/d_out_d_11__N_1875 , \AMDemodulator1/n12048 , 
         \AMDemodulator1/n12047 , \AMDemodulator1/n12046 , 
         \AMDemodulator1/n12045 , \AMDemodulator1/n12044 , 
         \AMDemodulator1/n12043 , \AMDemodulator1/n12042 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_cin_lr_0 , 
         \AMDemodulator1/Multiplier2/mfco , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_0_13 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_cin_lr_2 , 
         \AMDemodulator1/Multiplier2/mfco_1 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_1_15 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_cin_lr_4 , 
         \AMDemodulator1/Multiplier2/mfco_2 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_2_17 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_cin_lr_6 , 
         \AMDemodulator1/Multiplier2/mfco_3 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_3_19 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_cin_lr_8 , 
         \AMDemodulator1/Multiplier2/mfco_4 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_4_21 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_cin_lr_10 , 
         \AMDemodulator1/Multiplier2/mfco_5 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_5_23 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_1_2 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_0_2 , 
         \AMDemodulator1/Multiplier2/s_Multiplier_0_0_2 , 
         \AMDemodulator1/Multiplier2/rego_o_2 , 
         \AMDemodulator1/Multiplier2/co_Multiplier_0_0_1 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_1_4 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_0_4 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_1_3 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_0_3 , 
         \AMDemodulator1/Multiplier2/s_Multiplier_0_0_4 , 
         \AMDemodulator1/Multiplier2/s_Multiplier_0_0_3 , 
         \AMDemodulator1/Multiplier2/rego_o_3 , 
         \AMDemodulator1/Multiplier2/f_s_Multiplier_0_0_4 , 
         \AMDemodulator1/Multiplier2/co_Multiplier_0_0_2 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_1_6 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_0_6 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_1_5 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_0_5 , 
         \AMDemodulator1/Multiplier2/s_Multiplier_0_0_6 , 
         \AMDemodulator1/Multiplier2/s_Multiplier_0_0_5 , 
         \AMDemodulator1/Multiplier2/f_s_Multiplier_0_0_5 , 
         \AMDemodulator1/Multiplier2/f_s_Multiplier_0_0_6 , 
         \AMDemodulator1/Multiplier2/co_Multiplier_0_0_3 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_1_8 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_0_8 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_1_7 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_0_7 , 
         \AMDemodulator1/Multiplier2/s_Multiplier_0_0_8 , 
         \AMDemodulator1/Multiplier2/s_Multiplier_0_0_7 , 
         \AMDemodulator1/Multiplier2/f_s_Multiplier_0_0_7 , 
         \AMDemodulator1/Multiplier2/f_s_Multiplier_0_0_8 , 
         \AMDemodulator1/Multiplier2/co_Multiplier_0_0_4 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_1_10 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_0_10 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_1_9 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_0_9 , 
         \AMDemodulator1/Multiplier2/s_Multiplier_0_0_10 , 
         \AMDemodulator1/Multiplier2/s_Multiplier_0_0_9 , 
         \AMDemodulator1/Multiplier2/f_s_Multiplier_0_0_9 , 
         \AMDemodulator1/Multiplier2/f_s_Multiplier_0_0_10 , 
         \AMDemodulator1/Multiplier2/co_Multiplier_0_0_5 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_1_12 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_0_12 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_1_11 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_0_11 , 
         \AMDemodulator1/Multiplier2/s_Multiplier_0_0_12 , 
         \AMDemodulator1/Multiplier2/s_Multiplier_0_0_11 , 
         \AMDemodulator1/Multiplier2/f_s_Multiplier_0_0_11 , 
         \AMDemodulator1/Multiplier2/f_s_Multiplier_0_0_12 , 
         \AMDemodulator1/Multiplier2/co_Multiplier_0_0_6 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_1_14 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_1_13 , 
         \AMDemodulator1/Multiplier2/s_Multiplier_0_0_14 , 
         \AMDemodulator1/Multiplier2/s_Multiplier_0_0_13 , 
         \AMDemodulator1/Multiplier2/f_s_Multiplier_0_0_13 , 
         \AMDemodulator1/Multiplier2/f_s_Multiplier_0_0_14 , 
         \AMDemodulator1/Multiplier2/co_Multiplier_0_0_7 , 
         \AMDemodulator1/Multiplier2/s_Multiplier_0_0_16 , 
         \AMDemodulator1/Multiplier2/s_Multiplier_0_0_15 , 
         \AMDemodulator1/Multiplier2/f_s_Multiplier_0_0_15 , 
         \AMDemodulator1/Multiplier2/f_s_Multiplier_0_0_16 , 
         \AMDemodulator1/Multiplier2/co_Multiplier_0_0_8 , 
         \AMDemodulator1/Multiplier2/s_Multiplier_0_0_17 , 
         \AMDemodulator1/Multiplier2/f_s_Multiplier_0_0_17 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_3_6 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_2_6 , 
         \AMDemodulator1/Multiplier2/s_Multiplier_0_1_6 , 
         \AMDemodulator1/Multiplier2/f_s_Multiplier_0_1_6 , 
         \AMDemodulator1/Multiplier2/co_Multiplier_0_1_1 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_3_8 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_2_8 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_3_7 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_2_7 , 
         \AMDemodulator1/Multiplier2/s_Multiplier_0_1_8 , 
         \AMDemodulator1/Multiplier2/s_Multiplier_0_1_7 , 
         \AMDemodulator1/Multiplier2/f_s_Multiplier_0_1_7 , 
         \AMDemodulator1/Multiplier2/f_s_Multiplier_0_1_8 , 
         \AMDemodulator1/Multiplier2/co_Multiplier_0_1_2 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_3_10 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_2_10 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_3_9 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_2_9 , 
         \AMDemodulator1/Multiplier2/s_Multiplier_0_1_10 , 
         \AMDemodulator1/Multiplier2/s_Multiplier_0_1_9 , 
         \AMDemodulator1/Multiplier2/f_s_Multiplier_0_1_9 , 
         \AMDemodulator1/Multiplier2/f_s_Multiplier_0_1_10 , 
         \AMDemodulator1/Multiplier2/co_Multiplier_0_1_3 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_3_12 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_2_12 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_3_11 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_2_11 , 
         \AMDemodulator1/Multiplier2/s_Multiplier_0_1_12 , 
         \AMDemodulator1/Multiplier2/s_Multiplier_0_1_11 , 
         \AMDemodulator1/Multiplier2/f_s_Multiplier_0_1_11 , 
         \AMDemodulator1/Multiplier2/f_s_Multiplier_0_1_12 , 
         \AMDemodulator1/Multiplier2/co_Multiplier_0_1_4 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_3_14 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_2_14 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_3_13 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_2_13 , 
         \AMDemodulator1/Multiplier2/s_Multiplier_0_1_14 , 
         \AMDemodulator1/Multiplier2/s_Multiplier_0_1_13 , 
         \AMDemodulator1/Multiplier2/f_s_Multiplier_0_1_13 , 
         \AMDemodulator1/Multiplier2/f_s_Multiplier_0_1_14 , 
         \AMDemodulator1/Multiplier2/co_Multiplier_0_1_5 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_3_16 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_2_16 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_3_15 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_2_15 , 
         \AMDemodulator1/Multiplier2/s_Multiplier_0_1_16 , 
         \AMDemodulator1/Multiplier2/s_Multiplier_0_1_15 , 
         \AMDemodulator1/Multiplier2/f_s_Multiplier_0_1_15 , 
         \AMDemodulator1/Multiplier2/f_s_Multiplier_0_1_16 , 
         \AMDemodulator1/Multiplier2/co_Multiplier_0_1_6 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_3_18 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_3_17 , 
         \AMDemodulator1/Multiplier2/s_Multiplier_0_1_18 , 
         \AMDemodulator1/Multiplier2/s_Multiplier_0_1_17 , 
         \AMDemodulator1/Multiplier2/f_s_Multiplier_0_1_17 , 
         \AMDemodulator1/Multiplier2/f_s_Multiplier_0_1_18 , 
         \AMDemodulator1/Multiplier2/co_Multiplier_0_1_7 , 
         \AMDemodulator1/Multiplier2/s_Multiplier_0_1_20 , 
         \AMDemodulator1/Multiplier2/s_Multiplier_0_1_19 , 
         \AMDemodulator1/Multiplier2/f_s_Multiplier_0_1_19 , 
         \AMDemodulator1/Multiplier2/f_s_Multiplier_0_1_20 , 
         \AMDemodulator1/Multiplier2/co_Multiplier_0_1_8 , 
         \AMDemodulator1/Multiplier2/s_Multiplier_0_1_21 , 
         \AMDemodulator1/Multiplier2/f_s_Multiplier_0_1_21 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_5_10 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_4_10 , 
         \AMDemodulator1/Multiplier2/s_Multiplier_0_2_10 , 
         \AMDemodulator1/Multiplier2/f_s_Multiplier_0_2_10 , 
         \AMDemodulator1/Multiplier2/co_Multiplier_0_2_1 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_5_12 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_4_12 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_5_11 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_4_11 , 
         \AMDemodulator1/Multiplier2/s_Multiplier_0_2_12 , 
         \AMDemodulator1/Multiplier2/s_Multiplier_0_2_11 , 
         \AMDemodulator1/Multiplier2/f_s_Multiplier_0_2_11 , 
         \AMDemodulator1/Multiplier2/f_s_Multiplier_0_2_12 , 
         \AMDemodulator1/Multiplier2/co_Multiplier_0_2_2 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_5_14 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_4_14 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_5_13 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_4_13 , 
         \AMDemodulator1/Multiplier2/s_Multiplier_0_2_14 , 
         \AMDemodulator1/Multiplier2/s_Multiplier_0_2_13 , 
         \AMDemodulator1/Multiplier2/f_s_Multiplier_0_2_13 , 
         \AMDemodulator1/Multiplier2/f_s_Multiplier_0_2_14 , 
         \AMDemodulator1/Multiplier2/co_Multiplier_0_2_3 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_5_16 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_4_16 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_5_15 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_4_15 , 
         \AMDemodulator1/Multiplier2/s_Multiplier_0_2_16 , 
         \AMDemodulator1/Multiplier2/s_Multiplier_0_2_15 , 
         \AMDemodulator1/Multiplier2/f_s_Multiplier_0_2_15 , 
         \AMDemodulator1/Multiplier2/f_s_Multiplier_0_2_16 , 
         \AMDemodulator1/Multiplier2/co_Multiplier_0_2_4 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_5_18 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_4_18 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_5_17 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_4_17 , 
         \AMDemodulator1/Multiplier2/s_Multiplier_0_2_18 , 
         \AMDemodulator1/Multiplier2/s_Multiplier_0_2_17 , 
         \AMDemodulator1/Multiplier2/f_s_Multiplier_0_2_17 , 
         \AMDemodulator1/Multiplier2/f_s_Multiplier_0_2_18 , 
         \AMDemodulator1/Multiplier2/co_Multiplier_0_2_5 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_5_20 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_4_20 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_5_19 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_4_19 , 
         \AMDemodulator1/Multiplier2/s_Multiplier_0_2_20 , 
         \AMDemodulator1/Multiplier2/s_Multiplier_0_2_19 , 
         \AMDemodulator1/Multiplier2/f_s_Multiplier_0_2_19 , 
         \AMDemodulator1/Multiplier2/f_s_Multiplier_0_2_20 , 
         \AMDemodulator1/Multiplier2/co_Multiplier_0_2_6 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_5_22 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_5_21 , 
         \AMDemodulator1/Multiplier2/s_Multiplier_0_2_22 , 
         \AMDemodulator1/Multiplier2/s_Multiplier_0_2_21 , 
         \AMDemodulator1/Multiplier2/f_s_Multiplier_0_2_21 , 
         \AMDemodulator1/Multiplier2/f_s_Multiplier_0_2_22 , 
         \AMDemodulator1/Multiplier2/co_Multiplier_0_2_7 , 
         \AMDemodulator1/Multiplier2/s_Multiplier_0_2_23 , 
         \AMDemodulator1/Multiplier2/f_s_Multiplier_0_2_23 , 
         \AMDemodulator1/Multiplier2/f_Multiplier_0_pp_2_4 , 
         \AMDemodulator1/Multiplier2/rego_o_4 , 
         \AMDemodulator1/Multiplier2/co_Multiplier_0_3_1 , 
         \AMDemodulator1/Multiplier2/f_Multiplier_0_pp_2_5 , 
         \AMDemodulator1/Multiplier2/rego_o_6 , 
         \AMDemodulator1/Multiplier2/rego_o_5 , 
         \AMDemodulator1/Multiplier2/co_Multiplier_0_3_2 , 
         \AMDemodulator1/Multiplier2/rego_o_7 , 
         \AMDemodulator1/Multiplier2/s_Multiplier_0_3_8 , 
         \AMDemodulator1/Multiplier2/co_Multiplier_0_3_3 , 
         \AMDemodulator1/Multiplier2/s_Multiplier_0_3_9 , 
         \AMDemodulator1/Multiplier2/s_Multiplier_0_3_10 , 
         \AMDemodulator1/Multiplier2/co_Multiplier_0_3_4 , 
         \AMDemodulator1/Multiplier2/s_Multiplier_0_3_11 , 
         \AMDemodulator1/Multiplier2/s_Multiplier_0_3_12 , 
         \AMDemodulator1/Multiplier2/co_Multiplier_0_3_5 , 
         \AMDemodulator1/Multiplier2/s_Multiplier_0_3_13 , 
         \AMDemodulator1/Multiplier2/s_Multiplier_0_3_14 , 
         \AMDemodulator1/Multiplier2/co_Multiplier_0_3_6 , 
         \AMDemodulator1/Multiplier2/s_Multiplier_0_3_15 , 
         \AMDemodulator1/Multiplier2/s_Multiplier_0_3_16 , 
         \AMDemodulator1/Multiplier2/co_Multiplier_0_3_7 , 
         \AMDemodulator1/Multiplier2/s_Multiplier_0_3_17 , 
         \AMDemodulator1/Multiplier2/s_Multiplier_0_3_18 , 
         \AMDemodulator1/Multiplier2/co_Multiplier_0_3_8 , 
         \AMDemodulator1/Multiplier2/s_Multiplier_0_3_19 , 
         \AMDemodulator1/Multiplier2/s_Multiplier_0_3_20 , 
         \AMDemodulator1/Multiplier2/co_Multiplier_0_3_9 , 
         \AMDemodulator1/Multiplier2/s_Multiplier_0_3_21 , 
         \AMDemodulator1/Multiplier2/s_Multiplier_0_3_22 , 
         \AMDemodulator1/Multiplier2/co_Multiplier_0_3_10 , 
         \AMDemodulator1/Multiplier2/s_Multiplier_0_3_23 , 
         \AMDemodulator1/Multiplier2/f_Multiplier_0_pp_4_8 , 
         \AMDemodulator1/Multiplier2/rego_o_8 , 
         \AMDemodulator1/Multiplier2/co_t_Multiplier_0_4_1 , 
         \AMDemodulator1/Multiplier2/f_Multiplier_0_pp_4_9 , 
         \AMDemodulator1/Multiplier2/rego_o_10 , 
         \AMDemodulator1/Multiplier2/rego_o_9 , 
         \AMDemodulator1/Multiplier2/co_t_Multiplier_0_4_2 , 
         \AMDemodulator1/Multiplier2/rego_o_12 , 
         \AMDemodulator1/Multiplier2/rego_o_11 , 
         \AMDemodulator1/Multiplier2/co_t_Multiplier_0_4_3 , 
         \AMDemodulator1/Multiplier2/rego_o_14 , 
         \AMDemodulator1/Multiplier2/rego_o_13 , 
         \AMDemodulator1/Multiplier2/co_t_Multiplier_0_4_4 , 
         \AMDemodulator1/Multiplier2/rego_o_16 , 
         \AMDemodulator1/Multiplier2/rego_o_15 , 
         \AMDemodulator1/Multiplier2/co_t_Multiplier_0_4_5 , 
         \AMDemodulator1/Multiplier2/rego_o_18 , 
         \AMDemodulator1/Multiplier2/rego_o_17 , 
         \AMDemodulator1/Multiplier2/co_t_Multiplier_0_4_6 , 
         \AMDemodulator1/Multiplier2/rego_o_20 , 
         \AMDemodulator1/Multiplier2/rego_o_19 , 
         \AMDemodulator1/Multiplier2/co_t_Multiplier_0_4_7 , 
         \AMDemodulator1/Multiplier2/rego_o_22 , 
         \AMDemodulator1/Multiplier2/rego_o_21 , 
         \AMDemodulator1/Multiplier2/co_t_Multiplier_0_4_8 , 
         \AMDemodulator1/Multiplier2/rego_o_23 , 
         \AMDemodulator1/Multiplier2/regb_b_0 , 
         \AMDemodulator1/Multiplier2/rega_a_2 , 
         \AMDemodulator1/Multiplier2/regb_b_1 , 
         \AMDemodulator1/Multiplier2/rega_a_1 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_0_1 , 
         \AMDemodulator1/Multiplier2/rego_o_1 , 
         \AMDemodulator1/Multiplier2/mco , 
         \AMDemodulator1/Multiplier2/rega_a_4 , 
         \AMDemodulator1/Multiplier2/rega_a_3 , 
         \AMDemodulator1/Multiplier2/mco_1 , 
         \AMDemodulator1/Multiplier2/rega_a_6 , 
         \AMDemodulator1/Multiplier2/rega_a_5 , 
         \AMDemodulator1/Multiplier2/mco_2 , 
         \AMDemodulator1/Multiplier2/rega_a_8 , 
         \AMDemodulator1/Multiplier2/rega_a_7 , 
         \AMDemodulator1/Multiplier2/mco_3 , 
         \AMDemodulator1/Multiplier2/rega_a_10 , 
         \AMDemodulator1/Multiplier2/rega_a_9 , 
         \AMDemodulator1/Multiplier2/mco_4 , VCC_net, 
         \AMDemodulator1/Multiplier2/Multiplier_0_mult_0_5_n1 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_mult_0_5_n2 , 
         \AMDemodulator1/Multiplier2/regb_b_2 , 
         \AMDemodulator1/Multiplier2/regb_b_3 , 
         \AMDemodulator1/Multiplier2/mco_5 , 
         \AMDemodulator1/Multiplier2/mco_6 , 
         \AMDemodulator1/Multiplier2/mco_7 , 
         \AMDemodulator1/Multiplier2/mco_8 , 
         \AMDemodulator1/Multiplier2/mco_9 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_mult_2_5_n1 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_mult_2_5_n2 , 
         \AMDemodulator1/Multiplier2/regb_b_4 , 
         \AMDemodulator1/Multiplier2/regb_b_5 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_2_5 , 
         \AMDemodulator1/Multiplier2/mco_10 , 
         \AMDemodulator1/Multiplier2/mco_11 , 
         \AMDemodulator1/Multiplier2/mco_12 , 
         \AMDemodulator1/Multiplier2/mco_13 , 
         \AMDemodulator1/Multiplier2/mco_14 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_mult_4_5_n1 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_mult_4_5_n2 , 
         \AMDemodulator1/Multiplier2/regb_b_6 , 
         \AMDemodulator1/Multiplier2/regb_b_7 , 
         \AMDemodulator1/Multiplier2/mco_15 , 
         \AMDemodulator1/Multiplier2/mco_16 , 
         \AMDemodulator1/Multiplier2/mco_17 , 
         \AMDemodulator1/Multiplier2/mco_18 , 
         \AMDemodulator1/Multiplier2/mco_19 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_mult_6_5_n1 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_mult_6_5_n2 , 
         \AMDemodulator1/Multiplier2/regb_b_8 , 
         \AMDemodulator1/Multiplier2/regb_b_9 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_4_9 , 
         \AMDemodulator1/Multiplier2/mco_20 , 
         \AMDemodulator1/Multiplier2/mco_21 , 
         \AMDemodulator1/Multiplier2/mco_22 , 
         \AMDemodulator1/Multiplier2/mco_23 , 
         \AMDemodulator1/Multiplier2/mco_24 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_mult_8_5_n1 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_mult_8_5_n2 , 
         \AMDemodulator1/Multiplier2/regb_b_10 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_mult_10_0_n1 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_mult_10_0_n0 , 
         \AMDemodulator1/Multiplier2/mco_25 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_mult_10_1_n1 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_mult_10_1_n0 , 
         \AMDemodulator1/Multiplier2/mco_26 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_mult_10_2_n1 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_mult_10_2_n0 , 
         \AMDemodulator1/Multiplier2/mco_27 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_mult_10_3_n1 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_mult_10_3_n0 , 
         \AMDemodulator1/Multiplier2/mco_28 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_mult_10_4_n1 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_mult_10_4_n0 , 
         \AMDemodulator1/Multiplier2/mco_29 , 
         \AMDemodulator1/Multiplier2/regb_b_11 , 
         \AMDemodulator1/Multiplier2/rega_a_11 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_mult_10_5_n2 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_mult_10_5_n0 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_cin_lr_0 , 
         \AMDemodulator1/Multiplier1/mfco , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_0_13 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_cin_lr_2 , 
         \AMDemodulator1/Multiplier1/mfco_1 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_1_15 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_cin_lr_4 , 
         \AMDemodulator1/Multiplier1/mfco_2 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_2_17 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_cin_lr_6 , 
         \AMDemodulator1/Multiplier1/mfco_3 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_3_19 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_cin_lr_8 , 
         \AMDemodulator1/Multiplier1/mfco_4 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_4_21 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_cin_lr_10 , 
         \AMDemodulator1/Multiplier1/mfco_5 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_5_23 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_1_2 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_0_2 , 
         \AMDemodulator1/Multiplier1/s_Multiplier_0_0_2 , 
         \AMDemodulator1/Multiplier1/rego_o_2 , 
         \AMDemodulator1/Multiplier1/co_Multiplier_0_0_1 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_1_4 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_0_4 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_1_3 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_0_3 , 
         \AMDemodulator1/Multiplier1/s_Multiplier_0_0_4 , 
         \AMDemodulator1/Multiplier1/s_Multiplier_0_0_3 , 
         \AMDemodulator1/Multiplier1/rego_o_3 , 
         \AMDemodulator1/Multiplier1/f_s_Multiplier_0_0_4 , 
         \AMDemodulator1/Multiplier1/co_Multiplier_0_0_2 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_1_6 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_0_6 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_1_5 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_0_5 , 
         \AMDemodulator1/Multiplier1/s_Multiplier_0_0_6 , 
         \AMDemodulator1/Multiplier1/s_Multiplier_0_0_5 , 
         \AMDemodulator1/Multiplier1/f_s_Multiplier_0_0_5 , 
         \AMDemodulator1/Multiplier1/f_s_Multiplier_0_0_6 , 
         \AMDemodulator1/Multiplier1/co_Multiplier_0_0_3 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_1_8 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_0_8 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_1_7 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_0_7 , 
         \AMDemodulator1/Multiplier1/s_Multiplier_0_0_8 , 
         \AMDemodulator1/Multiplier1/s_Multiplier_0_0_7 , 
         \AMDemodulator1/Multiplier1/f_s_Multiplier_0_0_7 , 
         \AMDemodulator1/Multiplier1/f_s_Multiplier_0_0_8 , 
         \AMDemodulator1/Multiplier1/co_Multiplier_0_0_4 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_1_10 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_0_10 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_1_9 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_0_9 , 
         \AMDemodulator1/Multiplier1/s_Multiplier_0_0_10 , 
         \AMDemodulator1/Multiplier1/s_Multiplier_0_0_9 , 
         \AMDemodulator1/Multiplier1/f_s_Multiplier_0_0_9 , 
         \AMDemodulator1/Multiplier1/f_s_Multiplier_0_0_10 , 
         \AMDemodulator1/Multiplier1/co_Multiplier_0_0_5 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_1_12 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_0_12 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_1_11 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_0_11 , 
         \AMDemodulator1/Multiplier1/s_Multiplier_0_0_12 , 
         \AMDemodulator1/Multiplier1/s_Multiplier_0_0_11 , 
         \AMDemodulator1/Multiplier1/f_s_Multiplier_0_0_11 , 
         \AMDemodulator1/Multiplier1/f_s_Multiplier_0_0_12 , 
         \AMDemodulator1/Multiplier1/co_Multiplier_0_0_6 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_1_14 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_1_13 , 
         \AMDemodulator1/Multiplier1/s_Multiplier_0_0_14 , 
         \AMDemodulator1/Multiplier1/s_Multiplier_0_0_13 , 
         \AMDemodulator1/Multiplier1/f_s_Multiplier_0_0_13 , 
         \AMDemodulator1/Multiplier1/f_s_Multiplier_0_0_14 , 
         \AMDemodulator1/Multiplier1/co_Multiplier_0_0_7 , 
         \AMDemodulator1/Multiplier1/s_Multiplier_0_0_16 , 
         \AMDemodulator1/Multiplier1/s_Multiplier_0_0_15 , 
         \AMDemodulator1/Multiplier1/f_s_Multiplier_0_0_15 , 
         \AMDemodulator1/Multiplier1/f_s_Multiplier_0_0_16 , 
         \AMDemodulator1/Multiplier1/co_Multiplier_0_0_8 , 
         \AMDemodulator1/Multiplier1/s_Multiplier_0_0_17 , 
         \AMDemodulator1/Multiplier1/f_s_Multiplier_0_0_17 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_3_6 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_2_6 , 
         \AMDemodulator1/Multiplier1/s_Multiplier_0_1_6 , 
         \AMDemodulator1/Multiplier1/f_s_Multiplier_0_1_6 , 
         \AMDemodulator1/Multiplier1/co_Multiplier_0_1_1 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_3_8 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_2_8 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_3_7 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_2_7 , 
         \AMDemodulator1/Multiplier1/s_Multiplier_0_1_8 , 
         \AMDemodulator1/Multiplier1/s_Multiplier_0_1_7 , 
         \AMDemodulator1/Multiplier1/f_s_Multiplier_0_1_7 , 
         \AMDemodulator1/Multiplier1/f_s_Multiplier_0_1_8 , 
         \AMDemodulator1/Multiplier1/co_Multiplier_0_1_2 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_3_10 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_2_10 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_3_9 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_2_9 , 
         \AMDemodulator1/Multiplier1/s_Multiplier_0_1_10 , 
         \AMDemodulator1/Multiplier1/s_Multiplier_0_1_9 , 
         \AMDemodulator1/Multiplier1/f_s_Multiplier_0_1_9 , 
         \AMDemodulator1/Multiplier1/f_s_Multiplier_0_1_10 , 
         \AMDemodulator1/Multiplier1/co_Multiplier_0_1_3 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_3_12 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_2_12 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_3_11 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_2_11 , 
         \AMDemodulator1/Multiplier1/s_Multiplier_0_1_12 , 
         \AMDemodulator1/Multiplier1/s_Multiplier_0_1_11 , 
         \AMDemodulator1/Multiplier1/f_s_Multiplier_0_1_11 , 
         \AMDemodulator1/Multiplier1/f_s_Multiplier_0_1_12 , 
         \AMDemodulator1/Multiplier1/co_Multiplier_0_1_4 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_3_14 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_2_14 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_3_13 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_2_13 , 
         \AMDemodulator1/Multiplier1/s_Multiplier_0_1_14 , 
         \AMDemodulator1/Multiplier1/s_Multiplier_0_1_13 , 
         \AMDemodulator1/Multiplier1/f_s_Multiplier_0_1_13 , 
         \AMDemodulator1/Multiplier1/f_s_Multiplier_0_1_14 , 
         \AMDemodulator1/Multiplier1/co_Multiplier_0_1_5 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_3_16 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_2_16 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_3_15 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_2_15 , 
         \AMDemodulator1/Multiplier1/s_Multiplier_0_1_16 , 
         \AMDemodulator1/Multiplier1/s_Multiplier_0_1_15 , 
         \AMDemodulator1/Multiplier1/f_s_Multiplier_0_1_15 , 
         \AMDemodulator1/Multiplier1/f_s_Multiplier_0_1_16 , 
         \AMDemodulator1/Multiplier1/co_Multiplier_0_1_6 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_3_18 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_3_17 , 
         \AMDemodulator1/Multiplier1/s_Multiplier_0_1_18 , 
         \AMDemodulator1/Multiplier1/s_Multiplier_0_1_17 , 
         \AMDemodulator1/Multiplier1/f_s_Multiplier_0_1_17 , 
         \AMDemodulator1/Multiplier1/f_s_Multiplier_0_1_18 , 
         \AMDemodulator1/Multiplier1/co_Multiplier_0_1_7 , 
         \AMDemodulator1/Multiplier1/s_Multiplier_0_1_20 , 
         \AMDemodulator1/Multiplier1/s_Multiplier_0_1_19 , 
         \AMDemodulator1/Multiplier1/f_s_Multiplier_0_1_19 , 
         \AMDemodulator1/Multiplier1/f_s_Multiplier_0_1_20 , 
         \AMDemodulator1/Multiplier1/co_Multiplier_0_1_8 , 
         \AMDemodulator1/Multiplier1/s_Multiplier_0_1_21 , 
         \AMDemodulator1/Multiplier1/f_s_Multiplier_0_1_21 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_5_10 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_4_10 , 
         \AMDemodulator1/Multiplier1/s_Multiplier_0_2_10 , 
         \AMDemodulator1/Multiplier1/f_s_Multiplier_0_2_10 , 
         \AMDemodulator1/Multiplier1/co_Multiplier_0_2_1 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_5_12 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_4_12 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_5_11 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_4_11 , 
         \AMDemodulator1/Multiplier1/s_Multiplier_0_2_12 , 
         \AMDemodulator1/Multiplier1/s_Multiplier_0_2_11 , 
         \AMDemodulator1/Multiplier1/f_s_Multiplier_0_2_11 , 
         \AMDemodulator1/Multiplier1/f_s_Multiplier_0_2_12 , 
         \AMDemodulator1/Multiplier1/co_Multiplier_0_2_2 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_5_14 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_4_14 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_5_13 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_4_13 , 
         \AMDemodulator1/Multiplier1/s_Multiplier_0_2_14 , 
         \AMDemodulator1/Multiplier1/s_Multiplier_0_2_13 , 
         \AMDemodulator1/Multiplier1/f_s_Multiplier_0_2_13 , 
         \AMDemodulator1/Multiplier1/f_s_Multiplier_0_2_14 , 
         \AMDemodulator1/Multiplier1/co_Multiplier_0_2_3 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_5_16 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_4_16 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_5_15 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_4_15 , 
         \AMDemodulator1/Multiplier1/s_Multiplier_0_2_16 , 
         \AMDemodulator1/Multiplier1/s_Multiplier_0_2_15 , 
         \AMDemodulator1/Multiplier1/f_s_Multiplier_0_2_15 , 
         \AMDemodulator1/Multiplier1/f_s_Multiplier_0_2_16 , 
         \AMDemodulator1/Multiplier1/co_Multiplier_0_2_4 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_5_18 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_4_18 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_5_17 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_4_17 , 
         \AMDemodulator1/Multiplier1/s_Multiplier_0_2_18 , 
         \AMDemodulator1/Multiplier1/s_Multiplier_0_2_17 , 
         \AMDemodulator1/Multiplier1/f_s_Multiplier_0_2_17 , 
         \AMDemodulator1/Multiplier1/f_s_Multiplier_0_2_18 , 
         \AMDemodulator1/Multiplier1/co_Multiplier_0_2_5 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_5_20 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_4_20 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_5_19 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_4_19 , 
         \AMDemodulator1/Multiplier1/s_Multiplier_0_2_20 , 
         \AMDemodulator1/Multiplier1/s_Multiplier_0_2_19 , 
         \AMDemodulator1/Multiplier1/f_s_Multiplier_0_2_19 , 
         \AMDemodulator1/Multiplier1/f_s_Multiplier_0_2_20 , 
         \AMDemodulator1/Multiplier1/co_Multiplier_0_2_6 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_5_22 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_5_21 , 
         \AMDemodulator1/Multiplier1/s_Multiplier_0_2_22 , 
         \AMDemodulator1/Multiplier1/s_Multiplier_0_2_21 , 
         \AMDemodulator1/Multiplier1/f_s_Multiplier_0_2_21 , 
         \AMDemodulator1/Multiplier1/f_s_Multiplier_0_2_22 , 
         \AMDemodulator1/Multiplier1/co_Multiplier_0_2_7 , 
         \AMDemodulator1/Multiplier1/s_Multiplier_0_2_23 , 
         \AMDemodulator1/Multiplier1/f_s_Multiplier_0_2_23 , 
         \AMDemodulator1/Multiplier1/f_Multiplier_0_pp_2_4 , 
         \AMDemodulator1/Multiplier1/rego_o_4 , 
         \AMDemodulator1/Multiplier1/co_Multiplier_0_3_1 , 
         \AMDemodulator1/Multiplier1/f_Multiplier_0_pp_2_5 , 
         \AMDemodulator1/Multiplier1/rego_o_6 , 
         \AMDemodulator1/Multiplier1/rego_o_5 , 
         \AMDemodulator1/Multiplier1/co_Multiplier_0_3_2 , 
         \AMDemodulator1/Multiplier1/rego_o_7 , 
         \AMDemodulator1/Multiplier1/s_Multiplier_0_3_8 , 
         \AMDemodulator1/Multiplier1/co_Multiplier_0_3_3 , 
         \AMDemodulator1/Multiplier1/s_Multiplier_0_3_9 , 
         \AMDemodulator1/Multiplier1/s_Multiplier_0_3_10 , 
         \AMDemodulator1/Multiplier1/co_Multiplier_0_3_4 , 
         \AMDemodulator1/Multiplier1/s_Multiplier_0_3_11 , 
         \AMDemodulator1/Multiplier1/s_Multiplier_0_3_12 , 
         \AMDemodulator1/Multiplier1/co_Multiplier_0_3_5 , 
         \AMDemodulator1/Multiplier1/s_Multiplier_0_3_13 , 
         \AMDemodulator1/Multiplier1/s_Multiplier_0_3_14 , 
         \AMDemodulator1/Multiplier1/co_Multiplier_0_3_6 , 
         \AMDemodulator1/Multiplier1/s_Multiplier_0_3_15 , 
         \AMDemodulator1/Multiplier1/s_Multiplier_0_3_16 , 
         \AMDemodulator1/Multiplier1/co_Multiplier_0_3_7 , 
         \AMDemodulator1/Multiplier1/s_Multiplier_0_3_17 , 
         \AMDemodulator1/Multiplier1/s_Multiplier_0_3_18 , 
         \AMDemodulator1/Multiplier1/co_Multiplier_0_3_8 , 
         \AMDemodulator1/Multiplier1/s_Multiplier_0_3_19 , 
         \AMDemodulator1/Multiplier1/s_Multiplier_0_3_20 , 
         \AMDemodulator1/Multiplier1/co_Multiplier_0_3_9 , 
         \AMDemodulator1/Multiplier1/s_Multiplier_0_3_21 , 
         \AMDemodulator1/Multiplier1/s_Multiplier_0_3_22 , 
         \AMDemodulator1/Multiplier1/co_Multiplier_0_3_10 , 
         \AMDemodulator1/Multiplier1/s_Multiplier_0_3_23 , 
         \AMDemodulator1/Multiplier1/f_Multiplier_0_pp_4_8 , 
         \AMDemodulator1/Multiplier1/rego_o_8 , 
         \AMDemodulator1/Multiplier1/co_t_Multiplier_0_4_1 , 
         \AMDemodulator1/Multiplier1/f_Multiplier_0_pp_4_9 , 
         \AMDemodulator1/Multiplier1/rego_o_10 , 
         \AMDemodulator1/Multiplier1/rego_o_9 , 
         \AMDemodulator1/Multiplier1/co_t_Multiplier_0_4_2 , 
         \AMDemodulator1/Multiplier1/rego_o_12 , 
         \AMDemodulator1/Multiplier1/rego_o_11 , 
         \AMDemodulator1/Multiplier1/co_t_Multiplier_0_4_3 , 
         \AMDemodulator1/Multiplier1/rego_o_14 , 
         \AMDemodulator1/Multiplier1/rego_o_13 , 
         \AMDemodulator1/Multiplier1/co_t_Multiplier_0_4_4 , 
         \AMDemodulator1/Multiplier1/rego_o_16 , 
         \AMDemodulator1/Multiplier1/rego_o_15 , 
         \AMDemodulator1/Multiplier1/co_t_Multiplier_0_4_5 , 
         \AMDemodulator1/Multiplier1/rego_o_18 , 
         \AMDemodulator1/Multiplier1/rego_o_17 , 
         \AMDemodulator1/Multiplier1/co_t_Multiplier_0_4_6 , 
         \AMDemodulator1/Multiplier1/rego_o_20 , 
         \AMDemodulator1/Multiplier1/rego_o_19 , 
         \AMDemodulator1/Multiplier1/co_t_Multiplier_0_4_7 , 
         \AMDemodulator1/Multiplier1/rego_o_22 , 
         \AMDemodulator1/Multiplier1/rego_o_21 , 
         \AMDemodulator1/Multiplier1/co_t_Multiplier_0_4_8 , 
         \AMDemodulator1/Multiplier1/rego_o_23 , 
         \AMDemodulator1/Multiplier1/regb_b_0 , 
         \AMDemodulator1/Multiplier1/rega_a_2 , 
         \AMDemodulator1/Multiplier1/regb_b_1 , 
         \AMDemodulator1/Multiplier1/rega_a_1 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_0_1 , 
         \AMDemodulator1/Multiplier1/rego_o_1 , 
         \AMDemodulator1/Multiplier1/mco , 
         \AMDemodulator1/Multiplier1/rega_a_4 , 
         \AMDemodulator1/Multiplier1/rega_a_3 , 
         \AMDemodulator1/Multiplier1/mco_1 , 
         \AMDemodulator1/Multiplier1/rega_a_6 , 
         \AMDemodulator1/Multiplier1/rega_a_5 , 
         \AMDemodulator1/Multiplier1/mco_2 , 
         \AMDemodulator1/Multiplier1/rega_a_8 , 
         \AMDemodulator1/Multiplier1/rega_a_7 , 
         \AMDemodulator1/Multiplier1/mco_3 , 
         \AMDemodulator1/Multiplier1/rega_a_10 , 
         \AMDemodulator1/Multiplier1/rega_a_9 , 
         \AMDemodulator1/Multiplier1/mco_4 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_mult_0_5_n1 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_mult_0_5_n2 , 
         \AMDemodulator1/Multiplier1/regb_b_2 , 
         \AMDemodulator1/Multiplier1/regb_b_3 , 
         \AMDemodulator1/Multiplier1/mco_5 , 
         \AMDemodulator1/Multiplier1/mco_6 , 
         \AMDemodulator1/Multiplier1/mco_7 , 
         \AMDemodulator1/Multiplier1/mco_8 , 
         \AMDemodulator1/Multiplier1/mco_9 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_mult_2_5_n1 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_mult_2_5_n2 , 
         \AMDemodulator1/Multiplier1/regb_b_4 , 
         \AMDemodulator1/Multiplier1/regb_b_5 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_2_5 , 
         \AMDemodulator1/Multiplier1/mco_10 , 
         \AMDemodulator1/Multiplier1/mco_11 , 
         \AMDemodulator1/Multiplier1/mco_12 , 
         \AMDemodulator1/Multiplier1/mco_13 , 
         \AMDemodulator1/Multiplier1/mco_14 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_mult_4_5_n1 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_mult_4_5_n2 , 
         \AMDemodulator1/Multiplier1/regb_b_6 , 
         \AMDemodulator1/Multiplier1/regb_b_7 , 
         \AMDemodulator1/Multiplier1/mco_15 , 
         \AMDemodulator1/Multiplier1/mco_16 , 
         \AMDemodulator1/Multiplier1/mco_17 , 
         \AMDemodulator1/Multiplier1/mco_18 , 
         \AMDemodulator1/Multiplier1/mco_19 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_mult_6_5_n1 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_mult_6_5_n2 , 
         \AMDemodulator1/Multiplier1/regb_b_8 , 
         \AMDemodulator1/Multiplier1/regb_b_9 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_4_9 , 
         \AMDemodulator1/Multiplier1/mco_20 , 
         \AMDemodulator1/Multiplier1/mco_21 , 
         \AMDemodulator1/Multiplier1/mco_22 , 
         \AMDemodulator1/Multiplier1/mco_23 , 
         \AMDemodulator1/Multiplier1/mco_24 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_mult_8_5_n1 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_mult_8_5_n2 , 
         \AMDemodulator1/Multiplier1/regb_b_10 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_mult_10_0_n1 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_mult_10_0_n0 , 
         \AMDemodulator1/Multiplier1/mco_25 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_mult_10_1_n1 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_mult_10_1_n0 , 
         \AMDemodulator1/Multiplier1/mco_26 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_mult_10_2_n1 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_mult_10_2_n0 , 
         \AMDemodulator1/Multiplier1/mco_27 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_mult_10_3_n1 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_mult_10_3_n0 , 
         \AMDemodulator1/Multiplier1/mco_28 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_mult_10_4_n1 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_mult_10_4_n0 , 
         \AMDemodulator1/Multiplier1/mco_29 , 
         \AMDemodulator1/Multiplier1/regb_b_11 , 
         \AMDemodulator1/Multiplier1/rega_a_11 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_mult_10_5_n2 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_mult_10_5_n0 , 
         \CIC1Cos/d2_41 , \CIC1Cos/d1_41 , \CIC1Cos/d2_40 , \CIC1Cos/d1_40 , 
         \CIC1Cos/n11735 , \CIC1Cos/n5241 , \CIC1Cos/n5240 , \CIC1Cos/n11736 , 
         \CIC1Cos/d2_39 , \CIC1Cos/d1_39 , \CIC1Cos/d2_38 , \CIC1Cos/d1_38 , 
         \CIC1Cos/n11734 , \CIC1Cos/n5243 , \CIC1Cos/n5242 , \CIC1Cos/d2_37 , 
         \CIC1Cos/d1_37 , \CIC1Cos/d2_36 , \CIC1Cos/d1_36 , \CIC1Cos/n5244 , 
         \CIC1Cos/d4_49 , \CIC1Cos/n5688 , \CIC1Cos/n5664 , \CIC1Cos/d5_49 , 
         \CIC1Cos/d4_48 , \CIC1Cos/n5689 , \CIC1Cos/d5_48 , 
         \CIC1Cos/d5_71_N_706_49 , \CIC1Cos/d5_71_N_706_48 , \CIC1Cos/n11597 , 
         \CIC1Cos/n11598 , \CIC1Cos/n5056 , \CIC1Cos/n11755 , \CIC1Cos/d2_71 , 
         \CIC1Cos/d1_71 , \CIC1Cos/d2_70 , \CIC1Cos/d1_70 , \CIC1Cos/n11750 , 
         \CIC1Cos/n5211 , \CIC1Cos/n5210 , \CIC1Cos/d2_67 , \CIC1Cos/d1_67 , 
         \CIC1Cos/d2_66 , \CIC1Cos/d1_66 , \CIC1Cos/n11748 , \CIC1Cos/n5215 , 
         \CIC1Cos/n5214 , \CIC1Cos/n11749 , \CIC1Cos/d2_69 , \CIC1Cos/d1_69 , 
         \CIC1Cos/d2_68 , \CIC1Cos/d1_68 , \CIC1Cos/n5213 , \CIC1Cos/n5212 , 
         \CIC1Cos/d2_55 , \CIC1Cos/d1_55 , \CIC1Cos/d2_54 , \CIC1Cos/d1_54 , 
         \CIC1Cos/n11742 , \CIC1Cos/n5227 , \CIC1Cos/n5226 , \CIC1Cos/n11743 , 
         \CIC1Cos/d4_55 , \CIC1Cos/n5682 , \CIC1Cos/d5_55 , \CIC1Cos/d4_54 , 
         \CIC1Cos/n5683 , \CIC1Cos/d5_54 , \CIC1Cos/d5_71_N_706_55 , 
         \CIC1Cos/d5_71_N_706_54 , \CIC1Cos/n11600 , \CIC1Cos/n11601 , 
         \CIC1Cos/d2_53 , \CIC1Cos/d1_53 , \CIC1Cos/d2_52 , \CIC1Cos/d1_52 , 
         \CIC1Cos/n11741 , \CIC1Cos/n5229 , \CIC1Cos/n5228 , \CIC1Cos/d2_51 , 
         \CIC1Cos/d1_51 , \CIC1Cos/d2_50 , \CIC1Cos/d1_50 , \CIC1Cos/n11740 , 
         \CIC1Cos/n5231 , \CIC1Cos/n5230 , \CIC1Cos/d2_49 , \CIC1Cos/d1_49 , 
         \CIC1Cos/d2_48 , \CIC1Cos/d1_48 , \CIC1Cos/n11739 , \CIC1Cos/n5233 , 
         \CIC1Cos/n5232 , \CIC1Cos/d2_47 , \CIC1Cos/d1_47 , \CIC1Cos/d2_46 , 
         \CIC1Cos/d1_46 , \CIC1Cos/n11738 , \CIC1Cos/n5235 , \CIC1Cos/n5234 , 
         \CIC1Cos/n5360 , \CIC1Cos/n11673 , \CIC1Cos/d2_45 , \CIC1Cos/d1_45 , 
         \CIC1Cos/d2_44 , \CIC1Cos/d1_44 , \CIC1Cos/n11737 , \CIC1Cos/n5237 , 
         \CIC1Cos/n5236 , \CIC1Cos/d4_71 , \CIC1Cos/d3_71 , \CIC1Cos/d4_70 , 
         \CIC1Cos/d3_70 , \CIC1Cos/n11668 , \CIC1Cos/n5515 , \CIC1Cos/n5514 , 
         \CIC1Cos/d2_43 , \CIC1Cos/d1_43 , \CIC1Cos/d2_42 , \CIC1Cos/d1_42 , 
         \CIC1Cos/n5239 , \CIC1Cos/n5238 , \CIC1Cos/d1_65 , \CIC1Cos/n5216 , 
         \CIC1Cos/n5208 , \CIC1Cos/d2_65 , \CIC1Cos/d1_64 , \CIC1Cos/n5217 , 
         \CIC1Cos/d2_64 , \CIC1Cos/d2_71_N_490_65 , \CIC1Cos/d2_71_N_490_64 , 
         \CIC1Cos/n11728 , \CIC1Cos/n11729 , \CIC1Cos/d4_47 , \CIC1Cos/n5690 , 
         \CIC1Cos/d5_47 , \CIC1Cos/d4_46 , \CIC1Cos/n5691 , \CIC1Cos/d5_46 , 
         \CIC1Cos/d5_71_N_706_47 , \CIC1Cos/d5_71_N_706_46 , \CIC1Cos/n11596 , 
         \CIC1Cos/d4_45 , \CIC1Cos/n5692 , \CIC1Cos/d5_45 , \CIC1Cos/d4_44 , 
         \CIC1Cos/n5693 , \CIC1Cos/d5_44 , \CIC1Cos/d5_71_N_706_45 , 
         \CIC1Cos/d5_71_N_706_44 , \CIC1Cos/n11595 , \CIC1Cos/n5666 , 
         \CIC1Cos/d5_71 , \CIC1Cos/n5667 , \CIC1Cos/d5_70 , 
         \CIC1Cos/d5_71_N_706_71 , \CIC1Cos/d5_71_N_706_70 , \CIC1Cos/n11608 , 
         \CIC1Cos/d4_69 , \CIC1Cos/d3_69 , \CIC1Cos/d4_68 , \CIC1Cos/d3_68 , 
         \CIC1Cos/n11667 , \CIC1Cos/n5517 , \CIC1Cos/n5516 , 
         \CIC1Cos/d2_71_N_490_39 , \CIC1Cos/d2_71_N_490_38 , \CIC1Cos/n11715 , 
         \CIC1Cos/n11716 , \CIC1Cos/n5245 , \CIC1Cos/d2_71_N_490_37 , 
         \CIC1Cos/d2_71_N_490_36 , \CIC1Cos/n11714 , \CIC1Cos/n11709 , 
         \CIC1Cos/n5363 , \CIC1Cos/n5362 , \CIC1Cos/d3_65 , \CIC1Cos/d3_64 , 
         \CIC1Cos/n11706 , \CIC1Cos/n5369 , \CIC1Cos/n5368 , \CIC1Cos/n11707 , 
         \CIC1Cos/n11708 , \CIC1Cos/n5365 , \CIC1Cos/n5364 , \CIC1Cos/d3_67 , 
         \CIC1Cos/d3_66 , \CIC1Cos/n5367 , \CIC1Cos/n5366 , \CIC1Cos/d3_63 , 
         \CIC1Cos/d2_63 , \CIC1Cos/d3_62 , \CIC1Cos/d2_62 , \CIC1Cos/n11705 , 
         \CIC1Cos/n5371 , \CIC1Cos/n5370 , \CIC1Cos/d4_67 , \CIC1Cos/d4_66 , 
         \CIC1Cos/n11666 , \CIC1Cos/n5519 , \CIC1Cos/n5518 , \CIC1Cos/d4_65 , 
         \CIC1Cos/d4_64 , \CIC1Cos/n11665 , \CIC1Cos/n5521 , \CIC1Cos/n5520 , 
         \CIC1Cos/n5668 , \CIC1Cos/d5_69 , \CIC1Cos/n5669 , \CIC1Cos/d5_68 , 
         \CIC1Cos/d5_71_N_706_69 , \CIC1Cos/d5_71_N_706_68 , \CIC1Cos/n11607 , 
         \CIC1Cos/d_d_tmp_71 , \CIC1Cos/d_tmp_71 , \CIC1Cos/n11330 , 
         \CIC1Cos/n6122 , \CIC1Cos/d4_63 , \CIC1Cos/d4_62 , \CIC1Cos/n11664 , 
         \CIC1Cos/n5523 , \CIC1Cos/n5522 , \CIC1Cos/d4_61 , \CIC1Cos/d3_61 , 
         \CIC1Cos/d4_60 , \CIC1Cos/d3_60 , \CIC1Cos/n11663 , \CIC1Cos/n5525 , 
         \CIC1Cos/n5524 , \CIC1Cos/d4_59 , \CIC1Cos/d3_59 , \CIC1Cos/d4_58 , 
         \CIC1Cos/d3_58 , \CIC1Cos/n11662 , \CIC1Cos/n5527 , \CIC1Cos/n5526 , 
         \CIC1Cos/n5670 , \CIC1Cos/d5_67 , \CIC1Cos/n5671 , \CIC1Cos/d5_66 , 
         \CIC1Cos/d5_71_N_706_67 , \CIC1Cos/d5_71_N_706_66 , \CIC1Cos/n11606 , 
         \CIC1Cos/d4_57 , \CIC1Cos/d3_57 , \CIC1Cos/d4_56 , \CIC1Cos/d3_56 , 
         \CIC1Cos/n11661 , \CIC1Cos/n5529 , \CIC1Cos/n5528 , \CIC1Cos/n5672 , 
         \CIC1Cos/d5_65 , \CIC1Cos/n5673 , \CIC1Cos/d5_64 , 
         \CIC1Cos/d5_71_N_706_65 , \CIC1Cos/d5_71_N_706_64 , \CIC1Cos/n11605 , 
         \CIC1Cos/d2_61 , \CIC1Cos/d2_60 , \CIC1Cos/n11704 , \CIC1Cos/n5373 , 
         \CIC1Cos/n5372 , \CIC1Cos/d3_53 , \CIC1Cos/d3_52 , \CIC1Cos/n11700 , 
         \CIC1Cos/n5381 , \CIC1Cos/n5380 , \CIC1Cos/n11701 , \CIC1Cos/d4_43 , 
         \CIC1Cos/n5694 , \CIC1Cos/d5_43 , \CIC1Cos/d4_42 , \CIC1Cos/n5695 , 
         \CIC1Cos/d5_42 , \CIC1Cos/d5_71_N_706_43 , \CIC1Cos/d5_71_N_706_42 , 
         \CIC1Cos/n11594 , \CIC1Cos/d3_71_N_562_71 , \CIC1Cos/d3_71_N_562_70 , 
         \CIC1Cos/n11690 , \CIC1Cos/d3_71_N_562_69 , \CIC1Cos/d3_71_N_562_68 , 
         \CIC1Cos/n11689 , \CIC1Cos/d3_71_N_562_65 , \CIC1Cos/d3_71_N_562_64 , 
         \CIC1Cos/n11687 , \CIC1Cos/n11688 , \CIC1Cos/d3_71_N_562_63 , 
         \CIC1Cos/d3_71_N_562_62 , \CIC1Cos/n11686 , \CIC1Cos/n5674 , 
         \CIC1Cos/d5_63 , \CIC1Cos/n5675 , \CIC1Cos/d5_62 , 
         \CIC1Cos/d5_71_N_706_63 , \CIC1Cos/d5_71_N_706_62 , \CIC1Cos/n11604 , 
         \CIC1Cos/d3_71_N_562_67 , \CIC1Cos/d3_71_N_562_66 , 
         \CIC1Cos/d3_71_N_562_61 , \CIC1Cos/d3_71_N_562_60 , \CIC1Cos/n11685 , 
         \CIC1Cos/d3_71_N_562_53 , \CIC1Cos/d3_71_N_562_52 , \CIC1Cos/n11681 , 
         \CIC1Cos/n11682 , \CIC1Cos/n5392 , \CIC1Cos/d3_41 , \CIC1Cos/n5393 , 
         \CIC1Cos/d3_40 , \CIC1Cos/d3_71_N_562_41 , \CIC1Cos/d3_71_N_562_40 , 
         \CIC1Cos/n11675 , \CIC1Cos/n11676 , \CIC1Cos/d3_55 , \CIC1Cos/d3_54 , 
         \CIC1Cos/n11660 , \CIC1Cos/n5531 , \CIC1Cos/n5530 , \CIC1Cos/n5394 , 
         \CIC1Cos/d3_39 , \CIC1Cos/n5395 , \CIC1Cos/d3_38 , 
         \CIC1Cos/d3_71_N_562_39 , \CIC1Cos/d3_71_N_562_38 , \CIC1Cos/n11674 , 
         \CIC1Cos/n5382 , \CIC1Cos/d3_51 , \CIC1Cos/n5383 , \CIC1Cos/d3_50 , 
         \CIC1Cos/d3_71_N_562_51 , \CIC1Cos/d3_71_N_562_50 , \CIC1Cos/n11680 , 
         \CIC1Cos/n5396 , \CIC1Cos/d3_37 , \CIC1Cos/n5397 , \CIC1Cos/d3_36 , 
         \CIC1Cos/d3_71_N_562_37 , \CIC1Cos/d3_71_N_562_36 , \CIC1Cos/n5384 , 
         \CIC1Cos/d3_49 , \CIC1Cos/n5385 , \CIC1Cos/d3_48 , 
         \CIC1Cos/d3_71_N_562_49 , \CIC1Cos/d3_71_N_562_48 , \CIC1Cos/n11679 , 
         \CIC1Cos/d2_59 , \CIC1Cos/n5374 , \CIC1Cos/d2_58 , \CIC1Cos/n5375 , 
         \CIC1Cos/d3_71_N_562_59 , \CIC1Cos/d3_71_N_562_58 , \CIC1Cos/n11684 , 
         \CIC1Cos/n5386 , \CIC1Cos/d3_47 , \CIC1Cos/n5387 , \CIC1Cos/d3_46 , 
         \CIC1Cos/d3_71_N_562_47 , \CIC1Cos/d3_71_N_562_46 , \CIC1Cos/n11678 , 
         \CIC1Cos/n5388 , \CIC1Cos/d3_45 , \CIC1Cos/n5389 , \CIC1Cos/d3_44 , 
         \CIC1Cos/d3_71_N_562_45 , \CIC1Cos/d3_71_N_562_44 , \CIC1Cos/n11677 , 
         \CIC1Cos/d2_57 , \CIC1Cos/n5376 , \CIC1Cos/d2_56 , \CIC1Cos/n5377 , 
         \CIC1Cos/d3_71_N_562_57 , \CIC1Cos/d3_71_N_562_56 , \CIC1Cos/n11683 , 
         \CIC1Cos/n5390 , \CIC1Cos/d3_43 , \CIC1Cos/n5391 , \CIC1Cos/d3_42 , 
         \CIC1Cos/d3_71_N_562_43 , \CIC1Cos/d3_71_N_562_42 , \CIC1Cos/n5378 , 
         \CIC1Cos/n5379 , \CIC1Cos/d3_71_N_562_55 , \CIC1Cos/d3_71_N_562_54 , 
         \CIC1Cos/d4_41 , \CIC1Cos/n5696 , \CIC1Cos/d5_41 , \CIC1Cos/d4_40 , 
         \CIC1Cos/n5697 , \CIC1Cos/d5_40 , \CIC1Cos/d5_71_N_706_41 , 
         \CIC1Cos/d5_71_N_706_40 , \CIC1Cos/n11593 , \CIC1Cos/d2_71_N_490_43 , 
         \CIC1Cos/d2_71_N_490_42 , \CIC1Cos/n11717 , \CIC1Cos/n11718 , 
         \CIC1Cos/d4_39 , \CIC1Cos/n5698 , \CIC1Cos/d5_39 , \CIC1Cos/d4_38 , 
         \CIC1Cos/n5699 , \CIC1Cos/d5_38 , \CIC1Cos/d5_71_N_706_39 , 
         \CIC1Cos/d5_71_N_706_38 , \CIC1Cos/n11592 , \CIC1Cos/d4_37 , 
         \CIC1Cos/n5700 , \CIC1Cos/d5_37 , \CIC1Cos/d4_36 , \CIC1Cos/n5701 , 
         \CIC1Cos/d5_36 , \CIC1Cos/d5_71_N_706_37 , \CIC1Cos/d5_71_N_706_36 , 
         \CIC1Cos/n11591 , \CIC1Cos/d2_71_N_490_71 , \CIC1Cos/d2_71_N_490_70 , 
         \CIC1Cos/n11731 , \CIC1Cos/d2_71_N_490_69 , \CIC1Cos/d2_71_N_490_68 , 
         \CIC1Cos/n11730 , \CIC1Cos/d2_71_N_490_67 , \CIC1Cos/d2_71_N_490_66 , 
         \CIC1Cos/d1_63 , \CIC1Cos/n5218 , \CIC1Cos/d1_62 , \CIC1Cos/n5219 , 
         \CIC1Cos/d2_71_N_490_63 , \CIC1Cos/d2_71_N_490_62 , \CIC1Cos/n11727 , 
         \CIC1Cos/n5680 , \CIC1Cos/d5_57 , \CIC1Cos/n5681 , \CIC1Cos/d5_56 , 
         \CIC1Cos/d5_71_N_706_57 , \CIC1Cos/d5_71_N_706_56 , \CIC1Cos/n11602 , 
         \CIC1Cos/n5676 , \CIC1Cos/d5_61 , \CIC1Cos/n5677 , \CIC1Cos/d5_60 , 
         \CIC1Cos/d5_71_N_706_61 , \CIC1Cos/d5_71_N_706_60 , \CIC1Cos/n11603 , 
         \CIC1Cos/d1_61 , \CIC1Cos/n5220 , \CIC1Cos/d1_60 , \CIC1Cos/n5221 , 
         \CIC1Cos/d2_71_N_490_61 , \CIC1Cos/d2_71_N_490_60 , \CIC1Cos/n11726 , 
         \CIC1Cos/d1_59 , \CIC1Cos/n5222 , \CIC1Cos/d1_58 , \CIC1Cos/n5223 , 
         \CIC1Cos/d2_71_N_490_59 , \CIC1Cos/d2_71_N_490_58 , \CIC1Cos/n11725 , 
         \CIC1Cos/d1_57 , \CIC1Cos/n5224 , \CIC1Cos/d1_56 , \CIC1Cos/n5225 , 
         \CIC1Cos/d2_71_N_490_57 , \CIC1Cos/d2_71_N_490_56 , \CIC1Cos/n11724 , 
         \CIC1Cos/d2_71_N_490_55 , \CIC1Cos/d2_71_N_490_54 , \CIC1Cos/n11723 , 
         \CIC1Cos/d2_71_N_490_53 , \CIC1Cos/d2_71_N_490_52 , \CIC1Cos/n11722 , 
         \CIC1Cos/d4_53 , \CIC1Cos/n5684 , \CIC1Cos/d5_53 , \CIC1Cos/d4_52 , 
         \CIC1Cos/n5685 , \CIC1Cos/d5_52 , \CIC1Cos/d5_71_N_706_53 , 
         \CIC1Cos/d5_71_N_706_52 , \CIC1Cos/n11599 , \CIC1Cos/d_d_tmp_70 , 
         \CIC1Cos/d_tmp_70 , \CIC1Cos/d_d_tmp_69 , \CIC1Cos/d_tmp_69 , 
         \CIC1Cos/n11329 , \CIC1Cos/n6124 , \CIC1Cos/n6123 , 
         \CIC1Cos/d_d_tmp_68 , \CIC1Cos/d_tmp_68 , \CIC1Cos/d_d_tmp_67 , 
         \CIC1Cos/d_tmp_67 , \CIC1Cos/n11328 , \CIC1Cos/n6126 , 
         \CIC1Cos/n6125 , \CIC1Cos/d_d_tmp_66 , \CIC1Cos/d_tmp_66 , 
         \CIC1Cos/d_d_tmp_65 , \CIC1Cos/d_tmp_65 , \CIC1Cos/n11327 , 
         \CIC1Cos/n6128 , \CIC1Cos/n6127 , \CIC1Cos/d_d_tmp_64 , 
         \CIC1Cos/d_tmp_64 , \CIC1Cos/d_d_tmp_63 , \CIC1Cos/d_tmp_63 , 
         \CIC1Cos/n11326 , \CIC1Cos/n6130 , \CIC1Cos/n6129 , 
         \CIC1Cos/d_d_tmp_62 , \CIC1Cos/d_tmp_62 , \CIC1Cos/d_d_tmp_61 , 
         \CIC1Cos/d_tmp_61 , \CIC1Cos/n11325 , \CIC1Cos/n6132 , 
         \CIC1Cos/n6131 , \CIC1Cos/d_d_tmp_60 , \CIC1Cos/d_tmp_60 , 
         \CIC1Cos/d_d_tmp_59 , \CIC1Cos/d_tmp_59 , \CIC1Cos/n11324 , 
         \CIC1Cos/n6134 , \CIC1Cos/n6133 , \CIC1Cos/d_d_tmp_58 , 
         \CIC1Cos/d_tmp_58 , \CIC1Cos/d_d_tmp_57 , \CIC1Cos/d_tmp_57 , 
         \CIC1Cos/n11323 , \CIC1Cos/n6136 , \CIC1Cos/n6135 , 
         \CIC1Cos/d_d_tmp_56 , \CIC1Cos/d_tmp_56 , \CIC1Cos/d_d_tmp_55 , 
         \CIC1Cos/d_tmp_55 , \CIC1Cos/n11322 , \CIC1Cos/n6138 , 
         \CIC1Cos/n6137 , \CIC1Cos/d_d_tmp_54 , \CIC1Cos/d_tmp_54 , 
         \CIC1Cos/d_d_tmp_53 , \CIC1Cos/d_tmp_53 , \CIC1Cos/n11321 , 
         \CIC1Cos/n6140 , \CIC1Cos/n6139 , \CIC1Cos/n11694 , \CIC1Cos/n11695 , 
         \CIC1Cos/d_d_tmp_52 , \CIC1Cos/d_tmp_52 , \CIC1Cos/d_d_tmp_51 , 
         \CIC1Cos/d_tmp_51 , \CIC1Cos/n11320 , \CIC1Cos/n6142 , 
         \CIC1Cos/n6141 , \CIC1Cos/d_d_tmp_50 , \CIC1Cos/d_tmp_50 , 
         \CIC1Cos/d_d_tmp_49 , \CIC1Cos/d_tmp_49 , \CIC1Cos/n11319 , 
         \CIC1Cos/n6144 , \CIC1Cos/n6143 , \CIC1Cos/d_d_tmp_48 , 
         \CIC1Cos/d_tmp_48 , \CIC1Cos/d_d_tmp_47 , \CIC1Cos/d_tmp_47 , 
         \CIC1Cos/n11318 , \CIC1Cos/n6146 , \CIC1Cos/n6145 , \CIC1Cos/n11659 , 
         \CIC1Cos/n5533 , \CIC1Cos/n5532 , \CIC1Cos/d4_51 , \CIC1Cos/d4_50 , 
         \CIC1Cos/n11658 , \CIC1Cos/n5535 , \CIC1Cos/n5534 , \CIC1Cos/n11693 , 
         \CIC1Cos/n5678 , \CIC1Cos/d5_59 , \CIC1Cos/n5679 , \CIC1Cos/d5_58 , 
         \CIC1Cos/d5_71_N_706_59 , \CIC1Cos/d5_71_N_706_58 , \CIC1Cos/n11657 , 
         \CIC1Cos/n5537 , \CIC1Cos/n5536 , \CIC1Cos/n11699 , \CIC1Cos/n11698 , 
         \CIC1Cos/n11703 , \CIC1Cos/n11697 , \CIC1Cos/n11696 , 
         \CIC1Cos/n11702 , \CIC1Cos/n11747 , \CIC1Cos/n11746 , 
         \CIC1Cos/d2_71_N_490_51 , \CIC1Cos/d2_71_N_490_50 , \CIC1Cos/n11721 , 
         \CIC1Cos/n11656 , \CIC1Cos/n5539 , \CIC1Cos/n5538 , 
         \CIC1Cos/d2_71_N_490_47 , \CIC1Cos/d2_71_N_490_46 , \CIC1Cos/n11719 , 
         \CIC1Cos/n11720 , \CIC1Cos/d2_71_N_490_45 , \CIC1Cos/d2_71_N_490_44 , 
         \CIC1Cos/d2_71_N_490_49 , \CIC1Cos/d2_71_N_490_48 , \CIC1Cos/n11745 , 
         \CIC1Cos/n11744 , \CIC1Cos/n11655 , \CIC1Cos/n5541 , \CIC1Cos/n5540 , 
         \CIC1Cos/n11654 , \CIC1Cos/n5543 , \CIC1Cos/n5542 , \CIC1Cos/n11653 , 
         \CIC1Cos/n5545 , \CIC1Cos/n5544 , \CIC1Cos/n11652 , \CIC1Cos/n5547 , 
         \CIC1Cos/n5546 , \CIC1Cos/n5548 , \CIC1Cos/n5512 , 
         \CIC1Cos/d4_71_N_634_71 , \CIC1Cos/d4_71_N_634_70 , \CIC1Cos/n11649 , 
         \CIC1Cos/d_d_tmp_46 , \CIC1Cos/d_tmp_46 , \CIC1Cos/d_d_tmp_45 , 
         \CIC1Cos/d_tmp_45 , \CIC1Cos/n11317 , \CIC1Cos/n6148 , 
         \CIC1Cos/n6147 , \CIC1Cos/d4_71_N_634_69 , \CIC1Cos/d4_71_N_634_68 , 
         \CIC1Cos/n11648 , \CIC1Cos/d4_71_N_634_67 , \CIC1Cos/d4_71_N_634_66 , 
         \CIC1Cos/n11647 , \CIC1Cos/d4_71_N_634_65 , \CIC1Cos/d4_71_N_634_64 , 
         \CIC1Cos/n11646 , \CIC1Cos/d4_71_N_634_63 , \CIC1Cos/d4_71_N_634_62 , 
         \CIC1Cos/n11645 , \CIC1Cos/d4_71_N_634_61 , \CIC1Cos/d4_71_N_634_60 , 
         \CIC1Cos/n11644 , \CIC1Cos/d4_71_N_634_59 , \CIC1Cos/d4_71_N_634_58 , 
         \CIC1Cos/n11643 , \CIC1Cos/d4_71_N_634_57 , \CIC1Cos/d4_71_N_634_56 , 
         \CIC1Cos/n11642 , \CIC1Cos/d4_71_N_634_55 , \CIC1Cos/d4_71_N_634_54 , 
         \CIC1Cos/n11641 , \CIC1Cos/d4_71_N_634_53 , \CIC1Cos/d4_71_N_634_52 , 
         \CIC1Cos/n11640 , \CIC1Cos/d4_71_N_634_51 , \CIC1Cos/d4_71_N_634_50 , 
         \CIC1Cos/n11639 , \CIC1Cos/d4_71_N_634_49 , \CIC1Cos/d4_71_N_634_48 , 
         \CIC1Cos/n11638 , \CIC1Cos/d4_71_N_634_47 , \CIC1Cos/d4_71_N_634_46 , 
         \CIC1Cos/n11637 , \CIC1Cos/d4_71_N_634_45 , \CIC1Cos/d4_71_N_634_44 , 
         \CIC1Cos/n11636 , \CIC1Cos/d4_71_N_634_43 , \CIC1Cos/d4_71_N_634_42 , 
         \CIC1Cos/n11635 , \CIC1Cos/d4_71_N_634_41 , \CIC1Cos/d4_71_N_634_40 , 
         \CIC1Cos/n11634 , \CIC1Cos/d4_71_N_634_39 , \CIC1Cos/d4_71_N_634_38 , 
         \CIC1Cos/n11633 , \CIC1Cos/n5549 , \CIC1Cos/d4_71_N_634_37 , 
         \CIC1Cos/d4_71_N_634_36 , \CIC1Cos/n11632 , \CIC1Cos/n11627 , 
         \CIC1Cos/n11626 , \CIC1Cos/n11625 , \CIC1Cos/n11624 , 
         \CIC1Cos/n11623 , \CIC1Cos/n11622 , \CIC1Cos/n11621 , 
         \CIC1Cos/n11620 , \CIC1Cos/n11619 , \CIC1Cos/n11618 , \CIC1Cos/d5_51 , 
         \CIC1Cos/d5_50 , \CIC1Cos/n11617 , \CIC1Cos/n5687 , \CIC1Cos/n5686 , 
         \CIC1Cos/n11616 , \CIC1Cos/n11615 , \CIC1Cos/n11614 , 
         \CIC1Cos/n11613 , \CIC1Cos/n11612 , \CIC1Cos/n11611 , 
         \CIC1Cos/d_d_tmp_44 , \CIC1Cos/d_tmp_44 , \CIC1Cos/d_d_tmp_43 , 
         \CIC1Cos/d_tmp_43 , \CIC1Cos/n11316 , \CIC1Cos/n6150 , 
         \CIC1Cos/n6149 , \CIC1Cos/d_d_tmp_42 , \CIC1Cos/d_tmp_42 , 
         \CIC1Cos/d_d_tmp_41 , \CIC1Cos/d_tmp_41 , \CIC1Cos/n11315 , 
         \CIC1Cos/n6152 , \CIC1Cos/n6151 , \CIC1Cos/d_d_tmp_40 , 
         \CIC1Cos/d_tmp_40 , \CIC1Cos/d_d_tmp_39 , \CIC1Cos/d_tmp_39 , 
         \CIC1Cos/n11314 , \CIC1Cos/n6154 , \CIC1Cos/n6153 , 
         \CIC1Cos/d_d_tmp_38 , \CIC1Cos/d_tmp_38 , \CIC1Cos/d_d_tmp_37 , 
         \CIC1Cos/d_tmp_37 , \CIC1Cos/n11313 , \CIC1Cos/n6156 , 
         \CIC1Cos/n6155 , \CIC1Cos/d_d_tmp_36 , \CIC1Cos/d_tmp_36 , 
         \CIC1Cos/n6157 , \CIC1Cos/n6120 , \CIC1Cos/d6_71_N_1459_71 , 
         \CIC1Cos/d6_71_N_1459_70 , \CIC1Cos/osc_clk_enable_947 , 
         \CIC1Cos/n11311 , \CIC1Cos/d6_70 , \CIC1Cos/d6_71 , 
         \CIC1Cos/d6_71_N_1459_69 , \CIC1Cos/d6_71_N_1459_68 , 
         \CIC1Cos/osc_clk_enable_897 , \CIC1Cos/n11310 , \CIC1Cos/d6_68 , 
         \CIC1Cos/d6_69 , \CIC1Cos/d6_71_N_1459_67 , \CIC1Cos/d6_71_N_1459_66 , 
         \CIC1Cos/n11309 , \CIC1Cos/d6_66 , \CIC1Cos/d6_67 , 
         \CIC1Cos/d6_71_N_1459_65 , \CIC1Cos/d6_71_N_1459_64 , 
         \CIC1Cos/n11308 , \CIC1Cos/d6_64 , \CIC1Cos/d6_65 , 
         \CIC1Cos/d6_71_N_1459_63 , \CIC1Cos/d6_71_N_1459_62 , 
         \CIC1Cos/n11307 , \CIC1Cos/d6_62 , \CIC1Cos/d6_63 , 
         \CIC1Cos/d6_71_N_1459_61 , \CIC1Cos/d6_71_N_1459_60 , 
         \CIC1Cos/n11306 , \CIC1Cos/d6_60 , \CIC1Cos/d6_61 , 
         \CIC1Cos/d6_71_N_1459_59 , \CIC1Cos/d6_71_N_1459_58 , 
         \CIC1Cos/n11305 , \CIC1Cos/d6_58 , \CIC1Cos/d6_59 , 
         \CIC1Cos/d6_71_N_1459_57 , \CIC1Cos/d6_71_N_1459_56 , 
         \CIC1Cos/n11304 , \CIC1Cos/d6_56 , \CIC1Cos/d6_57 , 
         \CIC1Cos/d6_71_N_1459_55 , \CIC1Cos/d6_71_N_1459_54 , 
         \CIC1Cos/n11303 , \CIC1Cos/d6_54 , \CIC1Cos/d6_55 , 
         \CIC1Cos/d6_71_N_1459_53 , \CIC1Cos/d6_71_N_1459_52 , 
         \CIC1Cos/n11302 , \CIC1Cos/d6_52 , \CIC1Cos/d6_53 , 
         \CIC1Cos/d6_71_N_1459_51 , \CIC1Cos/d6_71_N_1459_50 , 
         \CIC1Cos/n11301 , \CIC1Cos/d6_50 , \CIC1Cos/d6_51 , 
         \CIC1Cos/d6_71_N_1459_49 , \CIC1Cos/d6_71_N_1459_48 , 
         \CIC1Cos/n11300 , \CIC1Cos/d6_48 , \CIC1Cos/d6_49 , 
         \CIC1Cos/d6_71_N_1459_47 , \CIC1Cos/d6_71_N_1459_46 , 
         \CIC1Cos/n11299 , \CIC1Cos/d6_46 , \CIC1Cos/d6_47 , 
         \CIC1Cos/d6_71_N_1459_45 , \CIC1Cos/d6_71_N_1459_44 , 
         \CIC1Cos/n11298 , \CIC1Cos/d6_44 , \CIC1Cos/d6_45 , 
         \CIC1Cos/d6_71_N_1459_43 , \CIC1Cos/d6_71_N_1459_42 , 
         \CIC1Cos/n11297 , \CIC1Cos/d6_42 , \CIC1Cos/d6_43 , 
         \CIC1Cos/d6_71_N_1459_41 , \CIC1Cos/d6_71_N_1459_40 , 
         \CIC1Cos/n11296 , \CIC1Cos/d6_40 , \CIC1Cos/d6_41 , 
         \CIC1Cos/d6_71_N_1459_39 , \CIC1Cos/d6_71_N_1459_38 , 
         \CIC1Cos/n11295 , \CIC1Cos/d6_38 , \CIC1Cos/d6_39 , 
         \CIC1Cos/d6_71_N_1459_37 , \CIC1Cos/d6_71_N_1459_36 , 
         \CIC1Cos/n11294 , \CIC1Cos/d6_36 , \CIC1Cos/d6_37 , \CIC1Cos/d_d6_71 , 
         \CIC1Cos/n11290 , \CIC1Cos/n6274 , \CIC1Cos/d_d6_70 , 
         \CIC1Cos/d_d6_69 , \CIC1Cos/n11289 , \CIC1Cos/n6276 , \CIC1Cos/n6275 , 
         \CIC1Cos/d_d6_68 , \CIC1Cos/d_d6_67 , \CIC1Cos/n11288 , 
         \CIC1Cos/n6278 , \CIC1Cos/n6277 , \CIC1Cos/d_d6_66 , 
         \CIC1Cos/d_d6_65 , \CIC1Cos/n11287 , \CIC1Cos/n6280 , \CIC1Cos/n6279 , 
         \CIC1Cos/d_d6_64 , \CIC1Cos/d_d6_63 , \CIC1Cos/n11286 , 
         \CIC1Cos/n6282 , \CIC1Cos/n6281 , \CIC1Cos/d_d6_62 , 
         \CIC1Cos/d_d6_61 , \CIC1Cos/n11285 , \CIC1Cos/n6284 , \CIC1Cos/n6283 , 
         \CIC1Cos/d_d6_60 , \CIC1Cos/d_d6_59 , \CIC1Cos/n11284 , 
         \CIC1Cos/n6286 , \CIC1Cos/n6285 , \CIC1Cos/d_d6_58 , 
         \CIC1Cos/d_d6_57 , \CIC1Cos/n11283 , \CIC1Cos/n6288 , \CIC1Cos/n6287 , 
         \CIC1Cos/d_d6_56 , \CIC1Cos/d_d6_55 , \CIC1Cos/n11282 , 
         \CIC1Cos/n6290 , \CIC1Cos/n6289 , \CIC1Cos/d_d6_54 , 
         \CIC1Cos/d_d6_53 , \CIC1Cos/n11281 , \CIC1Cos/n6292 , \CIC1Cos/n6291 , 
         \CIC1Cos/d_d6_52 , \CIC1Cos/d_d6_51 , \CIC1Cos/n11280 , 
         \CIC1Cos/n6294 , \CIC1Cos/n6293 , \CIC1Cos/d_d6_50 , 
         \CIC1Cos/d_d6_49 , \CIC1Cos/n11279 , \CIC1Cos/n6296 , \CIC1Cos/n6295 , 
         \CIC1Cos/d_d6_48 , \CIC1Cos/d_d6_47 , \CIC1Cos/n11278 , 
         \CIC1Cos/n6298 , \CIC1Cos/n6297 , \CIC1Cos/d_d6_46 , 
         \CIC1Cos/d_d6_45 , \CIC1Cos/n11277 , \CIC1Cos/n6300 , \CIC1Cos/n6299 , 
         \CIC1Cos/d_d6_44 , \CIC1Cos/d_d6_43 , \CIC1Cos/n11276 , 
         \CIC1Cos/n6302 , \CIC1Cos/n6301 , \CIC1Cos/d_d6_42 , 
         \CIC1Cos/d_d6_41 , \CIC1Cos/n11275 , \CIC1Cos/n6304 , \CIC1Cos/n6303 , 
         \CIC1Cos/d_d6_40 , \CIC1Cos/d_d6_39 , \CIC1Cos/n11274 , 
         \CIC1Cos/n6306 , \CIC1Cos/n6305 , \CIC1Cos/d_d6_38 , 
         \CIC1Cos/d_d6_37 , \CIC1Cos/n11273 , \CIC1Cos/n6308 , \CIC1Cos/n6307 , 
         \CIC1Cos/d_d6_36 , \CIC1Cos/n6309 , \CIC1Cos/n6272 , 
         \CIC1Cos/d7_71_N_1531_71 , \CIC1Cos/d7_71_N_1531_70 , 
         \CIC1Cos/osc_clk_enable_1047 , \CIC1Cos/n11271 , \CIC1Cos/d7_70 , 
         \CIC1Cos/d7_71 , \CIC1Cos/d7_71_N_1531_69 , \CIC1Cos/d7_71_N_1531_68 , 
         \CIC1Cos/n11270 , \CIC1Cos/d7_68 , \CIC1Cos/d7_69 , 
         \CIC1Cos/d7_71_N_1531_67 , \CIC1Cos/d7_71_N_1531_66 , 
         \CIC1Cos/n11269 , \CIC1Cos/d7_66 , \CIC1Cos/d7_67 , 
         \CIC1Cos/d7_71_N_1531_65 , \CIC1Cos/d7_71_N_1531_64 , 
         \CIC1Cos/n11268 , \CIC1Cos/d7_64 , \CIC1Cos/d7_65 , 
         \CIC1Cos/d7_71_N_1531_63 , \CIC1Cos/d7_71_N_1531_62 , 
         \CIC1Cos/n11267 , \CIC1Cos/d7_62 , \CIC1Cos/d7_63 , 
         \CIC1Cos/d7_71_N_1531_61 , \CIC1Cos/d7_71_N_1531_60 , 
         \CIC1Cos/n11266 , \CIC1Cos/d7_60 , \CIC1Cos/d7_61 , 
         \CIC1Cos/d7_71_N_1531_59 , \CIC1Cos/d7_71_N_1531_58 , 
         \CIC1Cos/n11265 , \CIC1Cos/d7_58 , \CIC1Cos/d7_59 , 
         \CIC1Cos/d7_71_N_1531_57 , \CIC1Cos/d7_71_N_1531_56 , 
         \CIC1Cos/n11264 , \CIC1Cos/d7_56 , \CIC1Cos/d7_57 , 
         \CIC1Cos/d7_71_N_1531_55 , \CIC1Cos/d7_71_N_1531_54 , 
         \CIC1Cos/n11263 , \CIC1Cos/d7_54 , \CIC1Cos/d7_55 , 
         \CIC1Cos/d7_71_N_1531_53 , \CIC1Cos/d7_71_N_1531_52 , 
         \CIC1Cos/n11262 , \CIC1Cos/d7_52 , \CIC1Cos/d7_53 , 
         \CIC1Cos/d7_71_N_1531_51 , \CIC1Cos/d7_71_N_1531_50 , 
         \CIC1Cos/n11261 , \CIC1Cos/d7_50 , \CIC1Cos/d7_51 , 
         \CIC1Cos/d7_71_N_1531_49 , \CIC1Cos/d7_71_N_1531_48 , 
         \CIC1Cos/n11260 , \CIC1Cos/d7_48 , \CIC1Cos/d7_49 , 
         \CIC1Cos/d7_71_N_1531_47 , \CIC1Cos/d7_71_N_1531_46 , 
         \CIC1Cos/n11259 , \CIC1Cos/d7_46 , \CIC1Cos/d7_47 , 
         \CIC1Cos/d7_71_N_1531_45 , \CIC1Cos/d7_71_N_1531_44 , 
         \CIC1Cos/n11258 , \CIC1Cos/d7_44 , \CIC1Cos/d7_45 , 
         \CIC1Cos/d7_71_N_1531_43 , \CIC1Cos/d7_71_N_1531_42 , 
         \CIC1Cos/n11257 , \CIC1Cos/d7_42 , \CIC1Cos/d7_43 , 
         \CIC1Cos/d7_71_N_1531_41 , \CIC1Cos/d7_71_N_1531_40 , 
         \CIC1Cos/n11256 , \CIC1Cos/d7_40 , \CIC1Cos/d7_41 , 
         \CIC1Cos/d7_71_N_1531_39 , \CIC1Cos/d7_71_N_1531_38 , 
         \CIC1Cos/n11255 , \CIC1Cos/d7_38 , \CIC1Cos/d7_39 , 
         \CIC1Cos/d7_71_N_1531_37 , \CIC1Cos/d7_71_N_1531_36 , 
         \CIC1Cos/n11254 , \CIC1Cos/d7_36 , \CIC1Cos/d7_37 , \CIC1Cos/d_d7_71 , 
         \CIC1Cos/n11250 , \CIC1Cos/n6426 , \CIC1Cos/d_d7_70 , 
         \CIC1Cos/d_d7_69 , \CIC1Cos/n11249 , \CIC1Cos/n6428 , \CIC1Cos/n6427 , 
         \CIC1Cos/d_d7_68 , \CIC1Cos/d_d7_67 , \CIC1Cos/n11248 , 
         \CIC1Cos/n6430 , \CIC1Cos/n6429 , \CIC1Cos/d_d7_66 , 
         \CIC1Cos/d_d7_65 , \CIC1Cos/n11247 , \CIC1Cos/n6432 , \CIC1Cos/n6431 , 
         \CIC1Cos/d_d7_64 , \CIC1Cos/d_d7_63 , \CIC1Cos/n11246 , 
         \CIC1Cos/n6434 , \CIC1Cos/n6433 , \CIC1Cos/d_d7_62 , 
         \CIC1Cos/d_d7_61 , \CIC1Cos/n11245 , \CIC1Cos/n6436 , \CIC1Cos/n6435 , 
         \CIC1Cos/d_d7_60 , \CIC1Cos/d_d7_59 , \CIC1Cos/n11244 , 
         \CIC1Cos/n6438 , \CIC1Cos/n6437 , \CIC1Cos/d_d7_58 , 
         \CIC1Cos/d_d7_57 , \CIC1Cos/n11243 , \CIC1Cos/n6440 , \CIC1Cos/n6439 , 
         \CIC1Cos/d_d7_56 , \CIC1Cos/d_d7_55 , \CIC1Cos/n11242 , 
         \CIC1Cos/n6442 , \CIC1Cos/n6441 , \CIC1Cos/d_d7_54 , 
         \CIC1Cos/d_d7_53 , \CIC1Cos/n11241 , \CIC1Cos/n6444 , \CIC1Cos/n6443 , 
         \CIC1Cos/d_d7_52 , \CIC1Cos/d_d7_51 , \CIC1Cos/n11240 , 
         \CIC1Cos/n6446 , \CIC1Cos/n6445 , \CIC1Cos/d_d7_50 , 
         \CIC1Cos/d_d7_49 , \CIC1Cos/n11239 , \CIC1Cos/n6448 , \CIC1Cos/n6447 , 
         \CIC1Cos/d_d7_48 , \CIC1Cos/d_d7_47 , \CIC1Cos/n11238 , 
         \CIC1Cos/n6450 , \CIC1Cos/n6449 , \CIC1Cos/d_d7_46 , 
         \CIC1Cos/d_d7_45 , \CIC1Cos/n11237 , \CIC1Cos/n6452 , \CIC1Cos/n6451 , 
         \CIC1Cos/d_d7_44 , \CIC1Cos/d_d7_43 , \CIC1Cos/n11236 , 
         \CIC1Cos/n6454 , \CIC1Cos/n6453 , \CIC1Cos/d_d7_42 , 
         \CIC1Cos/d_d7_41 , \CIC1Cos/n11235 , \CIC1Cos/n6456 , \CIC1Cos/n6455 , 
         \CIC1Cos/d_d7_40 , \CIC1Cos/d_d7_39 , \CIC1Cos/n11234 , 
         \CIC1Cos/n6458 , \CIC1Cos/n6457 , \CIC1Cos/d_d7_38 , 
         \CIC1Cos/d_d7_37 , \CIC1Cos/n11233 , \CIC1Cos/n6460 , \CIC1Cos/n6459 , 
         \CIC1Cos/d_d7_36 , \CIC1Cos/n6461 , \CIC1Cos/n6424 , 
         \CIC1Cos/d8_71_N_1603_71 , \CIC1Cos/d8_71_N_1603_70 , 
         \CIC1Cos/osc_clk_enable_1197 , \CIC1Cos/n11231 , \CIC1Cos/d8_70 , 
         \CIC1Cos/d8_71 , \CIC1Cos/d8_71_N_1603_69 , \CIC1Cos/d8_71_N_1603_68 , 
         \CIC1Cos/n11230 , \CIC1Cos/d8_68 , \CIC1Cos/d8_69 , 
         \CIC1Cos/d8_71_N_1603_67 , \CIC1Cos/d8_71_N_1603_66 , 
         \CIC1Cos/n11229 , \CIC1Cos/d8_66 , \CIC1Cos/d8_67 , 
         \CIC1Cos/d8_71_N_1603_65 , \CIC1Cos/d8_71_N_1603_64 , 
         \CIC1Cos/n11228 , \CIC1Cos/d8_64 , \CIC1Cos/d8_65 , 
         \CIC1Cos/d8_71_N_1603_63 , \CIC1Cos/d8_71_N_1603_62 , 
         \CIC1Cos/n11227 , \CIC1Cos/d8_62 , \CIC1Cos/d8_63 , 
         \CIC1Cos/d8_71_N_1603_61 , \CIC1Cos/d8_71_N_1603_60 , 
         \CIC1Cos/n11226 , \CIC1Cos/d8_60 , \CIC1Cos/d8_61 , 
         \CIC1Cos/d8_71_N_1603_59 , \CIC1Cos/d8_71_N_1603_58 , 
         \CIC1Cos/n11225 , \CIC1Cos/d8_58 , \CIC1Cos/d8_59 , 
         \CIC1Cos/d8_71_N_1603_57 , \CIC1Cos/d8_71_N_1603_56 , 
         \CIC1Cos/n11224 , \CIC1Cos/d8_56 , \CIC1Cos/d8_57 , 
         \CIC1Cos/d8_71_N_1603_55 , \CIC1Cos/d8_71_N_1603_54 , 
         \CIC1Cos/n11223 , \CIC1Cos/d8_54 , \CIC1Cos/d8_55 , 
         \CIC1Cos/d8_71_N_1603_53 , \CIC1Cos/d8_71_N_1603_52 , 
         \CIC1Cos/n11222 , \CIC1Cos/d8_52 , \CIC1Cos/d8_53 , 
         \CIC1Cos/d8_71_N_1603_51 , \CIC1Cos/d8_71_N_1603_50 , 
         \CIC1Cos/n11221 , \CIC1Cos/d8_50 , \CIC1Cos/d8_51 , 
         \CIC1Cos/d8_71_N_1603_49 , \CIC1Cos/d8_71_N_1603_48 , 
         \CIC1Cos/n11220 , \CIC1Cos/d8_48 , \CIC1Cos/d8_49 , 
         \CIC1Cos/d8_71_N_1603_47 , \CIC1Cos/d8_71_N_1603_46 , 
         \CIC1Cos/n11219 , \CIC1Cos/d8_46 , \CIC1Cos/d8_47 , 
         \CIC1Cos/d8_71_N_1603_45 , \CIC1Cos/d8_71_N_1603_44 , 
         \CIC1Cos/n11218 , \CIC1Cos/d8_44 , \CIC1Cos/d8_45 , 
         \CIC1Cos/d8_71_N_1603_43 , \CIC1Cos/d8_71_N_1603_42 , 
         \CIC1Cos/n11217 , \CIC1Cos/d8_42 , \CIC1Cos/d8_43 , 
         \CIC1Cos/d8_71_N_1603_41 , \CIC1Cos/d8_71_N_1603_40 , 
         \CIC1Cos/n11216 , \CIC1Cos/d8_40 , \CIC1Cos/d8_41 , 
         \CIC1Cos/d8_71_N_1603_39 , \CIC1Cos/d8_71_N_1603_38 , 
         \CIC1Cos/n11215 , \CIC1Cos/d8_38 , \CIC1Cos/d8_39 , 
         \CIC1Cos/d8_71_N_1603_37 , \CIC1Cos/d8_71_N_1603_36 , 
         \CIC1Cos/n11214 , \CIC1Cos/d8_36 , \CIC1Cos/d8_37 , \CIC1Cos/d_d8_71 , 
         \CIC1Cos/n11210 , \CIC1Cos/n6578 , \CIC1Cos/d_d8_70 , 
         \CIC1Cos/d_d8_69 , \CIC1Cos/n11209 , \CIC1Cos/n6580 , \CIC1Cos/n6579 , 
         \CIC1Cos/d_d8_68 , \CIC1Cos/d_d8_67 , \CIC1Cos/n11208 , 
         \CIC1Cos/n6582 , \CIC1Cos/n6581 , \CIC1Cos/d_d8_66 , 
         \CIC1Cos/d_d8_65 , \CIC1Cos/n11207 , \CIC1Cos/n6584 , \CIC1Cos/n6583 , 
         \CIC1Cos/d_d8_64 , \CIC1Cos/d_d8_63 , \CIC1Cos/n11206 , 
         \CIC1Cos/n6586 , \CIC1Cos/n6585 , \CIC1Cos/d_d8_62 , 
         \CIC1Cos/d_d8_61 , \CIC1Cos/n11205 , \CIC1Cos/n6588 , \CIC1Cos/n6587 , 
         \CIC1Cos/d_d8_60 , \CIC1Cos/d_d8_59 , \CIC1Cos/n11204 , 
         \CIC1Cos/n6590 , \CIC1Cos/n6589 , \CIC1Cos/d_d8_58 , 
         \CIC1Cos/d_d8_57 , \CIC1Cos/n11203 , \CIC1Cos/n6592 , \CIC1Cos/n6591 , 
         \CIC1Cos/d_d8_56 , \CIC1Cos/d_d8_55 , \CIC1Cos/n11202 , 
         \CIC1Cos/n6594 , \CIC1Cos/n6593 , \CIC1Cos/d_d8_54 , 
         \CIC1Cos/d_d8_53 , \CIC1Cos/n11201 , \CIC1Cos/n6596 , \CIC1Cos/n6595 , 
         \CIC1Cos/d_d8_52 , \CIC1Cos/d_d8_51 , \CIC1Cos/n11200 , 
         \CIC1Cos/n6598 , \CIC1Cos/n6597 , \CIC1Cos/d_d8_50 , 
         \CIC1Cos/d_d8_49 , \CIC1Cos/n11199 , \CIC1Cos/n6600 , \CIC1Cos/n6599 , 
         \CIC1Cos/d_d8_48 , \CIC1Cos/d_d8_47 , \CIC1Cos/n11198 , 
         \CIC1Cos/n6602 , \CIC1Cos/n6601 , \CIC1Cos/d_d8_46 , 
         \CIC1Cos/d_d8_45 , \CIC1Cos/n11197 , \CIC1Cos/n6604 , \CIC1Cos/n6603 , 
         \CIC1Cos/d_d8_44 , \CIC1Cos/d_d8_43 , \CIC1Cos/n11196 , 
         \CIC1Cos/n6606 , \CIC1Cos/n6605 , \CIC1Cos/d_d8_42 , 
         \CIC1Cos/d_d8_41 , \CIC1Cos/n11195 , \CIC1Cos/n6608 , \CIC1Cos/n6607 , 
         \CIC1Cos/d_d8_40 , \CIC1Cos/d_d8_39 , \CIC1Cos/n11194 , 
         \CIC1Cos/n6610 , \CIC1Cos/n6609 , \CIC1Cos/d_d8_38 , 
         \CIC1Cos/d_d8_37 , \CIC1Cos/n11193 , \CIC1Cos/n6612 , \CIC1Cos/n6611 , 
         \CIC1Cos/d_d8_36 , \CIC1Cos/n6613 , \CIC1Cos/n6576 , 
         \CIC1Cos/d9_71_N_1675_71 , \CIC1Cos/d9_71_N_1675_70 , 
         \CIC1Cos/osc_clk_enable_1347 , \CIC1Cos/n11191 , \CIC1Cos/d9_70 , 
         \CIC1Cos/d9_71 , \CIC1Cos/d9_71_N_1675_69 , \CIC1Cos/d9_71_N_1675_68 , 
         \CIC1Cos/n11190 , \CIC1Cos/d9_68 , \CIC1Cos/d9_69 , 
         \CIC1Cos/d9_71_N_1675_67 , \CIC1Cos/d9_71_N_1675_66 , 
         \CIC1Cos/n11189 , \CIC1Cos/d9_66 , \CIC1Cos/d9_67 , 
         \CIC1Cos/d9_71_N_1675_65 , \CIC1Cos/d9_71_N_1675_64 , 
         \CIC1Cos/n11188 , \CIC1Cos/d9_64 , \CIC1Cos/d9_65 , 
         \CIC1Cos/d9_71_N_1675_63 , \CIC1Cos/d9_71_N_1675_62 , 
         \CIC1Cos/n11187 , \CIC1Cos/d9_62 , \CIC1Cos/d9_63 , 
         \CIC1Cos/d9_71_N_1675_61 , \CIC1Cos/d9_71_N_1675_60 , 
         \CIC1Cos/n11186 , \CIC1Cos/d9_60 , \CIC1Cos/d9_61 , 
         \CIC1Cos/d9_71_N_1675_59 , \CIC1Cos/d9_71_N_1675_58 , 
         \CIC1Cos/n11185 , \CIC1Cos/d9_58 , \CIC1Cos/d9_59 , 
         \CIC1Cos/d9_71_N_1675_57 , \CIC1Cos/d9_71_N_1675_56 , 
         \CIC1Cos/n11184 , \CIC1Cos/d9_56 , \CIC1Cos/d9_57 , 
         \CIC1Cos/d9_71_N_1675_55 , \CIC1Cos/d9_71_N_1675_54 , 
         \CIC1Cos/n11183 , \CIC1Cos/d9_54 , \CIC1Cos/d9_55 , 
         \CIC1Cos/d9_71_N_1675_53 , \CIC1Cos/d9_71_N_1675_52 , 
         \CIC1Cos/n11182 , \CIC1Cos/d9_52 , \CIC1Cos/d9_53 , 
         \CIC1Cos/d9_71_N_1675_51 , \CIC1Cos/d9_71_N_1675_50 , 
         \CIC1Cos/n11181 , \CIC1Cos/d9_50 , \CIC1Cos/d9_51 , 
         \CIC1Cos/d9_71_N_1675_49 , \CIC1Cos/d9_71_N_1675_48 , 
         \CIC1Cos/n11180 , \CIC1Cos/d9_48 , \CIC1Cos/d9_49 , 
         \CIC1Cos/d9_71_N_1675_47 , \CIC1Cos/d9_71_N_1675_46 , 
         \CIC1Cos/n11179 , \CIC1Cos/d9_46 , \CIC1Cos/d9_47 , 
         \CIC1Cos/d9_71_N_1675_45 , \CIC1Cos/d9_71_N_1675_44 , 
         \CIC1Cos/n11178 , \CIC1Cos/d9_44 , \CIC1Cos/d9_45 , 
         \CIC1Cos/d9_71_N_1675_43 , \CIC1Cos/d9_71_N_1675_42 , 
         \CIC1Cos/osc_clk_enable_1297 , \CIC1Cos/n11177 , \CIC1Cos/d9_42 , 
         \CIC1Cos/d9_43 , \CIC1Cos/d9_71_N_1675_41 , \CIC1Cos/d9_71_N_1675_40 , 
         \CIC1Cos/n11176 , \CIC1Cos/d9_40 , \CIC1Cos/d9_41 , 
         \CIC1Cos/d9_71_N_1675_39 , \CIC1Cos/d9_71_N_1675_38 , 
         \CIC1Cos/n11175 , \CIC1Cos/d9_38 , \CIC1Cos/d9_39 , 
         \CIC1Cos/d9_71_N_1675_37 , \CIC1Cos/d9_71_N_1675_36 , 
         \CIC1Cos/n11174 , \CIC1Cos/d9_36 , \CIC1Cos/d9_37 , \CIC1Cos/d_d9_71 , 
         \CIC1Cos/n11170 , \CIC1Cos/n6730 , \CIC1Cos/d_d9_70 , 
         \CIC1Cos/d_d9_69 , \CIC1Cos/n11169 , \CIC1Cos/n6732 , \CIC1Cos/n6731 , 
         \CIC1Cos/d_d9_68 , \CIC1Cos/d_d9_67 , \CIC1Cos/n11168 , 
         \CIC1Cos/n6734 , \CIC1Cos/n6733 , \CIC1Cos/d_d9_66 , 
         \CIC1Cos/d_d9_65 , \CIC1Cos/n11167 , \CIC1Cos/n6736 , \CIC1Cos/n6735 , 
         \CIC1Cos/d_d9_64 , \CIC1Cos/d_d9_63 , \CIC1Cos/n11166 , 
         \CIC1Cos/n6738 , \CIC1Cos/n6737 , \CIC1Cos/d_d9_62 , 
         \CIC1Cos/d_d9_61 , \CIC1Cos/n11165 , \CIC1Cos/n6740 , \CIC1Cos/n6739 , 
         \CIC1Cos/d_d9_60 , \CIC1Cos/d_d9_59 , \CIC1Cos/n11164 , 
         \CIC1Cos/n6742 , \CIC1Cos/n6741 , \CIC1Cos/d_d9_58 , 
         \CIC1Cos/d_d9_57 , \CIC1Cos/n11163 , \CIC1Cos/n6744 , \CIC1Cos/n6743 , 
         \CIC1Cos/d_d9_56 , \CIC1Cos/d_d9_55 , \CIC1Cos/n11162 , 
         \CIC1Cos/d_d9_54 , \CIC1Cos/d_d9_53 , \CIC1Cos/n11161 , 
         \CIC1Cos/d_d9_52 , \CIC1Cos/d_d9_51 , \CIC1Cos/n11160 , 
         \CIC1Cos/d_d9_50 , \CIC1Cos/d_d9_49 , \CIC1Cos/n11159 , 
         \CIC1Cos/d_d9_48 , \CIC1Cos/d_d9_47 , \CIC1Cos/n11158 , 
         \CIC1Cos/d_d9_46 , \CIC1Cos/d_d9_45 , \CIC1Cos/n11157 , 
         \CIC1Cos/d_d9_44 , \CIC1Cos/d_d9_43 , \CIC1Cos/n11156 , 
         \CIC1Cos/d_d9_42 , \CIC1Cos/d_d9_41 , \CIC1Cos/n11155 , 
         \CIC1Cos/d_d9_40 , \CIC1Cos/d_d9_39 , \CIC1Cos/n11154 , 
         \CIC1Cos/d_d9_38 , \CIC1Cos/d_d9_37 , \CIC1Cos/n11153 , 
         \CIC1Cos/d_d9_36 , \CIC1Cos/n11152 , \CIC1Cos/n6768 , 
         \CIC1Cos/n11151 , \CIC1Cos/n6770 , \CIC1Cos/n6769 , \CIC1Cos/n11150 , 
         \CIC1Cos/n6772 , \CIC1Cos/n6771 , \CIC1Cos/n11149 , \CIC1Cos/n6774 , 
         \CIC1Cos/n6773 , \CIC1Cos/n11148 , \CIC1Cos/n6776 , \CIC1Cos/n6775 , 
         \CIC1Cos/n11147 , \CIC1Cos/n6778 , \CIC1Cos/n6777 , \CIC1Cos/n11146 , 
         \CIC1Cos/n6780 , \CIC1Cos/n6779 , \CIC1Cos/n11145 , \CIC1Cos/n6782 , 
         \CIC1Cos/n6781 , \CIC1Cos/n11144 , \CIC1Cos/n11143 , \CIC1Cos/n11142 , 
         \CIC1Cos/n11141 , \CIC1Cos/n11140 , \CIC1Cos/n11139 , 
         \CIC1Cos/n11138 , \CIC1Cos/n11137 , \CIC1Cos/n11136 , 
         \CIC1Cos/n11135 , \CIC1Cos/count_15 , \CIC1Cos/n376 , \CIC1Cos/n8429 , 
         \CIC1Cos/n10938 , \CIC1Cos/count_14 , \CIC1Cos/count_13 , 
         \CIC1Cos/n377 , \CIC1Cos/n378 , \CIC1Cos/n10937 , \CIC1Cos/count_12 , 
         \CIC1Cos/count_11 , \CIC1Cos/n379 , \CIC1Cos/n10936 , \CIC1Cos/n380 , 
         \CIC1Cos/count_10 , \CIC1Cos/count_9 , \CIC1Cos/n381 , \CIC1Cos/n382 , 
         \CIC1Cos/n10935 , \CIC1Cos/count_8 , \CIC1Cos/count_7 , 
         \CIC1Cos/n383 , \CIC1Cos/n384 , \CIC1Cos/n10934 , \CIC1Cos/count_6 , 
         \CIC1Cos/count_5 , \CIC1Cos/n385 , \CIC1Cos/n386 , \CIC1Cos/n10933 , 
         \CIC1Cos/count_4 , \CIC1Cos/count_3 , \CIC1Cos/n387 , \CIC1Cos/n388 , 
         \CIC1Cos/n10932 , \CIC1Cos/count_2 , \CIC1Cos/count_1 , 
         \CIC1Cos/n389 , \CIC1Cos/n390 , \CIC1Cos/n10931 , \CIC1Cos/count_0 , 
         \CIC1Cos/n391 , \CIC1Cos/n10912 , \CIC1Cos/d5_35 , \CIC1Cos/d4_35 , 
         \CIC1Cos/d5_34 , \CIC1Cos/d4_34 , \CIC1Cos/d5_71_N_706_35 , 
         \CIC1Cos/d5_71_N_706_34 , \CIC1Cos/n10911 , \CIC1Cos/d5_33 , 
         \CIC1Cos/d4_33 , \CIC1Cos/d5_32 , \CIC1Cos/d4_32 , 
         \CIC1Cos/d5_71_N_706_33 , \CIC1Cos/d5_71_N_706_32 , \CIC1Cos/n10910 , 
         \CIC1Cos/d5_31 , \CIC1Cos/d4_31 , \CIC1Cos/d5_30 , \CIC1Cos/d4_30 , 
         \CIC1Cos/d5_71_N_706_31 , \CIC1Cos/d5_71_N_706_30 , \CIC1Cos/n10909 , 
         \CIC1Cos/d5_29 , \CIC1Cos/d4_29 , \CIC1Cos/d5_28 , \CIC1Cos/d4_28 , 
         \CIC1Cos/d5_71_N_706_29 , \CIC1Cos/d5_71_N_706_28 , \CIC1Cos/n10908 , 
         \CIC1Cos/d5_27 , \CIC1Cos/d4_27 , \CIC1Cos/d5_26 , \CIC1Cos/d4_26 , 
         \CIC1Cos/d5_71_N_706_27 , \CIC1Cos/d5_71_N_706_26 , \CIC1Cos/n10907 , 
         \CIC1Cos/d5_25 , \CIC1Cos/d4_25 , \CIC1Cos/d5_24 , \CIC1Cos/d4_24 , 
         \CIC1Cos/d5_71_N_706_25 , \CIC1Cos/d5_71_N_706_24 , \CIC1Cos/n10906 , 
         \CIC1Cos/d5_23 , \CIC1Cos/d4_23 , \CIC1Cos/d5_22 , \CIC1Cos/d4_22 , 
         \CIC1Cos/d5_71_N_706_23 , \CIC1Cos/d5_71_N_706_22 , \CIC1Cos/n10905 , 
         \CIC1Cos/d5_21 , \CIC1Cos/d4_21 , \CIC1Cos/d5_20 , \CIC1Cos/d4_20 , 
         \CIC1Cos/d5_71_N_706_21 , \CIC1Cos/d5_71_N_706_20 , \CIC1Cos/n10904 , 
         \CIC1Cos/d5_19 , \CIC1Cos/d4_19 , \CIC1Cos/d5_18 , \CIC1Cos/d4_18 , 
         \CIC1Cos/d5_71_N_706_19 , \CIC1Cos/d5_71_N_706_18 , \CIC1Cos/n10903 , 
         \CIC1Cos/d5_17 , \CIC1Cos/d4_17 , \CIC1Cos/d5_16 , \CIC1Cos/d4_16 , 
         \CIC1Cos/d5_71_N_706_17 , \CIC1Cos/d5_71_N_706_16 , \CIC1Cos/n10902 , 
         \CIC1Cos/d5_15 , \CIC1Cos/d4_15 , \CIC1Cos/d5_14 , \CIC1Cos/d4_14 , 
         \CIC1Cos/d5_71_N_706_15 , \CIC1Cos/d5_71_N_706_14 , \CIC1Cos/n10901 , 
         \CIC1Cos/d5_13 , \CIC1Cos/d4_13 , \CIC1Cos/d5_12 , \CIC1Cos/d4_12 , 
         \CIC1Cos/d5_71_N_706_13 , \CIC1Cos/d5_71_N_706_12 , \CIC1Cos/n10900 , 
         \CIC1Cos/d5_11 , \CIC1Cos/d4_11 , \CIC1Cos/d5_10 , \CIC1Cos/d4_10 , 
         \CIC1Cos/d5_71_N_706_11 , \CIC1Cos/d5_71_N_706_10 , \CIC1Cos/n10899 , 
         \CIC1Cos/d5_9 , \CIC1Cos/d4_9 , \CIC1Cos/d5_8 , \CIC1Cos/d4_8 , 
         \CIC1Cos/d5_71_N_706_9 , \CIC1Cos/d5_71_N_706_8 , \CIC1Cos/n10898 , 
         \CIC1Cos/d5_7 , \CIC1Cos/d4_7 , \CIC1Cos/d5_6 , \CIC1Cos/d4_6 , 
         \CIC1Cos/d5_71_N_706_7 , \CIC1Cos/d5_71_N_706_6 , \CIC1Cos/n10897 , 
         \CIC1Cos/d5_5 , \CIC1Cos/d4_5 , \CIC1Cos/d5_4 , \CIC1Cos/d4_4 , 
         \CIC1Cos/d5_71_N_706_5 , \CIC1Cos/d5_71_N_706_4 , \CIC1Cos/n10896 , 
         \CIC1Cos/d5_3 , \CIC1Cos/d4_3 , \CIC1Cos/d5_2 , \CIC1Cos/d4_2 , 
         \CIC1Cos/d5_71_N_706_3 , \CIC1Cos/d5_71_N_706_2 , \CIC1Cos/n10895 , 
         \CIC1Cos/d5_1 , \CIC1Cos/d4_1 , \CIC1Cos/d5_0 , \CIC1Cos/d4_0 , 
         \CIC1Cos/d5_71_N_706_1 , \CIC1Cos/n10893 , \CIC1Cos/d3_35 , 
         \CIC1Cos/d3_34 , \CIC1Cos/d4_71_N_634_35 , \CIC1Cos/d4_71_N_634_34 , 
         \CIC1Cos/n10892 , \CIC1Cos/d3_33 , \CIC1Cos/d3_32 , 
         \CIC1Cos/d4_71_N_634_33 , \CIC1Cos/d4_71_N_634_32 , \CIC1Cos/n10891 , 
         \CIC1Cos/d3_31 , \CIC1Cos/d3_30 , \CIC1Cos/d4_71_N_634_31 , 
         \CIC1Cos/d4_71_N_634_30 , \CIC1Cos/n10890 , \CIC1Cos/d3_29 , 
         \CIC1Cos/d3_28 , \CIC1Cos/d4_71_N_634_29 , \CIC1Cos/d4_71_N_634_28 , 
         \CIC1Cos/n10889 , \CIC1Cos/d3_27 , \CIC1Cos/d3_26 , 
         \CIC1Cos/d4_71_N_634_27 , \CIC1Cos/d4_71_N_634_26 , \CIC1Cos/n10888 , 
         \CIC1Cos/d3_25 , \CIC1Cos/d3_24 , \CIC1Cos/d4_71_N_634_25 , 
         \CIC1Cos/d4_71_N_634_24 , \CIC1Cos/n10887 , \CIC1Cos/d3_23 , 
         \CIC1Cos/d3_22 , \CIC1Cos/d4_71_N_634_23 , \CIC1Cos/d4_71_N_634_22 , 
         \CIC1Cos/n10886 , \CIC1Cos/d3_21 , \CIC1Cos/d3_20 , 
         \CIC1Cos/d4_71_N_634_21 , \CIC1Cos/d4_71_N_634_20 , \CIC1Cos/n10885 , 
         \CIC1Cos/d3_19 , \CIC1Cos/d3_18 , \CIC1Cos/d4_71_N_634_19 , 
         \CIC1Cos/d4_71_N_634_18 , \CIC1Cos/n10884 , \CIC1Cos/d3_17 , 
         \CIC1Cos/d3_16 , \CIC1Cos/d4_71_N_634_17 , \CIC1Cos/d4_71_N_634_16 , 
         \CIC1Cos/n10883 , \CIC1Cos/d3_15 , \CIC1Cos/d3_14 , 
         \CIC1Cos/d4_71_N_634_15 , \CIC1Cos/d4_71_N_634_14 , \CIC1Cos/n10882 , 
         \CIC1Cos/d3_13 , \CIC1Cos/d3_12 , \CIC1Cos/d4_71_N_634_13 , 
         \CIC1Cos/d4_71_N_634_12 , \CIC1Cos/n10881 , \CIC1Cos/d3_11 , 
         \CIC1Cos/d3_10 , \CIC1Cos/d4_71_N_634_11 , \CIC1Cos/d4_71_N_634_10 , 
         \CIC1Cos/n10880 , \CIC1Cos/d3_9 , \CIC1Cos/d3_8 , 
         \CIC1Cos/d4_71_N_634_9 , \CIC1Cos/d4_71_N_634_8 , \CIC1Cos/n10879 , 
         \CIC1Cos/d3_7 , \CIC1Cos/d3_6 , \CIC1Cos/d4_71_N_634_7 , 
         \CIC1Cos/d4_71_N_634_6 , \CIC1Cos/n10878 , \CIC1Cos/d3_5 , 
         \CIC1Cos/d3_4 , \CIC1Cos/d4_71_N_634_5 , \CIC1Cos/d4_71_N_634_4 , 
         \CIC1Cos/n10877 , \CIC1Cos/d3_3 , \CIC1Cos/d3_2 , 
         \CIC1Cos/d4_71_N_634_3 , \CIC1Cos/d4_71_N_634_2 , \CIC1Cos/n10876 , 
         \CIC1Cos/d3_1 , \CIC1Cos/d3_0 , \CIC1Cos/d4_71_N_634_1 , 
         \CIC1Cos/n10874 , \CIC1Cos/d2_35 , \CIC1Cos/d2_34 , 
         \CIC1Cos/d3_71_N_562_35 , \CIC1Cos/d3_71_N_562_34 , \CIC1Cos/n10873 , 
         \CIC1Cos/d2_33 , \CIC1Cos/d2_32 , \CIC1Cos/d3_71_N_562_33 , 
         \CIC1Cos/d3_71_N_562_32 , \CIC1Cos/n10872 , \CIC1Cos/d2_31 , 
         \CIC1Cos/d2_30 , \CIC1Cos/d3_71_N_562_31 , \CIC1Cos/d3_71_N_562_30 , 
         \CIC1Cos/n10871 , \CIC1Cos/d2_29 , \CIC1Cos/d2_28 , 
         \CIC1Cos/d3_71_N_562_29 , \CIC1Cos/d3_71_N_562_28 , \CIC1Cos/n10870 , 
         \CIC1Cos/d2_27 , \CIC1Cos/d2_26 , \CIC1Cos/d3_71_N_562_27 , 
         \CIC1Cos/d3_71_N_562_26 , \CIC1Cos/n10869 , \CIC1Cos/d2_25 , 
         \CIC1Cos/d2_24 , \CIC1Cos/d3_71_N_562_25 , \CIC1Cos/d3_71_N_562_24 , 
         \CIC1Cos/n10868 , \CIC1Cos/d2_23 , \CIC1Cos/d2_22 , 
         \CIC1Cos/d3_71_N_562_23 , \CIC1Cos/d3_71_N_562_22 , \CIC1Cos/n10867 , 
         \CIC1Cos/d2_21 , \CIC1Cos/d2_20 , \CIC1Cos/d3_71_N_562_21 , 
         \CIC1Cos/d3_71_N_562_20 , \CIC1Cos/n10866 , \CIC1Cos/d2_19 , 
         \CIC1Cos/d2_18 , \CIC1Cos/d3_71_N_562_19 , \CIC1Cos/d3_71_N_562_18 , 
         \CIC1Cos/n10865 , \CIC1Cos/d2_17 , \CIC1Cos/d2_16 , 
         \CIC1Cos/d3_71_N_562_17 , \CIC1Cos/d3_71_N_562_16 , \CIC1Cos/n10864 , 
         \CIC1Cos/d2_15 , \CIC1Cos/d2_14 , \CIC1Cos/d3_71_N_562_15 , 
         \CIC1Cos/d3_71_N_562_14 , \CIC1Cos/n10863 , \CIC1Cos/d2_13 , 
         \CIC1Cos/d2_12 , \CIC1Cos/d3_71_N_562_13 , \CIC1Cos/d3_71_N_562_12 , 
         \CIC1Cos/n10862 , \CIC1Cos/d2_11 , \CIC1Cos/d2_10 , 
         \CIC1Cos/d3_71_N_562_11 , \CIC1Cos/d3_71_N_562_10 , \CIC1Cos/n10861 , 
         \CIC1Cos/d2_9 , \CIC1Cos/d2_8 , \CIC1Cos/d3_71_N_562_9 , 
         \CIC1Cos/d3_71_N_562_8 , \CIC1Cos/n10860 , \CIC1Cos/d2_7 , 
         \CIC1Cos/d2_6 , \CIC1Cos/d3_71_N_562_7 , \CIC1Cos/d3_71_N_562_6 , 
         \CIC1Cos/n10859 , \CIC1Cos/d2_5 , \CIC1Cos/d2_4 , 
         \CIC1Cos/d3_71_N_562_5 , \CIC1Cos/d3_71_N_562_4 , \CIC1Cos/n10858 , 
         \CIC1Cos/d2_3 , \CIC1Cos/d2_2 , \CIC1Cos/d3_71_N_562_3 , 
         \CIC1Cos/d3_71_N_562_2 , \CIC1Cos/n10857 , \CIC1Cos/d2_1 , 
         \CIC1Cos/d2_0 , \CIC1Cos/d3_71_N_562_1 , \CIC1Cos/n10855 , 
         \CIC1Cos/d1_35 , \CIC1Cos/d1_34 , \CIC1Cos/d2_71_N_490_35 , 
         \CIC1Cos/d2_71_N_490_34 , \CIC1Cos/n10854 , \CIC1Cos/d1_33 , 
         \CIC1Cos/d1_32 , \CIC1Cos/d2_71_N_490_33 , \CIC1Cos/d2_71_N_490_32 , 
         \CIC1Cos/n10853 , \CIC1Cos/d1_31 , \CIC1Cos/d1_30 , 
         \CIC1Cos/d2_71_N_490_31 , \CIC1Cos/d2_71_N_490_30 , \CIC1Cos/n10852 , 
         \CIC1Cos/d1_29 , \CIC1Cos/d1_28 , \CIC1Cos/d2_71_N_490_29 , 
         \CIC1Cos/d2_71_N_490_28 , \CIC1Cos/n10851 , \CIC1Cos/d1_27 , 
         \CIC1Cos/d1_26 , \CIC1Cos/d2_71_N_490_27 , \CIC1Cos/d2_71_N_490_26 , 
         \CIC1Cos/n10850 , \CIC1Cos/d1_25 , \CIC1Cos/d1_24 , 
         \CIC1Cos/d2_71_N_490_25 , \CIC1Cos/d2_71_N_490_24 , \CIC1Cos/n10849 , 
         \CIC1Cos/d1_23 , \CIC1Cos/d1_22 , \CIC1Cos/d2_71_N_490_23 , 
         \CIC1Cos/d2_71_N_490_22 , \CIC1Cos/n10848 , \CIC1Cos/d1_21 , 
         \CIC1Cos/d1_20 , \CIC1Cos/d2_71_N_490_21 , \CIC1Cos/d2_71_N_490_20 , 
         \CIC1Cos/n10847 , \CIC1Cos/d1_19 , \CIC1Cos/d1_18 , 
         \CIC1Cos/d2_71_N_490_19 , \CIC1Cos/d2_71_N_490_18 , \CIC1Cos/n10846 , 
         \CIC1Cos/d1_17 , \CIC1Cos/d1_16 , \CIC1Cos/d2_71_N_490_17 , 
         \CIC1Cos/d2_71_N_490_16 , \CIC1Cos/n10845 , \CIC1Cos/d1_15 , 
         \CIC1Cos/d1_14 , \CIC1Cos/d2_71_N_490_15 , \CIC1Cos/d2_71_N_490_14 , 
         \CIC1Cos/n10844 , \CIC1Cos/d1_13 , \CIC1Cos/d1_12 , 
         \CIC1Cos/d2_71_N_490_13 , \CIC1Cos/d2_71_N_490_12 , \CIC1Cos/n10843 , 
         \CIC1Cos/d1_11 , \CIC1Cos/d1_10 , \CIC1Cos/d2_71_N_490_11 , 
         \CIC1Cos/d2_71_N_490_10 , \CIC1Cos/n10842 , \CIC1Cos/d1_9 , 
         \CIC1Cos/d1_8 , \CIC1Cos/d2_71_N_490_9 , \CIC1Cos/d2_71_N_490_8 , 
         \CIC1Cos/n10841 , \CIC1Cos/d1_7 , \CIC1Cos/d1_6 , 
         \CIC1Cos/d2_71_N_490_7 , \CIC1Cos/d2_71_N_490_6 , \CIC1Cos/n10840 , 
         \CIC1Cos/d1_5 , \CIC1Cos/d1_4 , \CIC1Cos/d2_71_N_490_5 , 
         \CIC1Cos/d2_71_N_490_4 , \CIC1Cos/n10839 , \CIC1Cos/d1_3 , 
         \CIC1Cos/d1_2 , \CIC1Cos/d2_71_N_490_3 , \CIC1Cos/d2_71_N_490_2 , 
         \CIC1Cos/n10838 , \CIC1Cos/d1_1 , \CIC1Cos/d1_0 , 
         \CIC1Cos/d2_71_N_490_1 , \CIC1Cos/n10798 , MixerOutCos_11, 
         \CIC1Cos/d1_71_N_418_35 , \CIC1Cos/d1_71_N_418_34 , \CIC1Cos/n10797 , 
         \CIC1Cos/d1_71_N_418_33 , \CIC1Cos/d1_71_N_418_32 , \CIC1Cos/n10796 , 
         \CIC1Cos/d1_71_N_418_31 , \CIC1Cos/d1_71_N_418_30 , \CIC1Cos/n10795 , 
         \CIC1Cos/d1_71_N_418_29 , \CIC1Cos/d1_71_N_418_28 , \CIC1Cos/n10794 , 
         \CIC1Cos/d1_71_N_418_27 , \CIC1Cos/d1_71_N_418_26 , \CIC1Cos/n10793 , 
         \CIC1Cos/d1_71_N_418_25 , \CIC1Cos/d1_71_N_418_24 , \CIC1Cos/n10792 , 
         \CIC1Cos/d1_71_N_418_23 , \CIC1Cos/d1_71_N_418_22 , \CIC1Cos/n10791 , 
         \CIC1Cos/d1_71_N_418_21 , \CIC1Cos/d1_71_N_418_20 , \CIC1Cos/n10790 , 
         \CIC1Cos/d1_71_N_418_19 , \CIC1Cos/d1_71_N_418_18 , \CIC1Cos/n10789 , 
         \CIC1Cos/d1_71_N_418_17 , \CIC1Cos/d1_71_N_418_16 , \CIC1Cos/n10788 , 
         \CIC1Cos/d1_71_N_418_15 , \CIC1Cos/d1_71_N_418_14 , \CIC1Cos/n10787 , 
         \CIC1Cos/d1_71_N_418_13 , \CIC1Cos/d1_71_N_418_12 , \CIC1Cos/n10786 , 
         MixerOutCos_10, \CIC1Cos/d1_71_N_418_11 , \CIC1Cos/d1_71_N_418_10 , 
         \CIC1Cos/n10785 , MixerOutCos_9, MixerOutCos_8, 
         \CIC1Cos/d1_71_N_418_9 , \CIC1Cos/d1_71_N_418_8 , \CIC1Cos/n10784 , 
         MixerOutCos_7, MixerOutCos_6, \CIC1Cos/d1_71_N_418_7 , 
         \CIC1Cos/d1_71_N_418_6 , \CIC1Cos/n10783 , MixerOutCos_5, 
         MixerOutCos_4, \CIC1Cos/d1_71_N_418_5 , \CIC1Cos/d1_71_N_418_4 , 
         \CIC1Cos/n10782 , MixerOutCos_3, MixerOutCos_2, 
         \CIC1Cos/d1_71_N_418_3 , \CIC1Cos/d1_71_N_418_2 , \CIC1Cos/n10781 , 
         MixerOutCos_1, MixerOutCos_0, \CIC1Cos/d1_71_N_418_1 , 
         \CIC1Cos/d_d9_35 , \CIC1Cos/d9_35 , \CIC1Cos/n11452 , \CIC1Cos/n6728 , 
         \CIC1Cos/d_d9_34 , \CIC1Cos/d9_34 , \CIC1Cos/d_d9_33 , 
         \CIC1Cos/d9_33 , \CIC1Cos/n11451 , \CIC1Cos/d_d9_32 , \CIC1Cos/d9_32 , 
         \CIC1Cos/d_d9_31 , \CIC1Cos/d9_31 , \CIC1Cos/n11450 , 
         \CIC1Cos/d_d9_30 , \CIC1Cos/d9_30 , \CIC1Cos/d_d9_29 , 
         \CIC1Cos/d9_29 , \CIC1Cos/n11449 , \CIC1Cos/d_d9_28 , \CIC1Cos/d9_28 , 
         \CIC1Cos/d_d9_27 , \CIC1Cos/d9_27 , \CIC1Cos/n11448 , 
         \CIC1Cos/d_d9_26 , \CIC1Cos/d9_26 , \CIC1Cos/d_d9_25 , 
         \CIC1Cos/d9_25 , \CIC1Cos/n11447 , \CIC1Cos/d_d9_24 , \CIC1Cos/d9_24 , 
         \CIC1Cos/d_d9_23 , \CIC1Cos/d9_23 , \CIC1Cos/n11446 , 
         \CIC1Cos/d_d9_22 , \CIC1Cos/d9_22 , \CIC1Cos/d_d9_21 , 
         \CIC1Cos/d9_21 , \CIC1Cos/n11445 , \CIC1Cos/d_d9_20 , \CIC1Cos/d9_20 , 
         \CIC1Cos/d_d9_19 , \CIC1Cos/d9_19 , \CIC1Cos/n11444 , 
         \CIC1Cos/d_d9_18 , \CIC1Cos/d9_18 , \CIC1Cos/d_d9_17 , 
         \CIC1Cos/d9_17 , \CIC1Cos/n11443 , \CIC1Cos/d_d9_16 , \CIC1Cos/d9_16 , 
         \CIC1Cos/d_d9_15 , \CIC1Cos/d9_15 , \CIC1Cos/n11442 , 
         \CIC1Cos/d_d9_14 , \CIC1Cos/d9_14 , \CIC1Cos/d_d9_13 , 
         \CIC1Cos/d9_13 , \CIC1Cos/n11441 , \CIC1Cos/d_d9_12 , \CIC1Cos/d9_12 , 
         \CIC1Cos/d_d9_11 , \CIC1Cos/d9_11 , \CIC1Cos/n11440 , 
         \CIC1Cos/d_d9_10 , \CIC1Cos/d9_10 , \CIC1Cos/d_d9_9 , \CIC1Cos/d9_9 , 
         \CIC1Cos/n11439 , \CIC1Cos/d_d9_8 , \CIC1Cos/d9_8 , \CIC1Cos/d_d9_7 , 
         \CIC1Cos/d9_7 , \CIC1Cos/n11438 , \CIC1Cos/d_d9_6 , \CIC1Cos/d9_6 , 
         \CIC1Cos/d_d9_5 , \CIC1Cos/d9_5 , \CIC1Cos/n11437 , \CIC1Cos/d_d9_4 , 
         \CIC1Cos/d9_4 , \CIC1Cos/d_d9_3 , \CIC1Cos/d9_3 , \CIC1Cos/n11436 , 
         \CIC1Cos/d_d9_2 , \CIC1Cos/d9_2 , \CIC1Cos/d_d9_1 , \CIC1Cos/d9_1 , 
         \CIC1Cos/n11435 , \CIC1Cos/d_d9_0 , \CIC1Cos/d9_0 , \CIC1Cos/d_d8_35 , 
         \CIC1Cos/d8_35 , \CIC1Cos/d9_71_N_1675_35 , \CIC1Cos/n11434 , 
         \CIC1Cos/d_d8_34 , \CIC1Cos/d8_34 , \CIC1Cos/d_d8_33 , 
         \CIC1Cos/d8_33 , \CIC1Cos/d9_71_N_1675_34 , \CIC1Cos/d9_71_N_1675_33 , 
         \CIC1Cos/n11433 , \CIC1Cos/d_d8_32 , \CIC1Cos/d8_32 , 
         \CIC1Cos/d_d8_31 , \CIC1Cos/d8_31 , \CIC1Cos/d9_71_N_1675_32 , 
         \CIC1Cos/d9_71_N_1675_31 , \CIC1Cos/n11432 , \CIC1Cos/d_d8_30 , 
         \CIC1Cos/d8_30 , \CIC1Cos/d_d8_29 , \CIC1Cos/d8_29 , 
         \CIC1Cos/d9_71_N_1675_30 , \CIC1Cos/d9_71_N_1675_29 , 
         \CIC1Cos/n11431 , \CIC1Cos/d_d8_28 , \CIC1Cos/d8_28 , 
         \CIC1Cos/d_d8_27 , \CIC1Cos/d8_27 , \CIC1Cos/d9_71_N_1675_28 , 
         \CIC1Cos/d9_71_N_1675_27 , \CIC1Cos/n11430 , \CIC1Cos/d_d8_26 , 
         \CIC1Cos/d8_26 , \CIC1Cos/d_d8_25 , \CIC1Cos/d8_25 , 
         \CIC1Cos/d9_71_N_1675_26 , \CIC1Cos/d9_71_N_1675_25 , 
         \CIC1Cos/n11429 , \CIC1Cos/d_d8_24 , \CIC1Cos/d8_24 , 
         \CIC1Cos/d_d8_23 , \CIC1Cos/d8_23 , \CIC1Cos/d9_71_N_1675_24 , 
         \CIC1Cos/d9_71_N_1675_23 , \CIC1Cos/n11428 , \CIC1Cos/d_d8_22 , 
         \CIC1Cos/d8_22 , \CIC1Cos/d_d8_21 , \CIC1Cos/d8_21 , 
         \CIC1Cos/d9_71_N_1675_22 , \CIC1Cos/d9_71_N_1675_21 , 
         \CIC1Cos/n11427 , \CIC1Cos/d_d8_20 , \CIC1Cos/d8_20 , 
         \CIC1Cos/d_d8_19 , \CIC1Cos/d8_19 , \CIC1Cos/d9_71_N_1675_20 , 
         \CIC1Cos/d9_71_N_1675_19 , \CIC1Cos/n11426 , \CIC1Cos/d_d8_18 , 
         \CIC1Cos/d8_18 , \CIC1Cos/d_d8_17 , \CIC1Cos/d8_17 , 
         \CIC1Cos/d9_71_N_1675_18 , \CIC1Cos/d9_71_N_1675_17 , 
         \CIC1Cos/n11425 , \CIC1Cos/d_d8_16 , \CIC1Cos/d8_16 , 
         \CIC1Cos/d_d8_15 , \CIC1Cos/d8_15 , \CIC1Cos/d9_71_N_1675_16 , 
         \CIC1Cos/d9_71_N_1675_15 , \CIC1Cos/n11424 , \CIC1Cos/d_d8_14 , 
         \CIC1Cos/d8_14 , \CIC1Cos/d_d8_13 , \CIC1Cos/d8_13 , 
         \CIC1Cos/d9_71_N_1675_14 , \CIC1Cos/d9_71_N_1675_13 , 
         \CIC1Cos/n11423 , \CIC1Cos/d_d8_12 , \CIC1Cos/d8_12 , 
         \CIC1Cos/d_d8_11 , \CIC1Cos/d8_11 , \CIC1Cos/d9_71_N_1675_12 , 
         \CIC1Cos/d9_71_N_1675_11 , \CIC1Cos/n11422 , \CIC1Cos/d_d8_10 , 
         \CIC1Cos/d8_10 , \CIC1Cos/d_d8_9 , \CIC1Cos/d8_9 , 
         \CIC1Cos/d9_71_N_1675_10 , \CIC1Cos/d9_71_N_1675_9 , \CIC1Cos/n11421 , 
         \CIC1Cos/d_d8_8 , \CIC1Cos/d8_8 , \CIC1Cos/d_d8_7 , \CIC1Cos/d8_7 , 
         \CIC1Cos/d9_71_N_1675_8 , \CIC1Cos/d9_71_N_1675_7 , \CIC1Cos/n11420 , 
         \CIC1Cos/d_d8_6 , \CIC1Cos/d8_6 , \CIC1Cos/d_d8_5 , \CIC1Cos/d8_5 , 
         \CIC1Cos/d9_71_N_1675_6 , \CIC1Cos/d9_71_N_1675_5 , \CIC1Cos/n11419 , 
         \CIC1Cos/d_d8_4 , \CIC1Cos/d8_4 , \CIC1Cos/d_d8_3 , \CIC1Cos/d8_3 , 
         \CIC1Cos/d9_71_N_1675_4 , \CIC1Cos/d9_71_N_1675_3 , \CIC1Cos/n11418 , 
         \CIC1Cos/d_d8_2 , \CIC1Cos/d8_2 , \CIC1Cos/d_d8_1 , \CIC1Cos/d8_1 , 
         \CIC1Cos/d9_71_N_1675_2 , \CIC1Cos/d9_71_N_1675_1 , \CIC1Cos/n11417 , 
         \CIC1Cos/d_d8_0 , \CIC1Cos/d8_0 , \CIC1Cos/d9_71_N_1675_0 , 
         \CIC1Cos/osc_clk_enable_797 , \CIC1Cos/d_d7_35 , \CIC1Cos/d7_35 , 
         \CIC1Cos/d8_71_N_1603_35 , \CIC1Cos/osc_clk_enable_1147 , 
         \CIC1Cos/n11416 , \CIC1Cos/d_d7_34 , \CIC1Cos/d7_34 , 
         \CIC1Cos/d_d7_33 , \CIC1Cos/d7_33 , \CIC1Cos/d8_71_N_1603_34 , 
         \CIC1Cos/d8_71_N_1603_33 , \CIC1Cos/n11415 , \CIC1Cos/d_d7_32 , 
         \CIC1Cos/d7_32 , \CIC1Cos/d_d7_31 , \CIC1Cos/d7_31 , 
         \CIC1Cos/d8_71_N_1603_32 , \CIC1Cos/d8_71_N_1603_31 , 
         \CIC1Cos/n11414 , \CIC1Cos/d_d7_30 , \CIC1Cos/d7_30 , 
         \CIC1Cos/d_d7_29 , \CIC1Cos/d7_29 , \CIC1Cos/d8_71_N_1603_30 , 
         \CIC1Cos/d8_71_N_1603_29 , \CIC1Cos/n11413 , \CIC1Cos/d_d7_28 , 
         \CIC1Cos/d7_28 , \CIC1Cos/d_d7_27 , \CIC1Cos/d7_27 , 
         \CIC1Cos/d8_71_N_1603_28 , \CIC1Cos/d8_71_N_1603_27 , 
         \CIC1Cos/n11412 , \CIC1Cos/d_d7_26 , \CIC1Cos/d7_26 , 
         \CIC1Cos/d_d7_25 , \CIC1Cos/d7_25 , \CIC1Cos/d8_71_N_1603_26 , 
         \CIC1Cos/d8_71_N_1603_25 , \CIC1Cos/n11411 , \CIC1Cos/d_d7_24 , 
         \CIC1Cos/d7_24 , \CIC1Cos/d_d7_23 , \CIC1Cos/d7_23 , 
         \CIC1Cos/d8_71_N_1603_24 , \CIC1Cos/d8_71_N_1603_23 , 
         \CIC1Cos/n11410 , \CIC1Cos/d_d7_22 , \CIC1Cos/d7_22 , 
         \CIC1Cos/d_d7_21 , \CIC1Cos/d7_21 , \CIC1Cos/d8_71_N_1603_22 , 
         \CIC1Cos/d8_71_N_1603_21 , \CIC1Cos/n11409 , \CIC1Cos/d_d7_20 , 
         \CIC1Cos/d7_20 , \CIC1Cos/d_d7_19 , \CIC1Cos/d7_19 , 
         \CIC1Cos/d8_71_N_1603_20 , \CIC1Cos/d8_71_N_1603_19 , 
         \CIC1Cos/n11408 , \CIC1Cos/d_d7_18 , \CIC1Cos/d7_18 , 
         \CIC1Cos/d_d7_17 , \CIC1Cos/d7_17 , \CIC1Cos/d8_71_N_1603_18 , 
         \CIC1Cos/d8_71_N_1603_17 , \CIC1Cos/n11407 , \CIC1Cos/d_d7_16 , 
         \CIC1Cos/d7_16 , \CIC1Cos/d_d7_15 , \CIC1Cos/d7_15 , 
         \CIC1Cos/d8_71_N_1603_16 , \CIC1Cos/d8_71_N_1603_15 , 
         \CIC1Cos/n11406 , \CIC1Cos/d_d7_14 , \CIC1Cos/d7_14 , 
         \CIC1Cos/d_d7_13 , \CIC1Cos/d7_13 , \CIC1Cos/d8_71_N_1603_14 , 
         \CIC1Cos/d8_71_N_1603_13 , \CIC1Cos/n11405 , \CIC1Cos/d_d7_12 , 
         \CIC1Cos/d7_12 , \CIC1Cos/d_d7_11 , \CIC1Cos/d7_11 , 
         \CIC1Cos/d8_71_N_1603_12 , \CIC1Cos/d8_71_N_1603_11 , 
         \CIC1Cos/n11404 , \CIC1Cos/d_d7_10 , \CIC1Cos/d7_10 , 
         \CIC1Cos/d_d7_9 , \CIC1Cos/d7_9 , \CIC1Cos/d8_71_N_1603_10 , 
         \CIC1Cos/d8_71_N_1603_9 , \CIC1Cos/n11403 , \CIC1Cos/d_d7_8 , 
         \CIC1Cos/d7_8 , \CIC1Cos/d_d7_7 , \CIC1Cos/d7_7 , 
         \CIC1Cos/d8_71_N_1603_8 , \CIC1Cos/d8_71_N_1603_7 , \CIC1Cos/n11402 , 
         \CIC1Cos/d_d7_6 , \CIC1Cos/d7_6 , \CIC1Cos/d_d7_5 , \CIC1Cos/d7_5 , 
         \CIC1Cos/d8_71_N_1603_6 , \CIC1Cos/d8_71_N_1603_5 , \CIC1Cos/n11401 , 
         \CIC1Cos/d_d7_4 , \CIC1Cos/d7_4 , \CIC1Cos/d_d7_3 , \CIC1Cos/d7_3 , 
         \CIC1Cos/d8_71_N_1603_4 , \CIC1Cos/d8_71_N_1603_3 , \CIC1Cos/n11400 , 
         \CIC1Cos/d_d7_2 , \CIC1Cos/d7_2 , \CIC1Cos/d_d7_1 , \CIC1Cos/d7_1 , 
         \CIC1Cos/d8_71_N_1603_2 , \CIC1Cos/d8_71_N_1603_1 , \CIC1Cos/n11399 , 
         \CIC1Cos/d_d7_0 , \CIC1Cos/d7_0 , \CIC1Cos/d8_71_N_1603_0 , 
         \CIC1Cos/d_d6_35 , \CIC1Cos/d6_35 , \CIC1Cos/d7_71_N_1531_35 , 
         \CIC1Cos/n11398 , \CIC1Cos/d_d6_34 , \CIC1Cos/d6_34 , 
         \CIC1Cos/d_d6_33 , \CIC1Cos/d6_33 , \CIC1Cos/d7_71_N_1531_34 , 
         \CIC1Cos/d7_71_N_1531_33 , \CIC1Cos/n11397 , \CIC1Cos/d_d6_32 , 
         \CIC1Cos/d6_32 , \CIC1Cos/d_d6_31 , \CIC1Cos/d6_31 , 
         \CIC1Cos/d7_71_N_1531_32 , \CIC1Cos/d7_71_N_1531_31 , 
         \CIC1Cos/n11396 , \CIC1Cos/d_d6_30 , \CIC1Cos/d6_30 , 
         \CIC1Cos/d_d6_29 , \CIC1Cos/d6_29 , \CIC1Cos/d7_71_N_1531_30 , 
         \CIC1Cos/d7_71_N_1531_29 , \CIC1Cos/n11395 , \CIC1Cos/d_d6_28 , 
         \CIC1Cos/d6_28 , \CIC1Cos/d_d6_27 , \CIC1Cos/d6_27 , 
         \CIC1Cos/d7_71_N_1531_27 , \CIC1Cos/osc_clk_enable_997 , 
         \CIC1Cos/n11394 , \CIC1Cos/d7_71_N_1531_28 , \CIC1Cos/d_d6_26 , 
         \CIC1Cos/d6_26 , \CIC1Cos/d_d6_25 , \CIC1Cos/d6_25 , 
         \CIC1Cos/d7_71_N_1531_26 , \CIC1Cos/d7_71_N_1531_25 , 
         \CIC1Cos/n11393 , \CIC1Cos/d_d6_24 , \CIC1Cos/d6_24 , 
         \CIC1Cos/d_d6_23 , \CIC1Cos/d6_23 , \CIC1Cos/d7_71_N_1531_24 , 
         \CIC1Cos/d7_71_N_1531_23 , \CIC1Cos/n11392 , \CIC1Cos/d_d6_22 , 
         \CIC1Cos/d6_22 , \CIC1Cos/d_d6_21 , \CIC1Cos/d6_21 , 
         \CIC1Cos/d7_71_N_1531_22 , \CIC1Cos/d7_71_N_1531_21 , 
         \CIC1Cos/n11391 , \CIC1Cos/d_d6_20 , \CIC1Cos/d6_20 , 
         \CIC1Cos/d_d6_19 , \CIC1Cos/d6_19 , \CIC1Cos/d7_71_N_1531_20 , 
         \CIC1Cos/d7_71_N_1531_19 , \CIC1Cos/n11390 , \CIC1Cos/d_d6_18 , 
         \CIC1Cos/d6_18 , \CIC1Cos/d_d6_17 , \CIC1Cos/d6_17 , 
         \CIC1Cos/d7_71_N_1531_18 , \CIC1Cos/d7_71_N_1531_17 , 
         \CIC1Cos/n11389 , \CIC1Cos/d_d6_16 , \CIC1Cos/d6_16 , 
         \CIC1Cos/d_d6_15 , \CIC1Cos/d6_15 , \CIC1Cos/d7_71_N_1531_16 , 
         \CIC1Cos/d7_71_N_1531_15 , \CIC1Cos/n11388 , \CIC1Cos/d_d6_14 , 
         \CIC1Cos/d6_14 , \CIC1Cos/d_d6_13 , \CIC1Cos/d6_13 , 
         \CIC1Cos/d7_71_N_1531_14 , \CIC1Cos/d7_71_N_1531_13 , 
         \CIC1Cos/n11387 , \CIC1Cos/d_d6_12 , \CIC1Cos/d6_12 , 
         \CIC1Cos/d_d6_11 , \CIC1Cos/d6_11 , \CIC1Cos/d7_71_N_1531_12 , 
         \CIC1Cos/d7_71_N_1531_11 , \CIC1Cos/n11386 , \CIC1Cos/d_d6_10 , 
         \CIC1Cos/d6_10 , \CIC1Cos/d_d6_9 , \CIC1Cos/d6_9 , 
         \CIC1Cos/d7_71_N_1531_10 , \CIC1Cos/d7_71_N_1531_9 , \CIC1Cos/n11385 , 
         \CIC1Cos/d_d6_8 , \CIC1Cos/d6_8 , \CIC1Cos/d_d6_7 , \CIC1Cos/d6_7 , 
         \CIC1Cos/d7_71_N_1531_8 , \CIC1Cos/d7_71_N_1531_7 , \CIC1Cos/n11384 , 
         \CIC1Cos/d_d6_6 , \CIC1Cos/d6_6 , \CIC1Cos/d_d6_5 , \CIC1Cos/d6_5 , 
         \CIC1Cos/d7_71_N_1531_6 , \CIC1Cos/d7_71_N_1531_5 , \CIC1Cos/n11383 , 
         \CIC1Cos/d_d6_4 , \CIC1Cos/d6_4 , \CIC1Cos/d_d6_3 , \CIC1Cos/d6_3 , 
         \CIC1Cos/d7_71_N_1531_4 , \CIC1Cos/d7_71_N_1531_3 , \CIC1Cos/n11382 , 
         \CIC1Cos/d_d6_2 , \CIC1Cos/d6_2 , \CIC1Cos/d_d6_1 , \CIC1Cos/d6_1 , 
         \CIC1Cos/d7_71_N_1531_2 , \CIC1Cos/d7_71_N_1531_1 , \CIC1Cos/n11381 , 
         \CIC1Cos/d_d6_0 , \CIC1Cos/d6_0 , \CIC1Cos/d7_71_N_1531_0 , 
         \CIC1Cos/d_d_tmp_35 , \CIC1Cos/d_tmp_35 , \CIC1Cos/d6_71_N_1459_35 , 
         \CIC1Cos/n11380 , \CIC1Cos/d_d_tmp_34 , \CIC1Cos/d_tmp_34 , 
         \CIC1Cos/d_d_tmp_33 , \CIC1Cos/d_tmp_33 , \CIC1Cos/d6_71_N_1459_34 , 
         \CIC1Cos/d6_71_N_1459_33 , \CIC1Cos/n11379 , \CIC1Cos/d_d_tmp_32 , 
         \CIC1Cos/d_tmp_32 , \CIC1Cos/d_d_tmp_31 , \CIC1Cos/d_tmp_31 , 
         \CIC1Cos/d6_71_N_1459_32 , \CIC1Cos/d6_71_N_1459_31 , 
         \CIC1Cos/n11378 , \CIC1Cos/d_d_tmp_30 , \CIC1Cos/d_tmp_30 , 
         \CIC1Cos/d_d_tmp_29 , \CIC1Cos/d_tmp_29 , \CIC1Cos/d6_71_N_1459_30 , 
         \CIC1Cos/d6_71_N_1459_29 , \CIC1Cos/n11377 , \CIC1Cos/d_d_tmp_28 , 
         \CIC1Cos/d_tmp_28 , \CIC1Cos/d_d_tmp_27 , \CIC1Cos/d_tmp_27 , 
         \CIC1Cos/d6_71_N_1459_28 , \CIC1Cos/d6_71_N_1459_27 , 
         \CIC1Cos/n11376 , \CIC1Cos/d_d_tmp_26 , \CIC1Cos/d_tmp_26 , 
         \CIC1Cos/d_d_tmp_25 , \CIC1Cos/d_tmp_25 , \CIC1Cos/d6_71_N_1459_26 , 
         \CIC1Cos/d6_71_N_1459_25 , \CIC1Cos/n11375 , \CIC1Cos/d_d_tmp_24 , 
         \CIC1Cos/d_tmp_24 , \CIC1Cos/d_d_tmp_23 , \CIC1Cos/d_tmp_23 , 
         \CIC1Cos/d6_71_N_1459_24 , \CIC1Cos/d6_71_N_1459_23 , 
         \CIC1Cos/n11374 , \CIC1Cos/d_d_tmp_22 , \CIC1Cos/d_tmp_22 , 
         \CIC1Cos/d_d_tmp_21 , \CIC1Cos/d_tmp_21 , \CIC1Cos/d6_71_N_1459_22 , 
         \CIC1Cos/d6_71_N_1459_21 , \CIC1Cos/n11373 , \CIC1Cos/d_d_tmp_20 , 
         \CIC1Cos/d_tmp_20 , \CIC1Cos/d_d_tmp_19 , \CIC1Cos/d_tmp_19 , 
         \CIC1Cos/d6_71_N_1459_19 , \CIC1Cos/osc_clk_enable_847 , 
         \CIC1Cos/n11372 , \CIC1Cos/d6_71_N_1459_20 , \CIC1Cos/d_d_tmp_18 , 
         \CIC1Cos/d_tmp_18 , \CIC1Cos/d_d_tmp_17 , \CIC1Cos/d_tmp_17 , 
         \CIC1Cos/d6_71_N_1459_18 , \CIC1Cos/d6_71_N_1459_17 , 
         \CIC1Cos/n11371 , \CIC1Cos/d_d_tmp_16 , \CIC1Cos/d_tmp_16 , 
         \CIC1Cos/d_d_tmp_15 , \CIC1Cos/d_tmp_15 , \CIC1Cos/d6_71_N_1459_16 , 
         \CIC1Cos/d6_71_N_1459_15 , \CIC1Cos/n11370 , \CIC1Cos/d_d_tmp_14 , 
         \CIC1Cos/d_tmp_14 , \CIC1Cos/d_d_tmp_13 , \CIC1Cos/d_tmp_13 , 
         \CIC1Cos/d6_71_N_1459_14 , \CIC1Cos/d6_71_N_1459_13 , 
         \CIC1Cos/n11369 , \CIC1Cos/d_d_tmp_12 , \CIC1Cos/d_tmp_12 , 
         \CIC1Cos/d_d_tmp_11 , \CIC1Cos/d_tmp_11 , \CIC1Cos/d6_71_N_1459_12 , 
         \CIC1Cos/d6_71_N_1459_11 , \CIC1Cos/n11368 , \CIC1Cos/d_d_tmp_10 , 
         \CIC1Cos/d_tmp_10 , \CIC1Cos/d_d_tmp_9 , \CIC1Cos/d_tmp_9 , 
         \CIC1Cos/d6_71_N_1459_10 , \CIC1Cos/d6_71_N_1459_9 , \CIC1Cos/n11367 , 
         \CIC1Cos/d_d_tmp_8 , \CIC1Cos/d_tmp_8 , \CIC1Cos/d_d_tmp_7 , 
         \CIC1Cos/d_tmp_7 , \CIC1Cos/d6_71_N_1459_8 , \CIC1Cos/d6_71_N_1459_7 , 
         \CIC1Cos/n11366 , \CIC1Cos/d_d_tmp_6 , \CIC1Cos/d_tmp_6 , 
         \CIC1Cos/d_d_tmp_5 , \CIC1Cos/d_tmp_5 , \CIC1Cos/d6_71_N_1459_6 , 
         \CIC1Cos/d6_71_N_1459_5 , \CIC1Cos/n11365 , \CIC1Cos/d_d_tmp_4 , 
         \CIC1Cos/d_tmp_4 , \CIC1Cos/d_d_tmp_3 , \CIC1Cos/d_tmp_3 , 
         \CIC1Cos/d6_71_N_1459_4 , \CIC1Cos/d6_71_N_1459_3 , \CIC1Cos/n11364 , 
         \CIC1Cos/d_d_tmp_2 , \CIC1Cos/d_tmp_2 , \CIC1Cos/d_d_tmp_1 , 
         \CIC1Cos/d_tmp_1 , \CIC1Cos/d6_71_N_1459_2 , \CIC1Cos/d6_71_N_1459_1 , 
         \CIC1Cos/n11363 , \CIC1Cos/d_d_tmp_0 , \CIC1Cos/d_tmp_0 , 
         \CIC1Cos/d6_71_N_1459_0 , \CIC1Cos/n5092 , \CIC1Cos/n5093 , 
         \CIC1Cos/d1_71_N_418_37 , \CIC1Cos/d1_71_N_418_36 , \CIC1Cos/n11756 , 
         \CIC1Cos/d5_71_N_706_51 , \CIC1Cos/d5_71_N_706_50 , \CIC1Cos/n5084 , 
         \CIC1Cos/n5085 , \CIC1Cos/d1_71_N_418_45 , \CIC1Cos/d1_71_N_418_44 , 
         \CIC1Cos/n11759 , \CIC1Cos/n11760 , \CIC1Cos/n5058 , \CIC1Cos/n5059 , 
         \CIC1Cos/d1_71_N_418_71 , \CIC1Cos/d1_71_N_418_70 , \CIC1Cos/n11772 , 
         \CIC1Cos/n5060 , \CIC1Cos/n5061 , \CIC1Cos/d1_71_N_418_69 , 
         \CIC1Cos/d1_71_N_418_68 , \CIC1Cos/n11771 , \CIC1Cos/n5062 , 
         \CIC1Cos/n5063 , \CIC1Cos/d1_71_N_418_67 , \CIC1Cos/d1_71_N_418_66 , 
         \CIC1Cos/n11770 , \CIC1Cos/n5064 , \CIC1Cos/n5065 , 
         \CIC1Cos/d1_71_N_418_65 , \CIC1Cos/d1_71_N_418_64 , \CIC1Cos/n11769 , 
         \CIC1Cos/n5066 , \CIC1Cos/n5067 , \CIC1Cos/d1_71_N_418_63 , 
         \CIC1Cos/d1_71_N_418_62 , \CIC1Cos/n11768 , \CIC1Cos/n5068 , 
         \CIC1Cos/n5069 , \CIC1Cos/d1_71_N_418_61 , \CIC1Cos/d1_71_N_418_60 , 
         \CIC1Cos/n11767 , \CIC1Cos/n5070 , \CIC1Cos/n5071 , 
         \CIC1Cos/d1_71_N_418_59 , \CIC1Cos/d1_71_N_418_58 , \CIC1Cos/n11766 , 
         \CIC1Cos/n5072 , \CIC1Cos/n5073 , \CIC1Cos/d1_71_N_418_57 , 
         \CIC1Cos/d1_71_N_418_56 , \CIC1Cos/n11765 , \CIC1Cos/n5074 , 
         \CIC1Cos/n5075 , \CIC1Cos/d1_71_N_418_55 , \CIC1Cos/d1_71_N_418_54 , 
         \CIC1Cos/n11764 , \CIC1Cos/n5076 , \CIC1Cos/n5077 , 
         \CIC1Cos/d1_71_N_418_53 , \CIC1Cos/d1_71_N_418_52 , \CIC1Cos/n11763 , 
         \CIC1Cos/n5078 , \CIC1Cos/n5079 , \CIC1Cos/d1_71_N_418_51 , 
         \CIC1Cos/d1_71_N_418_50 , \CIC1Cos/n11762 , \CIC1Cos/n5086 , 
         \CIC1Cos/n5087 , \CIC1Cos/d1_71_N_418_43 , \CIC1Cos/d1_71_N_418_42 , 
         \CIC1Cos/n11758 , \CIC1Cos/n5088 , \CIC1Cos/n5089 , 
         \CIC1Cos/d1_71_N_418_41 , \CIC1Cos/d1_71_N_418_40 , \CIC1Cos/n11757 , 
         \CIC1Cos/n5090 , \CIC1Cos/n5091 , \CIC1Cos/d1_71_N_418_39 , 
         \CIC1Cos/d1_71_N_418_38 , \CIC1Cos/n5080 , \CIC1Cos/n5081 , 
         \CIC1Cos/d1_71_N_418_49 , \CIC1Cos/d1_71_N_418_48 , \CIC1Cos/n11761 , 
         \CIC1Cos/n11791 , \CIC1Cos/n5082 , \CIC1Cos/n5083 , 
         \CIC1Cos/d1_71_N_418_47 , \CIC1Cos/d1_71_N_418_46 , \CIC1Cos/n11790 , 
         \CIC1Cos/d2_71_N_490_41 , \CIC1Cos/d2_71_N_490_40 , \CIC1Cos/n11789 , 
         \CIC1Cos/n11788 , \CIC1Cos/n11787 , \CIC1Cos/n11786 , 
         \CIC1Cos/n11785 , \CIC1Cos/n11784 , \CIC1Cos/n11783 , 
         \CIC1Cos/n11782 , \CIC1Cos/n11781 , \CIC1Cos/n11780 , 
         \CIC1Cos/n11779 , \CIC1Cos/n11778 , \CIC1Cos/n11777 , 
         \CIC1Cos/n11776 , \CIC1Cos/n11775 , 
         \AMDemodulator1/ISquare_31_N_1895_0 , CIC1_outSin_1, CIC1_outSin_0, 
         \AMDemodulator1/MultDataB_0 , \AMDemodulator1/MultDataB_1 , 
         CIC1_outSin_3, CIC1_outSin_2, \AMDemodulator1/MultDataB_2 , 
         \AMDemodulator1/MultDataB_3 , CIC1_outSin_5, CIC1_outSin_4, 
         \AMDemodulator1/MultDataB_4 , \AMDemodulator1/MultDataB_5 , MYLED_c_1, 
         MYLED_c_0, \AMDemodulator1/MultDataB_6 , \AMDemodulator1/MultDataB_7 , 
         MYLED_c_3, MYLED_c_2, \AMDemodulator1/MultDataB_8 , 
         \AMDemodulator1/MultDataB_9 , MYLED_c_5, MYLED_c_4, 
         \AMDemodulator1/MultDataB_10 , \AMDemodulator1/MultDataB_11 , 
         CIC1_outCos_1, CIC1_outCos_0, \AMDemodulator1/MultDataC_0 , 
         \AMDemodulator1/MultDataC_1 , CIC1_outCos_3, CIC1_outCos_2, 
         \AMDemodulator1/MultDataC_2 , \AMDemodulator1/MultDataC_3 , 
         CIC1_outCos_5, CIC1_outCos_4, \AMDemodulator1/MultDataC_4 , 
         \AMDemodulator1/MultDataC_5 , CIC1_outCos_7, CIC1_outCos_6, 
         \AMDemodulator1/MultDataC_6 , \AMDemodulator1/MultDataC_7 , 
         CIC1_outCos_9, CIC1_outCos_8, \AMDemodulator1/MultDataC_8 , 
         \AMDemodulator1/MultDataC_9 , CIC1_outCos_11, CIC1_outCos_10, 
         \AMDemodulator1/MultDataC_10 , \AMDemodulator1/MultDataC_11 , 
         \AMDemodulator1/Multiplier1/rego_o_0 , 
         \AMDemodulator1/Multiplier2/rego_o_0 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_2_4 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_4_8 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_2_4 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_4_8 , 
         \AMDemodulator1/d_out_d_11__N_1891 , 
         \AMDemodulator1/d_out_d_11_N_1894_17 , \AMDemodulator1/d_out_d_0 , 
         \AMDemodulator1/d_out_d_1 , \AMDemodulator1/d_out_d_11__N_1887 , 
         \AMDemodulator1/d_out_d_11__N_1889 , \AMDemodulator1/d_out_d_2 , 
         \AMDemodulator1/d_out_d_3 , \AMDemodulator1/d_out_d_11__N_1883 , 
         \AMDemodulator1/d_out_d_11__N_1885 , \AMDemodulator1/d_out_d_4 , 
         \AMDemodulator1/d_out_d_5 , \AMDemodulator1/d_out_d_11__N_1881 , 
         \AMDemodulator1/d_out_d_6 , \AMDemodulator1/d_out_d_7 , 
         \AMDemodulator1/d_out_d_8 , \AMDemodulator1/d_out_d_9 , \CIC1Cos/n31 , 
         \CIC1Cos/count_15_N_1442_0 , \CIC1Cos/osc_clk_enable_757 , 
         \CIC1Cos/n12788 , \CIC1Cos/n6 , \CIC1Cos/n12503 , 
         \CIC1Cos/count_15_N_1442_11 , \CIC1Cos/count_15__N_1458 , 
         \CIC1Cos/d10_71_N_1747_57 , \CIC1Cos/osc_clk_enable_1397 , 
         \CIC1Cos/d10_57 , \CIC1Cos/d10_71_N_1747_58 , \CIC1Cos/v_comb , 
         \CIC1Cos/d10_58 , \CIC1Cos/d1_71_N_418_0 , \CIC1Cos/d2_71_N_490_0 , 
         \CIC1Cos/d3_71_N_562_0 , \CIC1Cos/d4_71_N_634_0 , 
         \CIC1Cos/d5_71_N_706_0 , \CIC1Cos/osc_clk_enable_1097 , 
         \CIC1Cos/osc_clk_enable_1247 , \CIC1Cos/n12784 , \CIC1Cos/n12790 , 
         \CIC1Cos/n13 , \CIC1Sin/n54 , \CIC1Sin/count_15_N_1442_0 , 
         \CIC1Sin/osc_clk_enable_141 , \CIC1Sin/count_15_N_1442_11 , 
         \CIC1Sin/d_clk_tmp_N_1831 , \CIC1Sin/d10_71_N_1747_57 , 
         \CIC1Sin/osc_clk_enable_710 , \CIC1Sin/d10_57 , 
         \CIC1Sin/d10_71_N_1747_63 , \CIC1Sin/d10_71_N_1747_58 , 
         \CIC1Sin/v_comb , \CIC1Sin/d10_58 , \CIC1Sin/d10_63 , 
         \CIC1Sin/d10_71_N_1747_67 , \CIC1Sin/d10_71_N_1747_64 , 
         \CIC1Sin/d10_64 , \CIC1Sin/d10_67 , \CIC1Sin/d10_71_N_1747_69 , 
         \CIC1Sin/d10_71_N_1747_68 , \CIC1Sin/d10_68 , \CIC1Sin/d10_69 , 
         \CIC1Sin/d10_71_N_1747_71 , \CIC1Sin/d10_71_N_1747_70 , 
         \CIC1Sin/d10_70 , \CIC1Sin/d10_71 , \CIC1Sin/d10_71_N_1747_59 , 
         \CIC1Sin/d10_59_adj_2500 , \CIC1Sin/d10_71_N_1747_60 , 
         \CIC1Sin/d10_60_adj_2521 , \CIC1Sin/d10_71_N_1747_61 , 
         \CIC1Sin/d10_61_adj_2522 , \CIC1Sin/d10_71_N_1747_62 , 
         \CIC1Sin/d10_62_adj_2497 , \CIC1Sin/d10_71_N_1747_65 , 
         \CIC1Sin/d10_65_adj_2488 , \CIC1Sin/d10_71_N_1747_66 , 
         \CIC1Sin/d10_66_adj_2491 , \CIC1Sin/d1_71_N_418_0 , 
         \CIC1Sin/d2_71_N_490_0 , \CIC1Sin/d3_71_N_562_0 , 
         \CIC1Sin/d4_71_N_634_0 , \CIC1Sin/d5_71_N_706_0 , \CIC1Sin/d_clk_tmp , 
         \CIC1Sin/n8396 , \CIC1Sin/osc_clk_enable_410 , 
         \CIC1Sin/osc_clk_enable_560 , \CIC1Sin/n16_adj_2524 , \CIC1Sin/n15 , 
         \CIC1Sin/n26 , \CIC1Sin/n21_adj_2523 , d10_59, CICGain_1, n61, 
         \CIC1Cos/d_out_11_N_1819_0 , CICGain_0, d10_60, n62, 
         \CIC1Cos/d_out_11_N_1819_1 , \CIC1Sin/n132 , n64, \CIC1Sin/n131 , n63, 
         d_out_11_N_1819_3, d_out_11_N_1819_2, \CIC1Sin/n134 , n66, 
         \CIC1Sin/n133 , n65, d_out_11_N_1819_5, d_out_11_N_1819_4, 
         \CIC1Sin/n136 , n68, \CIC1Sin/n135 , n67, d_out_11_N_1819_7, 
         d_out_11_N_1819_6, \CIC1Sin/n138 , n70, d10_68, \CIC1Sin/n137 , 
         d_out_11_N_1819_9, d_out_11_N_1819_8, d10_67, d10_70, d10_69, 
         d_out_11_N_1819_10, \CIC1Sin/n140_adj_2519 , d10_71, 
         d_out_11_N_1819_11, \CIC1Sin/n61_adj_2499 , 
         \CIC1Sin/d_out_11_N_1819_0 , \CIC1Sin/n62_adj_2528 , 
         \CIC1Sin/d_out_11_N_1819_1 , \CIC1Sin/n132_adj_2503 , \CIC1Sin/n64 , 
         \CIC1Sin/n131_adj_2501 , \CIC1Sin/n63_adj_2502 , 
         \CIC1Sin/d_out_11_N_1819_3 , \CIC1Sin/d_out_11_N_1819_2 , 
         \CIC1Sin/n134_adj_2498 , \CIC1Sin/n66 , \CIC1Sin/n133_adj_2504 , 
         \CIC1Sin/n65 , \CIC1Sin/d_out_11_N_1819_5 , 
         \CIC1Sin/d_out_11_N_1819_4 , MYLED_c_6, o_Rx_Byte_0, 
         osc_clk_enable_1407, DataInReg_11_N_1856_0, DataInReg_11_N_1856_1, 
         DataInReg_11_N_1856_2, DataInReg_11_N_1856_3, DataInReg_11_N_1856_4, 
         DataInReg_11_N_1856_5, DataInReg_11_N_1856_6, DataInReg_11_N_1856_7, 
         DataInReg_11_N_1856_8, DemodOut_9, \SinCos1/out_sel , 
         \SinCos1/cosromoutsel , \SinCos1/cosout_pre_2 , 
         \SinCos1/cosout_pre_1 , \SinCos1/cosout_pre_4 , 
         \SinCos1/cosout_pre_3 , \SinCos1/cosout_pre_6 , 
         \SinCos1/cosout_pre_5 , \SinCos1/cosout_pre_8 , 
         \SinCos1/cosout_pre_7 , \SinCos1/cosout_pre_10 , 
         \SinCos1/cosout_pre_9 , \SinCos1/cosout_pre_12 , 
         \SinCos1/cosout_pre_11 , \SinCos1/sinromoutsel , 
         \SinCos1/sinout_pre_2 , \SinCos1/sinout_pre_1 , 
         \SinCos1/sinout_pre_4 , \SinCos1/sinout_pre_3 , 
         \SinCos1/sinout_pre_6 , \SinCos1/sinout_pre_5 , 
         \SinCos1/sinout_pre_8 , \SinCos1/sinout_pre_7 , 
         \SinCos1/sinout_pre_10 , \SinCos1/sinout_pre_9 , 
         \SinCos1/mx_ctrl_r_1 , \SinCos1/rom_dout_s_12 , 
         \SinCos1/sinout_pre_12 , \SinCos1/sinout_pre_11 , 
         \CIC1Sin/n136_adj_2505 , \CIC1Sin/n68_adj_2495 , 
         \CIC1Sin/n135_adj_2496 , \CIC1Sin/n13174 , 
         \CIC1Sin/d_out_11_N_1819_7 , \CIC1Sin/d_out_11_N_1819_6 , 
         \CIC1Sin/n138_adj_2507 , \CIC1Sin/n70 , \CIC1Sin/n137_adj_2506 , 
         \CIC1Sin/d_out_11_N_1819_9 , \CIC1Sin/d_out_11_N_1819_8 , 
         \CIC1Sin/d_out_11_N_1819_10 , \CIC1Sin/n140 , 
         \CIC1Sin/d_out_11_N_1819_11 , RFIn_c, DiffOut_c, \Mixer1/RFInR , 
         \Mixer1/MixerOutCos_11_N_224_1 , \Mixer1/MixerOutCos_11_N_224_0 , 
         \Mixer1/MixerOutCos_11_N_224_3 , \Mixer1/MixerOutCos_11_N_224_2 , 
         \Mixer1/MixerOutCos_11_N_224_5 , \Mixer1/MixerOutCos_11_N_224_4 , 
         \Mixer1/MixerOutCos_11_N_224_7 , \Mixer1/MixerOutCos_11_N_224_6 , 
         \Mixer1/MixerOutCos_11_N_224_9 , \Mixer1/MixerOutCos_11_N_224_8 , 
         \Mixer1/MixerOutCos_11_N_224_11 , \Mixer1/MixerOutCos_11_N_224_10 , 
         \Mixer1/MixerOutSin_11_N_212_1 , \Mixer1/MixerOutSin_11_N_212_0 , 
         \Mixer1/MixerOutSin_11_N_212_3 , \Mixer1/MixerOutSin_11_N_212_2 , 
         \Mixer1/MixerOutSin_11_N_212_5 , \Mixer1/MixerOutSin_11_N_212_4 , 
         \Mixer1/MixerOutSin_11_N_212_7 , \Mixer1/MixerOutSin_11_N_212_6 , 
         \Mixer1/MixerOutSin_11_N_212_9 , \Mixer1/MixerOutSin_11_N_212_8 , 
         \Mixer1/MixerOutSin_11_N_212_11 , \Mixer1/MixerOutSin_11_N_212_10 , 
         \PWM1/osc_clk_enable_1406 , \PWM1/n3949 , \SinCos1/mx_ctrl_r , 
         \SinCos1/cosromoutsel_i , \SinCos1/func_or_inet , 
         \SinCos1/rom_addr0_r_10 , \SinCos1/rom_addr0_r_11 , 
         \SinCos1/out_sel_i , \SinCos1/rom_addr0_r_9 , \SinCos1/rom_addr0_r_8 , 
         \SinCos1/rom_addr0_r_7 , \SinCos1/rom_dout_ffin , 
         \SinCos1/rom_addr0_r_6 , \SinCos1/triglut_1_0_13_1_f5b , 
         \SinCos1/triglut_1_0_13_0_f5a , \SinCos1/rom_dout_1_ffin , 
         \SinCos1/triglut_1_0_14_1_f5b , \SinCos1/triglut_1_0_14_0_f5a , 
         \SinCos1/rom_dout_2_ffin , \SinCos1/triglut_1_0_15_1_f5b , 
         \SinCos1/triglut_1_0_15_0_f5a , \SinCos1/rom_dout_3_ffin , 
         \SinCos1/triglut_1_0_16_1_f5b , \SinCos1/triglut_1_0_16_0_f5a , 
         \SinCos1/rom_dout_4_ffin , \SinCos1/triglut_1_0_17_1_f5b , 
         \SinCos1/triglut_1_0_17_0_f5a , \SinCos1/rom_dout_5_ffin , 
         \SinCos1/triglut_1_0_18_1_f5b , \SinCos1/triglut_1_0_18_0_f5a , 
         \SinCos1/rom_dout_6_ffin , \SinCos1/triglut_1_0_19_1_f5b , 
         \SinCos1/triglut_1_0_19_0_f5a , \SinCos1/rom_dout_7_ffin , 
         \SinCos1/triglut_1_0_20_1_f5b , \SinCos1/triglut_1_0_20_0_f5a , 
         \SinCos1/rom_dout_8_ffin , \SinCos1/triglut_1_0_21_1_f5b , 
         \SinCos1/triglut_1_0_21_0_f5a , \SinCos1/rom_dout_9_ffin , 
         \SinCos1/triglut_1_0_22_1_f5b , \SinCos1/triglut_1_0_22_0_f5a , 
         \SinCos1/rom_dout_10_ffin , \SinCos1/triglut_1_0_23_1_f5b , 
         \SinCos1/triglut_1_0_23_0_f5a , \SinCos1/rom_dout_13_ffin , 
         \SinCos1/triglut_1_0_0_1_f5b , \SinCos1/triglut_1_0_0_0_f5a , 
         \SinCos1/rom_dout_14_ffin , \SinCos1/triglut_1_0_1_1_f5b , 
         \SinCos1/triglut_1_0_1_0_f5a , \SinCos1/rom_dout_15_ffin , 
         \SinCos1/triglut_1_0_2_1_f5b , \SinCos1/triglut_1_0_2_0_f5a , 
         \SinCos1/rom_dout_16_ffin , \SinCos1/triglut_1_0_3_1_f5b , 
         \SinCos1/triglut_1_0_3_0_f5a , \SinCos1/rom_dout_17_ffin , 
         \SinCos1/triglut_1_0_4_1_f5b , \SinCos1/triglut_1_0_4_0_f5a , 
         \SinCos1/rom_dout_18_ffin , \SinCos1/triglut_1_0_5_1_f5b , 
         \SinCos1/triglut_1_0_5_0_f5a , \SinCos1/rom_dout_19_ffin , 
         \SinCos1/triglut_1_0_6_1_f5b , \SinCos1/triglut_1_0_6_0_f5a , 
         \SinCos1/rom_dout_20_ffin , \SinCos1/triglut_1_0_7_1_f5b , 
         \SinCos1/triglut_1_0_7_0_f5a , \SinCos1/rom_dout_21_ffin , 
         \SinCos1/triglut_1_0_8_1_f5b , \SinCos1/triglut_1_0_8_0_f5a , 
         \SinCos1/rom_dout_22_ffin , \SinCos1/triglut_1_0_9_1_f5b , 
         \SinCos1/triglut_1_0_9_0_f5a , \SinCos1/rom_dout_23_ffin , 
         \SinCos1/triglut_1_0_10_1_f5b , \SinCos1/triglut_1_0_10_0_f5a , 
         \SinCos1/rom_dout_24_ffin , \SinCos1/triglut_1_0_11_1_f5b , 
         \SinCos1/triglut_1_0_11_0_f5a , \CIC1Cos/d10_71_N_1747_60 , 
         \CIC1Cos/d10_71_N_1747_59 , \CIC1Cos/d10_71_N_1747_62 , 
         \CIC1Cos/d10_71_N_1747_61 , d10_61, d10_62, 
         \CIC1Cos/d10_71_N_1747_64 , \CIC1Cos/d10_71_N_1747_63 , d10_63, 
         d10_64, \CIC1Cos/d10_71_N_1747_66 , \CIC1Cos/d10_71_N_1747_65 , 
         d10_65, d10_66, \CIC1Cos/d10_71_N_1747_68 , 
         \CIC1Cos/d10_71_N_1747_67 , \CIC1Cos/d10_71_N_1747_70 , 
         \CIC1Cos/d10_71_N_1747_69 , \CIC1Cos/d10_71_N_1747_71 , 
         \ncoGen/phase_accum_63_N_146_0 , \uart_rx1/r_Rx_Byte_1 , 
         \uart_rx1/r_Rx_Byte_0 , \uart_rx1/UartClk_2_enable_16 , o_Rx_Byte1_0, 
         o_Rx_Byte1_1, \uart_rx1/r_Rx_Byte_3 , \uart_rx1/r_Rx_Byte_2 , 
         o_Rx_Byte1_2, o_Rx_Byte1_3, \uart_rx1/r_Rx_Byte_5 , 
         \uart_rx1/r_Rx_Byte_4 , o_Rx_Byte1_4, o_Rx_Byte1_5, 
         \uart_rx1/r_Rx_Byte_7 , \uart_rx1/r_Rx_Byte_6 , o_Rx_Byte1_6, 
         o_Rx_Byte1_7, o_Rx_Byte_2, o_Rx_Byte_3, o_Rx_Byte_4, o_Rx_Byte_5, 
         o_Rx_Byte_6, \uart_rx1/r_Rx_DV_last , \uart_rx1/r_Rx_DV_last_N_2483 , 
         \uart_rx1/r_Rx_DV , o_Rx_DV1, \uart_rx1/n12530 , 
         \uart_rx1/r_Bit_Index_1 , \uart_rx1/n13063 , \uart_rx1/r_Bit_Index_0 , 
         \uart_rx1/n12501 , \uart_rx1/n8821 , \uart_rx1/n12649 , 
         \uart_rx1/n12647 , \uart_rx1/UartClk_2_enable_32 , 
         \uart_rx1/r_Bit_Index_2 , \uart_rx1/r_SM_Main_1 , 
         \uart_rx1/r_SM_Main_0 , \uart_rx1/n12980 , \uart_rx1/n12692 , 
         \uart_rx1/r_Rx_Data , \uart_rx1/UartClk_2_enable_36 , 
         \uart_rx1/UartClk_2_enable_7 , \uart_rx1/UartClk_2_enable_5 , 
         \uart_rx1/UartClk_2_enable_4 , \uart_rx1/UartClk_2_enable_1 , 
         \uart_rx1/UartClk_2_enable_35 , \uart_rx1/UartClk_2_enable_34 , 
         \uart_rx1/UartClk_2_enable_33 , \uart_rx1/n12744 , \uart_rx1/n12740 , 
         \uart_rx1/n12748 , \uart_rx1/n12746 , \uart_rx1/n13070 , 
         \uart_rx1/r_Rx_DV_N_2484 , \uart_rx1/UartClk_2_enable_6 , 
         \uart_rx1/r_Rx_Data_R , i_Rx_Serial_c, \uart_rx1/n8783 , 
         \uart_rx1/r_SM_Main_2_N_2424_0 , \uart_rx1/n12990 , 
         \uart_rx1/r_SM_Main_2 , \uart_rx1/n13074 , \uart_rx1/n8805 , 
         \uart_rx1/n12528 , n13092, n8250, n12961, n12962, n2815, n13061, 
         n13064, n8245, n13067, n13210, n13055, n12533, n7990, n2563, n13057, 
         n2522, \PWM1/n12 , \PWM1/n11 , \PWM1/n15 , \PWM1/n17 , n2555, n7833, 
         n13177, n7813, n7823, n7815, n2547, n7809, n7839, n7811, n7805, n7807, 
         n2550, n7801, n7803, n7763, n12952, n12953, n2551, n7797, n7759, 
         n7761, o_Rx_Byte_7, o_Rx_DV, n6, n7827, n7753, n7799, n7755, n7793, 
         n13069, n8383, n7821, n2533, n7789, \uart_rx1/n13056 , 
         \uart_rx1/n12539 , \uart_rx1/n13059 , \uart_rx1/n12756 , 
         \uart_rx1/n12792 , \uart_rx1/n12594 , \uart_rx1/n13065 , 
         \uart_rx1/n12764 , \uart_rx1/n12774 , n7791, n41, n7785, n7783, n7787, 
         n2540, n7849, n7779, n2541, n7775, n7771, n7769, n7845, n7847, n7819, 
         n7837, n2512, n7829, n7825, n2506, n2505, n2373, n2379, \CIC1Sin/n24 , 
         \CIC1Sin/n17 , \CIC1Sin/n20 , \CIC1Sin/n19 , \CIC1Sin/n23 , 
         \CIC1Sin/n25 , \CIC1Sin/n13066 , \CIC1Sin/n13071 , \CIC1Sin/n16 , 
         \CIC1Sin/n21 , \CIC1Sin/n13178 , n2384, \CIC1Cos/n7 , 
         \CIC1Cos/n13194 , \CIC1Cos/n14 , \CIC1Cos/n13_adj_2487 , PWMOutN4_c, 
         sinGen_c, GND_net, VCCI;

  PWM1_SLICE_0 \PWM1/SLICE_0 ( .A0(\PWM1/counter_9 ), .DI0(\PWM1/n46 ), 
    .CLK(osc_clk), .FCI(\PWM1/n11509 ), .F0(\PWM1/n46 ), .Q0(\PWM1/counter_9 ));
  PWM1_SLICE_1 \PWM1/SLICE_1 ( .A1(\PWM1/counter_8 ), .A0(\PWM1/counter_7 ), 
    .DI1(\PWM1/n47 ), .DI0(\PWM1/n48 ), .CLK(osc_clk), .FCI(\PWM1/n11508 ), 
    .F0(\PWM1/n48 ), .Q0(\PWM1/counter_7 ), .F1(\PWM1/n47 ), 
    .Q1(\PWM1/counter_8 ), .FCO(\PWM1/n11509 ));
  PWM1_SLICE_2 \PWM1/SLICE_2 ( .A1(\PWM1/counter_6 ), .A0(\PWM1/counter_5 ), 
    .DI1(\PWM1/n49 ), .DI0(\PWM1/n50 ), .CLK(osc_clk), .FCI(\PWM1/n11507 ), 
    .F0(\PWM1/n50 ), .Q0(\PWM1/counter_5 ), .F1(\PWM1/n49 ), 
    .Q1(\PWM1/counter_6 ), .FCO(\PWM1/n11508 ));
  PWM1_SLICE_3 \PWM1/SLICE_3 ( .A1(\PWM1/counter_4 ), .A0(\PWM1/counter_3 ), 
    .DI1(\PWM1/n51 ), .DI0(\PWM1/n52 ), .CLK(osc_clk), .FCI(\PWM1/n11506 ), 
    .F0(\PWM1/n52 ), .Q0(\PWM1/counter_3 ), .F1(\PWM1/n51 ), 
    .Q1(\PWM1/counter_4 ), .FCO(\PWM1/n11507 ));
  PWM1_SLICE_4 \PWM1/SLICE_4 ( .A1(\PWM1/counter_2 ), .A0(\PWM1/counter_1 ), 
    .DI1(\PWM1/n53 ), .DI0(\PWM1/n54 ), .CLK(osc_clk), .FCI(\PWM1/n11505 ), 
    .F0(\PWM1/n54 ), .Q0(\PWM1/counter_1 ), .F1(\PWM1/n53 ), 
    .Q1(\PWM1/counter_2 ), .FCO(\PWM1/n11506 ));
  PWM1_SLICE_5 \PWM1/SLICE_5 ( .A1(\PWM1/counter_0 ), .DI1(\PWM1/n55 ), 
    .CLK(osc_clk), .F1(\PWM1/n55 ), .Q1(\PWM1/counter_0 ), .FCO(\PWM1/n11505 ));
  PWM1_SLICE_6 \PWM1/SLICE_6 ( .B0(\PWM1/counter_9 ), .A0(\PWM1/DataInReg_9 ), 
    .DI1(\PWM1/PWMOut_N_1869 ), .CLK(osc_clk), .FCI(\PWM1/n10974 ), 
    .F1(\PWM1/PWMOut_N_1869 ), .Q1(PWMOutP4_c));
  PWM1_SLICE_7 \PWM1/SLICE_7 ( .B1(\PWM1/counter_8 ), .A1(\PWM1/DataInReg_8 ), 
    .B0(\PWM1/counter_7 ), .A0(\PWM1/DataInReg_7 ), .FCI(\PWM1/n10973 ), 
    .FCO(\PWM1/n10974 ));
  PWM1_SLICE_8 \PWM1/SLICE_8 ( .B1(\PWM1/counter_6 ), .A1(\PWM1/DataInReg_6 ), 
    .B0(\PWM1/counter_5 ), .A0(\PWM1/DataInReg_5 ), .FCI(\PWM1/n10972 ), 
    .FCO(\PWM1/n10973 ));
  PWM1_SLICE_9 \PWM1/SLICE_9 ( .B1(\PWM1/counter_4 ), .A1(\PWM1/DataInReg_4 ), 
    .B0(\PWM1/counter_3 ), .A0(\PWM1/DataInReg_3 ), .FCI(\PWM1/n10971 ), 
    .FCO(\PWM1/n10972 ));
  PWM1_SLICE_10 \PWM1/SLICE_10 ( .B1(\PWM1/counter_2 ), 
    .A1(\PWM1/DataInReg_2 ), .B0(\PWM1/counter_1 ), .A0(\PWM1/DataInReg_1 ), 
    .FCI(\PWM1/n10970 ), .FCO(\PWM1/n10971 ));
  PWM1_SLICE_11 \PWM1/SLICE_11 ( .B1(\PWM1/counter_0 ), 
    .A1(\PWM1/DataInReg_0 ), .FCO(\PWM1/n10970 ));
  uart_rx1_SLICE_12 \uart_rx1/SLICE_12 ( .A1(\uart_rx1/UartClk[2] ), 
    .A0(\uart_rx1/n2 ), .DI1(\uart_rx1/n18 ), .DI0(\uart_rx1/n19 ), 
    .CLK(osc_clk), .FCI(\uart_rx1/n11510 ), .F0(\uart_rx1/n19 ), 
    .Q0(\uart_rx1/n2 ), .F1(\uart_rx1/n18 ), .Q1(\uart_rx1/UartClk[2] ));
  uart_rx1_SLICE_13 \uart_rx1/SLICE_13 ( .A1(\uart_rx1/n3 ), 
    .DI1(\uart_rx1/n20 ), .CLK(osc_clk), .F1(\uart_rx1/n20 ), 
    .Q1(\uart_rx1/n3 ), .FCO(\uart_rx1/n11510 ));
  uart_rx1_SLICE_14 \uart_rx1/SLICE_14 ( .A0(\uart_rx1/r_Clock_Count_15 ), 
    .DI0(\uart_rx1/n70 ), .CE(\uart_rx1/UartClk_2_enable_30 ), 
    .LSR(\uart_rx1/n8431 ), .CLK(\uart_rx1/UartClk[2] ), 
    .FCI(\uart_rx1/n12113 ), .F0(\uart_rx1/n70 ), 
    .Q0(\uart_rx1/r_Clock_Count_15 ));
  uart_rx1_SLICE_15 \uart_rx1/SLICE_15 ( .A1(\uart_rx1/r_Clock_Count_14 ), 
    .A0(\uart_rx1/r_Clock_Count_13 ), .DI1(\uart_rx1/n71 ), 
    .DI0(\uart_rx1/n72 ), .CE(\uart_rx1/UartClk_2_enable_30 ), 
    .LSR(\uart_rx1/n8431 ), .CLK(\uart_rx1/UartClk[2] ), 
    .FCI(\uart_rx1/n12112 ), .F0(\uart_rx1/n72 ), 
    .Q0(\uart_rx1/r_Clock_Count_13 ), .F1(\uart_rx1/n71 ), 
    .Q1(\uart_rx1/r_Clock_Count_14 ), .FCO(\uart_rx1/n12113 ));
  uart_rx1_SLICE_16 \uart_rx1/SLICE_16 ( .A1(\uart_rx1/r_Clock_Count_12 ), 
    .A0(\uart_rx1/r_Clock_Count_11 ), .DI1(\uart_rx1/n73 ), 
    .DI0(\uart_rx1/n74 ), .CE(\uart_rx1/UartClk_2_enable_30 ), 
    .LSR(\uart_rx1/n8431 ), .CLK(\uart_rx1/UartClk[2] ), 
    .FCI(\uart_rx1/n12111 ), .F0(\uart_rx1/n74 ), 
    .Q0(\uart_rx1/r_Clock_Count_11 ), .F1(\uart_rx1/n73 ), 
    .Q1(\uart_rx1/r_Clock_Count_12 ), .FCO(\uart_rx1/n12112 ));
  uart_rx1_SLICE_17 \uart_rx1/SLICE_17 ( .A1(\uart_rx1/r_Clock_Count_10 ), 
    .A0(\uart_rx1/r_Clock_Count_9 ), .DI1(\uart_rx1/n75 ), 
    .DI0(\uart_rx1/n76 ), .CE(\uart_rx1/UartClk_2_enable_30 ), 
    .LSR(\uart_rx1/n8431 ), .CLK(\uart_rx1/UartClk[2] ), 
    .FCI(\uart_rx1/n12110 ), .F0(\uart_rx1/n76 ), 
    .Q0(\uart_rx1/r_Clock_Count_9 ), .F1(\uart_rx1/n75 ), 
    .Q1(\uart_rx1/r_Clock_Count_10 ), .FCO(\uart_rx1/n12111 ));
  uart_rx1_SLICE_18 \uart_rx1/SLICE_18 ( .A1(\uart_rx1/r_Clock_Count_8 ), 
    .A0(\uart_rx1/r_Clock_Count_7 ), .DI1(\uart_rx1/n77 ), 
    .DI0(\uart_rx1/n78 ), .CE(\uart_rx1/UartClk_2_enable_30 ), 
    .LSR(\uart_rx1/n8431 ), .CLK(\uart_rx1/UartClk[2] ), 
    .FCI(\uart_rx1/n12109 ), .F0(\uart_rx1/n78 ), 
    .Q0(\uart_rx1/r_Clock_Count_7 ), .F1(\uart_rx1/n77 ), 
    .Q1(\uart_rx1/r_Clock_Count_8 ), .FCO(\uart_rx1/n12110 ));
  uart_rx1_SLICE_19 \uart_rx1/SLICE_19 ( .A1(\uart_rx1/r_Clock_Count_6 ), 
    .A0(\uart_rx1/r_Clock_Count_5 ), .DI1(\uart_rx1/n79 ), 
    .DI0(\uart_rx1/n80 ), .CE(\uart_rx1/UartClk_2_enable_30 ), 
    .LSR(\uart_rx1/n8431 ), .CLK(\uart_rx1/UartClk[2] ), 
    .FCI(\uart_rx1/n12108 ), .F0(\uart_rx1/n80 ), 
    .Q0(\uart_rx1/r_Clock_Count_5 ), .F1(\uart_rx1/n79 ), 
    .Q1(\uart_rx1/r_Clock_Count_6 ), .FCO(\uart_rx1/n12109 ));
  uart_rx1_SLICE_20 \uart_rx1/SLICE_20 ( .A1(\uart_rx1/r_Clock_Count_4 ), 
    .A0(\uart_rx1/r_Clock_Count_3 ), .DI1(\uart_rx1/n81 ), 
    .DI0(\uart_rx1/n82 ), .CE(\uart_rx1/UartClk_2_enable_30 ), 
    .LSR(\uart_rx1/n8431 ), .CLK(\uart_rx1/UartClk[2] ), 
    .FCI(\uart_rx1/n12107 ), .F0(\uart_rx1/n82 ), 
    .Q0(\uart_rx1/r_Clock_Count_3 ), .F1(\uart_rx1/n81 ), 
    .Q1(\uart_rx1/r_Clock_Count_4 ), .FCO(\uart_rx1/n12108 ));
  uart_rx1_SLICE_21 \uart_rx1/SLICE_21 ( .A1(\uart_rx1/r_Clock_Count_2 ), 
    .A0(\uart_rx1/r_Clock_Count_1 ), .DI1(\uart_rx1/n83 ), 
    .DI0(\uart_rx1/n84 ), .CE(\uart_rx1/UartClk_2_enable_30 ), 
    .LSR(\uart_rx1/n8431 ), .CLK(\uart_rx1/UartClk[2] ), 
    .FCI(\uart_rx1/n12106 ), .F0(\uart_rx1/n84 ), 
    .Q0(\uart_rx1/r_Clock_Count_1 ), .F1(\uart_rx1/n83 ), 
    .Q1(\uart_rx1/r_Clock_Count_2 ), .FCO(\uart_rx1/n12107 ));
  uart_rx1_SLICE_22 \uart_rx1/SLICE_22 ( .A1(\uart_rx1/r_Clock_Count_0 ), 
    .DI1(\uart_rx1/n85 ), .CE(\uart_rx1/UartClk_2_enable_30 ), 
    .LSR(\uart_rx1/n8431 ), .CLK(\uart_rx1/UartClk[2] ), .F1(\uart_rx1/n85 ), 
    .Q1(\uart_rx1/r_Clock_Count_0 ), .FCO(\uart_rx1/n12106 ));
  SLICE_23 SLICE_23( .A1(phase_inc_carrGen_63), .A0(phase_inc_carrGen_62), 
    .FCI(n11047), .F0(n1093), .F1(n1092));
  SLICE_24 SLICE_24( .A1(phase_inc_carrGen_61), .A0(phase_inc_carrGen_60), 
    .FCI(n11046), .F0(n1095), .F1(n1094), .FCO(n11047));
  SLICE_25 SLICE_25( .A1(phase_inc_carrGen_59), .A0(phase_inc_carrGen_58), 
    .FCI(n11045), .F0(n1097), .F1(n1096), .FCO(n11046));
  SLICE_26 SLICE_26( .A1(phase_inc_carrGen_57), .A0(phase_inc_carrGen_56), 
    .FCI(n11044), .F0(n1099), .F1(n1098), .FCO(n11045));
  SLICE_27 SLICE_27( .A1(phase_inc_carrGen_55), .A0(phase_inc_carrGen_54), 
    .FCI(n11043), .F0(n1101), .F1(n1100), .FCO(n11044));
  SLICE_28 SLICE_28( .A1(phase_inc_carrGen_53), .A0(phase_inc_carrGen_52), 
    .FCI(n11042), .F0(n1103), .F1(n1102), .FCO(n11043));
  SLICE_29 SLICE_29( .A1(phase_inc_carrGen_51), .A0(phase_inc_carrGen_50), 
    .FCI(n11041), .F0(n1105), .F1(n1104), .FCO(n11042));
  SLICE_30 SLICE_30( .A1(phase_inc_carrGen_49), .A0(phase_inc_carrGen_48), 
    .FCI(n11040), .F0(n1107), .F1(n1106), .FCO(n11041));
  SLICE_31 SLICE_31( .A1(phase_inc_carrGen_47), .A0(phase_inc_carrGen_46), 
    .FCI(n11039), .F0(n1109), .F1(n1108), .FCO(n11040));
  SLICE_32 SLICE_32( .A1(phase_inc_carrGen_45), .A0(phase_inc_carrGen_44), 
    .FCI(n11038), .F0(n1111), .F1(n1110), .FCO(n11039));
  SLICE_33 SLICE_33( .A1(phase_inc_carrGen_43), .A0(phase_inc_carrGen_42), 
    .FCI(n11037), .F0(n1113), .F1(n1112), .FCO(n11038));
  SLICE_34 SLICE_34( .A1(phase_inc_carrGen_41), .A0(phase_inc_carrGen_40), 
    .FCI(n11036), .F0(n1115), .F1(n1114), .FCO(n11037));
  SLICE_35 SLICE_35( .A1(phase_inc_carrGen_39), .A0(phase_inc_carrGen_38), 
    .FCI(n11035), .F0(n1117), .F1(n1116), .FCO(n11036));
  SLICE_36 SLICE_36( .A1(phase_inc_carrGen_37), .A0(phase_inc_carrGen_36), 
    .FCI(n11034), .F0(n1119), .F1(n1118), .FCO(n11035));
  SLICE_37 SLICE_37( .A1(phase_inc_carrGen_35), .A0(phase_inc_carrGen_34), 
    .FCI(n11033), .F0(n1121), .F1(n1120), .FCO(n11034));
  SLICE_38 SLICE_38( .A1(phase_inc_carrGen_33), .A0(phase_inc_carrGen_32), 
    .FCI(n11032), .F0(n1123), .F1(n1122), .FCO(n11033));
  SLICE_39 SLICE_39( .A1(phase_inc_carrGen_31), .A0(phase_inc_carrGen_30), 
    .FCI(n11031), .F0(n1125), .F1(n1124), .FCO(n11032));
  SLICE_40 SLICE_40( .A1(phase_inc_carrGen_29), .A0(phase_inc_carrGen_28), 
    .FCI(n11030), .F0(n1127), .F1(n1126), .FCO(n11031));
  SLICE_41 SLICE_41( .A1(phase_inc_carrGen_27), .A0(phase_inc_carrGen_26), 
    .FCI(n11029), .F0(n1129), .F1(n1128), .FCO(n11030));
  SLICE_42 SLICE_42( .A1(phase_inc_carrGen_25), .A0(phase_inc_carrGen_24), 
    .FCI(n11028), .F0(n1131), .F1(n1130), .FCO(n11029));
  SLICE_43 SLICE_43( .A1(phase_inc_carrGen_23), .A0(phase_inc_carrGen_22), 
    .FCI(n11027), .F0(n1133), .F1(n1132), .FCO(n11028));
  SLICE_44 SLICE_44( .A1(phase_inc_carrGen_21), .A0(phase_inc_carrGen_20), 
    .FCI(n11026), .F0(n1135), .F1(n1134), .FCO(n11027));
  SLICE_45 SLICE_45( .A1(phase_inc_carrGen_19), .A0(phase_inc_carrGen_18), 
    .FCI(n11025), .F0(n1137), .F1(n1136), .FCO(n11026));
  SLICE_46 SLICE_46( .A1(phase_inc_carrGen_17), .A0(phase_inc_carrGen_16), 
    .FCI(n11024), .F0(n1139), .F1(n1138), .FCO(n11025));
  SLICE_47 SLICE_47( .A1(phase_inc_carrGen_15), .A0(phase_inc_carrGen_14), 
    .FCI(n11023), .F0(n1141), .F1(n1140), .FCO(n11024));
  SLICE_48 SLICE_48( .A1(phase_inc_carrGen_13), .A0(phase_inc_carrGen_12), 
    .FCI(n11022), .F0(n1143), .F1(n1142), .FCO(n11023));
  SLICE_49 SLICE_49( .A1(phase_inc_carrGen_11), .A0(phase_inc_carrGen_10), 
    .FCI(n11021), .F0(n1145), .F1(n1144), .FCO(n11022));
  SLICE_50 SLICE_50( .A1(phase_inc_carrGen_9), .A0(phase_inc_carrGen_8), 
    .FCI(n11020), .F0(n1147), .F1(n1146), .FCO(n11021));
  SLICE_51 SLICE_51( .A1(phase_inc_carrGen_7), .A0(phase_inc_carrGen_6), 
    .FCI(n11019), .F0(n1149), .F1(n1148), .FCO(n11020));
  SLICE_52 SLICE_52( .A1(phase_inc_carrGen_5), .A0(phase_inc_carrGen_4), 
    .FCI(n11018), .F0(n1151), .F1(n1150), .FCO(n11019));
  SLICE_53 SLICE_53( .A1(phase_inc_carrGen_3), .A0(phase_inc_carrGen_2), 
    .FCI(n11017), .F0(n1153), .F1(n1152), .FCO(n11018));
  SLICE_54 SLICE_54( .A1(phase_inc_carrGen_1), .F1(n1154), .FCO(n11017));
  SLICE_55 SLICE_55( .D1(phase_inc_carrGen_63), .C1(n8036), .B1(n13062), 
    .A1(n3634), .D0(phase_inc_carrGen_62), .C0(n8034), .B0(n13062), .A0(n3634), 
    .DI1(n2817), .DI0(n2818), .CE(osc_clk_enable_1471), .CLK(osc_clk), 
    .FCI(n11009), .F0(n2818), .Q0(phase_inc_carrGen_62), .F1(n2817), 
    .Q1(phase_inc_carrGen_63));
  SLICE_56 SLICE_56( .D1(phase_inc_carrGen_61), .C1(n8032), .B1(n13062), 
    .A1(n3634), .D0(phase_inc_carrGen_60), .C0(n2302), .B0(n13062), .A0(n3634), 
    .DI1(n2819), .DI0(n2820), .CE(osc_clk_enable_1471), .CLK(osc_clk), 
    .FCI(n11008), .F0(n2820), .Q0(phase_inc_carrGen_60), .F1(n2819), 
    .Q1(phase_inc_carrGen_61), .FCO(n11009));
  SLICE_57 SLICE_57( .D1(phase_inc_carrGen_59), .C1(n2303), .B1(n13062), 
    .A1(n3634), .D0(phase_inc_carrGen_58), .C0(n2304), .B0(n13062), .A0(n3634), 
    .DI1(n2821), .DI0(n2822), .CE(osc_clk_enable_1471), .CLK(osc_clk), 
    .FCI(n11007), .F0(n2822), .Q0(phase_inc_carrGen_58), .F1(n2821), 
    .Q1(phase_inc_carrGen_59), .FCO(n11008));
  SLICE_58 SLICE_58( .D1(phase_inc_carrGen_57), .C1(n2305), .B1(n13062), 
    .A1(n3634), .D0(phase_inc_carrGen_56), .C0(n2306), .B0(n13062), .A0(n3634), 
    .DI1(n2823), .DI0(n2824), .CE(osc_clk_enable_1471), .CLK(osc_clk), 
    .FCI(n11006), .F0(n2824), .Q0(phase_inc_carrGen_56), .F1(n2823), 
    .Q1(phase_inc_carrGen_57), .FCO(n11007));
  SLICE_59 SLICE_59( .D1(phase_inc_carrGen_55), .C1(n2307), .B1(n13062), 
    .A1(n3634), .D0(phase_inc_carrGen_54), .C0(n2308), .B0(n13062), .A0(n3634), 
    .DI1(n2825), .DI0(n2826), .CE(osc_clk_enable_1471), .CLK(osc_clk), 
    .FCI(n11005), .F0(n2826), .Q0(phase_inc_carrGen_54), .F1(n2825), 
    .Q1(phase_inc_carrGen_55), .FCO(n11006));
  SLICE_60 SLICE_60( .D1(phase_inc_carrGen_53), .C1(n2309), .B1(n13062), 
    .A1(n3634), .D0(phase_inc_carrGen_52), .C0(n8030), .B0(n13062), .A0(n3634), 
    .DI1(n2827), .DI0(n2828), .CE(osc_clk_enable_1461), .CLK(osc_clk), 
    .FCI(n11004), .F0(n2828), .Q0(phase_inc_carrGen_52), .F1(n2827), 
    .Q1(phase_inc_carrGen_53), .FCO(n11005));
  SLICE_61 SLICE_61( .D1(phase_inc_carrGen_51), .C1(n2311), .B1(n13062), 
    .A1(n3634), .D0(phase_inc_carrGen_50), .C0(n2312), .B0(n13062), .A0(n3648), 
    .DI1(n2829), .DI0(n2830), .CE(osc_clk_enable_1461), .CLK(osc_clk), 
    .FCI(n11003), .F0(n2830), .Q0(phase_inc_carrGen_50), .F1(n2829), 
    .Q1(phase_inc_carrGen_51), .FCO(n11004));
  SLICE_62 SLICE_62( .D1(phase_inc_carrGen_49), .C1(n2313), .B1(n13062), 
    .A1(n3648), .D0(phase_inc_carrGen_48), .C0(n2314), .B0(n13062), .A0(n3648), 
    .DI1(n2831), .DI0(n2832), .CE(osc_clk_enable_1461), .CLK(osc_clk), 
    .FCI(n11002), .F0(n2832), .Q0(phase_inc_carrGen_48), .F1(n2831), 
    .Q1(phase_inc_carrGen_49), .FCO(n11003));
  SLICE_63 SLICE_63( .D1(phase_inc_carrGen_47), .C1(n2315), .B1(n3652), 
    .A1(n13062), .D0(phase_inc_carrGen_46), .C0(n2316), .B0(n3652), 
    .A0(n13062), .DI1(n2833), .DI0(n2834), .CE(osc_clk_enable_1461), 
    .CLK(osc_clk), .FCI(n11001), .F0(n2834), .Q0(phase_inc_carrGen_46), 
    .F1(n2833), .Q1(phase_inc_carrGen_47), .FCO(n11002));
  SLICE_64 SLICE_64( .D1(phase_inc_carrGen_45), .C1(n2317), .B1(n13062), 
    .A1(n3634), .D0(phase_inc_carrGen_44), .C0(n2318), .B0(n13062), .A0(n3652), 
    .DI1(n2835), .DI0(n2836), .CE(osc_clk_enable_1461), .CLK(osc_clk), 
    .FCI(n11000), .F0(n2836), .Q0(phase_inc_carrGen_44), .F1(n2835), 
    .Q1(phase_inc_carrGen_45), .FCO(n11001));
  SLICE_65 SLICE_65( .D1(phase_inc_carrGen_43), .C1(n2319), .B1(n3673), 
    .A1(n13062), .D0(phase_inc_carrGen_42), .C0(n2320), .B0(n13062), 
    .A0(n3673), .DI1(n2837), .DI0(n2838), .CE(osc_clk_enable_1461), 
    .CLK(osc_clk), .FCI(n10999), .F0(n2838), .Q0(phase_inc_carrGen_42), 
    .F1(n2837), .Q1(phase_inc_carrGen_43), .FCO(n11000));
  SLICE_66 SLICE_66( .D1(phase_inc_carrGen_41), .C1(n8028), .B1(n3673), 
    .A1(n13062), .D0(phase_inc_carrGen_40), .C0(n2322), .B0(n13062), 
    .A0(n3648), .DI1(n2839), .DI0(n2840), .CE(osc_clk_enable_1461), 
    .CLK(osc_clk), .FCI(n10998), .F0(n2840), .Q0(phase_inc_carrGen_40), 
    .F1(n2839), .Q1(phase_inc_carrGen_41), .FCO(n10999));
  SLICE_67 SLICE_67( .D1(phase_inc_carrGen_39), .C1(n2323), .B1(n13062), 
    .A1(n3634), .D0(phase_inc_carrGen_38), .C0(n2324), .B0(n13062), .A0(n3634), 
    .DI1(n2841), .DI0(n2842), .CE(osc_clk_enable_1461), .CLK(osc_clk), 
    .FCI(n10997), .F0(n2842), .Q0(phase_inc_carrGen_38), .F1(n2841), 
    .Q1(phase_inc_carrGen_39), .FCO(n10998));
  SLICE_68 SLICE_68( .D1(phase_inc_carrGen_37), .C1(n2325), .B1(n13062), 
    .A1(n3669), .D0(phase_inc_carrGen_36), .C0(n2326), .B0(n13062), .A0(n3652), 
    .DI1(n2843), .DI0(n2844), .CE(osc_clk_enable_1461), .CLK(osc_clk), 
    .FCI(n10996), .F0(n2844), .Q0(phase_inc_carrGen_36), .F1(n2843), 
    .Q1(phase_inc_carrGen_37), .FCO(n10997));
  SLICE_69 SLICE_69( .D1(phase_inc_carrGen_35), .C1(n2327), .B1(n13062), 
    .A1(n3634), .D0(phase_inc_carrGen_34), .C0(n2328), .B0(n13062), .A0(n3652), 
    .DI1(n2845), .DI0(n2846), .CE(osc_clk_enable_1461), .CLK(osc_clk), 
    .FCI(n10995), .F0(n2846), .Q0(phase_inc_carrGen_34), .F1(n2845), 
    .Q1(phase_inc_carrGen_35), .FCO(n10996));
  SLICE_70 SLICE_70( .D1(phase_inc_carrGen_33), .C1(n2329), .B1(n13062), 
    .A1(n3669), .D0(phase_inc_carrGen_32), .C0(n2330), .B0(n13062), .A0(n3648), 
    .DI1(n2847), .DI0(n2848), .CE(osc_clk_enable_1461), .CLK(osc_clk), 
    .FCI(n10994), .F0(n2848), .Q0(phase_inc_carrGen_32), .F1(n2847), 
    .Q1(phase_inc_carrGen_33), .FCO(n10995));
  SLICE_71 SLICE_71( .D1(phase_inc_carrGen_31), .C1(n2331), .B1(n13062), 
    .A1(n3683), .D0(phase_inc_carrGen_30), .C0(n2332), .B0(n13062), .A0(n3648), 
    .DI1(n2849), .DI0(n2850), .CE(osc_clk_enable_1461), .CLK(osc_clk), 
    .FCI(n10993), .F0(n2850), .Q0(phase_inc_carrGen_30), .F1(n2849), 
    .Q1(phase_inc_carrGen_31), .FCO(n10994));
  SLICE_72 SLICE_72( .D1(phase_inc_carrGen_29), .C1(n2333), .B1(n13062), 
    .A1(n3673), .D0(phase_inc_carrGen_28), .C0(n2334), .B0(n3673), .A0(n13062), 
    .DI1(n2851), .DI0(n2852), .CE(osc_clk_enable_1461), .CLK(osc_clk), 
    .FCI(n10992), .F0(n2852), .Q0(phase_inc_carrGen_28), .F1(n2851), 
    .Q1(phase_inc_carrGen_29), .FCO(n10993));
  SLICE_73 SLICE_73( .D1(phase_inc_carrGen_27), .C1(n2335), .B1(n13062), 
    .A1(n3669), .D0(phase_inc_carrGen_26), .C0(n2336), .B0(n13062), .A0(n3634), 
    .DI1(n2853), .DI0(n2854), .CE(osc_clk_enable_1461), .CLK(osc_clk), 
    .FCI(n10991), .F0(n2854), .Q0(phase_inc_carrGen_26), .F1(n2853), 
    .Q1(phase_inc_carrGen_27), .FCO(n10992));
  SLICE_74 SLICE_74( .D1(phase_inc_carrGen_25), .C1(n2337), .B1(n13062), 
    .A1(n3634), .D0(phase_inc_carrGen_24), .C0(n2338), .B0(n13062), .A0(n3634), 
    .DI1(n2855), .DI0(n2856), .CE(osc_clk_enable_1461), .CLK(osc_clk), 
    .FCI(n10990), .F0(n2856), .Q0(phase_inc_carrGen_24), .F1(n2855), 
    .Q1(phase_inc_carrGen_25), .FCO(n10991));
  SLICE_75 SLICE_75( .D1(phase_inc_carrGen_23), .C1(n2339), .B1(n13062), 
    .A1(n3673), .D0(phase_inc_carrGen_22), .C0(n2340), .B0(n13062), .A0(n3652), 
    .DI1(n2857), .DI0(n2858), .CE(osc_clk_enable_1461), .CLK(osc_clk), 
    .FCI(n10989), .F0(n2858), .Q0(phase_inc_carrGen_22), .F1(n2857), 
    .Q1(phase_inc_carrGen_23), .FCO(n10990));
  SLICE_76 SLICE_76( .D1(phase_inc_carrGen_21), .C1(n2341), .B1(n13062), 
    .A1(n3648), .D0(phase_inc_carrGen_20), .C0(n2342), .B0(n13062), .A0(n3634), 
    .DI1(n2859), .DI0(n2860), .CE(osc_clk_enable_1461), .CLK(osc_clk), 
    .FCI(n10988), .F0(n2860), .Q0(phase_inc_carrGen_20), .F1(n2859), 
    .Q1(phase_inc_carrGen_21), .FCO(n10989));
  SLICE_77 SLICE_77( .D1(phase_inc_carrGen_19), .C1(n8026), .B1(n13062), 
    .A1(n3669), .D0(phase_inc_carrGen_18), .C0(n2344), .B0(n13062), .A0(n3673), 
    .DI1(n2861), .DI0(n2862), .CE(osc_clk_enable_1461), .CLK(osc_clk), 
    .FCI(n10987), .F0(n2862), .Q0(phase_inc_carrGen_18), .F1(n2861), 
    .Q1(phase_inc_carrGen_19), .FCO(n10988));
  SLICE_78 SLICE_78( .D1(phase_inc_carrGen_17), .C1(n8024), .B1(n3652), 
    .A1(n13062), .D0(phase_inc_carrGen_16), .C0(n2346), .B0(n13062), 
    .A0(n3683), .DI1(n2863), .DI0(n2864), .CE(osc_clk_enable_1461), 
    .CLK(osc_clk), .FCI(n10986), .F0(n2864), .Q0(phase_inc_carrGen_16), 
    .F1(n2863), .Q1(phase_inc_carrGen_17), .FCO(n10987));
  SLICE_79 SLICE_79( .D1(phase_inc_carrGen_15), .C1(n2347), .B1(n13062), 
    .A1(n3669), .D0(phase_inc_carrGen_14), .C0(n2348), .B0(n13062), .A0(n3652), 
    .DI1(n2865), .DI0(n2866), .CE(osc_clk_enable_1461), .CLK(osc_clk), 
    .FCI(n10985), .F0(n2866), .Q0(phase_inc_carrGen_14), .F1(n2865), 
    .Q1(phase_inc_carrGen_15), .FCO(n10986));
  SLICE_80 SLICE_80( .D1(phase_inc_carrGen_13), .C1(n8022), .B1(n13062), 
    .A1(n3683), .D0(phase_inc_carrGen_12), .C0(n2350), .B0(n13062), .A0(n3652), 
    .DI1(n2867), .DI0(n2868), .CE(osc_clk_enable_1461), .CLK(osc_clk), 
    .FCI(n10984), .F0(n2868), .Q0(phase_inc_carrGen_12), .F1(n2867), 
    .Q1(phase_inc_carrGen_13), .FCO(n10985));
  SLICE_81 SLICE_81( .D1(phase_inc_carrGen_11), .C1(n2351), .B1(n13062), 
    .A1(n3634), .D0(phase_inc_carrGen_10), .C0(n2352), .B0(n13062), .A0(n3683), 
    .DI1(n2869), .DI0(n2870), .CE(osc_clk_enable_1461), .CLK(osc_clk), 
    .FCI(n10983), .F0(n2870), .Q0(phase_inc_carrGen_10), .F1(n2869), 
    .Q1(phase_inc_carrGen_11), .FCO(n10984));
  SLICE_82 SLICE_82( .D1(phase_inc_carrGen_9), .C1(n2353), .B1(n13062), 
    .A1(n3673), .D0(phase_inc_carrGen_8), .C0(n2354), .B0(n3673), .A0(n13062), 
    .DI1(n2871), .DI0(n2872), .CE(osc_clk_enable_1461), .CLK(osc_clk), 
    .FCI(n10982), .F0(n2872), .Q0(phase_inc_carrGen_8), .F1(n2871), 
    .Q1(phase_inc_carrGen_9), .FCO(n10983));
  SLICE_83 SLICE_83( .D1(phase_inc_carrGen_7), .C1(n2355), .B1(n13062), 
    .A1(n3673), .D0(phase_inc_carrGen_6), .C0(n8020), .B0(n13062), .A0(n3669), 
    .DI1(n2873), .DI0(n2874), .CE(osc_clk_enable_1461), .CLK(osc_clk), 
    .FCI(n10981), .F0(n2874), .Q0(phase_inc_carrGen_6), .F1(n2873), 
    .Q1(phase_inc_carrGen_7), .FCO(n10982));
  SLICE_84 SLICE_84( .D1(phase_inc_carrGen_5), .C1(n2357), .B1(n13062), 
    .A1(n3669), .D0(phase_inc_carrGen_4), .C0(n2358), .B0(n13062), .A0(n3669), 
    .DI1(n2875), .DI0(n2876), .CE(osc_clk_enable_1461), .CLK(osc_clk), 
    .FCI(n10980), .F0(n2876), .Q0(phase_inc_carrGen_4), .F1(n2875), 
    .Q1(phase_inc_carrGen_5), .FCO(n10981));
  SLICE_85 SLICE_85( .D1(phase_inc_carrGen_3), .C1(n2359), .B1(n3652), 
    .A1(n13062), .D0(phase_inc_carrGen_2), .C0(n2360), .B0(n3652), .A0(n13062), 
    .DI1(n2877), .DI0(n2878), .CE(osc_clk_enable_1411), .CLK(osc_clk), 
    .FCI(n10979), .F0(n2878), .Q0(phase_inc_carrGen_2), .F1(n2877), 
    .Q1(phase_inc_carrGen_3), .FCO(n10980));
  SLICE_86 SLICE_86( .D1(phase_inc_carrGen_1), .C1(n2361), .B1(n13062), 
    .A1(n3683), .D0(phase_inc_carrGen_0), .C0(n2628), .B0(n13062), .A0(n3673), 
    .DI0(n2880), .CE(osc_clk_enable_1408), .CLK(osc_clk), .FCI(n10978), 
    .F0(n2880), .Q0(phase_inc_carrGen_0), .F1(n2879), .FCO(n10979));
  SLICE_87 SLICE_87( .B1(n13062), .A1(n3634), .FCO(n10978));
  Mixer1_SLICE_88 \Mixer1/SLICE_88 ( .A0(LOCosine_12), .FCI(\Mixer1/n11054 ), 
    .F0(\Mixer1/MixerOutCos_11_N_250_11 ));
  Mixer1_SLICE_89 \Mixer1/SLICE_89 ( .A1(LOCosine_11), .A0(LOCosine_10), 
    .FCI(\Mixer1/n11053 ), .F0(\Mixer1/MixerOutCos_11_N_250_9 ), 
    .F1(\Mixer1/MixerOutCos_11_N_250_10 ), .FCO(\Mixer1/n11054 ));
  Mixer1_SLICE_90 \Mixer1/SLICE_90 ( .A1(LOCosine_9), .A0(LOCosine_8), 
    .FCI(\Mixer1/n11052 ), .F0(\Mixer1/MixerOutCos_11_N_250_7 ), 
    .F1(\Mixer1/MixerOutCos_11_N_250_8 ), .FCO(\Mixer1/n11053 ));
  Mixer1_SLICE_91 \Mixer1/SLICE_91 ( .A1(LOCosine_7), .A0(LOCosine_6), 
    .FCI(\Mixer1/n11051 ), .F0(\Mixer1/MixerOutCos_11_N_250_5 ), 
    .F1(\Mixer1/MixerOutCos_11_N_250_6 ), .FCO(\Mixer1/n11052 ));
  Mixer1_SLICE_92 \Mixer1/SLICE_92 ( .A1(LOCosine_5), .A0(LOCosine_4), 
    .FCI(\Mixer1/n11050 ), .F0(\Mixer1/MixerOutCos_11_N_250_3 ), 
    .F1(\Mixer1/MixerOutCos_11_N_250_4 ), .FCO(\Mixer1/n11051 ));
  Mixer1_SLICE_93 \Mixer1/SLICE_93 ( .A1(LOCosine_3), .A0(LOCosine_2), 
    .FCI(\Mixer1/n11049 ), .F0(\Mixer1/MixerOutCos_11_N_250_1 ), 
    .F1(\Mixer1/MixerOutCos_11_N_250_2 ), .FCO(\Mixer1/n11050 ));
  Mixer1_SLICE_94 \Mixer1/SLICE_94 ( .A1(LOCosine_1), 
    .F1(\Mixer1/MixerOutCos_11_N_250_0 ), .FCO(\Mixer1/n11049 ));
  Mixer1_SLICE_95 \Mixer1/SLICE_95 ( .A0(LOSine_12), .FCI(\Mixer1/n11016 ), 
    .F0(\Mixer1/MixerOutSin_11_N_236_11 ));
  Mixer1_SLICE_96 \Mixer1/SLICE_96 ( .A1(LOSine_11), .A0(LOSine_10), 
    .FCI(\Mixer1/n11015 ), .F0(\Mixer1/MixerOutSin_11_N_236_9 ), 
    .F1(\Mixer1/MixerOutSin_11_N_236_10 ), .FCO(\Mixer1/n11016 ));
  Mixer1_SLICE_97 \Mixer1/SLICE_97 ( .A1(LOSine_9), .A0(LOSine_8), 
    .FCI(\Mixer1/n11014 ), .F0(\Mixer1/MixerOutSin_11_N_236_7 ), 
    .F1(\Mixer1/MixerOutSin_11_N_236_8 ), .FCO(\Mixer1/n11015 ));
  Mixer1_SLICE_98 \Mixer1/SLICE_98 ( .A1(LOSine_7), .A0(LOSine_6), 
    .FCI(\Mixer1/n11013 ), .F0(\Mixer1/MixerOutSin_11_N_236_5 ), 
    .F1(\Mixer1/MixerOutSin_11_N_236_6 ), .FCO(\Mixer1/n11014 ));
  Mixer1_SLICE_99 \Mixer1/SLICE_99 ( .A1(LOSine_5), .A0(LOSine_4), 
    .FCI(\Mixer1/n11012 ), .F0(\Mixer1/MixerOutSin_11_N_236_3 ), 
    .F1(\Mixer1/MixerOutSin_11_N_236_4 ), .FCO(\Mixer1/n11013 ));
  Mixer1_SLICE_100 \Mixer1/SLICE_100 ( .A1(LOSine_3), .A0(LOSine_2), 
    .FCI(\Mixer1/n11011 ), .F0(\Mixer1/MixerOutSin_11_N_236_1 ), 
    .F1(\Mixer1/MixerOutSin_11_N_236_2 ), .FCO(\Mixer1/n11012 ));
  Mixer1_SLICE_101 \Mixer1/SLICE_101 ( .A1(LOSine_1), 
    .F1(\Mixer1/MixerOutSin_11_N_236_0 ), .FCO(\Mixer1/n11011 ));
  SLICE_102 SLICE_102( .A0(phase_inc_carrGen_63), .FCI(n10836), .F0(n1031));
  SLICE_103 SLICE_103( .A1(phase_inc_carrGen_62), .A0(phase_inc_carrGen_61), 
    .FCI(n10835), .F0(n1033), .F1(n1032), .FCO(n10836));
  SLICE_104 SLICE_104( .A1(phase_inc_carrGen_60), .A0(phase_inc_carrGen_59), 
    .FCI(n10834), .F0(n1035), .F1(n1034), .FCO(n10835));
  SLICE_105 SLICE_105( .A1(phase_inc_carrGen_58), .A0(phase_inc_carrGen_57), 
    .FCI(n10833), .F0(n1037), .F1(n1036), .FCO(n10834));
  SLICE_106 SLICE_106( .A1(phase_inc_carrGen_56), .A0(phase_inc_carrGen_55), 
    .FCI(n10832), .F0(n1039), .F1(n1038), .FCO(n10833));
  SLICE_107 SLICE_107( .A1(phase_inc_carrGen_54), .A0(phase_inc_carrGen_53), 
    .FCI(n10831), .F0(n1041), .F1(n1040), .FCO(n10832));
  SLICE_108 SLICE_108( .A1(phase_inc_carrGen_52), .A0(phase_inc_carrGen_51), 
    .FCI(n10830), .F0(n1043), .F1(n1042), .FCO(n10831));
  SLICE_109 SLICE_109( .A1(phase_inc_carrGen_50), .A0(phase_inc_carrGen_49), 
    .FCI(n10829), .F0(n1045), .F1(n1044), .FCO(n10830));
  SLICE_110 SLICE_110( .A1(phase_inc_carrGen_48), .A0(phase_inc_carrGen_47), 
    .FCI(n10828), .F0(n1047), .F1(n1046), .FCO(n10829));
  SLICE_111 SLICE_111( .A1(phase_inc_carrGen_46), .A0(phase_inc_carrGen_45), 
    .FCI(n10827), .F0(n1049), .F1(n1048), .FCO(n10828));
  SLICE_112 SLICE_112( .A1(phase_inc_carrGen_44), .A0(phase_inc_carrGen_43), 
    .FCI(n10826), .F0(n1051), .F1(n1050), .FCO(n10827));
  SLICE_113 SLICE_113( .A1(phase_inc_carrGen_42), .A0(phase_inc_carrGen_41), 
    .FCI(n10825), .F0(n1053), .F1(n1052), .FCO(n10826));
  SLICE_114 SLICE_114( .A1(phase_inc_carrGen_40), .A0(phase_inc_carrGen_39), 
    .FCI(n10824), .F0(n1055), .F1(n1054), .FCO(n10825));
  SLICE_115 SLICE_115( .A1(phase_inc_carrGen_38), .A0(phase_inc_carrGen_37), 
    .FCI(n10823), .F0(n1057), .F1(n1056), .FCO(n10824));
  SLICE_116 SLICE_116( .A1(phase_inc_carrGen_36), .A0(phase_inc_carrGen_35), 
    .FCI(n10822), .F0(n1059), .F1(n1058), .FCO(n10823));
  SLICE_117 SLICE_117( .A1(phase_inc_carrGen_34), .A0(phase_inc_carrGen_33), 
    .FCI(n10821), .F0(n1061), .F1(n1060), .FCO(n10822));
  SLICE_118 SLICE_118( .A1(phase_inc_carrGen_32), .A0(phase_inc_carrGen_31), 
    .FCI(n10820), .F0(n1063), .F1(n1062), .FCO(n10821));
  SLICE_119 SLICE_119( .A1(phase_inc_carrGen_30), .A0(phase_inc_carrGen_29), 
    .FCI(n10819), .F0(n1065), .F1(n1064), .FCO(n10820));
  SLICE_120 SLICE_120( .A1(phase_inc_carrGen_28), .A0(phase_inc_carrGen_27), 
    .FCI(n10818), .F0(n1067), .F1(n1066), .FCO(n10819));
  SLICE_121 SLICE_121( .A1(phase_inc_carrGen_26), .A0(phase_inc_carrGen_25), 
    .FCI(n10817), .F0(n1069), .F1(n1068), .FCO(n10818));
  SLICE_122 SLICE_122( .A1(phase_inc_carrGen_24), .A0(phase_inc_carrGen_23), 
    .FCI(n10816), .F0(n1071), .F1(n1070), .FCO(n10817));
  SLICE_123 SLICE_123( .A1(phase_inc_carrGen_22), .A0(phase_inc_carrGen_21), 
    .FCI(n10815), .F0(n1073), .F1(n1072), .FCO(n10816));
  SLICE_124 SLICE_124( .A1(phase_inc_carrGen_20), .A0(phase_inc_carrGen_19), 
    .FCI(n10814), .F0(n1075), .F1(n1074), .FCO(n10815));
  SLICE_125 SLICE_125( .A1(phase_inc_carrGen_18), .A0(phase_inc_carrGen_17), 
    .FCI(n10813), .F0(n1077), .F1(n1076), .FCO(n10814));
  SLICE_126 SLICE_126( .A1(phase_inc_carrGen_16), .A0(phase_inc_carrGen_15), 
    .FCI(n10812), .F0(n1079), .F1(n1078), .FCO(n10813));
  SLICE_127 SLICE_127( .A1(phase_inc_carrGen_14), .A0(phase_inc_carrGen_13), 
    .FCI(n10811), .F0(n1081), .F1(n1080), .FCO(n10812));
  SLICE_128 SLICE_128( .A1(phase_inc_carrGen_12), .A0(phase_inc_carrGen_11), 
    .FCI(n10810), .F0(n1083), .F1(n1082), .FCO(n10811));
  SLICE_129 SLICE_129( .A1(phase_inc_carrGen_10), .A0(phase_inc_carrGen_9), 
    .FCI(n10809), .F0(n1085), .F1(n1084), .FCO(n10810));
  SLICE_130 SLICE_130( .A1(phase_inc_carrGen_8), .A0(phase_inc_carrGen_7), 
    .FCI(n10808), .F0(n1087), .F1(n1086), .FCO(n10809));
  SLICE_131 SLICE_131( .A1(phase_inc_carrGen_6), .A0(phase_inc_carrGen_5), 
    .FCI(n10807), .F0(n1089), .F1(n1088), .FCO(n10808));
  SLICE_132 SLICE_132( .A1(phase_inc_carrGen_4), .F1(n1090), .FCO(n10807));
  SinCos1_SLICE_133 \SinCos1/SLICE_133 ( .A1(\SinCos1/rom_addr0_r ), 
    .M1(phase_accum_56), .CLK(osc_clk), .F1(\SinCos1/rom_addr0_r_n ), 
    .Q1(\SinCos1/rom_addr0_r ), .FCO(\SinCos1/co0 ));
  SinCos1_SLICE_134 \SinCos1/SLICE_134 ( .A1(\SinCos1/rom_addr0_r_2 ), 
    .A0(\SinCos1/rom_addr0_r_1 ), .M1(phase_accum_58), .CLK(osc_clk), 
    .FCI(\SinCos1/co0 ), .F0(\SinCos1/rom_addr0_r_n_1 ), 
    .F1(\SinCos1/rom_addr0_r_n_2 ), .Q1(\SinCos1/rom_addr0_r_2 ), 
    .FCO(\SinCos1/co1 ));
  SinCos1_SLICE_135 \SinCos1/SLICE_135 ( .A1(\SinCos1/rom_addr0_r_4 ), 
    .A0(\SinCos1/rom_addr0_r_3 ), .M1(phase_accum_60), .CLK(osc_clk), 
    .FCI(\SinCos1/co1 ), .F0(\SinCos1/rom_addr0_r_n_3 ), 
    .F1(\SinCos1/rom_addr0_r_n_4 ), .Q1(\SinCos1/rom_addr0_r_4 ), 
    .FCO(\SinCos1/co2 ));
  SinCos1_SLICE_136 \SinCos1/SLICE_136 ( .A0(\SinCos1/rom_addr0_r_5 ), 
    .FCI(\SinCos1/co2 ), .F0(\SinCos1/rom_addr0_r_n_5 ));
  SinCos1_SLICE_137 \SinCos1/SLICE_137 ( .A1(\SinCos1/rom_dout_2 ), 
    .A0(\SinCos1/rom_dout_1 ), .FCI(\SinCos1/co0_1 ), 
    .F0(\SinCos1/rom_dout_s_n_1 ), .F1(\SinCos1/rom_dout_s_n_2 ), 
    .FCO(\SinCos1/co1_1 ));
  SinCos1_SLICE_138 \SinCos1/SLICE_138 ( .A1(\SinCos1/rom_dout_4 ), 
    .A0(\SinCos1/rom_dout_3 ), .FCI(\SinCos1/co1_1 ), 
    .F0(\SinCos1/rom_dout_s_n_3 ), .F1(\SinCos1/rom_dout_s_n_4 ), 
    .FCO(\SinCos1/co2_1 ));
  SinCos1_SLICE_139 \SinCos1/SLICE_139 ( .A1(\SinCos1/rom_dout_6 ), 
    .A0(\SinCos1/rom_dout_5 ), .FCI(\SinCos1/co2_1 ), 
    .F0(\SinCos1/rom_dout_s_n_5 ), .F1(\SinCos1/rom_dout_s_n_6 ), 
    .FCO(\SinCos1/co3 ));
  SinCos1_SLICE_140 \SinCos1/SLICE_140 ( .A1(\SinCos1/rom_dout_8 ), 
    .A0(\SinCos1/rom_dout_7 ), .FCI(\SinCos1/co3 ), 
    .F0(\SinCos1/rom_dout_s_n_7 ), .F1(\SinCos1/rom_dout_s_n_8 ), 
    .FCO(\SinCos1/co4 ));
  SinCos1_SLICE_141 \SinCos1/SLICE_141 ( .A1(\SinCos1/rom_dout_10 ), 
    .A0(\SinCos1/rom_dout_9 ), .FCI(\SinCos1/co4 ), 
    .F0(\SinCos1/rom_dout_s_n_9 ), .F1(\SinCos1/rom_dout_s_n_10 ), 
    .FCO(\SinCos1/co5 ));
  SinCos1_SLICE_142 \SinCos1/SLICE_142 ( .A1(\SinCos1/rom_dout_12 ), 
    .A0(\SinCos1/rom_dout_11 ), .FCI(\SinCos1/co5 ), 
    .F0(\SinCos1/rom_dout_s_n_11 ), .F1(\SinCos1/rom_dout_s_n_12 ));
  SinCos1_SLICE_143 \SinCos1/SLICE_143 ( .A1(\SinCos1/rom_dout_13 ), 
    .FCO(\SinCos1/co0_2 ));
  SinCos1_SLICE_144 \SinCos1/SLICE_144 ( .A1(\SinCos1/rom_dout_15 ), 
    .A0(\SinCos1/rom_dout_14 ), .FCI(\SinCos1/co0_2 ), 
    .F0(\SinCos1/rom_dout_c_n_1 ), .F1(\SinCos1/rom_dout_c_n_2 ), 
    .FCO(\SinCos1/co1_2 ));
  SinCos1_SLICE_145 \SinCos1/SLICE_145 ( .A1(\SinCos1/rom_dout_17 ), 
    .A0(\SinCos1/rom_dout_16 ), .FCI(\SinCos1/co1_2 ), 
    .F0(\SinCos1/rom_dout_c_n_3 ), .F1(\SinCos1/rom_dout_c_n_4 ), 
    .FCO(\SinCos1/co2_2 ));
  SinCos1_SLICE_146 \SinCos1/SLICE_146 ( .A1(\SinCos1/rom_dout_19 ), 
    .A0(\SinCos1/rom_dout_18 ), .FCI(\SinCos1/co2_2 ), 
    .F0(\SinCos1/rom_dout_c_n_5 ), .F1(\SinCos1/rom_dout_c_n_6 ), 
    .FCO(\SinCos1/co3_1 ));
  SinCos1_SLICE_147 \SinCos1/SLICE_147 ( .A1(\SinCos1/rom_dout_21 ), 
    .A0(\SinCos1/rom_dout_20 ), .FCI(\SinCos1/co3_1 ), 
    .F0(\SinCos1/rom_dout_c_n_7 ), .F1(\SinCos1/rom_dout_c_n_8 ), 
    .FCO(\SinCos1/co4_1 ));
  SinCos1_SLICE_148 \SinCos1/SLICE_148 ( .A1(\SinCos1/rom_dout_23 ), 
    .A0(\SinCos1/rom_dout_22 ), .FCI(\SinCos1/co4_1 ), 
    .F0(\SinCos1/rom_dout_c_n_9 ), .F1(\SinCos1/rom_dout_c_n_10 ), 
    .FCO(\SinCos1/co5_1 ));
  SinCos1_SLICE_149 \SinCos1/SLICE_149 ( .A1(\SinCos1/rom_dout_25 ), 
    .A0(\SinCos1/rom_dout_24 ), .FCI(\SinCos1/co5_1 ), 
    .F0(\SinCos1/rom_dout_c_n_11 ), .F1(\SinCos1/rom_dout_c_n_12 ));
  SinCos1_SLICE_150 \SinCos1/SLICE_150 ( .A1(\SinCos1/rom_dout ), 
    .FCO(\SinCos1/co0_1 ));
  CIC1Sin_SLICE_151 \CIC1Sin/SLICE_151 ( .D1(MixerOutSin_11), 
    .C1(\CIC1Sin/n4326 ), .B1(\CIC1Sin/n4296 ), .A1(\CIC1Sin/d1_43 ), 
    .D0(MixerOutSin_11), .C0(\CIC1Sin/n4327 ), .B0(\CIC1Sin/n4296 ), 
    .A0(\CIC1Sin/d1_42 ), .DI1(\CIC1Sin/d1_71_N_418_43 ), 
    .DI0(\CIC1Sin/d1_71_N_418_42 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11963 ), 
    .F0(\CIC1Sin/d1_71_N_418_42 ), .Q0(\CIC1Sin/d1_42 ), 
    .F1(\CIC1Sin/d1_71_N_418_43 ), .Q1(\CIC1Sin/d1_43 ), 
    .FCO(\CIC1Sin/n11964 ));
  CIC1Sin_SLICE_152 \CIC1Sin/SLICE_152 ( .B1(\CIC1Sin/d_d9_58 ), 
    .A1(\CIC1Sin/d9_58 ), .B0(\CIC1Sin/d_d9_57 ), .A0(\CIC1Sin/d9_57 ), 
    .FCI(\CIC1Sin/n11540 ), .F0(\CIC1Sin/n5984 ), .F1(\CIC1Sin/n5983 ), 
    .FCO(\CIC1Sin/n11541 ));
  CIC1Sin_SLICE_153 \CIC1Sin/SLICE_153 ( .B1(\CIC1Sin/d_d9_42 ), 
    .A1(\CIC1Sin/d9_42 ), .B0(\CIC1Sin/d_d9_41 ), .A0(\CIC1Sin/d9_41 ), 
    .FCI(\CIC1Sin/n11532 ), .FCO(\CIC1Sin/n11533 ));
  CIC1Sin_SLICE_154 \CIC1Sin/SLICE_154 ( .B1(\CIC1Sin/d_d9_10 ), 
    .A1(\CIC1Sin/d9_10 ), .B0(\CIC1Sin/d_d9_9 ), .A0(\CIC1Sin/d9_9 ), 
    .FCI(\CIC1Sin/n11335 ), .FCO(\CIC1Sin/n11336 ));
  CIC1Sin_SLICE_155 \CIC1Sin/SLICE_155 ( .D1(MixerOutSin_11), 
    .C1(\CIC1Sin/n4328 ), .B1(\CIC1Sin/n4296 ), .A1(\CIC1Sin/d1_41 ), 
    .D0(MixerOutSin_11), .C0(\CIC1Sin/n4329 ), .B0(\CIC1Sin/n4296 ), 
    .A0(\CIC1Sin/d1_40 ), .DI1(\CIC1Sin/d1_71_N_418_41 ), 
    .DI0(\CIC1Sin/d1_71_N_418_40 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11962 ), 
    .F0(\CIC1Sin/d1_71_N_418_40 ), .Q0(\CIC1Sin/d1_40 ), 
    .F1(\CIC1Sin/d1_71_N_418_41 ), .Q1(\CIC1Sin/d1_41 ), 
    .FCO(\CIC1Sin/n11963 ));
  CIC1Sin_SLICE_156 \CIC1Sin/SLICE_156 ( .D1(MixerOutSin_11), 
    .C1(\CIC1Sin/n4330 ), .B1(\CIC1Sin/n4296 ), .A1(\CIC1Sin/d1_39 ), 
    .D0(MixerOutSin_11), .C0(\CIC1Sin/n4331 ), .B0(\CIC1Sin/n4296 ), 
    .A0(\CIC1Sin/d1_38 ), .DI1(\CIC1Sin/d1_71_N_418_39 ), 
    .DI0(\CIC1Sin/d1_71_N_418_38 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11961 ), 
    .F0(\CIC1Sin/d1_71_N_418_38 ), .Q0(\CIC1Sin/d1_38 ), 
    .F1(\CIC1Sin/d1_71_N_418_39 ), .Q1(\CIC1Sin/d1_39 ), 
    .FCO(\CIC1Sin/n11962 ));
  CIC1Sin_SLICE_157 \CIC1Sin/SLICE_157 ( .D1(MixerOutSin_11), 
    .C1(\CIC1Sin/n4332 ), .B1(\CIC1Sin/n4296 ), .A1(\CIC1Sin/d1_37 ), 
    .D0(MixerOutSin_11), .C0(\CIC1Sin/n4333 ), .B0(\CIC1Sin/n4296 ), 
    .A0(\CIC1Sin/d1_36 ), .DI1(\CIC1Sin/d1_71_N_418_37 ), 
    .DI0(\CIC1Sin/d1_71_N_418_36 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11960 ), 
    .F0(\CIC1Sin/d1_71_N_418_36 ), .Q0(\CIC1Sin/d1_36 ), 
    .F1(\CIC1Sin/d1_71_N_418_37 ), .Q1(\CIC1Sin/d1_37 ), 
    .FCO(\CIC1Sin/n11961 ));
  CIC1Sin_SLICE_158 \CIC1Sin/SLICE_158 ( .A1(\CIC1Sin/n4296 ), 
    .FCO(\CIC1Sin/n11960 ));
  CIC1Sin_SLICE_159 \CIC1Sin/SLICE_159 ( .B1(\CIC1Sin/d2_71 ), 
    .A1(\CIC1Sin/d1_71 ), .B0(\CIC1Sin/d2_70 ), .A0(\CIC1Sin/d1_70 ), 
    .FCI(\CIC1Sin/n11955 ), .F0(\CIC1Sin/n4451 ), .F1(\CIC1Sin/n4450 ));
  CIC1Sin_SLICE_160 \CIC1Sin/SLICE_160 ( .B1(\CIC1Sin/d2_69 ), 
    .A1(\CIC1Sin/d1_69 ), .B0(\CIC1Sin/d2_68 ), .A0(\CIC1Sin/d1_68 ), 
    .FCI(\CIC1Sin/n11954 ), .F0(\CIC1Sin/n4453 ), .F1(\CIC1Sin/n4452 ), 
    .FCO(\CIC1Sin/n11955 ));
  CIC1Sin_SLICE_161 \CIC1Sin/SLICE_161 ( .B1(\CIC1Sin/d2_67 ), 
    .A1(\CIC1Sin/d1_67 ), .B0(\CIC1Sin/d2_66 ), .A0(\CIC1Sin/d1_66 ), 
    .FCI(\CIC1Sin/n11953 ), .F0(\CIC1Sin/n4455 ), .F1(\CIC1Sin/n4454 ), 
    .FCO(\CIC1Sin/n11954 ));
  CIC1Sin_SLICE_162 \CIC1Sin/SLICE_162 ( .B1(\CIC1Sin/d2_65 ), 
    .A1(\CIC1Sin/d1_65 ), .B0(\CIC1Sin/d2_64 ), .A0(\CIC1Sin/d1_64 ), 
    .FCI(\CIC1Sin/n11952 ), .F0(\CIC1Sin/n4457 ), .F1(\CIC1Sin/n4456 ), 
    .FCO(\CIC1Sin/n11953 ));
  CIC1Sin_SLICE_163 \CIC1Sin/SLICE_163 ( .B1(\CIC1Sin/d2_63 ), 
    .A1(\CIC1Sin/d1_63 ), .B0(\CIC1Sin/d2_62 ), .A0(\CIC1Sin/d1_62 ), 
    .FCI(\CIC1Sin/n11951 ), .F0(\CIC1Sin/n4459 ), .F1(\CIC1Sin/n4458 ), 
    .FCO(\CIC1Sin/n11952 ));
  CIC1Sin_SLICE_164 \CIC1Sin/SLICE_164 ( .B1(\CIC1Sin/d2_61 ), 
    .A1(\CIC1Sin/d1_61 ), .B0(\CIC1Sin/d2_60 ), .A0(\CIC1Sin/d1_60 ), 
    .FCI(\CIC1Sin/n11950 ), .F0(\CIC1Sin/n4461 ), .F1(\CIC1Sin/n4460 ), 
    .FCO(\CIC1Sin/n11951 ));
  CIC1Sin_SLICE_165 \CIC1Sin/SLICE_165 ( .B1(\CIC1Sin/d_d9_8 ), 
    .A1(\CIC1Sin/d9_8 ), .B0(\CIC1Sin/d_d9_7 ), .A0(\CIC1Sin/d9_7 ), 
    .FCI(\CIC1Sin/n11334 ), .FCO(\CIC1Sin/n11335 ));
  CIC1Sin_SLICE_166 \CIC1Sin/SLICE_166 ( .B1(\CIC1Sin/d_d9_6 ), 
    .A1(\CIC1Sin/d9_6 ), .B0(\CIC1Sin/d_d9_5 ), .A0(\CIC1Sin/d9_5 ), 
    .FCI(\CIC1Sin/n11333 ), .FCO(\CIC1Sin/n11334 ));
  CIC1Sin_SLICE_167 \CIC1Sin/SLICE_167 ( .B1(\CIC1Sin/d_d9_4 ), 
    .A1(\CIC1Sin/d9_4 ), .B0(\CIC1Sin/d_d9_3 ), .A0(\CIC1Sin/d9_3 ), 
    .FCI(\CIC1Sin/n11332 ), .FCO(\CIC1Sin/n11333 ));
  CIC1Sin_SLICE_168 \CIC1Sin/SLICE_168 ( .B1(\CIC1Sin/d_d9_2 ), 
    .A1(\CIC1Sin/d9_2 ), .B0(\CIC1Sin/d_d9_1 ), .A0(\CIC1Sin/d9_1 ), 
    .FCI(\CIC1Sin/n11331 ), .FCO(\CIC1Sin/n11332 ));
  CIC1Sin_SLICE_169 \CIC1Sin/SLICE_169 ( .B1(\CIC1Sin/d_d9_0 ), 
    .A1(\CIC1Sin/d9_0 ), .FCO(\CIC1Sin/n11331 ));
  CIC1Sin_SLICE_170 \CIC1Sin/SLICE_170 ( .B0(\CIC1Sin/d_d8_71 ), 
    .A0(\CIC1Sin/d8_71 ), .FCI(\CIC1Sin/n11587 ), .F0(\CIC1Sin/n5818 ));
  CIC1Sin_SLICE_171 \CIC1Sin/SLICE_171 ( .B1(\CIC1Sin/d_d8_70 ), 
    .A1(\CIC1Sin/d8_70 ), .B0(\CIC1Sin/d_d8_69 ), .A0(\CIC1Sin/d8_69 ), 
    .FCI(\CIC1Sin/n11586 ), .F0(\CIC1Sin/n5820 ), .F1(\CIC1Sin/n5819 ), 
    .FCO(\CIC1Sin/n11587 ));
  CIC1Sin_SLICE_172 \CIC1Sin/SLICE_172 ( .B1(\CIC1Sin/d_d8_68 ), 
    .A1(\CIC1Sin/d8_68 ), .B0(\CIC1Sin/d_d8_67 ), .A0(\CIC1Sin/d8_67 ), 
    .FCI(\CIC1Sin/n11585 ), .F0(\CIC1Sin/n5822 ), .F1(\CIC1Sin/n5821 ), 
    .FCO(\CIC1Sin/n11586 ));
  CIC1Sin_SLICE_173 \CIC1Sin/SLICE_173 ( .B1(\CIC1Sin/d_d8_66 ), 
    .A1(\CIC1Sin/d8_66 ), .B0(\CIC1Sin/d_d8_65 ), .A0(\CIC1Sin/d8_65 ), 
    .FCI(\CIC1Sin/n11584 ), .F0(\CIC1Sin/n5824 ), .F1(\CIC1Sin/n5823 ), 
    .FCO(\CIC1Sin/n11585 ));
  CIC1Sin_SLICE_174 \CIC1Sin/SLICE_174 ( .B1(\CIC1Sin/d_d8_64 ), 
    .A1(\CIC1Sin/d8_64 ), .B0(\CIC1Sin/d_d8_63 ), .A0(\CIC1Sin/d8_63 ), 
    .FCI(\CIC1Sin/n11583 ), .F0(\CIC1Sin/n5826 ), .F1(\CIC1Sin/n5825 ), 
    .FCO(\CIC1Sin/n11584 ));
  CIC1Sin_SLICE_175 \CIC1Sin/SLICE_175 ( .B1(\CIC1Sin/d_d8_62 ), 
    .A1(\CIC1Sin/d8_62 ), .B0(\CIC1Sin/d_d8_61 ), .A0(\CIC1Sin/d8_61 ), 
    .FCI(\CIC1Sin/n11582 ), .F0(\CIC1Sin/n5828 ), .F1(\CIC1Sin/n5827 ), 
    .FCO(\CIC1Sin/n11583 ));
  CIC1Sin_SLICE_176 \CIC1Sin/SLICE_176 ( .B1(\CIC1Sin/d_d8_60 ), 
    .A1(\CIC1Sin/d8_60 ), .B0(\CIC1Sin/d_d8_59 ), .A0(\CIC1Sin/d8_59 ), 
    .FCI(\CIC1Sin/n11581 ), .F0(\CIC1Sin/n5830 ), .F1(\CIC1Sin/n5829 ), 
    .FCO(\CIC1Sin/n11582 ));
  CIC1Sin_SLICE_177 \CIC1Sin/SLICE_177 ( .B1(\CIC1Sin/d_d8_58 ), 
    .A1(\CIC1Sin/d8_58 ), .B0(\CIC1Sin/d_d8_57 ), .A0(\CIC1Sin/d8_57 ), 
    .FCI(\CIC1Sin/n11580 ), .F0(\CIC1Sin/n5832 ), .F1(\CIC1Sin/n5831 ), 
    .FCO(\CIC1Sin/n11581 ));
  CIC1Sin_SLICE_178 \CIC1Sin/SLICE_178 ( .B1(\CIC1Sin/d_d8_56 ), 
    .A1(\CIC1Sin/d8_56 ), .B0(\CIC1Sin/d_d8_55 ), .A0(\CIC1Sin/d8_55 ), 
    .FCI(\CIC1Sin/n11579 ), .F0(\CIC1Sin/n5834 ), .F1(\CIC1Sin/n5833 ), 
    .FCO(\CIC1Sin/n11580 ));
  CIC1Sin_SLICE_179 \CIC1Sin/SLICE_179 ( .B1(\CIC1Sin/d_d8_54 ), 
    .A1(\CIC1Sin/d8_54 ), .B0(\CIC1Sin/d_d8_53 ), .A0(\CIC1Sin/d8_53 ), 
    .FCI(\CIC1Sin/n11578 ), .F0(\CIC1Sin/n5836 ), .F1(\CIC1Sin/n5835 ), 
    .FCO(\CIC1Sin/n11579 ));
  CIC1Sin_SLICE_180 \CIC1Sin/SLICE_180 ( .B1(\CIC1Sin/d_d8_52 ), 
    .A1(\CIC1Sin/d8_52 ), .B0(\CIC1Sin/d_d8_51 ), .A0(\CIC1Sin/d8_51 ), 
    .FCI(\CIC1Sin/n11577 ), .F0(\CIC1Sin/n5838 ), .F1(\CIC1Sin/n5837 ), 
    .FCO(\CIC1Sin/n11578 ));
  CIC1Sin_SLICE_181 \CIC1Sin/SLICE_181 ( .B1(\CIC1Sin/d_d8_50 ), 
    .A1(\CIC1Sin/d8_50 ), .B0(\CIC1Sin/d_d8_49 ), .A0(\CIC1Sin/d8_49 ), 
    .FCI(\CIC1Sin/n11576 ), .F0(\CIC1Sin/n5840 ), .F1(\CIC1Sin/n5839 ), 
    .FCO(\CIC1Sin/n11577 ));
  CIC1Sin_SLICE_182 \CIC1Sin/SLICE_182 ( .B1(\CIC1Sin/d_d8_48 ), 
    .A1(\CIC1Sin/d8_48 ), .B0(\CIC1Sin/d_d8_47 ), .A0(\CIC1Sin/d8_47 ), 
    .FCI(\CIC1Sin/n11575 ), .F0(\CIC1Sin/n5842 ), .F1(\CIC1Sin/n5841 ), 
    .FCO(\CIC1Sin/n11576 ));
  CIC1Sin_SLICE_183 \CIC1Sin/SLICE_183 ( .B1(\CIC1Sin/d_d8_46 ), 
    .A1(\CIC1Sin/d8_46 ), .B0(\CIC1Sin/d_d8_45 ), .A0(\CIC1Sin/d8_45 ), 
    .FCI(\CIC1Sin/n11574 ), .F0(\CIC1Sin/n5844 ), .F1(\CIC1Sin/n5843 ), 
    .FCO(\CIC1Sin/n11575 ));
  CIC1Sin_SLICE_184 \CIC1Sin/SLICE_184 ( .B1(\CIC1Sin/d_d8_44 ), 
    .A1(\CIC1Sin/d8_44 ), .B0(\CIC1Sin/d_d8_43 ), .A0(\CIC1Sin/d8_43 ), 
    .FCI(\CIC1Sin/n11573 ), .F0(\CIC1Sin/n5846 ), .F1(\CIC1Sin/n5845 ), 
    .FCO(\CIC1Sin/n11574 ));
  CIC1Sin_SLICE_185 \CIC1Sin/SLICE_185 ( .B1(\CIC1Sin/d_d8_42 ), 
    .A1(\CIC1Sin/d8_42 ), .B0(\CIC1Sin/d_d8_41 ), .A0(\CIC1Sin/d8_41 ), 
    .FCI(\CIC1Sin/n11572 ), .F0(\CIC1Sin/n5848 ), .F1(\CIC1Sin/n5847 ), 
    .FCO(\CIC1Sin/n11573 ));
  CIC1Sin_SLICE_186 \CIC1Sin/SLICE_186 ( .B1(\CIC1Sin/d_d8_40 ), 
    .A1(\CIC1Sin/d8_40 ), .B0(\CIC1Sin/d_d8_39 ), .A0(\CIC1Sin/d8_39 ), 
    .FCI(\CIC1Sin/n11571 ), .F0(\CIC1Sin/n5850 ), .F1(\CIC1Sin/n5849 ), 
    .FCO(\CIC1Sin/n11572 ));
  CIC1Sin_SLICE_187 \CIC1Sin/SLICE_187 ( .B1(\CIC1Sin/d_d8_38 ), 
    .A1(\CIC1Sin/d8_38 ), .B0(\CIC1Sin/d_d8_37 ), .A0(\CIC1Sin/d8_37 ), 
    .FCI(\CIC1Sin/n11570 ), .F0(\CIC1Sin/n5852 ), .F1(\CIC1Sin/n5851 ), 
    .FCO(\CIC1Sin/n11571 ));
  CIC1Sin_SLICE_188 \CIC1Sin/SLICE_188 ( .B1(\CIC1Sin/d_d8_36 ), 
    .A1(\CIC1Sin/d8_36 ), .F1(\CIC1Sin/n5853 ), .FCO(\CIC1Sin/n11570 ));
  CIC1Sin_SLICE_189 \CIC1Sin/SLICE_189 ( .B1(\CIC1Sin/d2_59 ), 
    .A1(\CIC1Sin/d1_59 ), .B0(\CIC1Sin/d2_58 ), .A0(\CIC1Sin/d1_58 ), 
    .FCI(\CIC1Sin/n11949 ), .F0(\CIC1Sin/n4463 ), .F1(\CIC1Sin/n4462 ), 
    .FCO(\CIC1Sin/n11950 ));
  CIC1Sin_SLICE_190 \CIC1Sin/SLICE_190 ( .B1(\CIC1Sin/d_d9_40 ), 
    .A1(\CIC1Sin/d9_40 ), .B0(\CIC1Sin/d_d9_39 ), .A0(\CIC1Sin/d9_39 ), 
    .FCI(\CIC1Sin/n11531 ), .FCO(\CIC1Sin/n11532 ));
  CIC1Sin_SLICE_191 \CIC1Sin/SLICE_191 ( .B1(\CIC1Sin/d_d9_38 ), 
    .A1(\CIC1Sin/d9_38 ), .B0(\CIC1Sin/d_d9_37 ), .A0(\CIC1Sin/d9_37 ), 
    .FCI(\CIC1Sin/n11530 ), .FCO(\CIC1Sin/n11531 ));
  CIC1Sin_SLICE_192 \CIC1Sin/SLICE_192 ( .B1(\CIC1Sin/d_d9_36 ), 
    .A1(\CIC1Sin/d9_36 ), .FCO(\CIC1Sin/n11530 ));
  CIC1Sin_SLICE_193 \CIC1Sin/SLICE_193 ( .B0(\CIC1Sin/d_d9_71 ), 
    .A0(\CIC1Sin/d9_71 ), .FCI(\CIC1Sin/n11529 ), .F0(\CIC1Sin/n6008 ));
  CIC1Sin_SLICE_194 \CIC1Sin/SLICE_194 ( .B1(\CIC1Sin/d_d9_70 ), 
    .A1(\CIC1Sin/d9_70 ), .B0(\CIC1Sin/d_d9_69 ), .A0(\CIC1Sin/d9_69 ), 
    .FCI(\CIC1Sin/n11528 ), .F0(\CIC1Sin/n6010 ), .F1(\CIC1Sin/n6009 ), 
    .FCO(\CIC1Sin/n11529 ));
  CIC1Sin_SLICE_195 \CIC1Sin/SLICE_195 ( .B1(\CIC1Sin/d_d9_68 ), 
    .A1(\CIC1Sin/d9_68 ), .B0(\CIC1Sin/d_d9_67 ), .A0(\CIC1Sin/d9_67 ), 
    .FCI(\CIC1Sin/n11527 ), .F0(\CIC1Sin/n6012 ), .F1(\CIC1Sin/n6011 ), 
    .FCO(\CIC1Sin/n11528 ));
  CIC1Sin_SLICE_196 \CIC1Sin/SLICE_196 ( .B1(\CIC1Sin/d_d9_66 ), 
    .A1(\CIC1Sin/d9_66 ), .B0(\CIC1Sin/d_d9_65 ), .A0(\CIC1Sin/d9_65 ), 
    .FCI(\CIC1Sin/n11526 ), .F0(\CIC1Sin/n6014 ), .F1(\CIC1Sin/n6013 ), 
    .FCO(\CIC1Sin/n11527 ));
  CIC1Sin_SLICE_197 \CIC1Sin/SLICE_197 ( .B1(\CIC1Sin/d_d9_64 ), 
    .A1(\CIC1Sin/d9_64 ), .B0(\CIC1Sin/d_d9_63 ), .A0(\CIC1Sin/d9_63 ), 
    .FCI(\CIC1Sin/n11525 ), .F0(\CIC1Sin/n6016 ), .F1(\CIC1Sin/n6015 ), 
    .FCO(\CIC1Sin/n11526 ));
  CIC1Sin_SLICE_198 \CIC1Sin/SLICE_198 ( .B1(\CIC1Sin/d_d9_62 ), 
    .A1(\CIC1Sin/d9_62 ), .B0(\CIC1Sin/d_d9_61 ), .A0(\CIC1Sin/d9_61 ), 
    .FCI(\CIC1Sin/n11524 ), .F0(\CIC1Sin/n6018 ), .F1(\CIC1Sin/n6017 ), 
    .FCO(\CIC1Sin/n11525 ));
  CIC1Sin_SLICE_199 \CIC1Sin/SLICE_199 ( .B1(\CIC1Sin/d_d9_60 ), 
    .A1(\CIC1Sin/d9_60 ), .B0(\CIC1Sin/d_d9_59 ), .A0(\CIC1Sin/d9_59 ), 
    .FCI(\CIC1Sin/n11523 ), .F0(\CIC1Sin/n6020 ), .F1(\CIC1Sin/n6019 ), 
    .FCO(\CIC1Sin/n11524 ));
  CIC1Sin_SLICE_200 \CIC1Sin/SLICE_200 ( .B1(\CIC1Sin/d_d9_58 ), 
    .A1(\CIC1Sin/d9_58 ), .B0(\CIC1Sin/d_d9_57 ), .A0(\CIC1Sin/d9_57 ), 
    .FCI(\CIC1Sin/n11522 ), .F0(\CIC1Sin/n6022 ), .F1(\CIC1Sin/n6021 ), 
    .FCO(\CIC1Sin/n11523 ));
  CIC1Sin_SLICE_201 \CIC1Sin/SLICE_201 ( .B1(\CIC1Sin/d_d9_56 ), 
    .A1(\CIC1Sin/d9_56 ), .B0(\CIC1Sin/d_d9_55 ), .A0(\CIC1Sin/d9_55 ), 
    .FCI(\CIC1Sin/n11521 ), .FCO(\CIC1Sin/n11522 ));
  CIC1Sin_SLICE_202 \CIC1Sin/SLICE_202 ( .B1(\CIC1Sin/d_d9_54 ), 
    .A1(\CIC1Sin/d9_54 ), .B0(\CIC1Sin/d_d9_53 ), .A0(\CIC1Sin/d9_53 ), 
    .FCI(\CIC1Sin/n11520 ), .FCO(\CIC1Sin/n11521 ));
  CIC1Sin_SLICE_203 \CIC1Sin/SLICE_203 ( .B1(\CIC1Sin/d_d9_56 ), 
    .A1(\CIC1Sin/d9_56 ), .B0(\CIC1Sin/d_d9_55 ), .A0(\CIC1Sin/d9_55 ), 
    .FCI(\CIC1Sin/n11539 ), .FCO(\CIC1Sin/n11540 ));
  CIC1Sin_SLICE_204 \CIC1Sin/SLICE_204 ( .B1(\CIC1Sin/d_d9_52 ), 
    .A1(\CIC1Sin/d9_52 ), .B0(\CIC1Sin/d_d9_51 ), .A0(\CIC1Sin/d9_51 ), 
    .FCI(\CIC1Sin/n11519 ), .FCO(\CIC1Sin/n11520 ));
  CIC1Sin_SLICE_205 \CIC1Sin/SLICE_205 ( .B1(\CIC1Sin/d_d9_50 ), 
    .A1(\CIC1Sin/d9_50 ), .B0(\CIC1Sin/d_d9_49 ), .A0(\CIC1Sin/d9_49 ), 
    .FCI(\CIC1Sin/n11518 ), .FCO(\CIC1Sin/n11519 ));
  CIC1Sin_SLICE_206 \CIC1Sin/SLICE_206 ( .B1(\CIC1Sin/d_d9_48 ), 
    .A1(\CIC1Sin/d9_48 ), .B0(\CIC1Sin/d_d9_47 ), .A0(\CIC1Sin/d9_47 ), 
    .FCI(\CIC1Sin/n11517 ), .FCO(\CIC1Sin/n11518 ));
  CIC1Sin_SLICE_207 \CIC1Sin/SLICE_207 ( .D1(\CIC1Sin/d8_71 ), 
    .C1(\CIC1Sin/n5818 ), .B1(\CIC1Sin/n5816 ), .A1(\CIC1Sin/d_d8_71 ), 
    .D0(\CIC1Sin/d8_70 ), .C0(\CIC1Sin/n5819 ), .B0(\CIC1Sin/n5816 ), 
    .A0(\CIC1Sin/d_d8_70 ), .DI1(\CIC1Sin/d9_71_N_1675_71 ), 
    .DI0(\CIC1Sin/d9_71_N_1675_70 ), .CE(\CIC1Sin/osc_clk_enable_660 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11568 ), .F0(\CIC1Sin/d9_71_N_1675_70 ), 
    .Q0(\CIC1Sin/d9_70 ), .F1(\CIC1Sin/d9_71_N_1675_71 ), .Q1(\CIC1Sin/d9_71 ));
  CIC1Sin_SLICE_208 \CIC1Sin/SLICE_208 ( .D1(\CIC1Sin/d8_69 ), 
    .C1(\CIC1Sin/n5820 ), .B1(\CIC1Sin/n5816 ), .A1(\CIC1Sin/d_d8_69 ), 
    .D0(\CIC1Sin/d8_68 ), .C0(\CIC1Sin/n5821 ), .B0(\CIC1Sin/n5816 ), 
    .A0(\CIC1Sin/d_d8_68 ), .DI1(\CIC1Sin/d9_71_N_1675_69 ), 
    .DI0(\CIC1Sin/d9_71_N_1675_68 ), .CE(\CIC1Sin/osc_clk_enable_660 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11567 ), .F0(\CIC1Sin/d9_71_N_1675_68 ), 
    .Q0(\CIC1Sin/d9_68 ), .F1(\CIC1Sin/d9_71_N_1675_69 ), .Q1(\CIC1Sin/d9_69 ), 
    .FCO(\CIC1Sin/n11568 ));
  CIC1Sin_SLICE_209 \CIC1Sin/SLICE_209 ( .B1(\CIC1Sin/d_d9_46 ), 
    .A1(\CIC1Sin/d9_46 ), .B0(\CIC1Sin/d_d9_45 ), .A0(\CIC1Sin/d9_45 ), 
    .FCI(\CIC1Sin/n11516 ), .FCO(\CIC1Sin/n11517 ));
  CIC1Sin_SLICE_210 \CIC1Sin/SLICE_210 ( .D1(\CIC1Sin/d8_67 ), 
    .C1(\CIC1Sin/n5822 ), .B1(\CIC1Sin/n5816 ), .A1(\CIC1Sin/d_d8_67 ), 
    .D0(\CIC1Sin/d8_66 ), .C0(\CIC1Sin/n5823 ), .B0(\CIC1Sin/n5816 ), 
    .A0(\CIC1Sin/d_d8_66 ), .DI1(\CIC1Sin/d9_71_N_1675_67 ), 
    .DI0(\CIC1Sin/d9_71_N_1675_66 ), .CE(\CIC1Sin/osc_clk_enable_660 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11566 ), .F0(\CIC1Sin/d9_71_N_1675_66 ), 
    .Q0(\CIC1Sin/d9_66 ), .F1(\CIC1Sin/d9_71_N_1675_67 ), .Q1(\CIC1Sin/d9_67 ), 
    .FCO(\CIC1Sin/n11567 ));
  CIC1Sin_SLICE_211 \CIC1Sin/SLICE_211 ( .B1(\CIC1Sin/d_d9_44 ), 
    .A1(\CIC1Sin/d9_44 ), .B0(\CIC1Sin/d_d9_43 ), .A0(\CIC1Sin/d9_43 ), 
    .FCI(\CIC1Sin/n11515 ), .FCO(\CIC1Sin/n11516 ));
  CIC1Sin_SLICE_212 \CIC1Sin/SLICE_212 ( .D1(\CIC1Sin/d8_65 ), 
    .C1(\CIC1Sin/n5824 ), .B1(\CIC1Sin/n5816 ), .A1(\CIC1Sin/d_d8_65 ), 
    .D0(\CIC1Sin/d8_64 ), .C0(\CIC1Sin/n5825 ), .B0(\CIC1Sin/n5816 ), 
    .A0(\CIC1Sin/d_d8_64 ), .DI1(\CIC1Sin/d9_71_N_1675_65 ), 
    .DI0(\CIC1Sin/d9_71_N_1675_64 ), .CE(\CIC1Sin/osc_clk_enable_660 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11565 ), .F0(\CIC1Sin/d9_71_N_1675_64 ), 
    .Q0(\CIC1Sin/d9_64 ), .F1(\CIC1Sin/d9_71_N_1675_65 ), .Q1(\CIC1Sin/d9_65 ), 
    .FCO(\CIC1Sin/n11566 ));
  CIC1Sin_SLICE_213 \CIC1Sin/SLICE_213 ( .D1(\CIC1Sin/d8_63 ), 
    .C1(\CIC1Sin/n5826 ), .B1(\CIC1Sin/n5816 ), .A1(\CIC1Sin/d_d8_63 ), 
    .D0(\CIC1Sin/d8_62 ), .C0(\CIC1Sin/n5827 ), .B0(\CIC1Sin/n5816 ), 
    .A0(\CIC1Sin/d_d8_62 ), .DI1(\CIC1Sin/d9_71_N_1675_63 ), 
    .DI0(\CIC1Sin/d9_71_N_1675_62 ), .CE(\CIC1Sin/osc_clk_enable_660 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11564 ), .F0(\CIC1Sin/d9_71_N_1675_62 ), 
    .Q0(\CIC1Sin/d9_62 ), .F1(\CIC1Sin/d9_71_N_1675_63 ), .Q1(\CIC1Sin/d9_63 ), 
    .FCO(\CIC1Sin/n11565 ));
  CIC1Sin_SLICE_214 \CIC1Sin/SLICE_214 ( .D1(\CIC1Sin/d8_61 ), 
    .C1(\CIC1Sin/n5828 ), .B1(\CIC1Sin/n5816 ), .A1(\CIC1Sin/d_d8_61 ), 
    .D0(\CIC1Sin/d8_60 ), .C0(\CIC1Sin/n5829 ), .B0(\CIC1Sin/n5816 ), 
    .A0(\CIC1Sin/d_d8_60 ), .DI1(\CIC1Sin/d9_71_N_1675_61 ), 
    .DI0(\CIC1Sin/d9_71_N_1675_60 ), .CE(\CIC1Sin/osc_clk_enable_660 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11563 ), .F0(\CIC1Sin/d9_71_N_1675_60 ), 
    .Q0(\CIC1Sin/d9_60 ), .F1(\CIC1Sin/d9_71_N_1675_61 ), .Q1(\CIC1Sin/d9_61 ), 
    .FCO(\CIC1Sin/n11564 ));
  CIC1Sin_SLICE_215 \CIC1Sin/SLICE_215 ( .B1(\CIC1Sin/d_d9_42 ), 
    .A1(\CIC1Sin/d9_42 ), .B0(\CIC1Sin/d_d9_41 ), .A0(\CIC1Sin/d9_41 ), 
    .FCI(\CIC1Sin/n11514 ), .FCO(\CIC1Sin/n11515 ));
  CIC1Sin_SLICE_216 \CIC1Sin/SLICE_216 ( .D1(\CIC1Sin/d8_59 ), 
    .C1(\CIC1Sin/n5830 ), .B1(\CIC1Sin/n5816 ), .A1(\CIC1Sin/d_d8_59 ), 
    .D0(\CIC1Sin/d8_58 ), .C0(\CIC1Sin/n5831 ), .B0(\CIC1Sin/n5816 ), 
    .A0(\CIC1Sin/d_d8_58 ), .DI1(\CIC1Sin/d9_71_N_1675_59 ), 
    .DI0(\CIC1Sin/d9_71_N_1675_58 ), .CE(\CIC1Sin/osc_clk_enable_660 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11562 ), .F0(\CIC1Sin/d9_71_N_1675_58 ), 
    .Q0(\CIC1Sin/d9_58 ), .F1(\CIC1Sin/d9_71_N_1675_59 ), .Q1(\CIC1Sin/d9_59 ), 
    .FCO(\CIC1Sin/n11563 ));
  CIC1Sin_SLICE_217 \CIC1Sin/SLICE_217 ( .D1(\CIC1Sin/d8_57 ), 
    .C1(\CIC1Sin/n5832 ), .B1(\CIC1Sin/n5816 ), .A1(\CIC1Sin/d_d8_57 ), 
    .D0(\CIC1Sin/d8_56 ), .C0(\CIC1Sin/n5833 ), .B0(\CIC1Sin/n5816 ), 
    .A0(\CIC1Sin/d_d8_56 ), .DI1(\CIC1Sin/d9_71_N_1675_57 ), 
    .DI0(\CIC1Sin/d9_71_N_1675_56 ), .CE(\CIC1Sin/osc_clk_enable_660 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11561 ), .F0(\CIC1Sin/d9_71_N_1675_56 ), 
    .Q0(\CIC1Sin/d9_56 ), .F1(\CIC1Sin/d9_71_N_1675_57 ), .Q1(\CIC1Sin/d9_57 ), 
    .FCO(\CIC1Sin/n11562 ));
  CIC1Sin_SLICE_218 \CIC1Sin/SLICE_218 ( .D1(\CIC1Sin/d8_55 ), 
    .C1(\CIC1Sin/n5834 ), .B1(\CIC1Sin/n5816 ), .A1(\CIC1Sin/d_d8_55 ), 
    .D0(\CIC1Sin/d8_54 ), .C0(\CIC1Sin/n5835 ), .B0(\CIC1Sin/n5816 ), 
    .A0(\CIC1Sin/d_d8_54 ), .DI1(\CIC1Sin/d9_71_N_1675_55 ), 
    .DI0(\CIC1Sin/d9_71_N_1675_54 ), .CE(\CIC1Sin/osc_clk_enable_660 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11560 ), .F0(\CIC1Sin/d9_71_N_1675_54 ), 
    .Q0(\CIC1Sin/d9_54 ), .F1(\CIC1Sin/d9_71_N_1675_55 ), .Q1(\CIC1Sin/d9_55 ), 
    .FCO(\CIC1Sin/n11561 ));
  CIC1Sin_SLICE_219 \CIC1Sin/SLICE_219 ( .D1(\CIC1Sin/d8_53 ), 
    .C1(\CIC1Sin/n5836 ), .B1(\CIC1Sin/n5816 ), .A1(\CIC1Sin/d_d8_53 ), 
    .D0(\CIC1Sin/d8_52 ), .C0(\CIC1Sin/n5837 ), .B0(\CIC1Sin/n5816 ), 
    .A0(\CIC1Sin/d_d8_52 ), .DI1(\CIC1Sin/d9_71_N_1675_53 ), 
    .DI0(\CIC1Sin/d9_71_N_1675_52 ), .CE(\CIC1Sin/osc_clk_enable_660 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11559 ), .F0(\CIC1Sin/d9_71_N_1675_52 ), 
    .Q0(\CIC1Sin/d9_52 ), .F1(\CIC1Sin/d9_71_N_1675_53 ), .Q1(\CIC1Sin/d9_53 ), 
    .FCO(\CIC1Sin/n11560 ));
  CIC1Sin_SLICE_220 \CIC1Sin/SLICE_220 ( .D1(\CIC1Sin/d8_51 ), 
    .C1(\CIC1Sin/n5838 ), .B1(\CIC1Sin/n5816 ), .A1(\CIC1Sin/d_d8_51 ), 
    .D0(\CIC1Sin/d8_50 ), .C0(\CIC1Sin/n5839 ), .B0(\CIC1Sin/n5816 ), 
    .A0(\CIC1Sin/d_d8_50 ), .DI1(\CIC1Sin/d9_71_N_1675_51 ), 
    .DI0(\CIC1Sin/d9_71_N_1675_50 ), .CE(\CIC1Sin/osc_clk_enable_660 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11558 ), .F0(\CIC1Sin/d9_71_N_1675_50 ), 
    .Q0(\CIC1Sin/d9_50 ), .F1(\CIC1Sin/d9_71_N_1675_51 ), .Q1(\CIC1Sin/d9_51 ), 
    .FCO(\CIC1Sin/n11559 ));
  CIC1Sin_SLICE_221 \CIC1Sin/SLICE_221 ( .D1(\CIC1Sin/d8_49 ), 
    .C1(\CIC1Sin/n5840 ), .B1(\CIC1Sin/n5816 ), .A1(\CIC1Sin/d_d8_49 ), 
    .D0(\CIC1Sin/d8_48 ), .C0(\CIC1Sin/n5841 ), .B0(\CIC1Sin/n5816 ), 
    .A0(\CIC1Sin/d_d8_48 ), .DI1(\CIC1Sin/d9_71_N_1675_49 ), 
    .DI0(\CIC1Sin/d9_71_N_1675_48 ), .CE(\CIC1Sin/osc_clk_enable_660 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11557 ), .F0(\CIC1Sin/d9_71_N_1675_48 ), 
    .Q0(\CIC1Sin/d9_48 ), .F1(\CIC1Sin/d9_71_N_1675_49 ), .Q1(\CIC1Sin/d9_49 ), 
    .FCO(\CIC1Sin/n11558 ));
  CIC1Sin_SLICE_222 \CIC1Sin/SLICE_222 ( .D1(\CIC1Sin/d8_47 ), 
    .C1(\CIC1Sin/n5842 ), .B1(\CIC1Sin/n5816 ), .A1(\CIC1Sin/d_d8_47 ), 
    .D0(\CIC1Sin/d8_46 ), .C0(\CIC1Sin/n5843 ), .B0(\CIC1Sin/n5816 ), 
    .A0(\CIC1Sin/d_d8_46 ), .DI1(\CIC1Sin/d9_71_N_1675_47 ), 
    .DI0(\CIC1Sin/d9_71_N_1675_46 ), .CE(\CIC1Sin/osc_clk_enable_660 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11556 ), .F0(\CIC1Sin/d9_71_N_1675_46 ), 
    .Q0(\CIC1Sin/d9_46 ), .F1(\CIC1Sin/d9_71_N_1675_47 ), .Q1(\CIC1Sin/d9_47 ), 
    .FCO(\CIC1Sin/n11557 ));
  CIC1Sin_SLICE_223 \CIC1Sin/SLICE_223 ( .D1(\CIC1Sin/d8_45 ), 
    .C1(\CIC1Sin/n5844 ), .B1(\CIC1Sin/n5816 ), .A1(\CIC1Sin/d_d8_45 ), 
    .D0(\CIC1Sin/d8_44 ), .C0(\CIC1Sin/n5845 ), .B0(\CIC1Sin/n5816 ), 
    .A0(\CIC1Sin/d_d8_44 ), .DI1(\CIC1Sin/d9_71_N_1675_45 ), 
    .DI0(\CIC1Sin/d9_71_N_1675_44 ), .CE(\CIC1Sin/osc_clk_enable_660 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11555 ), .F0(\CIC1Sin/d9_71_N_1675_44 ), 
    .Q0(\CIC1Sin/d9_44 ), .F1(\CIC1Sin/d9_71_N_1675_45 ), .Q1(\CIC1Sin/d9_45 ), 
    .FCO(\CIC1Sin/n11556 ));
  CIC1Sin_SLICE_224 \CIC1Sin/SLICE_224 ( .D1(\CIC1Sin/d8_43 ), 
    .C1(\CIC1Sin/n5846 ), .B1(\CIC1Sin/n5816 ), .A1(\CIC1Sin/d_d8_43 ), 
    .D0(\CIC1Sin/d8_42 ), .C0(\CIC1Sin/n5847 ), .B0(\CIC1Sin/n5816 ), 
    .A0(\CIC1Sin/d_d8_42 ), .DI1(\CIC1Sin/d9_71_N_1675_43 ), 
    .DI0(\CIC1Sin/d9_71_N_1675_42 ), .CE(\CIC1Sin/osc_clk_enable_610 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11554 ), .F0(\CIC1Sin/d9_71_N_1675_42 ), 
    .Q0(\CIC1Sin/d9_42 ), .F1(\CIC1Sin/d9_71_N_1675_43 ), .Q1(\CIC1Sin/d9_43 ), 
    .FCO(\CIC1Sin/n11555 ));
  CIC1Sin_SLICE_225 \CIC1Sin/SLICE_225 ( .B1(\CIC1Sin/d_d9_40 ), 
    .A1(\CIC1Sin/d9_40 ), .B0(\CIC1Sin/d_d9_39 ), .A0(\CIC1Sin/d9_39 ), 
    .FCI(\CIC1Sin/n11513 ), .FCO(\CIC1Sin/n11514 ));
  CIC1Sin_SLICE_226 \CIC1Sin/SLICE_226 ( .D1(\CIC1Sin/d8_41 ), 
    .C1(\CIC1Sin/n5848 ), .B1(\CIC1Sin/n5816 ), .A1(\CIC1Sin/d_d8_41 ), 
    .D0(\CIC1Sin/d8_40 ), .C0(\CIC1Sin/n5849 ), .B0(\CIC1Sin/n5816 ), 
    .A0(\CIC1Sin/d_d8_40 ), .DI1(\CIC1Sin/d9_71_N_1675_41 ), 
    .DI0(\CIC1Sin/d9_71_N_1675_40 ), .CE(\CIC1Sin/osc_clk_enable_610 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11553 ), .F0(\CIC1Sin/d9_71_N_1675_40 ), 
    .Q0(\CIC1Sin/d9_40 ), .F1(\CIC1Sin/d9_71_N_1675_41 ), .Q1(\CIC1Sin/d9_41 ), 
    .FCO(\CIC1Sin/n11554 ));
  CIC1Sin_SLICE_227 \CIC1Sin/SLICE_227 ( .B1(\CIC1Sin/d_d9_38 ), 
    .A1(\CIC1Sin/d9_38 ), .B0(\CIC1Sin/d_d9_37 ), .A0(\CIC1Sin/d9_37 ), 
    .FCI(\CIC1Sin/n11512 ), .FCO(\CIC1Sin/n11513 ));
  CIC1Sin_SLICE_228 \CIC1Sin/SLICE_228 ( .D1(\CIC1Sin/d8_39 ), 
    .C1(\CIC1Sin/n5850 ), .B1(\CIC1Sin/n5816 ), .A1(\CIC1Sin/d_d8_39 ), 
    .D0(\CIC1Sin/d8_38 ), .C0(\CIC1Sin/n5851 ), .B0(\CIC1Sin/n5816 ), 
    .A0(\CIC1Sin/d_d8_38 ), .DI1(\CIC1Sin/d9_71_N_1675_39 ), 
    .DI0(\CIC1Sin/d9_71_N_1675_38 ), .CE(\CIC1Sin/osc_clk_enable_610 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11552 ), .F0(\CIC1Sin/d9_71_N_1675_38 ), 
    .Q0(\CIC1Sin/d9_38 ), .F1(\CIC1Sin/d9_71_N_1675_39 ), .Q1(\CIC1Sin/d9_39 ), 
    .FCO(\CIC1Sin/n11553 ));
  CIC1Sin_SLICE_229 \CIC1Sin/SLICE_229 ( .D1(\CIC1Sin/d8_37 ), 
    .C1(\CIC1Sin/n5852 ), .B1(\CIC1Sin/n5816 ), .A1(\CIC1Sin/d_d8_37 ), 
    .D0(\CIC1Sin/d8_36 ), .C0(\CIC1Sin/n5853 ), .B0(\CIC1Sin/n5816 ), 
    .A0(\CIC1Sin/d_d8_36 ), .DI1(\CIC1Sin/d9_71_N_1675_37 ), 
    .DI0(\CIC1Sin/d9_71_N_1675_36 ), .CE(\CIC1Sin/osc_clk_enable_610 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11551 ), .F0(\CIC1Sin/d9_71_N_1675_36 ), 
    .Q0(\CIC1Sin/d9_36 ), .F1(\CIC1Sin/d9_71_N_1675_37 ), .Q1(\CIC1Sin/d9_37 ), 
    .FCO(\CIC1Sin/n11552 ));
  CIC1Sin_SLICE_230 \CIC1Sin/SLICE_230 ( .A1(\CIC1Sin/n5816 ), 
    .FCO(\CIC1Sin/n11551 ));
  CIC1Sin_SLICE_231 \CIC1Sin/SLICE_231 ( .B0(\CIC1Sin/d_d9_71 ), 
    .A0(\CIC1Sin/d9_71 ), .FCI(\CIC1Sin/n11547 ), .F0(\CIC1Sin/n5970 ));
  CIC1Sin_SLICE_232 \CIC1Sin/SLICE_232 ( .B1(\CIC1Sin/d_d9_70 ), 
    .A1(\CIC1Sin/d9_70 ), .B0(\CIC1Sin/d_d9_69 ), .A0(\CIC1Sin/d9_69 ), 
    .FCI(\CIC1Sin/n11546 ), .F0(\CIC1Sin/n5972 ), .F1(\CIC1Sin/n5971 ), 
    .FCO(\CIC1Sin/n11547 ));
  CIC1Sin_SLICE_233 \CIC1Sin/SLICE_233 ( .B1(\CIC1Sin/d_d9_68 ), 
    .A1(\CIC1Sin/d9_68 ), .B0(\CIC1Sin/d_d9_67 ), .A0(\CIC1Sin/d9_67 ), 
    .FCI(\CIC1Sin/n11545 ), .F0(\CIC1Sin/n5974 ), .F1(\CIC1Sin/n5973 ), 
    .FCO(\CIC1Sin/n11546 ));
  CIC1Sin_SLICE_234 \CIC1Sin/SLICE_234 ( .B1(\CIC1Sin/d_d9_66 ), 
    .A1(\CIC1Sin/d9_66 ), .B0(\CIC1Sin/d_d9_65 ), .A0(\CIC1Sin/d9_65 ), 
    .FCI(\CIC1Sin/n11544 ), .F0(\CIC1Sin/n5976 ), .F1(\CIC1Sin/n5975 ), 
    .FCO(\CIC1Sin/n11545 ));
  CIC1Sin_SLICE_235 \CIC1Sin/SLICE_235 ( .B1(\CIC1Sin/d_d9_36 ), 
    .A1(\CIC1Sin/d9_36 ), .FCO(\CIC1Sin/n11512 ));
  CIC1Sin_SLICE_236 \CIC1Sin/SLICE_236 ( .B1(\CIC1Sin/d2_57 ), 
    .A1(\CIC1Sin/d1_57 ), .B0(\CIC1Sin/d2_56 ), .A0(\CIC1Sin/d1_56 ), 
    .FCI(\CIC1Sin/n11948 ), .F0(\CIC1Sin/n4465 ), .F1(\CIC1Sin/n4464 ), 
    .FCO(\CIC1Sin/n11949 ));
  CIC1Sin_SLICE_237 \CIC1Sin/SLICE_237 ( .B1(\CIC1Sin/d_d9_54 ), 
    .A1(\CIC1Sin/d9_54 ), .B0(\CIC1Sin/d_d9_53 ), .A0(\CIC1Sin/d9_53 ), 
    .FCI(\CIC1Sin/n11538 ), .FCO(\CIC1Sin/n11539 ));
  CIC1Sin_SLICE_238 \CIC1Sin/SLICE_238 ( .B1(\CIC1Sin/d_d9_52 ), 
    .A1(\CIC1Sin/d9_52 ), .B0(\CIC1Sin/d_d9_51 ), .A0(\CIC1Sin/d9_51 ), 
    .FCI(\CIC1Sin/n11537 ), .FCO(\CIC1Sin/n11538 ));
  CIC1Sin_SLICE_239 \CIC1Sin/SLICE_239 ( .B1(\CIC1Sin/d_d9_50 ), 
    .A1(\CIC1Sin/d9_50 ), .B0(\CIC1Sin/d_d9_49 ), .A0(\CIC1Sin/d9_49 ), 
    .FCI(\CIC1Sin/n11536 ), .FCO(\CIC1Sin/n11537 ));
  CIC1Sin_SLICE_240 \CIC1Sin/SLICE_240 ( .B1(\CIC1Sin/d2_55 ), 
    .A1(\CIC1Sin/d1_55 ), .B0(\CIC1Sin/d2_54 ), .A0(\CIC1Sin/d1_54 ), 
    .FCI(\CIC1Sin/n11947 ), .F0(\CIC1Sin/n4467 ), .F1(\CIC1Sin/n4466 ), 
    .FCO(\CIC1Sin/n11948 ));
  CIC1Sin_SLICE_241 \CIC1Sin/SLICE_241 ( .B1(\CIC1Sin/d2_53 ), 
    .A1(\CIC1Sin/d1_53 ), .B0(\CIC1Sin/d2_52 ), .A0(\CIC1Sin/d1_52 ), 
    .FCI(\CIC1Sin/n11946 ), .F0(\CIC1Sin/n4469 ), .F1(\CIC1Sin/n4468 ), 
    .FCO(\CIC1Sin/n11947 ));
  CIC1Sin_SLICE_242 \CIC1Sin/SLICE_242 ( .B1(\CIC1Sin/d2_51 ), 
    .A1(\CIC1Sin/d1_51 ), .B0(\CIC1Sin/d2_50 ), .A0(\CIC1Sin/d1_50 ), 
    .FCI(\CIC1Sin/n11945 ), .F0(\CIC1Sin/n4471 ), .F1(\CIC1Sin/n4470 ), 
    .FCO(\CIC1Sin/n11946 ));
  CIC1Sin_SLICE_243 \CIC1Sin/SLICE_243 ( .B1(\CIC1Sin/d2_49 ), 
    .A1(\CIC1Sin/d1_49 ), .B0(\CIC1Sin/d2_48 ), .A0(\CIC1Sin/d1_48 ), 
    .FCI(\CIC1Sin/n11944 ), .F0(\CIC1Sin/n4473 ), .F1(\CIC1Sin/n4472 ), 
    .FCO(\CIC1Sin/n11945 ));
  CIC1Sin_SLICE_244 \CIC1Sin/SLICE_244 ( .B1(\CIC1Sin/d2_47 ), 
    .A1(\CIC1Sin/d1_47 ), .B0(\CIC1Sin/d2_46 ), .A0(\CIC1Sin/d1_46 ), 
    .FCI(\CIC1Sin/n11943 ), .F0(\CIC1Sin/n4475 ), .F1(\CIC1Sin/n4474 ), 
    .FCO(\CIC1Sin/n11944 ));
  CIC1Sin_SLICE_245 \CIC1Sin/SLICE_245 ( .B1(\CIC1Sin/d2_45 ), 
    .A1(\CIC1Sin/d1_45 ), .B0(\CIC1Sin/d2_44 ), .A0(\CIC1Sin/d1_44 ), 
    .FCI(\CIC1Sin/n11942 ), .F0(\CIC1Sin/n4477 ), .F1(\CIC1Sin/n4476 ), 
    .FCO(\CIC1Sin/n11943 ));
  CIC1Sin_SLICE_246 \CIC1Sin/SLICE_246 ( .B1(\CIC1Sin/d2_43 ), 
    .A1(\CIC1Sin/d1_43 ), .B0(\CIC1Sin/d2_42 ), .A0(\CIC1Sin/d1_42 ), 
    .FCI(\CIC1Sin/n11941 ), .F0(\CIC1Sin/n4479 ), .F1(\CIC1Sin/n4478 ), 
    .FCO(\CIC1Sin/n11942 ));
  CIC1Sin_SLICE_247 \CIC1Sin/SLICE_247 ( .B1(\CIC1Sin/d2_41 ), 
    .A1(\CIC1Sin/d1_41 ), .B0(\CIC1Sin/d2_40 ), .A0(\CIC1Sin/d1_40 ), 
    .FCI(\CIC1Sin/n11940 ), .F0(\CIC1Sin/n4481 ), .F1(\CIC1Sin/n4480 ), 
    .FCO(\CIC1Sin/n11941 ));
  CIC1Sin_SLICE_248 \CIC1Sin/SLICE_248 ( .B1(\CIC1Sin/d2_39 ), 
    .A1(\CIC1Sin/d1_39 ), .B0(\CIC1Sin/d2_38 ), .A0(\CIC1Sin/d1_38 ), 
    .FCI(\CIC1Sin/n11939 ), .F0(\CIC1Sin/n4483 ), .F1(\CIC1Sin/n4482 ), 
    .FCO(\CIC1Sin/n11940 ));
  CIC1Sin_SLICE_249 \CIC1Sin/SLICE_249 ( .B1(\CIC1Sin/d2_37 ), 
    .A1(\CIC1Sin/d1_37 ), .B0(\CIC1Sin/d2_36 ), .A0(\CIC1Sin/d1_36 ), 
    .F1(\CIC1Sin/n4484 ), .FCO(\CIC1Sin/n11939 ));
  CIC1Sin_SLICE_250 \CIC1Sin/SLICE_250 ( .D1(\CIC1Sin/d1_71 ), 
    .C1(\CIC1Sin/n4450 ), .B1(\CIC1Sin/n4448 ), .A1(\CIC1Sin/d2_71 ), 
    .D0(\CIC1Sin/d1_70 ), .C0(\CIC1Sin/n4451 ), .B0(\CIC1Sin/n4448 ), 
    .A0(\CIC1Sin/d2_70 ), .DI1(\CIC1Sin/d2_71_N_490_71 ), 
    .DI0(\CIC1Sin/d2_71_N_490_70 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11936 ), 
    .F0(\CIC1Sin/d2_71_N_490_70 ), .Q0(\CIC1Sin/d2_70 ), 
    .F1(\CIC1Sin/d2_71_N_490_71 ), .Q1(\CIC1Sin/d2_71 ));
  CIC1Sin_SLICE_251 \CIC1Sin/SLICE_251 ( .D1(\CIC1Sin/d1_69 ), 
    .C1(\CIC1Sin/n4452 ), .B1(\CIC1Sin/n4448 ), .A1(\CIC1Sin/d2_69 ), 
    .D0(\CIC1Sin/d1_68 ), .C0(\CIC1Sin/n4453 ), .B0(\CIC1Sin/n4448 ), 
    .A0(\CIC1Sin/d2_68 ), .DI1(\CIC1Sin/d2_71_N_490_69 ), 
    .DI0(\CIC1Sin/d2_71_N_490_68 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11935 ), 
    .F0(\CIC1Sin/d2_71_N_490_68 ), .Q0(\CIC1Sin/d2_68 ), 
    .F1(\CIC1Sin/d2_71_N_490_69 ), .Q1(\CIC1Sin/d2_69 ), 
    .FCO(\CIC1Sin/n11936 ));
  CIC1Sin_SLICE_252 \CIC1Sin/SLICE_252 ( .D1(\CIC1Sin/d1_67 ), 
    .C1(\CIC1Sin/n4454 ), .B1(\CIC1Sin/n4448 ), .A1(\CIC1Sin/d2_67 ), 
    .D0(\CIC1Sin/d1_66 ), .C0(\CIC1Sin/n4455 ), .B0(\CIC1Sin/n4448 ), 
    .A0(\CIC1Sin/d2_66 ), .DI1(\CIC1Sin/d2_71_N_490_67 ), 
    .DI0(\CIC1Sin/d2_71_N_490_66 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11934 ), 
    .F0(\CIC1Sin/d2_71_N_490_66 ), .Q0(\CIC1Sin/d2_66 ), 
    .F1(\CIC1Sin/d2_71_N_490_67 ), .Q1(\CIC1Sin/d2_67 ), 
    .FCO(\CIC1Sin/n11935 ));
  CIC1Sin_SLICE_253 \CIC1Sin/SLICE_253 ( .D1(\CIC1Sin/d1_65 ), 
    .C1(\CIC1Sin/n4456 ), .B1(\CIC1Sin/n4448 ), .A1(\CIC1Sin/d2_65 ), 
    .D0(\CIC1Sin/d1_64 ), .C0(\CIC1Sin/n4457 ), .B0(\CIC1Sin/n4448 ), 
    .A0(\CIC1Sin/d2_64 ), .DI1(\CIC1Sin/d2_71_N_490_65 ), 
    .DI0(\CIC1Sin/d2_71_N_490_64 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11933 ), 
    .F0(\CIC1Sin/d2_71_N_490_64 ), .Q0(\CIC1Sin/d2_64 ), 
    .F1(\CIC1Sin/d2_71_N_490_65 ), .Q1(\CIC1Sin/d2_65 ), 
    .FCO(\CIC1Sin/n11934 ));
  CIC1Sin_SLICE_254 \CIC1Sin/SLICE_254 ( .D1(\CIC1Sin/d1_63 ), 
    .C1(\CIC1Sin/n4458 ), .B1(\CIC1Sin/n4448 ), .A1(\CIC1Sin/d2_63 ), 
    .D0(\CIC1Sin/d1_62 ), .C0(\CIC1Sin/n4459 ), .B0(\CIC1Sin/n4448 ), 
    .A0(\CIC1Sin/d2_62 ), .DI1(\CIC1Sin/d2_71_N_490_63 ), 
    .DI0(\CIC1Sin/d2_71_N_490_62 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11932 ), 
    .F0(\CIC1Sin/d2_71_N_490_62 ), .Q0(\CIC1Sin/d2_62 ), 
    .F1(\CIC1Sin/d2_71_N_490_63 ), .Q1(\CIC1Sin/d2_63 ), 
    .FCO(\CIC1Sin/n11933 ));
  CIC1Sin_SLICE_255 \CIC1Sin/SLICE_255 ( .D1(\CIC1Sin/d1_61 ), 
    .C1(\CIC1Sin/n4460 ), .B1(\CIC1Sin/n4448 ), .A1(\CIC1Sin/d2_61 ), 
    .D0(\CIC1Sin/d1_60 ), .C0(\CIC1Sin/n4461 ), .B0(\CIC1Sin/n4448 ), 
    .A0(\CIC1Sin/d2_60 ), .DI1(\CIC1Sin/d2_71_N_490_61 ), 
    .DI0(\CIC1Sin/d2_71_N_490_60 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11931 ), 
    .F0(\CIC1Sin/d2_71_N_490_60 ), .Q0(\CIC1Sin/d2_60 ), 
    .F1(\CIC1Sin/d2_71_N_490_61 ), .Q1(\CIC1Sin/d2_61 ), 
    .FCO(\CIC1Sin/n11932 ));
  CIC1Sin_SLICE_256 \CIC1Sin/SLICE_256 ( .D1(\CIC1Sin/d1_59 ), 
    .C1(\CIC1Sin/n4462 ), .B1(\CIC1Sin/n4448 ), .A1(\CIC1Sin/d2_59 ), 
    .D0(\CIC1Sin/d1_58 ), .C0(\CIC1Sin/n4463 ), .B0(\CIC1Sin/n4448 ), 
    .A0(\CIC1Sin/d2_58 ), .DI1(\CIC1Sin/d2_71_N_490_59 ), 
    .DI0(\CIC1Sin/d2_71_N_490_58 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11930 ), 
    .F0(\CIC1Sin/d2_71_N_490_58 ), .Q0(\CIC1Sin/d2_58 ), 
    .F1(\CIC1Sin/d2_71_N_490_59 ), .Q1(\CIC1Sin/d2_59 ), 
    .FCO(\CIC1Sin/n11931 ));
  CIC1Sin_SLICE_257 \CIC1Sin/SLICE_257 ( .D1(\CIC1Sin/d1_57 ), 
    .C1(\CIC1Sin/n4464 ), .B1(\CIC1Sin/n4448 ), .A1(\CIC1Sin/d2_57 ), 
    .D0(\CIC1Sin/d1_56 ), .C0(\CIC1Sin/n4465 ), .B0(\CIC1Sin/n4448 ), 
    .A0(\CIC1Sin/d2_56 ), .DI1(\CIC1Sin/d2_71_N_490_57 ), 
    .DI0(\CIC1Sin/d2_71_N_490_56 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11929 ), 
    .F0(\CIC1Sin/d2_71_N_490_56 ), .Q0(\CIC1Sin/d2_56 ), 
    .F1(\CIC1Sin/d2_71_N_490_57 ), .Q1(\CIC1Sin/d2_57 ), 
    .FCO(\CIC1Sin/n11930 ));
  CIC1Sin_SLICE_258 \CIC1Sin/SLICE_258 ( .D1(\CIC1Sin/d1_55 ), 
    .C1(\CIC1Sin/n4466 ), .B1(\CIC1Sin/n4448 ), .A1(\CIC1Sin/d2_55 ), 
    .D0(\CIC1Sin/d1_54 ), .C0(\CIC1Sin/n4467 ), .B0(\CIC1Sin/n4448 ), 
    .A0(\CIC1Sin/d2_54 ), .DI1(\CIC1Sin/d2_71_N_490_55 ), 
    .DI0(\CIC1Sin/d2_71_N_490_54 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11928 ), 
    .F0(\CIC1Sin/d2_71_N_490_54 ), .Q0(\CIC1Sin/d2_54 ), 
    .F1(\CIC1Sin/d2_71_N_490_55 ), .Q1(\CIC1Sin/d2_55 ), 
    .FCO(\CIC1Sin/n11929 ));
  CIC1Sin_SLICE_259 \CIC1Sin/SLICE_259 ( .D1(\CIC1Sin/d1_53 ), 
    .C1(\CIC1Sin/n4468 ), .B1(\CIC1Sin/n4448 ), .A1(\CIC1Sin/d2_53 ), 
    .D0(\CIC1Sin/d1_52 ), .C0(\CIC1Sin/n4469 ), .B0(\CIC1Sin/n4448 ), 
    .A0(\CIC1Sin/d2_52 ), .DI1(\CIC1Sin/d2_71_N_490_53 ), 
    .DI0(\CIC1Sin/d2_71_N_490_52 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11927 ), 
    .F0(\CIC1Sin/d2_71_N_490_52 ), .Q0(\CIC1Sin/d2_52 ), 
    .F1(\CIC1Sin/d2_71_N_490_53 ), .Q1(\CIC1Sin/d2_53 ), 
    .FCO(\CIC1Sin/n11928 ));
  CIC1Sin_SLICE_260 \CIC1Sin/SLICE_260 ( .D1(\CIC1Sin/d1_51 ), 
    .C1(\CIC1Sin/n4470 ), .B1(\CIC1Sin/n4448 ), .A1(\CIC1Sin/d2_51 ), 
    .D0(\CIC1Sin/d1_50 ), .C0(\CIC1Sin/n4471 ), .B0(\CIC1Sin/n4448 ), 
    .A0(\CIC1Sin/d2_50 ), .DI1(\CIC1Sin/d2_71_N_490_51 ), 
    .DI0(\CIC1Sin/d2_71_N_490_50 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11926 ), 
    .F0(\CIC1Sin/d2_71_N_490_50 ), .Q0(\CIC1Sin/d2_50 ), 
    .F1(\CIC1Sin/d2_71_N_490_51 ), .Q1(\CIC1Sin/d2_51 ), 
    .FCO(\CIC1Sin/n11927 ));
  CIC1Sin_SLICE_261 \CIC1Sin/SLICE_261 ( .D1(\CIC1Sin/d1_49 ), 
    .C1(\CIC1Sin/n4472 ), .B1(\CIC1Sin/n4448 ), .A1(\CIC1Sin/d2_49 ), 
    .D0(\CIC1Sin/d1_48 ), .C0(\CIC1Sin/n4473 ), .B0(\CIC1Sin/n4448 ), 
    .A0(\CIC1Sin/d2_48 ), .DI1(\CIC1Sin/d2_71_N_490_49 ), 
    .DI0(\CIC1Sin/d2_71_N_490_48 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11925 ), 
    .F0(\CIC1Sin/d2_71_N_490_48 ), .Q0(\CIC1Sin/d2_48 ), 
    .F1(\CIC1Sin/d2_71_N_490_49 ), .Q1(\CIC1Sin/d2_49 ), 
    .FCO(\CIC1Sin/n11926 ));
  CIC1Sin_SLICE_262 \CIC1Sin/SLICE_262 ( .D1(\CIC1Sin/d1_47 ), 
    .C1(\CIC1Sin/n4474 ), .B1(\CIC1Sin/n4448 ), .A1(\CIC1Sin/d2_47 ), 
    .D0(\CIC1Sin/d1_46 ), .C0(\CIC1Sin/n4475 ), .B0(\CIC1Sin/n4448 ), 
    .A0(\CIC1Sin/d2_46 ), .DI1(\CIC1Sin/d2_71_N_490_47 ), 
    .DI0(\CIC1Sin/d2_71_N_490_46 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11924 ), 
    .F0(\CIC1Sin/d2_71_N_490_46 ), .Q0(\CIC1Sin/d2_46 ), 
    .F1(\CIC1Sin/d2_71_N_490_47 ), .Q1(\CIC1Sin/d2_47 ), 
    .FCO(\CIC1Sin/n11925 ));
  CIC1Sin_SLICE_263 \CIC1Sin/SLICE_263 ( .D1(\CIC1Sin/d1_45 ), 
    .C1(\CIC1Sin/n4476 ), .B1(\CIC1Sin/n4448 ), .A1(\CIC1Sin/d2_45 ), 
    .D0(\CIC1Sin/d1_44 ), .C0(\CIC1Sin/n4477 ), .B0(\CIC1Sin/n4448 ), 
    .A0(\CIC1Sin/d2_44 ), .DI1(\CIC1Sin/d2_71_N_490_45 ), 
    .DI0(\CIC1Sin/d2_71_N_490_44 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11923 ), 
    .F0(\CIC1Sin/d2_71_N_490_44 ), .Q0(\CIC1Sin/d2_44 ), 
    .F1(\CIC1Sin/d2_71_N_490_45 ), .Q1(\CIC1Sin/d2_45 ), 
    .FCO(\CIC1Sin/n11924 ));
  CIC1Sin_SLICE_264 \CIC1Sin/SLICE_264 ( .D1(\CIC1Sin/d1_43 ), 
    .C1(\CIC1Sin/n4478 ), .B1(\CIC1Sin/n4448 ), .A1(\CIC1Sin/d2_43 ), 
    .D0(\CIC1Sin/d1_42 ), .C0(\CIC1Sin/n4479 ), .B0(\CIC1Sin/n4448 ), 
    .A0(\CIC1Sin/d2_42 ), .DI1(\CIC1Sin/d2_71_N_490_43 ), 
    .DI0(\CIC1Sin/d2_71_N_490_42 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11922 ), 
    .F0(\CIC1Sin/d2_71_N_490_42 ), .Q0(\CIC1Sin/d2_42 ), 
    .F1(\CIC1Sin/d2_71_N_490_43 ), .Q1(\CIC1Sin/d2_43 ), 
    .FCO(\CIC1Sin/n11923 ));
  CIC1Sin_SLICE_265 \CIC1Sin/SLICE_265 ( .D1(\CIC1Sin/d1_41 ), 
    .C1(\CIC1Sin/n4480 ), .B1(\CIC1Sin/n4448 ), .A1(\CIC1Sin/d2_41 ), 
    .D0(\CIC1Sin/d1_40 ), .C0(\CIC1Sin/n4481 ), .B0(\CIC1Sin/n4448 ), 
    .A0(\CIC1Sin/d2_40 ), .DI1(\CIC1Sin/d2_71_N_490_41 ), 
    .DI0(\CIC1Sin/d2_71_N_490_40 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11921 ), 
    .F0(\CIC1Sin/d2_71_N_490_40 ), .Q0(\CIC1Sin/d2_40 ), 
    .F1(\CIC1Sin/d2_71_N_490_41 ), .Q1(\CIC1Sin/d2_41 ), 
    .FCO(\CIC1Sin/n11922 ));
  CIC1Sin_SLICE_266 \CIC1Sin/SLICE_266 ( .D1(\CIC1Sin/d1_39 ), 
    .C1(\CIC1Sin/n4482 ), .B1(\CIC1Sin/n4448 ), .A1(\CIC1Sin/d2_39 ), 
    .D0(\CIC1Sin/d1_38 ), .C0(\CIC1Sin/n4483 ), .B0(\CIC1Sin/n4448 ), 
    .A0(\CIC1Sin/d2_38 ), .DI1(\CIC1Sin/d2_71_N_490_39 ), 
    .DI0(\CIC1Sin/d2_71_N_490_38 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11920 ), 
    .F0(\CIC1Sin/d2_71_N_490_38 ), .Q0(\CIC1Sin/d2_38 ), 
    .F1(\CIC1Sin/d2_71_N_490_39 ), .Q1(\CIC1Sin/d2_39 ), 
    .FCO(\CIC1Sin/n11921 ));
  CIC1Sin_SLICE_267 \CIC1Sin/SLICE_267 ( .D1(\CIC1Sin/d1_37 ), 
    .C1(\CIC1Sin/n4484 ), .B1(\CIC1Sin/n4448 ), .A1(\CIC1Sin/d2_37 ), 
    .D0(\CIC1Sin/d1_36 ), .C0(\CIC1Sin/n4485 ), .B0(\CIC1Sin/n4448 ), 
    .A0(\CIC1Sin/d2_36 ), .DI1(\CIC1Sin/d2_71_N_490_37 ), 
    .DI0(\CIC1Sin/d2_71_N_490_36 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11919 ), 
    .F0(\CIC1Sin/d2_71_N_490_36 ), .Q0(\CIC1Sin/d2_36 ), 
    .F1(\CIC1Sin/d2_71_N_490_37 ), .Q1(\CIC1Sin/d2_37 ), 
    .FCO(\CIC1Sin/n11920 ));
  CIC1Sin_SLICE_268 \CIC1Sin/SLICE_268 ( .A1(\CIC1Sin/n4448 ), 
    .FCO(\CIC1Sin/n11919 ));
  CIC1Sin_SLICE_269 \CIC1Sin/SLICE_269 ( .B1(\CIC1Sin/d3_71 ), 
    .A1(\CIC1Sin/d2_71 ), .B0(\CIC1Sin/d3_70 ), .A0(\CIC1Sin/d2_70 ), 
    .FCI(\CIC1Sin/n11914 ), .F0(\CIC1Sin/n4603 ), .F1(\CIC1Sin/n4602 ));
  CIC1Sin_SLICE_270 \CIC1Sin/SLICE_270 ( .B1(\CIC1Sin/d3_69 ), 
    .A1(\CIC1Sin/d2_69 ), .B0(\CIC1Sin/d3_68 ), .A0(\CIC1Sin/d2_68 ), 
    .FCI(\CIC1Sin/n11913 ), .F0(\CIC1Sin/n4605 ), .F1(\CIC1Sin/n4604 ), 
    .FCO(\CIC1Sin/n11914 ));
  CIC1Sin_SLICE_271 \CIC1Sin/SLICE_271 ( .B1(\CIC1Sin/d3_67 ), 
    .A1(\CIC1Sin/d2_67 ), .B0(\CIC1Sin/d3_66 ), .A0(\CIC1Sin/d2_66 ), 
    .FCI(\CIC1Sin/n11912 ), .F0(\CIC1Sin/n4607 ), .F1(\CIC1Sin/n4606 ), 
    .FCO(\CIC1Sin/n11913 ));
  CIC1Sin_SLICE_272 \CIC1Sin/SLICE_272 ( .B1(\CIC1Sin/d3_65 ), 
    .A1(\CIC1Sin/d2_65 ), .B0(\CIC1Sin/d3_64 ), .A0(\CIC1Sin/d2_64 ), 
    .FCI(\CIC1Sin/n11911 ), .F0(\CIC1Sin/n4609 ), .F1(\CIC1Sin/n4608 ), 
    .FCO(\CIC1Sin/n11912 ));
  CIC1Sin_SLICE_273 \CIC1Sin/SLICE_273 ( .B1(\CIC1Sin/d3_63 ), 
    .A1(\CIC1Sin/d2_63 ), .B0(\CIC1Sin/d3_62 ), .A0(\CIC1Sin/d2_62 ), 
    .FCI(\CIC1Sin/n11910 ), .F0(\CIC1Sin/n4611 ), .F1(\CIC1Sin/n4610 ), 
    .FCO(\CIC1Sin/n11911 ));
  CIC1Sin_SLICE_274 \CIC1Sin/SLICE_274 ( .B1(\CIC1Sin/d3_61 ), 
    .A1(\CIC1Sin/d2_61 ), .B0(\CIC1Sin/d3_60 ), .A0(\CIC1Sin/d2_60 ), 
    .FCI(\CIC1Sin/n11909 ), .F0(\CIC1Sin/n4613 ), .F1(\CIC1Sin/n4612 ), 
    .FCO(\CIC1Sin/n11910 ));
  CIC1Sin_SLICE_275 \CIC1Sin/SLICE_275 ( .B1(\CIC1Sin/d_d9_48 ), 
    .A1(\CIC1Sin/d9_48 ), .B0(\CIC1Sin/d_d9_47 ), .A0(\CIC1Sin/d9_47 ), 
    .FCI(\CIC1Sin/n11535 ), .FCO(\CIC1Sin/n11536 ));
  CIC1Sin_SLICE_276 \CIC1Sin/SLICE_276 ( .B1(\CIC1Sin/d3_59 ), 
    .A1(\CIC1Sin/d2_59 ), .B0(\CIC1Sin/d3_58 ), .A0(\CIC1Sin/d2_58 ), 
    .FCI(\CIC1Sin/n11908 ), .F0(\CIC1Sin/n4615 ), .F1(\CIC1Sin/n4614 ), 
    .FCO(\CIC1Sin/n11909 ));
  CIC1Sin_SLICE_277 \CIC1Sin/SLICE_277 ( .B1(\CIC1Sin/d_d9_46 ), 
    .A1(\CIC1Sin/d9_46 ), .B0(\CIC1Sin/d_d9_45 ), .A0(\CIC1Sin/d9_45 ), 
    .FCI(\CIC1Sin/n11534 ), .FCO(\CIC1Sin/n11535 ));
  CIC1Sin_SLICE_278 \CIC1Sin/SLICE_278 ( .B1(\CIC1Sin/d3_57 ), 
    .A1(\CIC1Sin/d2_57 ), .B0(\CIC1Sin/d3_56 ), .A0(\CIC1Sin/d2_56 ), 
    .FCI(\CIC1Sin/n11907 ), .F0(\CIC1Sin/n4617 ), .F1(\CIC1Sin/n4616 ), 
    .FCO(\CIC1Sin/n11908 ));
  CIC1Sin_SLICE_279 \CIC1Sin/SLICE_279 ( .B1(\CIC1Sin/d3_55 ), 
    .A1(\CIC1Sin/d2_55 ), .B0(\CIC1Sin/d3_54 ), .A0(\CIC1Sin/d2_54 ), 
    .FCI(\CIC1Sin/n11906 ), .F0(\CIC1Sin/n4619 ), .F1(\CIC1Sin/n4618 ), 
    .FCO(\CIC1Sin/n11907 ));
  CIC1Sin_SLICE_280 \CIC1Sin/SLICE_280 ( .B0(\CIC1Sin/d_d7_71 ), 
    .A0(\CIC1Sin/d7_71 ), .FCI(\CIC1Sin/n11134 ), .F0(\CIC1Sin/n6882 ));
  CIC1Sin_SLICE_281 \CIC1Sin/SLICE_281 ( .B1(\CIC1Sin/d_d7_70 ), 
    .A1(\CIC1Sin/d7_70 ), .B0(\CIC1Sin/d_d7_69 ), .A0(\CIC1Sin/d7_69 ), 
    .FCI(\CIC1Sin/n11133 ), .F0(\CIC1Sin/n6884 ), .F1(\CIC1Sin/n6883 ), 
    .FCO(\CIC1Sin/n11134 ));
  CIC1Sin_SLICE_282 \CIC1Sin/SLICE_282 ( .B1(\CIC1Sin/d_d7_68 ), 
    .A1(\CIC1Sin/d7_68 ), .B0(\CIC1Sin/d_d7_67 ), .A0(\CIC1Sin/d7_67 ), 
    .FCI(\CIC1Sin/n11132 ), .F0(\CIC1Sin/n6886 ), .F1(\CIC1Sin/n6885 ), 
    .FCO(\CIC1Sin/n11133 ));
  CIC1Sin_SLICE_283 \CIC1Sin/SLICE_283 ( .B1(\CIC1Sin/d_d7_66 ), 
    .A1(\CIC1Sin/d7_66 ), .B0(\CIC1Sin/d_d7_65 ), .A0(\CIC1Sin/d7_65 ), 
    .FCI(\CIC1Sin/n11131 ), .F0(\CIC1Sin/n6888 ), .F1(\CIC1Sin/n6887 ), 
    .FCO(\CIC1Sin/n11132 ));
  CIC1Sin_SLICE_284 \CIC1Sin/SLICE_284 ( .B1(\CIC1Sin/d_d7_64 ), 
    .A1(\CIC1Sin/d7_64 ), .B0(\CIC1Sin/d_d7_63 ), .A0(\CIC1Sin/d7_63 ), 
    .FCI(\CIC1Sin/n11130 ), .F0(\CIC1Sin/n6890 ), .F1(\CIC1Sin/n6889 ), 
    .FCO(\CIC1Sin/n11131 ));
  CIC1Sin_SLICE_285 \CIC1Sin/SLICE_285 ( .B1(\CIC1Sin/d_d7_62 ), 
    .A1(\CIC1Sin/d7_62 ), .B0(\CIC1Sin/d_d7_61 ), .A0(\CIC1Sin/d7_61 ), 
    .FCI(\CIC1Sin/n11129 ), .F0(\CIC1Sin/n6892 ), .F1(\CIC1Sin/n6891 ), 
    .FCO(\CIC1Sin/n11130 ));
  CIC1Sin_SLICE_286 \CIC1Sin/SLICE_286 ( .B1(\CIC1Sin/d_d7_60 ), 
    .A1(\CIC1Sin/d7_60 ), .B0(\CIC1Sin/d_d7_59 ), .A0(\CIC1Sin/d7_59 ), 
    .FCI(\CIC1Sin/n11128 ), .F0(\CIC1Sin/n6894 ), .F1(\CIC1Sin/n6893 ), 
    .FCO(\CIC1Sin/n11129 ));
  CIC1Sin_SLICE_287 \CIC1Sin/SLICE_287 ( .B1(\CIC1Sin/d_d7_58 ), 
    .A1(\CIC1Sin/d7_58 ), .B0(\CIC1Sin/d_d7_57 ), .A0(\CIC1Sin/d7_57 ), 
    .FCI(\CIC1Sin/n11127 ), .F0(\CIC1Sin/n6896 ), .F1(\CIC1Sin/n6895 ), 
    .FCO(\CIC1Sin/n11128 ));
  CIC1Sin_SLICE_288 \CIC1Sin/SLICE_288 ( .B1(\CIC1Sin/d_d7_56 ), 
    .A1(\CIC1Sin/d7_56 ), .B0(\CIC1Sin/d_d7_55 ), .A0(\CIC1Sin/d7_55 ), 
    .FCI(\CIC1Sin/n11126 ), .F0(\CIC1Sin/n6898 ), .F1(\CIC1Sin/n6897 ), 
    .FCO(\CIC1Sin/n11127 ));
  CIC1Sin_SLICE_289 \CIC1Sin/SLICE_289 ( .B1(\CIC1Sin/d_d7_54 ), 
    .A1(\CIC1Sin/d7_54 ), .B0(\CIC1Sin/d_d7_53 ), .A0(\CIC1Sin/d7_53 ), 
    .FCI(\CIC1Sin/n11125 ), .F0(\CIC1Sin/n6900 ), .F1(\CIC1Sin/n6899 ), 
    .FCO(\CIC1Sin/n11126 ));
  CIC1Sin_SLICE_290 \CIC1Sin/SLICE_290 ( .B1(\CIC1Sin/d_d7_52 ), 
    .A1(\CIC1Sin/d7_52 ), .B0(\CIC1Sin/d_d7_51 ), .A0(\CIC1Sin/d7_51 ), 
    .FCI(\CIC1Sin/n11124 ), .F0(\CIC1Sin/n6902 ), .F1(\CIC1Sin/n6901 ), 
    .FCO(\CIC1Sin/n11125 ));
  CIC1Sin_SLICE_291 \CIC1Sin/SLICE_291 ( .B1(\CIC1Sin/d_d7_50 ), 
    .A1(\CIC1Sin/d7_50 ), .B0(\CIC1Sin/d_d7_49 ), .A0(\CIC1Sin/d7_49 ), 
    .FCI(\CIC1Sin/n11123 ), .F0(\CIC1Sin/n6904 ), .F1(\CIC1Sin/n6903 ), 
    .FCO(\CIC1Sin/n11124 ));
  CIC1Sin_SLICE_292 \CIC1Sin/SLICE_292 ( .B1(\CIC1Sin/d_d7_48 ), 
    .A1(\CIC1Sin/d7_48 ), .B0(\CIC1Sin/d_d7_47 ), .A0(\CIC1Sin/d7_47 ), 
    .FCI(\CIC1Sin/n11122 ), .F0(\CIC1Sin/n6906 ), .F1(\CIC1Sin/n6905 ), 
    .FCO(\CIC1Sin/n11123 ));
  CIC1Sin_SLICE_293 \CIC1Sin/SLICE_293 ( .B1(\CIC1Sin/d_d7_46 ), 
    .A1(\CIC1Sin/d7_46 ), .B0(\CIC1Sin/d_d7_45 ), .A0(\CIC1Sin/d7_45 ), 
    .FCI(\CIC1Sin/n11121 ), .F0(\CIC1Sin/n6908 ), .F1(\CIC1Sin/n6907 ), 
    .FCO(\CIC1Sin/n11122 ));
  CIC1Sin_SLICE_294 \CIC1Sin/SLICE_294 ( .B1(\CIC1Sin/d_d7_44 ), 
    .A1(\CIC1Sin/d7_44 ), .B0(\CIC1Sin/d_d7_43 ), .A0(\CIC1Sin/d7_43 ), 
    .FCI(\CIC1Sin/n11120 ), .F0(\CIC1Sin/n6910 ), .F1(\CIC1Sin/n6909 ), 
    .FCO(\CIC1Sin/n11121 ));
  CIC1Sin_SLICE_295 \CIC1Sin/SLICE_295 ( .B1(\CIC1Sin/d_d7_42 ), 
    .A1(\CIC1Sin/d7_42 ), .B0(\CIC1Sin/d_d7_41 ), .A0(\CIC1Sin/d7_41 ), 
    .FCI(\CIC1Sin/n11119 ), .F0(\CIC1Sin/n6912 ), .F1(\CIC1Sin/n6911 ), 
    .FCO(\CIC1Sin/n11120 ));
  CIC1Sin_SLICE_296 \CIC1Sin/SLICE_296 ( .B1(\CIC1Sin/d_d7_40 ), 
    .A1(\CIC1Sin/d7_40 ), .B0(\CIC1Sin/d_d7_39 ), .A0(\CIC1Sin/d7_39 ), 
    .FCI(\CIC1Sin/n11118 ), .F0(\CIC1Sin/n6914 ), .F1(\CIC1Sin/n6913 ), 
    .FCO(\CIC1Sin/n11119 ));
  CIC1Sin_SLICE_297 \CIC1Sin/SLICE_297 ( .B1(\CIC1Sin/d_d7_38 ), 
    .A1(\CIC1Sin/d7_38 ), .B0(\CIC1Sin/d_d7_37 ), .A0(\CIC1Sin/d7_37 ), 
    .FCI(\CIC1Sin/n11117 ), .F0(\CIC1Sin/n6916 ), .F1(\CIC1Sin/n6915 ), 
    .FCO(\CIC1Sin/n11118 ));
  CIC1Sin_SLICE_298 \CIC1Sin/SLICE_298 ( .B1(\CIC1Sin/d_d7_36 ), 
    .A1(\CIC1Sin/d7_36 ), .F1(\CIC1Sin/n6917 ), .FCO(\CIC1Sin/n11117 ));
  CIC1Sin_SLICE_299 \CIC1Sin/SLICE_299 ( .D1(\CIC1Sin/d7_71 ), 
    .C1(\CIC1Sin/n6882 ), .B1(\CIC1Sin/n6880 ), .A1(\CIC1Sin/d_d7_71 ), 
    .D0(\CIC1Sin/d7_70 ), .C0(\CIC1Sin/n6883 ), .B0(\CIC1Sin/n6880 ), 
    .A0(\CIC1Sin/d_d7_70 ), .DI1(\CIC1Sin/d8_71_N_1603_71 ), 
    .DI0(\CIC1Sin/d8_71_N_1603_70 ), .CE(\CIC1Sin/osc_clk_enable_510 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11115 ), .F0(\CIC1Sin/d8_71_N_1603_70 ), 
    .Q0(\CIC1Sin/d8_70 ), .F1(\CIC1Sin/d8_71_N_1603_71 ), .Q1(\CIC1Sin/d8_71 ));
  CIC1Sin_SLICE_300 \CIC1Sin/SLICE_300 ( .D1(\CIC1Sin/d7_69 ), 
    .C1(\CIC1Sin/n6884 ), .B1(\CIC1Sin/n6880 ), .A1(\CIC1Sin/d_d7_69 ), 
    .D0(\CIC1Sin/d7_68 ), .C0(\CIC1Sin/n6885 ), .B0(\CIC1Sin/n6880 ), 
    .A0(\CIC1Sin/d_d7_68 ), .DI1(\CIC1Sin/d8_71_N_1603_69 ), 
    .DI0(\CIC1Sin/d8_71_N_1603_68 ), .CE(\CIC1Sin/osc_clk_enable_510 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11114 ), .F0(\CIC1Sin/d8_71_N_1603_68 ), 
    .Q0(\CIC1Sin/d8_68 ), .F1(\CIC1Sin/d8_71_N_1603_69 ), .Q1(\CIC1Sin/d8_69 ), 
    .FCO(\CIC1Sin/n11115 ));
  CIC1Sin_SLICE_301 \CIC1Sin/SLICE_301 ( .D1(\CIC1Sin/d7_67 ), 
    .C1(\CIC1Sin/n6886 ), .B1(\CIC1Sin/n6880 ), .A1(\CIC1Sin/d_d7_67 ), 
    .D0(\CIC1Sin/d7_66 ), .C0(\CIC1Sin/n6887 ), .B0(\CIC1Sin/n6880 ), 
    .A0(\CIC1Sin/d_d7_66 ), .DI1(\CIC1Sin/d8_71_N_1603_67 ), 
    .DI0(\CIC1Sin/d8_71_N_1603_66 ), .CE(\CIC1Sin/osc_clk_enable_510 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11113 ), .F0(\CIC1Sin/d8_71_N_1603_66 ), 
    .Q0(\CIC1Sin/d8_66 ), .F1(\CIC1Sin/d8_71_N_1603_67 ), .Q1(\CIC1Sin/d8_67 ), 
    .FCO(\CIC1Sin/n11114 ));
  CIC1Sin_SLICE_302 \CIC1Sin/SLICE_302 ( .D1(\CIC1Sin/d7_65 ), 
    .C1(\CIC1Sin/n6888 ), .B1(\CIC1Sin/n6880 ), .A1(\CIC1Sin/d_d7_65 ), 
    .D0(\CIC1Sin/d7_64 ), .C0(\CIC1Sin/n6889 ), .B0(\CIC1Sin/n6880 ), 
    .A0(\CIC1Sin/d_d7_64 ), .DI1(\CIC1Sin/d8_71_N_1603_65 ), 
    .DI0(\CIC1Sin/d8_71_N_1603_64 ), .CE(\CIC1Sin/osc_clk_enable_510 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11112 ), .F0(\CIC1Sin/d8_71_N_1603_64 ), 
    .Q0(\CIC1Sin/d8_64 ), .F1(\CIC1Sin/d8_71_N_1603_65 ), .Q1(\CIC1Sin/d8_65 ), 
    .FCO(\CIC1Sin/n11113 ));
  CIC1Sin_SLICE_303 \CIC1Sin/SLICE_303 ( .D1(\CIC1Sin/d7_63 ), 
    .C1(\CIC1Sin/n6890 ), .B1(\CIC1Sin/n6880 ), .A1(\CIC1Sin/d_d7_63 ), 
    .D0(\CIC1Sin/d7_62 ), .C0(\CIC1Sin/n6891 ), .B0(\CIC1Sin/n6880 ), 
    .A0(\CIC1Sin/d_d7_62 ), .DI1(\CIC1Sin/d8_71_N_1603_63 ), 
    .DI0(\CIC1Sin/d8_71_N_1603_62 ), .CE(\CIC1Sin/osc_clk_enable_510 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11111 ), .F0(\CIC1Sin/d8_71_N_1603_62 ), 
    .Q0(\CIC1Sin/d8_62 ), .F1(\CIC1Sin/d8_71_N_1603_63 ), .Q1(\CIC1Sin/d8_63 ), 
    .FCO(\CIC1Sin/n11112 ));
  CIC1Sin_SLICE_304 \CIC1Sin/SLICE_304 ( .D1(\CIC1Sin/d7_61 ), 
    .C1(\CIC1Sin/n6892 ), .B1(\CIC1Sin/n6880 ), .A1(\CIC1Sin/d_d7_61 ), 
    .D0(\CIC1Sin/d7_60 ), .C0(\CIC1Sin/n6893 ), .B0(\CIC1Sin/n6880 ), 
    .A0(\CIC1Sin/d_d7_60 ), .DI1(\CIC1Sin/d8_71_N_1603_61 ), 
    .DI0(\CIC1Sin/d8_71_N_1603_60 ), .CE(\CIC1Sin/osc_clk_enable_510 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11110 ), .F0(\CIC1Sin/d8_71_N_1603_60 ), 
    .Q0(\CIC1Sin/d8_60 ), .F1(\CIC1Sin/d8_71_N_1603_61 ), .Q1(\CIC1Sin/d8_61 ), 
    .FCO(\CIC1Sin/n11111 ));
  CIC1Sin_SLICE_305 \CIC1Sin/SLICE_305 ( .D1(\CIC1Sin/d7_59 ), 
    .C1(\CIC1Sin/n6894 ), .B1(\CIC1Sin/n6880 ), .A1(\CIC1Sin/d_d7_59 ), 
    .D0(\CIC1Sin/d7_58 ), .C0(\CIC1Sin/n6895 ), .B0(\CIC1Sin/n6880 ), 
    .A0(\CIC1Sin/d_d7_58 ), .DI1(\CIC1Sin/d8_71_N_1603_59 ), 
    .DI0(\CIC1Sin/d8_71_N_1603_58 ), .CE(\CIC1Sin/osc_clk_enable_510 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11109 ), .F0(\CIC1Sin/d8_71_N_1603_58 ), 
    .Q0(\CIC1Sin/d8_58 ), .F1(\CIC1Sin/d8_71_N_1603_59 ), .Q1(\CIC1Sin/d8_59 ), 
    .FCO(\CIC1Sin/n11110 ));
  CIC1Sin_SLICE_306 \CIC1Sin/SLICE_306 ( .D1(\CIC1Sin/d7_57 ), 
    .C1(\CIC1Sin/n6896 ), .B1(\CIC1Sin/n6880 ), .A1(\CIC1Sin/d_d7_57 ), 
    .D0(\CIC1Sin/d7_56 ), .C0(\CIC1Sin/n6897 ), .B0(\CIC1Sin/n6880 ), 
    .A0(\CIC1Sin/d_d7_56 ), .DI1(\CIC1Sin/d8_71_N_1603_57 ), 
    .DI0(\CIC1Sin/d8_71_N_1603_56 ), .CE(\CIC1Sin/osc_clk_enable_510 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11108 ), .F0(\CIC1Sin/d8_71_N_1603_56 ), 
    .Q0(\CIC1Sin/d8_56 ), .F1(\CIC1Sin/d8_71_N_1603_57 ), .Q1(\CIC1Sin/d8_57 ), 
    .FCO(\CIC1Sin/n11109 ));
  CIC1Sin_SLICE_307 \CIC1Sin/SLICE_307 ( .D1(\CIC1Sin/d7_55 ), 
    .C1(\CIC1Sin/n6898 ), .B1(\CIC1Sin/n6880 ), .A1(\CIC1Sin/d_d7_55 ), 
    .D0(\CIC1Sin/d7_54 ), .C0(\CIC1Sin/n6899 ), .B0(\CIC1Sin/n6880 ), 
    .A0(\CIC1Sin/d_d7_54 ), .DI1(\CIC1Sin/d8_71_N_1603_55 ), 
    .DI0(\CIC1Sin/d8_71_N_1603_54 ), .CE(\CIC1Sin/osc_clk_enable_510 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11107 ), .F0(\CIC1Sin/d8_71_N_1603_54 ), 
    .Q0(\CIC1Sin/d8_54 ), .F1(\CIC1Sin/d8_71_N_1603_55 ), .Q1(\CIC1Sin/d8_55 ), 
    .FCO(\CIC1Sin/n11108 ));
  CIC1Sin_SLICE_308 \CIC1Sin/SLICE_308 ( .D1(\CIC1Sin/d7_53 ), 
    .C1(\CIC1Sin/n6900 ), .B1(\CIC1Sin/n6880 ), .A1(\CIC1Sin/d_d7_53 ), 
    .D0(\CIC1Sin/d7_52 ), .C0(\CIC1Sin/n6901 ), .B0(\CIC1Sin/n6880 ), 
    .A0(\CIC1Sin/d_d7_52 ), .DI1(\CIC1Sin/d8_71_N_1603_53 ), 
    .DI0(\CIC1Sin/d8_71_N_1603_52 ), .CE(\CIC1Sin/osc_clk_enable_510 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11106 ), .F0(\CIC1Sin/d8_71_N_1603_52 ), 
    .Q0(\CIC1Sin/d8_52 ), .F1(\CIC1Sin/d8_71_N_1603_53 ), .Q1(\CIC1Sin/d8_53 ), 
    .FCO(\CIC1Sin/n11107 ));
  CIC1Sin_SLICE_309 \CIC1Sin/SLICE_309 ( .D1(\CIC1Sin/d7_51 ), 
    .C1(\CIC1Sin/n6902 ), .B1(\CIC1Sin/n6880 ), .A1(\CIC1Sin/d_d7_51 ), 
    .D0(\CIC1Sin/d7_50 ), .C0(\CIC1Sin/n6903 ), .B0(\CIC1Sin/n6880 ), 
    .A0(\CIC1Sin/d_d7_50 ), .DI1(\CIC1Sin/d8_71_N_1603_51 ), 
    .DI0(\CIC1Sin/d8_71_N_1603_50 ), .CE(\CIC1Sin/osc_clk_enable_510 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11105 ), .F0(\CIC1Sin/d8_71_N_1603_50 ), 
    .Q0(\CIC1Sin/d8_50 ), .F1(\CIC1Sin/d8_71_N_1603_51 ), .Q1(\CIC1Sin/d8_51 ), 
    .FCO(\CIC1Sin/n11106 ));
  CIC1Sin_SLICE_310 \CIC1Sin/SLICE_310 ( .D1(\CIC1Sin/d7_49 ), 
    .C1(\CIC1Sin/n6904 ), .B1(\CIC1Sin/n6880 ), .A1(\CIC1Sin/d_d7_49 ), 
    .D0(\CIC1Sin/d7_48 ), .C0(\CIC1Sin/n6905 ), .B0(\CIC1Sin/n6880 ), 
    .A0(\CIC1Sin/d_d7_48 ), .DI1(\CIC1Sin/d8_71_N_1603_49 ), 
    .DI0(\CIC1Sin/d8_71_N_1603_48 ), .CE(\CIC1Sin/osc_clk_enable_510 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11104 ), .F0(\CIC1Sin/d8_71_N_1603_48 ), 
    .Q0(\CIC1Sin/d8_48 ), .F1(\CIC1Sin/d8_71_N_1603_49 ), .Q1(\CIC1Sin/d8_49 ), 
    .FCO(\CIC1Sin/n11105 ));
  CIC1Sin_SLICE_311 \CIC1Sin/SLICE_311 ( .D1(\CIC1Sin/d7_47 ), 
    .C1(\CIC1Sin/n6906 ), .B1(\CIC1Sin/n6880 ), .A1(\CIC1Sin/d_d7_47 ), 
    .D0(\CIC1Sin/d7_46 ), .C0(\CIC1Sin/n6907 ), .B0(\CIC1Sin/n6880 ), 
    .A0(\CIC1Sin/d_d7_46 ), .DI1(\CIC1Sin/d8_71_N_1603_47 ), 
    .DI0(\CIC1Sin/d8_71_N_1603_46 ), .CE(\CIC1Sin/osc_clk_enable_510 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11103 ), .F0(\CIC1Sin/d8_71_N_1603_46 ), 
    .Q0(\CIC1Sin/d8_46 ), .F1(\CIC1Sin/d8_71_N_1603_47 ), .Q1(\CIC1Sin/d8_47 ), 
    .FCO(\CIC1Sin/n11104 ));
  CIC1Sin_SLICE_312 \CIC1Sin/SLICE_312 ( .D1(\CIC1Sin/d7_45 ), 
    .C1(\CIC1Sin/n6908 ), .B1(\CIC1Sin/n6880 ), .A1(\CIC1Sin/d_d7_45 ), 
    .D0(\CIC1Sin/d7_44 ), .C0(\CIC1Sin/n6909 ), .B0(\CIC1Sin/n6880 ), 
    .A0(\CIC1Sin/d_d7_44 ), .DI1(\CIC1Sin/d8_71_N_1603_45 ), 
    .DI0(\CIC1Sin/d8_71_N_1603_44 ), .CE(\CIC1Sin/osc_clk_enable_510 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11102 ), .F0(\CIC1Sin/d8_71_N_1603_44 ), 
    .Q0(\CIC1Sin/d8_44 ), .F1(\CIC1Sin/d8_71_N_1603_45 ), .Q1(\CIC1Sin/d8_45 ), 
    .FCO(\CIC1Sin/n11103 ));
  CIC1Sin_SLICE_313 \CIC1Sin/SLICE_313 ( .D1(\CIC1Sin/d7_43 ), 
    .C1(\CIC1Sin/n6910 ), .B1(\CIC1Sin/n6880 ), .A1(\CIC1Sin/d_d7_43 ), 
    .D0(\CIC1Sin/d7_42 ), .C0(\CIC1Sin/n6911 ), .B0(\CIC1Sin/n6880 ), 
    .A0(\CIC1Sin/d_d7_42 ), .DI1(\CIC1Sin/d8_71_N_1603_43 ), 
    .DI0(\CIC1Sin/d8_71_N_1603_42 ), .CE(\CIC1Sin/osc_clk_enable_510 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11101 ), .F0(\CIC1Sin/d8_71_N_1603_42 ), 
    .Q0(\CIC1Sin/d8_42 ), .F1(\CIC1Sin/d8_71_N_1603_43 ), .Q1(\CIC1Sin/d8_43 ), 
    .FCO(\CIC1Sin/n11102 ));
  CIC1Sin_SLICE_314 \CIC1Sin/SLICE_314 ( .D1(\CIC1Sin/d7_41 ), 
    .C1(\CIC1Sin/n6912 ), .B1(\CIC1Sin/n6880 ), .A1(\CIC1Sin/d_d7_41 ), 
    .D0(\CIC1Sin/d7_40 ), .C0(\CIC1Sin/n6913 ), .B0(\CIC1Sin/n6880 ), 
    .A0(\CIC1Sin/d_d7_40 ), .DI1(\CIC1Sin/d8_71_N_1603_41 ), 
    .DI0(\CIC1Sin/d8_71_N_1603_40 ), .CE(\CIC1Sin/osc_clk_enable_510 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11100 ), .F0(\CIC1Sin/d8_71_N_1603_40 ), 
    .Q0(\CIC1Sin/d8_40 ), .F1(\CIC1Sin/d8_71_N_1603_41 ), .Q1(\CIC1Sin/d8_41 ), 
    .FCO(\CIC1Sin/n11101 ));
  CIC1Sin_SLICE_315 \CIC1Sin/SLICE_315 ( .D1(\CIC1Sin/d7_39 ), 
    .C1(\CIC1Sin/n6914 ), .B1(\CIC1Sin/n6880 ), .A1(\CIC1Sin/d_d7_39 ), 
    .D0(\CIC1Sin/d7_38 ), .C0(\CIC1Sin/n6915 ), .B0(\CIC1Sin/n6880 ), 
    .A0(\CIC1Sin/d_d7_38 ), .DI1(\CIC1Sin/d8_71_N_1603_39 ), 
    .DI0(\CIC1Sin/d8_71_N_1603_38 ), .CE(\CIC1Sin/osc_clk_enable_510 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11099 ), .F0(\CIC1Sin/d8_71_N_1603_38 ), 
    .Q0(\CIC1Sin/d8_38 ), .F1(\CIC1Sin/d8_71_N_1603_39 ), .Q1(\CIC1Sin/d8_39 ), 
    .FCO(\CIC1Sin/n11100 ));
  CIC1Sin_SLICE_316 \CIC1Sin/SLICE_316 ( .D1(\CIC1Sin/d7_37 ), 
    .C1(\CIC1Sin/n6916 ), .B1(\CIC1Sin/n6880 ), .A1(\CIC1Sin/d_d7_37 ), 
    .D0(\CIC1Sin/d7_36 ), .C0(\CIC1Sin/n6917 ), .B0(\CIC1Sin/n6880 ), 
    .A0(\CIC1Sin/d_d7_36 ), .DI1(\CIC1Sin/d8_71_N_1603_37 ), 
    .DI0(\CIC1Sin/d8_71_N_1603_36 ), .CE(\CIC1Sin/osc_clk_enable_510 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11098 ), .F0(\CIC1Sin/d8_71_N_1603_36 ), 
    .Q0(\CIC1Sin/d8_36 ), .F1(\CIC1Sin/d8_71_N_1603_37 ), .Q1(\CIC1Sin/d8_37 ), 
    .FCO(\CIC1Sin/n11099 ));
  CIC1Sin_SLICE_317 \CIC1Sin/SLICE_317 ( .A1(\CIC1Sin/n6880 ), 
    .FCO(\CIC1Sin/n11098 ));
  CIC1Sin_SLICE_318 \CIC1Sin/SLICE_318 ( .B0(\CIC1Sin/d_d6_71 ), 
    .A0(\CIC1Sin/d6_71 ), .FCI(\CIC1Sin/n11094 ), .F0(\CIC1Sin/n7034 ));
  CIC1Sin_SLICE_319 \CIC1Sin/SLICE_319 ( .B1(\CIC1Sin/d_d6_70 ), 
    .A1(\CIC1Sin/d6_70 ), .B0(\CIC1Sin/d_d6_69 ), .A0(\CIC1Sin/d6_69 ), 
    .FCI(\CIC1Sin/n11093 ), .F0(\CIC1Sin/n7036 ), .F1(\CIC1Sin/n7035 ), 
    .FCO(\CIC1Sin/n11094 ));
  CIC1Sin_SLICE_320 \CIC1Sin/SLICE_320 ( .B1(\CIC1Sin/d_d6_68 ), 
    .A1(\CIC1Sin/d6_68 ), .B0(\CIC1Sin/d_d6_67 ), .A0(\CIC1Sin/d6_67 ), 
    .FCI(\CIC1Sin/n11092 ), .F0(\CIC1Sin/n7038 ), .F1(\CIC1Sin/n7037 ), 
    .FCO(\CIC1Sin/n11093 ));
  CIC1Sin_SLICE_321 \CIC1Sin/SLICE_321 ( .B1(\CIC1Sin/d_d6_66 ), 
    .A1(\CIC1Sin/d6_66 ), .B0(\CIC1Sin/d_d6_65 ), .A0(\CIC1Sin/d6_65 ), 
    .FCI(\CIC1Sin/n11091 ), .F0(\CIC1Sin/n7040 ), .F1(\CIC1Sin/n7039 ), 
    .FCO(\CIC1Sin/n11092 ));
  CIC1Sin_SLICE_322 \CIC1Sin/SLICE_322 ( .B1(\CIC1Sin/d_d6_64 ), 
    .A1(\CIC1Sin/d6_64 ), .B0(\CIC1Sin/d_d6_63 ), .A0(\CIC1Sin/d6_63 ), 
    .FCI(\CIC1Sin/n11090 ), .F0(\CIC1Sin/n7042 ), .F1(\CIC1Sin/n7041 ), 
    .FCO(\CIC1Sin/n11091 ));
  CIC1Sin_SLICE_323 \CIC1Sin/SLICE_323 ( .B1(\CIC1Sin/d_d6_62 ), 
    .A1(\CIC1Sin/d6_62 ), .B0(\CIC1Sin/d_d6_61 ), .A0(\CIC1Sin/d6_61 ), 
    .FCI(\CIC1Sin/n11089 ), .F0(\CIC1Sin/n7044 ), .F1(\CIC1Sin/n7043 ), 
    .FCO(\CIC1Sin/n11090 ));
  CIC1Sin_SLICE_324 \CIC1Sin/SLICE_324 ( .B1(\CIC1Sin/d_d6_60 ), 
    .A1(\CIC1Sin/d6_60 ), .B0(\CIC1Sin/d_d6_59 ), .A0(\CIC1Sin/d6_59 ), 
    .FCI(\CIC1Sin/n11088 ), .F0(\CIC1Sin/n7046 ), .F1(\CIC1Sin/n7045 ), 
    .FCO(\CIC1Sin/n11089 ));
  CIC1Sin_SLICE_325 \CIC1Sin/SLICE_325 ( .B1(\CIC1Sin/d_d6_58 ), 
    .A1(\CIC1Sin/d6_58 ), .B0(\CIC1Sin/d_d6_57 ), .A0(\CIC1Sin/d6_57 ), 
    .FCI(\CIC1Sin/n11087 ), .F0(\CIC1Sin/n7048 ), .F1(\CIC1Sin/n7047 ), 
    .FCO(\CIC1Sin/n11088 ));
  CIC1Sin_SLICE_326 \CIC1Sin/SLICE_326 ( .B1(\CIC1Sin/d_d6_56 ), 
    .A1(\CIC1Sin/d6_56 ), .B0(\CIC1Sin/d_d6_55 ), .A0(\CIC1Sin/d6_55 ), 
    .FCI(\CIC1Sin/n11086 ), .F0(\CIC1Sin/n7050 ), .F1(\CIC1Sin/n7049 ), 
    .FCO(\CIC1Sin/n11087 ));
  CIC1Sin_SLICE_327 \CIC1Sin/SLICE_327 ( .B1(\CIC1Sin/d_d6_54 ), 
    .A1(\CIC1Sin/d6_54 ), .B0(\CIC1Sin/d_d6_53 ), .A0(\CIC1Sin/d6_53 ), 
    .FCI(\CIC1Sin/n11085 ), .F0(\CIC1Sin/n7052 ), .F1(\CIC1Sin/n7051 ), 
    .FCO(\CIC1Sin/n11086 ));
  CIC1Sin_SLICE_328 \CIC1Sin/SLICE_328 ( .B1(\CIC1Sin/d_d6_52 ), 
    .A1(\CIC1Sin/d6_52 ), .B0(\CIC1Sin/d_d6_51 ), .A0(\CIC1Sin/d6_51 ), 
    .FCI(\CIC1Sin/n11084 ), .F0(\CIC1Sin/n7054 ), .F1(\CIC1Sin/n7053 ), 
    .FCO(\CIC1Sin/n11085 ));
  CIC1Sin_SLICE_329 \CIC1Sin/SLICE_329 ( .B1(\CIC1Sin/d_d6_50 ), 
    .A1(\CIC1Sin/d6_50 ), .B0(\CIC1Sin/d_d6_49 ), .A0(\CIC1Sin/d6_49 ), 
    .FCI(\CIC1Sin/n11083 ), .F0(\CIC1Sin/n7056 ), .F1(\CIC1Sin/n7055 ), 
    .FCO(\CIC1Sin/n11084 ));
  CIC1Sin_SLICE_330 \CIC1Sin/SLICE_330 ( .B1(\CIC1Sin/d_d6_48 ), 
    .A1(\CIC1Sin/d6_48 ), .B0(\CIC1Sin/d_d6_47 ), .A0(\CIC1Sin/d6_47 ), 
    .FCI(\CIC1Sin/n11082 ), .F0(\CIC1Sin/n7058 ), .F1(\CIC1Sin/n7057 ), 
    .FCO(\CIC1Sin/n11083 ));
  CIC1Sin_SLICE_331 \CIC1Sin/SLICE_331 ( .B1(\CIC1Sin/d_d6_46 ), 
    .A1(\CIC1Sin/d6_46 ), .B0(\CIC1Sin/d_d6_45 ), .A0(\CIC1Sin/d6_45 ), 
    .FCI(\CIC1Sin/n11081 ), .F0(\CIC1Sin/n7060 ), .F1(\CIC1Sin/n7059 ), 
    .FCO(\CIC1Sin/n11082 ));
  CIC1Sin_SLICE_332 \CIC1Sin/SLICE_332 ( .B1(\CIC1Sin/d_d6_44 ), 
    .A1(\CIC1Sin/d6_44 ), .B0(\CIC1Sin/d_d6_43 ), .A0(\CIC1Sin/d6_43 ), 
    .FCI(\CIC1Sin/n11080 ), .F0(\CIC1Sin/n7062 ), .F1(\CIC1Sin/n7061 ), 
    .FCO(\CIC1Sin/n11081 ));
  CIC1Sin_SLICE_333 \CIC1Sin/SLICE_333 ( .B1(\CIC1Sin/d_d6_42 ), 
    .A1(\CIC1Sin/d6_42 ), .B0(\CIC1Sin/d_d6_41 ), .A0(\CIC1Sin/d6_41 ), 
    .FCI(\CIC1Sin/n11079 ), .F0(\CIC1Sin/n7064 ), .F1(\CIC1Sin/n7063 ), 
    .FCO(\CIC1Sin/n11080 ));
  CIC1Sin_SLICE_334 \CIC1Sin/SLICE_334 ( .B1(\CIC1Sin/d_d6_40 ), 
    .A1(\CIC1Sin/d6_40 ), .B0(\CIC1Sin/d_d6_39 ), .A0(\CIC1Sin/d6_39 ), 
    .FCI(\CIC1Sin/n11078 ), .F0(\CIC1Sin/n7066 ), .F1(\CIC1Sin/n7065 ), 
    .FCO(\CIC1Sin/n11079 ));
  CIC1Sin_SLICE_335 \CIC1Sin/SLICE_335 ( .B1(\CIC1Sin/d_d6_38 ), 
    .A1(\CIC1Sin/d6_38 ), .B0(\CIC1Sin/d_d6_37 ), .A0(\CIC1Sin/d6_37 ), 
    .FCI(\CIC1Sin/n11077 ), .F0(\CIC1Sin/n7068 ), .F1(\CIC1Sin/n7067 ), 
    .FCO(\CIC1Sin/n11078 ));
  CIC1Sin_SLICE_336 \CIC1Sin/SLICE_336 ( .B1(\CIC1Sin/d_d6_36 ), 
    .A1(\CIC1Sin/d6_36 ), .F1(\CIC1Sin/n7069 ), .FCO(\CIC1Sin/n11077 ));
  CIC1Sin_SLICE_337 \CIC1Sin/SLICE_337 ( .D1(\CIC1Sin/d6_71 ), 
    .C1(\CIC1Sin/n7034 ), .B1(\CIC1Sin/n7032 ), .A1(\CIC1Sin/d_d6_71 ), 
    .D0(\CIC1Sin/d6_70 ), .C0(\CIC1Sin/n7035 ), .B0(\CIC1Sin/n7032 ), 
    .A0(\CIC1Sin/d_d6_70 ), .DI1(\CIC1Sin/d7_71_N_1531_71 ), 
    .DI0(\CIC1Sin/d7_71_N_1531_70 ), .CE(\CIC1Sin/osc_clk_enable_360 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11075 ), .F0(\CIC1Sin/d7_71_N_1531_70 ), 
    .Q0(\CIC1Sin/d7_70 ), .F1(\CIC1Sin/d7_71_N_1531_71 ), .Q1(\CIC1Sin/d7_71 ));
  CIC1Sin_SLICE_338 \CIC1Sin/SLICE_338 ( .D1(\CIC1Sin/d6_69 ), 
    .C1(\CIC1Sin/n7036 ), .B1(\CIC1Sin/n7032 ), .A1(\CIC1Sin/d_d6_69 ), 
    .D0(\CIC1Sin/d6_68 ), .C0(\CIC1Sin/n7037 ), .B0(\CIC1Sin/n7032 ), 
    .A0(\CIC1Sin/d_d6_68 ), .DI1(\CIC1Sin/d7_71_N_1531_69 ), 
    .DI0(\CIC1Sin/d7_71_N_1531_68 ), .CE(\CIC1Sin/osc_clk_enable_360 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11074 ), .F0(\CIC1Sin/d7_71_N_1531_68 ), 
    .Q0(\CIC1Sin/d7_68 ), .F1(\CIC1Sin/d7_71_N_1531_69 ), .Q1(\CIC1Sin/d7_69 ), 
    .FCO(\CIC1Sin/n11075 ));
  CIC1Sin_SLICE_339 \CIC1Sin/SLICE_339 ( .D1(\CIC1Sin/d6_67 ), 
    .C1(\CIC1Sin/n7038 ), .B1(\CIC1Sin/n7032 ), .A1(\CIC1Sin/d_d6_67 ), 
    .D0(\CIC1Sin/d6_66 ), .C0(\CIC1Sin/n7039 ), .B0(\CIC1Sin/n7032 ), 
    .A0(\CIC1Sin/d_d6_66 ), .DI1(\CIC1Sin/d7_71_N_1531_67 ), 
    .DI0(\CIC1Sin/d7_71_N_1531_66 ), .CE(\CIC1Sin/osc_clk_enable_360 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11073 ), .F0(\CIC1Sin/d7_71_N_1531_66 ), 
    .Q0(\CIC1Sin/d7_66 ), .F1(\CIC1Sin/d7_71_N_1531_67 ), .Q1(\CIC1Sin/d7_67 ), 
    .FCO(\CIC1Sin/n11074 ));
  CIC1Sin_SLICE_340 \CIC1Sin/SLICE_340 ( .D1(\CIC1Sin/d6_65 ), 
    .C1(\CIC1Sin/n7040 ), .B1(\CIC1Sin/n7032 ), .A1(\CIC1Sin/d_d6_65 ), 
    .D0(\CIC1Sin/d6_64 ), .C0(\CIC1Sin/n7041 ), .B0(\CIC1Sin/n7032 ), 
    .A0(\CIC1Sin/d_d6_64 ), .DI1(\CIC1Sin/d7_71_N_1531_65 ), 
    .DI0(\CIC1Sin/d7_71_N_1531_64 ), .CE(\CIC1Sin/osc_clk_enable_360 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11072 ), .F0(\CIC1Sin/d7_71_N_1531_64 ), 
    .Q0(\CIC1Sin/d7_64 ), .F1(\CIC1Sin/d7_71_N_1531_65 ), .Q1(\CIC1Sin/d7_65 ), 
    .FCO(\CIC1Sin/n11073 ));
  CIC1Sin_SLICE_341 \CIC1Sin/SLICE_341 ( .D1(\CIC1Sin/d6_63 ), 
    .C1(\CIC1Sin/n7042 ), .B1(\CIC1Sin/n7032 ), .A1(\CIC1Sin/d_d6_63 ), 
    .D0(\CIC1Sin/d6_62 ), .C0(\CIC1Sin/n7043 ), .B0(\CIC1Sin/n7032 ), 
    .A0(\CIC1Sin/d_d6_62 ), .DI1(\CIC1Sin/d7_71_N_1531_63 ), 
    .DI0(\CIC1Sin/d7_71_N_1531_62 ), .CE(\CIC1Sin/osc_clk_enable_360 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11071 ), .F0(\CIC1Sin/d7_71_N_1531_62 ), 
    .Q0(\CIC1Sin/d7_62 ), .F1(\CIC1Sin/d7_71_N_1531_63 ), .Q1(\CIC1Sin/d7_63 ), 
    .FCO(\CIC1Sin/n11072 ));
  CIC1Sin_SLICE_342 \CIC1Sin/SLICE_342 ( .D1(\CIC1Sin/d6_61 ), 
    .C1(\CIC1Sin/n7044 ), .B1(\CIC1Sin/n7032 ), .A1(\CIC1Sin/d_d6_61 ), 
    .D0(\CIC1Sin/d6_60 ), .C0(\CIC1Sin/n7045 ), .B0(\CIC1Sin/n7032 ), 
    .A0(\CIC1Sin/d_d6_60 ), .DI1(\CIC1Sin/d7_71_N_1531_61 ), 
    .DI0(\CIC1Sin/d7_71_N_1531_60 ), .CE(\CIC1Sin/osc_clk_enable_360 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11070 ), .F0(\CIC1Sin/d7_71_N_1531_60 ), 
    .Q0(\CIC1Sin/d7_60 ), .F1(\CIC1Sin/d7_71_N_1531_61 ), .Q1(\CIC1Sin/d7_61 ), 
    .FCO(\CIC1Sin/n11071 ));
  CIC1Sin_SLICE_343 \CIC1Sin/SLICE_343 ( .D1(\CIC1Sin/d6_59 ), 
    .C1(\CIC1Sin/n7046 ), .B1(\CIC1Sin/n7032 ), .A1(\CIC1Sin/d_d6_59 ), 
    .D0(\CIC1Sin/d6_58 ), .C0(\CIC1Sin/n7047 ), .B0(\CIC1Sin/n7032 ), 
    .A0(\CIC1Sin/d_d6_58 ), .DI1(\CIC1Sin/d7_71_N_1531_59 ), 
    .DI0(\CIC1Sin/d7_71_N_1531_58 ), .CE(\CIC1Sin/osc_clk_enable_360 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11069 ), .F0(\CIC1Sin/d7_71_N_1531_58 ), 
    .Q0(\CIC1Sin/d7_58 ), .F1(\CIC1Sin/d7_71_N_1531_59 ), .Q1(\CIC1Sin/d7_59 ), 
    .FCO(\CIC1Sin/n11070 ));
  CIC1Sin_SLICE_344 \CIC1Sin/SLICE_344 ( .D1(\CIC1Sin/d6_57 ), 
    .C1(\CIC1Sin/n7048 ), .B1(\CIC1Sin/n7032 ), .A1(\CIC1Sin/d_d6_57 ), 
    .D0(\CIC1Sin/d6_56 ), .C0(\CIC1Sin/n7049 ), .B0(\CIC1Sin/n7032 ), 
    .A0(\CIC1Sin/d_d6_56 ), .DI1(\CIC1Sin/d7_71_N_1531_57 ), 
    .DI0(\CIC1Sin/d7_71_N_1531_56 ), .CE(\CIC1Sin/osc_clk_enable_360 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11068 ), .F0(\CIC1Sin/d7_71_N_1531_56 ), 
    .Q0(\CIC1Sin/d7_56 ), .F1(\CIC1Sin/d7_71_N_1531_57 ), .Q1(\CIC1Sin/d7_57 ), 
    .FCO(\CIC1Sin/n11069 ));
  CIC1Sin_SLICE_345 \CIC1Sin/SLICE_345 ( .D1(\CIC1Sin/d6_55 ), 
    .C1(\CIC1Sin/n7050 ), .B1(\CIC1Sin/n7032 ), .A1(\CIC1Sin/d_d6_55 ), 
    .D0(\CIC1Sin/d6_54 ), .C0(\CIC1Sin/n7051 ), .B0(\CIC1Sin/n7032 ), 
    .A0(\CIC1Sin/d_d6_54 ), .DI1(\CIC1Sin/d7_71_N_1531_55 ), 
    .DI0(\CIC1Sin/d7_71_N_1531_54 ), .CE(\CIC1Sin/osc_clk_enable_360 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11067 ), .F0(\CIC1Sin/d7_71_N_1531_54 ), 
    .Q0(\CIC1Sin/d7_54 ), .F1(\CIC1Sin/d7_71_N_1531_55 ), .Q1(\CIC1Sin/d7_55 ), 
    .FCO(\CIC1Sin/n11068 ));
  CIC1Sin_SLICE_346 \CIC1Sin/SLICE_346 ( .D1(\CIC1Sin/d6_53 ), 
    .C1(\CIC1Sin/n7052 ), .B1(\CIC1Sin/n7032 ), .A1(\CIC1Sin/d_d6_53 ), 
    .D0(\CIC1Sin/d6_52 ), .C0(\CIC1Sin/n7053 ), .B0(\CIC1Sin/n7032 ), 
    .A0(\CIC1Sin/d_d6_52 ), .DI1(\CIC1Sin/d7_71_N_1531_53 ), 
    .DI0(\CIC1Sin/d7_71_N_1531_52 ), .CE(\CIC1Sin/osc_clk_enable_360 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11066 ), .F0(\CIC1Sin/d7_71_N_1531_52 ), 
    .Q0(\CIC1Sin/d7_52 ), .F1(\CIC1Sin/d7_71_N_1531_53 ), .Q1(\CIC1Sin/d7_53 ), 
    .FCO(\CIC1Sin/n11067 ));
  CIC1Sin_SLICE_347 \CIC1Sin/SLICE_347 ( .D1(\CIC1Sin/d6_51 ), 
    .C1(\CIC1Sin/n7054 ), .B1(\CIC1Sin/n7032 ), .A1(\CIC1Sin/d_d6_51 ), 
    .D0(\CIC1Sin/d6_50 ), .C0(\CIC1Sin/n7055 ), .B0(\CIC1Sin/n7032 ), 
    .A0(\CIC1Sin/d_d6_50 ), .DI1(\CIC1Sin/d7_71_N_1531_51 ), 
    .DI0(\CIC1Sin/d7_71_N_1531_50 ), .CE(\CIC1Sin/osc_clk_enable_360 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11065 ), .F0(\CIC1Sin/d7_71_N_1531_50 ), 
    .Q0(\CIC1Sin/d7_50 ), .F1(\CIC1Sin/d7_71_N_1531_51 ), .Q1(\CIC1Sin/d7_51 ), 
    .FCO(\CIC1Sin/n11066 ));
  CIC1Sin_SLICE_348 \CIC1Sin/SLICE_348 ( .D1(\CIC1Sin/d6_49 ), 
    .C1(\CIC1Sin/n7056 ), .B1(\CIC1Sin/n7032 ), .A1(\CIC1Sin/d_d6_49 ), 
    .D0(\CIC1Sin/d6_48 ), .C0(\CIC1Sin/n7057 ), .B0(\CIC1Sin/n7032 ), 
    .A0(\CIC1Sin/d_d6_48 ), .DI1(\CIC1Sin/d7_71_N_1531_49 ), 
    .DI0(\CIC1Sin/d7_71_N_1531_48 ), .CE(\CIC1Sin/osc_clk_enable_360 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11064 ), .F0(\CIC1Sin/d7_71_N_1531_48 ), 
    .Q0(\CIC1Sin/d7_48 ), .F1(\CIC1Sin/d7_71_N_1531_49 ), .Q1(\CIC1Sin/d7_49 ), 
    .FCO(\CIC1Sin/n11065 ));
  CIC1Sin_SLICE_349 \CIC1Sin/SLICE_349 ( .D1(\CIC1Sin/d6_47 ), 
    .C1(\CIC1Sin/n7058 ), .B1(\CIC1Sin/n7032 ), .A1(\CIC1Sin/d_d6_47 ), 
    .D0(\CIC1Sin/d6_46 ), .C0(\CIC1Sin/n7059 ), .B0(\CIC1Sin/n7032 ), 
    .A0(\CIC1Sin/d_d6_46 ), .DI1(\CIC1Sin/d7_71_N_1531_47 ), 
    .DI0(\CIC1Sin/d7_71_N_1531_46 ), .CE(\CIC1Sin/osc_clk_enable_360 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11063 ), .F0(\CIC1Sin/d7_71_N_1531_46 ), 
    .Q0(\CIC1Sin/d7_46 ), .F1(\CIC1Sin/d7_71_N_1531_47 ), .Q1(\CIC1Sin/d7_47 ), 
    .FCO(\CIC1Sin/n11064 ));
  CIC1Sin_SLICE_350 \CIC1Sin/SLICE_350 ( .D1(\CIC1Sin/d6_45 ), 
    .C1(\CIC1Sin/n7060 ), .B1(\CIC1Sin/n7032 ), .A1(\CIC1Sin/d_d6_45 ), 
    .D0(\CIC1Sin/d6_44 ), .C0(\CIC1Sin/n7061 ), .B0(\CIC1Sin/n7032 ), 
    .A0(\CIC1Sin/d_d6_44 ), .DI1(\CIC1Sin/d7_71_N_1531_45 ), 
    .DI0(\CIC1Sin/d7_71_N_1531_44 ), .CE(\CIC1Sin/osc_clk_enable_360 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11062 ), .F0(\CIC1Sin/d7_71_N_1531_44 ), 
    .Q0(\CIC1Sin/d7_44 ), .F1(\CIC1Sin/d7_71_N_1531_45 ), .Q1(\CIC1Sin/d7_45 ), 
    .FCO(\CIC1Sin/n11063 ));
  CIC1Sin_SLICE_351 \CIC1Sin/SLICE_351 ( .D1(\CIC1Sin/d6_43 ), 
    .C1(\CIC1Sin/n7062 ), .B1(\CIC1Sin/n7032 ), .A1(\CIC1Sin/d_d6_43 ), 
    .D0(\CIC1Sin/d6_42 ), .C0(\CIC1Sin/n7063 ), .B0(\CIC1Sin/n7032 ), 
    .A0(\CIC1Sin/d_d6_42 ), .DI1(\CIC1Sin/d7_71_N_1531_43 ), 
    .DI0(\CIC1Sin/d7_71_N_1531_42 ), .CE(\CIC1Sin/osc_clk_enable_360 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11061 ), .F0(\CIC1Sin/d7_71_N_1531_42 ), 
    .Q0(\CIC1Sin/d7_42 ), .F1(\CIC1Sin/d7_71_N_1531_43 ), .Q1(\CIC1Sin/d7_43 ), 
    .FCO(\CIC1Sin/n11062 ));
  CIC1Sin_SLICE_352 \CIC1Sin/SLICE_352 ( .D1(\CIC1Sin/d6_41 ), 
    .C1(\CIC1Sin/n7064 ), .B1(\CIC1Sin/n7032 ), .A1(\CIC1Sin/d_d6_41 ), 
    .D0(\CIC1Sin/d6_40 ), .C0(\CIC1Sin/n7065 ), .B0(\CIC1Sin/n7032 ), 
    .A0(\CIC1Sin/d_d6_40 ), .DI1(\CIC1Sin/d7_71_N_1531_41 ), 
    .DI0(\CIC1Sin/d7_71_N_1531_40 ), .CE(\CIC1Sin/osc_clk_enable_360 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11060 ), .F0(\CIC1Sin/d7_71_N_1531_40 ), 
    .Q0(\CIC1Sin/d7_40 ), .F1(\CIC1Sin/d7_71_N_1531_41 ), .Q1(\CIC1Sin/d7_41 ), 
    .FCO(\CIC1Sin/n11061 ));
  CIC1Sin_SLICE_353 \CIC1Sin/SLICE_353 ( .D1(\CIC1Sin/d6_39 ), 
    .C1(\CIC1Sin/n7066 ), .B1(\CIC1Sin/n7032 ), .A1(\CIC1Sin/d_d6_39 ), 
    .D0(\CIC1Sin/d6_38 ), .C0(\CIC1Sin/n7067 ), .B0(\CIC1Sin/n7032 ), 
    .A0(\CIC1Sin/d_d6_38 ), .DI1(\CIC1Sin/d7_71_N_1531_39 ), 
    .DI0(\CIC1Sin/d7_71_N_1531_38 ), .CE(\CIC1Sin/osc_clk_enable_360 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11059 ), .F0(\CIC1Sin/d7_71_N_1531_38 ), 
    .Q0(\CIC1Sin/d7_38 ), .F1(\CIC1Sin/d7_71_N_1531_39 ), .Q1(\CIC1Sin/d7_39 ), 
    .FCO(\CIC1Sin/n11060 ));
  CIC1Sin_SLICE_354 \CIC1Sin/SLICE_354 ( .D1(\CIC1Sin/d6_37 ), 
    .C1(\CIC1Sin/n7068 ), .B1(\CIC1Sin/n7032 ), .A1(\CIC1Sin/d_d6_37 ), 
    .D0(\CIC1Sin/d6_36 ), .C0(\CIC1Sin/n7069 ), .B0(\CIC1Sin/n7032 ), 
    .A0(\CIC1Sin/d_d6_36 ), .DI1(\CIC1Sin/d7_71_N_1531_37 ), 
    .DI0(\CIC1Sin/d7_71_N_1531_36 ), .CE(\CIC1Sin/osc_clk_enable_360 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11058 ), .F0(\CIC1Sin/d7_71_N_1531_36 ), 
    .Q0(\CIC1Sin/d7_36 ), .F1(\CIC1Sin/d7_71_N_1531_37 ), .Q1(\CIC1Sin/d7_37 ), 
    .FCO(\CIC1Sin/n11059 ));
  CIC1Sin_SLICE_355 \CIC1Sin/SLICE_355 ( .A1(\CIC1Sin/n7032 ), 
    .FCO(\CIC1Sin/n11058 ));
  CIC1Sin_SLICE_356 \CIC1Sin/SLICE_356 ( .B0(\CIC1Sin/d_d_tmp_35 ), 
    .A0(\CIC1Sin/d_tmp_35 ), .DI0(\CIC1Sin/d6_71_N_1459_35 ), 
    .CE(\CIC1Sin/osc_clk_enable_210 ), .CLK(osc_clk), .FCI(\CIC1Sin/n10969 ), 
    .F0(\CIC1Sin/d6_71_N_1459_35 ), .Q0(\CIC1Sin/d6_35 ), .F1(\CIC1Sin/n4144 ));
  CIC1Sin_SLICE_357 \CIC1Sin/SLICE_357 ( .B1(\CIC1Sin/d_d_tmp_34 ), 
    .A1(\CIC1Sin/d_tmp_34 ), .B0(\CIC1Sin/d_d_tmp_33 ), 
    .A0(\CIC1Sin/d_tmp_33 ), .DI1(\CIC1Sin/d6_71_N_1459_34 ), 
    .DI0(\CIC1Sin/d6_71_N_1459_33 ), .CE(\CIC1Sin/osc_clk_enable_210 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n10968 ), .F0(\CIC1Sin/d6_71_N_1459_33 ), 
    .Q0(\CIC1Sin/d6_33 ), .F1(\CIC1Sin/d6_71_N_1459_34 ), .Q1(\CIC1Sin/d6_34 ), 
    .FCO(\CIC1Sin/n10969 ));
  CIC1Sin_SLICE_358 \CIC1Sin/SLICE_358 ( .B1(\CIC1Sin/d_d_tmp_32 ), 
    .A1(\CIC1Sin/d_tmp_32 ), .B0(\CIC1Sin/d_d_tmp_31 ), 
    .A0(\CIC1Sin/d_tmp_31 ), .DI1(\CIC1Sin/d6_71_N_1459_32 ), 
    .DI0(\CIC1Sin/d6_71_N_1459_31 ), .CE(\CIC1Sin/osc_clk_enable_210 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n10967 ), .F0(\CIC1Sin/d6_71_N_1459_31 ), 
    .Q0(\CIC1Sin/d6_31 ), .F1(\CIC1Sin/d6_71_N_1459_32 ), .Q1(\CIC1Sin/d6_32 ), 
    .FCO(\CIC1Sin/n10968 ));
  CIC1Sin_SLICE_359 \CIC1Sin/SLICE_359 ( .B1(\CIC1Sin/d_d_tmp_30 ), 
    .A1(\CIC1Sin/d_tmp_30 ), .B0(\CIC1Sin/d_d_tmp_29 ), 
    .A0(\CIC1Sin/d_tmp_29 ), .DI1(\CIC1Sin/d6_71_N_1459_30 ), 
    .DI0(\CIC1Sin/d6_71_N_1459_29 ), .CE(\CIC1Sin/osc_clk_enable_210 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n10966 ), .F0(\CIC1Sin/d6_71_N_1459_29 ), 
    .Q0(\CIC1Sin/d6_29 ), .F1(\CIC1Sin/d6_71_N_1459_30 ), .Q1(\CIC1Sin/d6_30 ), 
    .FCO(\CIC1Sin/n10967 ));
  CIC1Sin_SLICE_360 \CIC1Sin/SLICE_360 ( .B1(\CIC1Sin/d_d_tmp_28 ), 
    .A1(\CIC1Sin/d_tmp_28 ), .B0(\CIC1Sin/d_d_tmp_27 ), 
    .A0(\CIC1Sin/d_tmp_27 ), .DI1(\CIC1Sin/d6_71_N_1459_28 ), 
    .DI0(\CIC1Sin/d6_71_N_1459_27 ), .CE(\CIC1Sin/osc_clk_enable_210 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n10965 ), .F0(\CIC1Sin/d6_71_N_1459_27 ), 
    .Q0(\CIC1Sin/d6_27 ), .F1(\CIC1Sin/d6_71_N_1459_28 ), .Q1(\CIC1Sin/d6_28 ), 
    .FCO(\CIC1Sin/n10966 ));
  CIC1Sin_SLICE_361 \CIC1Sin/SLICE_361 ( .B1(\CIC1Sin/d_d_tmp_26 ), 
    .A1(\CIC1Sin/d_tmp_26 ), .B0(\CIC1Sin/d_d_tmp_25 ), 
    .A0(\CIC1Sin/d_tmp_25 ), .DI1(\CIC1Sin/d6_71_N_1459_26 ), 
    .DI0(\CIC1Sin/d6_71_N_1459_25 ), .CE(\CIC1Sin/osc_clk_enable_210 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n10964 ), .F0(\CIC1Sin/d6_71_N_1459_25 ), 
    .Q0(\CIC1Sin/d6_25 ), .F1(\CIC1Sin/d6_71_N_1459_26 ), .Q1(\CIC1Sin/d6_26 ), 
    .FCO(\CIC1Sin/n10965 ));
  CIC1Sin_SLICE_362 \CIC1Sin/SLICE_362 ( .B1(\CIC1Sin/d_d_tmp_24 ), 
    .A1(\CIC1Sin/d_tmp_24 ), .B0(\CIC1Sin/d_d_tmp_23 ), 
    .A0(\CIC1Sin/d_tmp_23 ), .DI1(\CIC1Sin/d6_71_N_1459_24 ), 
    .DI0(\CIC1Sin/d6_71_N_1459_23 ), .CE(\CIC1Sin/osc_clk_enable_210 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n10963 ), .F0(\CIC1Sin/d6_71_N_1459_23 ), 
    .Q0(\CIC1Sin/d6_23 ), .F1(\CIC1Sin/d6_71_N_1459_24 ), .Q1(\CIC1Sin/d6_24 ), 
    .FCO(\CIC1Sin/n10964 ));
  CIC1Sin_SLICE_363 \CIC1Sin/SLICE_363 ( .B1(\CIC1Sin/d_d_tmp_22 ), 
    .A1(\CIC1Sin/d_tmp_22 ), .B0(\CIC1Sin/d_d_tmp_21 ), 
    .A0(\CIC1Sin/d_tmp_21 ), .DI1(\CIC1Sin/d6_71_N_1459_22 ), 
    .DI0(\CIC1Sin/d6_71_N_1459_21 ), .CE(\CIC1Sin/osc_clk_enable_210 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n10962 ), .F0(\CIC1Sin/d6_71_N_1459_21 ), 
    .Q0(\CIC1Sin/d6_21 ), .F1(\CIC1Sin/d6_71_N_1459_22 ), .Q1(\CIC1Sin/d6_22 ), 
    .FCO(\CIC1Sin/n10963 ));
  CIC1Sin_SLICE_364 \CIC1Sin/SLICE_364 ( .B1(\CIC1Sin/d_d_tmp_20 ), 
    .A1(\CIC1Sin/d_tmp_20 ), .B0(\CIC1Sin/d_d_tmp_19 ), 
    .A0(\CIC1Sin/d_tmp_19 ), .DI0(\CIC1Sin/d6_71_N_1459_19 ), 
    .CE(\CIC1Sin/osc_clk_enable_160 ), .CLK(osc_clk), .FCI(\CIC1Sin/n10961 ), 
    .F0(\CIC1Sin/d6_71_N_1459_19 ), .Q0(\CIC1Sin/d6_19 ), 
    .F1(\CIC1Sin/d6_71_N_1459_20 ), .FCO(\CIC1Sin/n10962 ));
  CIC1Sin_SLICE_365 \CIC1Sin/SLICE_365 ( .B1(\CIC1Sin/d_d_tmp_18 ), 
    .A1(\CIC1Sin/d_tmp_18 ), .B0(\CIC1Sin/d_d_tmp_17 ), 
    .A0(\CIC1Sin/d_tmp_17 ), .DI1(\CIC1Sin/d6_71_N_1459_18 ), 
    .DI0(\CIC1Sin/d6_71_N_1459_17 ), .CE(\CIC1Sin/osc_clk_enable_160 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n10960 ), .F0(\CIC1Sin/d6_71_N_1459_17 ), 
    .Q0(\CIC1Sin/d6_17 ), .F1(\CIC1Sin/d6_71_N_1459_18 ), .Q1(\CIC1Sin/d6_18 ), 
    .FCO(\CIC1Sin/n10961 ));
  CIC1Sin_SLICE_366 \CIC1Sin/SLICE_366 ( .B1(\CIC1Sin/d_d_tmp_16 ), 
    .A1(\CIC1Sin/d_tmp_16 ), .B0(\CIC1Sin/d_d_tmp_15 ), 
    .A0(\CIC1Sin/d_tmp_15 ), .DI1(\CIC1Sin/d6_71_N_1459_16 ), 
    .DI0(\CIC1Sin/d6_71_N_1459_15 ), .CE(\CIC1Sin/osc_clk_enable_160 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n10959 ), .F0(\CIC1Sin/d6_71_N_1459_15 ), 
    .Q0(\CIC1Sin/d6_15 ), .F1(\CIC1Sin/d6_71_N_1459_16 ), .Q1(\CIC1Sin/d6_16 ), 
    .FCO(\CIC1Sin/n10960 ));
  CIC1Sin_SLICE_367 \CIC1Sin/SLICE_367 ( .B1(\CIC1Sin/d_d_tmp_14 ), 
    .A1(\CIC1Sin/d_tmp_14 ), .B0(\CIC1Sin/d_d_tmp_13 ), 
    .A0(\CIC1Sin/d_tmp_13 ), .DI1(\CIC1Sin/d6_71_N_1459_14 ), 
    .DI0(\CIC1Sin/d6_71_N_1459_13 ), .CE(\CIC1Sin/osc_clk_enable_160 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n10958 ), .F0(\CIC1Sin/d6_71_N_1459_13 ), 
    .Q0(\CIC1Sin/d6_13 ), .F1(\CIC1Sin/d6_71_N_1459_14 ), .Q1(\CIC1Sin/d6_14 ), 
    .FCO(\CIC1Sin/n10959 ));
  CIC1Sin_SLICE_368 \CIC1Sin/SLICE_368 ( .B1(\CIC1Sin/d_d_tmp_12 ), 
    .A1(\CIC1Sin/d_tmp_12 ), .B0(\CIC1Sin/d_d_tmp_11 ), 
    .A0(\CIC1Sin/d_tmp_11 ), .DI1(\CIC1Sin/d6_71_N_1459_12 ), 
    .DI0(\CIC1Sin/d6_71_N_1459_11 ), .CE(\CIC1Sin/osc_clk_enable_160 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n10957 ), .F0(\CIC1Sin/d6_71_N_1459_11 ), 
    .Q0(\CIC1Sin/d6_11 ), .F1(\CIC1Sin/d6_71_N_1459_12 ), .Q1(\CIC1Sin/d6_12 ), 
    .FCO(\CIC1Sin/n10958 ));
  CIC1Sin_SLICE_369 \CIC1Sin/SLICE_369 ( .B1(\CIC1Sin/d_d_tmp_10 ), 
    .A1(\CIC1Sin/d_tmp_10 ), .B0(\CIC1Sin/d_d_tmp_9 ), .A0(\CIC1Sin/d_tmp_9 ), 
    .DI1(\CIC1Sin/d6_71_N_1459_10 ), .DI0(\CIC1Sin/d6_71_N_1459_9 ), 
    .CE(\CIC1Sin/osc_clk_enable_160 ), .CLK(osc_clk), .FCI(\CIC1Sin/n10956 ), 
    .F0(\CIC1Sin/d6_71_N_1459_9 ), .Q0(\CIC1Sin/d6_9 ), 
    .F1(\CIC1Sin/d6_71_N_1459_10 ), .Q1(\CIC1Sin/d6_10 ), 
    .FCO(\CIC1Sin/n10957 ));
  CIC1Sin_SLICE_370 \CIC1Sin/SLICE_370 ( .B1(\CIC1Sin/d_d_tmp_8 ), 
    .A1(\CIC1Sin/d_tmp_8 ), .B0(\CIC1Sin/d_d_tmp_7 ), .A0(\CIC1Sin/d_tmp_7 ), 
    .DI1(\CIC1Sin/d6_71_N_1459_8 ), .DI0(\CIC1Sin/d6_71_N_1459_7 ), 
    .CE(\CIC1Sin/osc_clk_enable_160 ), .CLK(osc_clk), .FCI(\CIC1Sin/n10955 ), 
    .F0(\CIC1Sin/d6_71_N_1459_7 ), .Q0(\CIC1Sin/d6_7 ), 
    .F1(\CIC1Sin/d6_71_N_1459_8 ), .Q1(\CIC1Sin/d6_8 ), .FCO(\CIC1Sin/n10956 ));
  CIC1Sin_SLICE_371 \CIC1Sin/SLICE_371 ( .B1(\CIC1Sin/d_d_tmp_6 ), 
    .A1(\CIC1Sin/d_tmp_6 ), .B0(\CIC1Sin/d_d_tmp_5 ), .A0(\CIC1Sin/d_tmp_5 ), 
    .DI1(\CIC1Sin/d6_71_N_1459_6 ), .DI0(\CIC1Sin/d6_71_N_1459_5 ), 
    .CE(\CIC1Sin/osc_clk_enable_160 ), .CLK(osc_clk), .FCI(\CIC1Sin/n10954 ), 
    .F0(\CIC1Sin/d6_71_N_1459_5 ), .Q0(\CIC1Sin/d6_5 ), 
    .F1(\CIC1Sin/d6_71_N_1459_6 ), .Q1(\CIC1Sin/d6_6 ), .FCO(\CIC1Sin/n10955 ));
  CIC1Sin_SLICE_372 \CIC1Sin/SLICE_372 ( .B1(\CIC1Sin/d_d_tmp_4 ), 
    .A1(\CIC1Sin/d_tmp_4 ), .B0(\CIC1Sin/d_d_tmp_3 ), .A0(\CIC1Sin/d_tmp_3 ), 
    .DI1(\CIC1Sin/d6_71_N_1459_4 ), .DI0(\CIC1Sin/d6_71_N_1459_3 ), 
    .CE(\CIC1Sin/osc_clk_enable_160 ), .CLK(osc_clk), .FCI(\CIC1Sin/n10953 ), 
    .F0(\CIC1Sin/d6_71_N_1459_3 ), .Q0(\CIC1Sin/d6_3 ), 
    .F1(\CIC1Sin/d6_71_N_1459_4 ), .Q1(\CIC1Sin/d6_4 ), .FCO(\CIC1Sin/n10954 ));
  CIC1Sin_SLICE_373 \CIC1Sin/SLICE_373 ( .B1(\CIC1Sin/d_d_tmp_2 ), 
    .A1(\CIC1Sin/d_tmp_2 ), .B0(\CIC1Sin/d_d_tmp_1 ), .A0(\CIC1Sin/d_tmp_1 ), 
    .DI1(\CIC1Sin/d6_71_N_1459_2 ), .DI0(\CIC1Sin/d6_71_N_1459_1 ), 
    .CE(\CIC1Sin/osc_clk_enable_160 ), .CLK(osc_clk), .FCI(\CIC1Sin/n10952 ), 
    .F0(\CIC1Sin/d6_71_N_1459_1 ), .Q0(\CIC1Sin/d6_1 ), 
    .F1(\CIC1Sin/d6_71_N_1459_2 ), .Q1(\CIC1Sin/d6_2 ), .FCO(\CIC1Sin/n10953 ));
  CIC1Sin_SLICE_374 \CIC1Sin/SLICE_374 ( .B1(\CIC1Sin/d_d_tmp_0 ), 
    .A1(\CIC1Sin/d_tmp_0 ), .DI1(\CIC1Sin/d6_71_N_1459_0 ), 
    .CE(\CIC1Sin/osc_clk_enable_69 ), .CLK(osc_clk), 
    .F1(\CIC1Sin/d6_71_N_1459_0 ), .Q1(\CIC1Sin/d6_0 ), .FCO(\CIC1Sin/n10952 ));
  CIC1Sin_SLICE_375 \CIC1Sin/SLICE_375 ( .B0(\CIC1Sin/d_d8_35 ), 
    .A0(\CIC1Sin/d8_35 ), .DI0(\CIC1Sin/d9_71_N_1675_35 ), 
    .CE(\CIC1Sin/osc_clk_enable_610 ), .CLK(osc_clk), .FCI(\CIC1Sin/n10930 ), 
    .F0(\CIC1Sin/d9_71_N_1675_35 ), .Q0(\CIC1Sin/d9_35 ), .F1(\CIC1Sin/n5816 ));
  CIC1Sin_SLICE_376 \CIC1Sin/SLICE_376 ( .B1(\CIC1Sin/d_d8_34 ), 
    .A1(\CIC1Sin/d8_34 ), .B0(\CIC1Sin/d_d8_33 ), .A0(\CIC1Sin/d8_33 ), 
    .DI1(\CIC1Sin/d9_71_N_1675_34 ), .DI0(\CIC1Sin/d9_71_N_1675_33 ), 
    .CE(\CIC1Sin/osc_clk_enable_610 ), .CLK(osc_clk), .FCI(\CIC1Sin/n10929 ), 
    .F0(\CIC1Sin/d9_71_N_1675_33 ), .Q0(\CIC1Sin/d9_33 ), 
    .F1(\CIC1Sin/d9_71_N_1675_34 ), .Q1(\CIC1Sin/d9_34 ), 
    .FCO(\CIC1Sin/n10930 ));
  CIC1Sin_SLICE_377 \CIC1Sin/SLICE_377 ( .B1(\CIC1Sin/d_d8_32 ), 
    .A1(\CIC1Sin/d8_32 ), .B0(\CIC1Sin/d_d8_31 ), .A0(\CIC1Sin/d8_31 ), 
    .DI1(\CIC1Sin/d9_71_N_1675_32 ), .DI0(\CIC1Sin/d9_71_N_1675_31 ), 
    .CE(\CIC1Sin/osc_clk_enable_610 ), .CLK(osc_clk), .FCI(\CIC1Sin/n10928 ), 
    .F0(\CIC1Sin/d9_71_N_1675_31 ), .Q0(\CIC1Sin/d9_31 ), 
    .F1(\CIC1Sin/d9_71_N_1675_32 ), .Q1(\CIC1Sin/d9_32 ), 
    .FCO(\CIC1Sin/n10929 ));
  CIC1Sin_SLICE_378 \CIC1Sin/SLICE_378 ( .B1(\CIC1Sin/d_d8_30 ), 
    .A1(\CIC1Sin/d8_30 ), .B0(\CIC1Sin/d_d8_29 ), .A0(\CIC1Sin/d8_29 ), 
    .DI1(\CIC1Sin/d9_71_N_1675_30 ), .DI0(\CIC1Sin/d9_71_N_1675_29 ), 
    .CE(\CIC1Sin/osc_clk_enable_610 ), .CLK(osc_clk), .FCI(\CIC1Sin/n10927 ), 
    .F0(\CIC1Sin/d9_71_N_1675_29 ), .Q0(\CIC1Sin/d9_29 ), 
    .F1(\CIC1Sin/d9_71_N_1675_30 ), .Q1(\CIC1Sin/d9_30 ), 
    .FCO(\CIC1Sin/n10928 ));
  CIC1Sin_SLICE_379 \CIC1Sin/SLICE_379 ( .B1(\CIC1Sin/d_d8_28 ), 
    .A1(\CIC1Sin/d8_28 ), .B0(\CIC1Sin/d_d8_27 ), .A0(\CIC1Sin/d8_27 ), 
    .DI1(\CIC1Sin/d9_71_N_1675_28 ), .DI0(\CIC1Sin/d9_71_N_1675_27 ), 
    .CE(\CIC1Sin/osc_clk_enable_610 ), .CLK(osc_clk), .FCI(\CIC1Sin/n10926 ), 
    .F0(\CIC1Sin/d9_71_N_1675_27 ), .Q0(\CIC1Sin/d9_27 ), 
    .F1(\CIC1Sin/d9_71_N_1675_28 ), .Q1(\CIC1Sin/d9_28 ), 
    .FCO(\CIC1Sin/n10927 ));
  CIC1Sin_SLICE_380 \CIC1Sin/SLICE_380 ( .B1(\CIC1Sin/d_d8_26 ), 
    .A1(\CIC1Sin/d8_26 ), .B0(\CIC1Sin/d_d8_25 ), .A0(\CIC1Sin/d8_25 ), 
    .DI1(\CIC1Sin/d9_71_N_1675_26 ), .DI0(\CIC1Sin/d9_71_N_1675_25 ), 
    .CE(\CIC1Sin/osc_clk_enable_610 ), .CLK(osc_clk), .FCI(\CIC1Sin/n10925 ), 
    .F0(\CIC1Sin/d9_71_N_1675_25 ), .Q0(\CIC1Sin/d9_25 ), 
    .F1(\CIC1Sin/d9_71_N_1675_26 ), .Q1(\CIC1Sin/d9_26 ), 
    .FCO(\CIC1Sin/n10926 ));
  CIC1Sin_SLICE_381 \CIC1Sin/SLICE_381 ( .B1(\CIC1Sin/d_d8_24 ), 
    .A1(\CIC1Sin/d8_24 ), .B0(\CIC1Sin/d_d8_23 ), .A0(\CIC1Sin/d8_23 ), 
    .DI1(\CIC1Sin/d9_71_N_1675_24 ), .DI0(\CIC1Sin/d9_71_N_1675_23 ), 
    .CE(\CIC1Sin/osc_clk_enable_610 ), .CLK(osc_clk), .FCI(\CIC1Sin/n10924 ), 
    .F0(\CIC1Sin/d9_71_N_1675_23 ), .Q0(\CIC1Sin/d9_23 ), 
    .F1(\CIC1Sin/d9_71_N_1675_24 ), .Q1(\CIC1Sin/d9_24 ), 
    .FCO(\CIC1Sin/n10925 ));
  CIC1Sin_SLICE_382 \CIC1Sin/SLICE_382 ( .B1(\CIC1Sin/d_d8_22 ), 
    .A1(\CIC1Sin/d8_22 ), .B0(\CIC1Sin/d_d8_21 ), .A0(\CIC1Sin/d8_21 ), 
    .DI1(\CIC1Sin/d9_71_N_1675_22 ), .DI0(\CIC1Sin/d9_71_N_1675_21 ), 
    .CE(\CIC1Sin/osc_clk_enable_610 ), .CLK(osc_clk), .FCI(\CIC1Sin/n10923 ), 
    .F0(\CIC1Sin/d9_71_N_1675_21 ), .Q0(\CIC1Sin/d9_21 ), 
    .F1(\CIC1Sin/d9_71_N_1675_22 ), .Q1(\CIC1Sin/d9_22 ), 
    .FCO(\CIC1Sin/n10924 ));
  CIC1Sin_SLICE_383 \CIC1Sin/SLICE_383 ( .B1(\CIC1Sin/d_d8_20 ), 
    .A1(\CIC1Sin/d8_20 ), .B0(\CIC1Sin/d_d8_19 ), .A0(\CIC1Sin/d8_19 ), 
    .DI1(\CIC1Sin/d9_71_N_1675_20 ), .DI0(\CIC1Sin/d9_71_N_1675_19 ), 
    .CE(\CIC1Sin/osc_clk_enable_610 ), .CLK(osc_clk), .FCI(\CIC1Sin/n10922 ), 
    .F0(\CIC1Sin/d9_71_N_1675_19 ), .Q0(\CIC1Sin/d9_19 ), 
    .F1(\CIC1Sin/d9_71_N_1675_20 ), .Q1(\CIC1Sin/d9_20 ), 
    .FCO(\CIC1Sin/n10923 ));
  CIC1Sin_SLICE_384 \CIC1Sin/SLICE_384 ( .B1(\CIC1Sin/d_d8_18 ), 
    .A1(\CIC1Sin/d8_18 ), .B0(\CIC1Sin/d_d8_17 ), .A0(\CIC1Sin/d8_17 ), 
    .DI1(\CIC1Sin/d9_71_N_1675_18 ), .DI0(\CIC1Sin/d9_71_N_1675_17 ), 
    .CE(\CIC1Sin/osc_clk_enable_610 ), .CLK(osc_clk), .FCI(\CIC1Sin/n10921 ), 
    .F0(\CIC1Sin/d9_71_N_1675_17 ), .Q0(\CIC1Sin/d9_17 ), 
    .F1(\CIC1Sin/d9_71_N_1675_18 ), .Q1(\CIC1Sin/d9_18 ), 
    .FCO(\CIC1Sin/n10922 ));
  CIC1Sin_SLICE_385 \CIC1Sin/SLICE_385 ( .B1(\CIC1Sin/d_d8_16 ), 
    .A1(\CIC1Sin/d8_16 ), .B0(\CIC1Sin/d_d8_15 ), .A0(\CIC1Sin/d8_15 ), 
    .DI1(\CIC1Sin/d9_71_N_1675_16 ), .DI0(\CIC1Sin/d9_71_N_1675_15 ), 
    .CE(\CIC1Sin/osc_clk_enable_610 ), .CLK(osc_clk), .FCI(\CIC1Sin/n10920 ), 
    .F0(\CIC1Sin/d9_71_N_1675_15 ), .Q0(\CIC1Sin/d9_15 ), 
    .F1(\CIC1Sin/d9_71_N_1675_16 ), .Q1(\CIC1Sin/d9_16 ), 
    .FCO(\CIC1Sin/n10921 ));
  CIC1Sin_SLICE_386 \CIC1Sin/SLICE_386 ( .B1(\CIC1Sin/d_d8_14 ), 
    .A1(\CIC1Sin/d8_14 ), .B0(\CIC1Sin/d_d8_13 ), .A0(\CIC1Sin/d8_13 ), 
    .DI1(\CIC1Sin/d9_71_N_1675_14 ), .DI0(\CIC1Sin/d9_71_N_1675_13 ), 
    .CE(\CIC1Sin/osc_clk_enable_610 ), .CLK(osc_clk), .FCI(\CIC1Sin/n10919 ), 
    .F0(\CIC1Sin/d9_71_N_1675_13 ), .Q0(\CIC1Sin/d9_13 ), 
    .F1(\CIC1Sin/d9_71_N_1675_14 ), .Q1(\CIC1Sin/d9_14 ), 
    .FCO(\CIC1Sin/n10920 ));
  CIC1Sin_SLICE_387 \CIC1Sin/SLICE_387 ( .B1(\CIC1Sin/d_d8_12 ), 
    .A1(\CIC1Sin/d8_12 ), .B0(\CIC1Sin/d_d8_11 ), .A0(\CIC1Sin/d8_11 ), 
    .DI1(\CIC1Sin/d9_71_N_1675_12 ), .DI0(\CIC1Sin/d9_71_N_1675_11 ), 
    .CE(\CIC1Sin/osc_clk_enable_610 ), .CLK(osc_clk), .FCI(\CIC1Sin/n10918 ), 
    .F0(\CIC1Sin/d9_71_N_1675_11 ), .Q0(\CIC1Sin/d9_11 ), 
    .F1(\CIC1Sin/d9_71_N_1675_12 ), .Q1(\CIC1Sin/d9_12 ), 
    .FCO(\CIC1Sin/n10919 ));
  CIC1Sin_SLICE_388 \CIC1Sin/SLICE_388 ( .B1(\CIC1Sin/d_d8_10 ), 
    .A1(\CIC1Sin/d8_10 ), .B0(\CIC1Sin/d_d8_9 ), .A0(\CIC1Sin/d8_9 ), 
    .DI1(\CIC1Sin/d9_71_N_1675_10 ), .DI0(\CIC1Sin/d9_71_N_1675_9 ), 
    .CE(\CIC1Sin/osc_clk_enable_610 ), .CLK(osc_clk), .FCI(\CIC1Sin/n10917 ), 
    .F0(\CIC1Sin/d9_71_N_1675_9 ), .Q0(\CIC1Sin/d9_9 ), 
    .F1(\CIC1Sin/d9_71_N_1675_10 ), .Q1(\CIC1Sin/d9_10 ), 
    .FCO(\CIC1Sin/n10918 ));
  CIC1Sin_SLICE_389 \CIC1Sin/SLICE_389 ( .B1(\CIC1Sin/d_d8_8 ), 
    .A1(\CIC1Sin/d8_8 ), .B0(\CIC1Sin/d_d8_7 ), .A0(\CIC1Sin/d8_7 ), 
    .DI1(\CIC1Sin/d9_71_N_1675_8 ), .DI0(\CIC1Sin/d9_71_N_1675_7 ), 
    .CE(\CIC1Sin/osc_clk_enable_610 ), .CLK(osc_clk), .FCI(\CIC1Sin/n10916 ), 
    .F0(\CIC1Sin/d9_71_N_1675_7 ), .Q0(\CIC1Sin/d9_7 ), 
    .F1(\CIC1Sin/d9_71_N_1675_8 ), .Q1(\CIC1Sin/d9_8 ), .FCO(\CIC1Sin/n10917 ));
  CIC1Sin_SLICE_390 \CIC1Sin/SLICE_390 ( .B1(\CIC1Sin/d_d8_6 ), 
    .A1(\CIC1Sin/d8_6 ), .B0(\CIC1Sin/d_d8_5 ), .A0(\CIC1Sin/d8_5 ), 
    .DI1(\CIC1Sin/d9_71_N_1675_6 ), .DI0(\CIC1Sin/d9_71_N_1675_5 ), 
    .CE(\CIC1Sin/osc_clk_enable_610 ), .CLK(osc_clk), .FCI(\CIC1Sin/n10915 ), 
    .F0(\CIC1Sin/d9_71_N_1675_5 ), .Q0(\CIC1Sin/d9_5 ), 
    .F1(\CIC1Sin/d9_71_N_1675_6 ), .Q1(\CIC1Sin/d9_6 ), .FCO(\CIC1Sin/n10916 ));
  CIC1Sin_SLICE_391 \CIC1Sin/SLICE_391 ( .B1(\CIC1Sin/d_d8_4 ), 
    .A1(\CIC1Sin/d8_4 ), .B0(\CIC1Sin/d_d8_3 ), .A0(\CIC1Sin/d8_3 ), 
    .DI1(\CIC1Sin/d9_71_N_1675_4 ), .DI0(\CIC1Sin/d9_71_N_1675_3 ), 
    .CE(\CIC1Sin/osc_clk_enable_610 ), .CLK(osc_clk), .FCI(\CIC1Sin/n10914 ), 
    .F0(\CIC1Sin/d9_71_N_1675_3 ), .Q0(\CIC1Sin/d9_3 ), 
    .F1(\CIC1Sin/d9_71_N_1675_4 ), .Q1(\CIC1Sin/d9_4 ), .FCO(\CIC1Sin/n10915 ));
  CIC1Sin_SLICE_392 \CIC1Sin/SLICE_392 ( .B1(\CIC1Sin/d_d8_2 ), 
    .A1(\CIC1Sin/d8_2 ), .B0(\CIC1Sin/d_d8_1 ), .A0(\CIC1Sin/d8_1 ), 
    .DI1(\CIC1Sin/d9_71_N_1675_2 ), .DI0(\CIC1Sin/d9_71_N_1675_1 ), 
    .CE(\CIC1Sin/osc_clk_enable_610 ), .CLK(osc_clk), .FCI(\CIC1Sin/n10913 ), 
    .F0(\CIC1Sin/d9_71_N_1675_1 ), .Q0(\CIC1Sin/d9_1 ), 
    .F1(\CIC1Sin/d9_71_N_1675_2 ), .Q1(\CIC1Sin/d9_2 ), .FCO(\CIC1Sin/n10914 ));
  CIC1Sin_SLICE_393 \CIC1Sin/SLICE_393 ( .B1(\CIC1Sin/d_d8_0 ), 
    .A1(\CIC1Sin/d8_0 ), .DI1(\CIC1Sin/d9_71_N_1675_0 ), 
    .CE(\CIC1Sin/osc_clk_enable_69 ), .CLK(osc_clk), 
    .F1(\CIC1Sin/d9_71_N_1675_0 ), .Q1(\CIC1Sin/d9_0 ), .FCO(\CIC1Sin/n10913 ));
  CIC1Sin_SLICE_394 \CIC1Sin/SLICE_394 ( .A0(\CIC1Sin/count_15 ), 
    .DI0(\CIC1Sin/n376 ), .LSR(\CIC1Sin/n8418 ), .CLK(osc_clk), 
    .FCI(\CIC1Sin/n10806 ), .F0(\CIC1Sin/n376 ), .Q0(\CIC1Sin/count_15 ));
  CIC1Sin_SLICE_395 \CIC1Sin/SLICE_395 ( .A1(\CIC1Sin/count_14 ), 
    .A0(\CIC1Sin/count_13 ), .DI1(\CIC1Sin/n377 ), .DI0(\CIC1Sin/n378 ), 
    .LSR(\CIC1Sin/n8418 ), .CLK(osc_clk), .FCI(\CIC1Sin/n10805 ), 
    .F0(\CIC1Sin/n378 ), .Q0(\CIC1Sin/count_13 ), .F1(\CIC1Sin/n377 ), 
    .Q1(\CIC1Sin/count_14 ), .FCO(\CIC1Sin/n10806 ));
  CIC1Sin_SLICE_396 \CIC1Sin/SLICE_396 ( .A1(\CIC1Sin/count_12 ), 
    .A0(\CIC1Sin/count_11 ), .DI1(\CIC1Sin/n379 ), .LSR(\CIC1Sin/n8418 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n10804 ), .F0(\CIC1Sin/n380 ), 
    .F1(\CIC1Sin/n379 ), .Q1(\CIC1Sin/count_12 ), .FCO(\CIC1Sin/n10805 ));
  CIC1Sin_SLICE_397 \CIC1Sin/SLICE_397 ( .A1(\CIC1Sin/count_10 ), 
    .A0(\CIC1Sin/count_9 ), .DI1(\CIC1Sin/n381 ), .DI0(\CIC1Sin/n382 ), 
    .LSR(\CIC1Sin/n8418 ), .CLK(osc_clk), .FCI(\CIC1Sin/n10803 ), 
    .F0(\CIC1Sin/n382 ), .Q0(\CIC1Sin/count_9 ), .F1(\CIC1Sin/n381 ), 
    .Q1(\CIC1Sin/count_10 ), .FCO(\CIC1Sin/n10804 ));
  CIC1Sin_SLICE_398 \CIC1Sin/SLICE_398 ( .A1(\CIC1Sin/count_8 ), 
    .A0(\CIC1Sin/count_7 ), .DI1(\CIC1Sin/n383 ), .DI0(\CIC1Sin/n384 ), 
    .LSR(\CIC1Sin/n8418 ), .CLK(osc_clk), .FCI(\CIC1Sin/n10802 ), 
    .F0(\CIC1Sin/n384 ), .Q0(\CIC1Sin/count_7 ), .F1(\CIC1Sin/n383 ), 
    .Q1(\CIC1Sin/count_8 ), .FCO(\CIC1Sin/n10803 ));
  CIC1Sin_SLICE_399 \CIC1Sin/SLICE_399 ( .A1(\CIC1Sin/count_6 ), 
    .A0(\CIC1Sin/count_5 ), .DI1(\CIC1Sin/n385 ), .DI0(\CIC1Sin/n386 ), 
    .LSR(\CIC1Sin/n8418 ), .CLK(osc_clk), .FCI(\CIC1Sin/n10801 ), 
    .F0(\CIC1Sin/n386 ), .Q0(\CIC1Sin/count_5 ), .F1(\CIC1Sin/n385 ), 
    .Q1(\CIC1Sin/count_6 ), .FCO(\CIC1Sin/n10802 ));
  CIC1Sin_SLICE_400 \CIC1Sin/SLICE_400 ( .A1(\CIC1Sin/count_4 ), 
    .A0(\CIC1Sin/count_3 ), .DI1(\CIC1Sin/n387 ), .DI0(\CIC1Sin/n388 ), 
    .LSR(\CIC1Sin/n8418 ), .CLK(osc_clk), .FCI(\CIC1Sin/n10800 ), 
    .F0(\CIC1Sin/n388 ), .Q0(\CIC1Sin/count_3 ), .F1(\CIC1Sin/n387 ), 
    .Q1(\CIC1Sin/count_4 ), .FCO(\CIC1Sin/n10801 ));
  CIC1Sin_SLICE_401 \CIC1Sin/SLICE_401 ( .A1(\CIC1Sin/count_2 ), 
    .A0(\CIC1Sin/count_1 ), .DI1(\CIC1Sin/n389 ), .DI0(\CIC1Sin/n390 ), 
    .LSR(\CIC1Sin/n8418 ), .CLK(osc_clk), .FCI(\CIC1Sin/n10799 ), 
    .F0(\CIC1Sin/n390 ), .Q0(\CIC1Sin/count_1 ), .F1(\CIC1Sin/n389 ), 
    .Q1(\CIC1Sin/count_2 ), .FCO(\CIC1Sin/n10800 ));
  CIC1Sin_SLICE_402 \CIC1Sin/SLICE_402 ( .A1(\CIC1Sin/count_0 ), 
    .F1(\CIC1Sin/n391 ), .FCO(\CIC1Sin/n10799 ));
  CIC1Sin_SLICE_403 \CIC1Sin/SLICE_403 ( .FCI(\CIC1Sin/n10779 ), 
    .F0(\CIC1Sin/n4904 ));
  CIC1Sin_SLICE_404 \CIC1Sin/SLICE_404 ( .B1(\CIC1Sin/d5_35 ), 
    .A1(\CIC1Sin/d4_35 ), .B0(\CIC1Sin/d5_34 ), .A0(\CIC1Sin/d4_34 ), 
    .DI1(\CIC1Sin/d5_71_N_706_35 ), .DI0(\CIC1Sin/d5_71_N_706_34 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n10778 ), .F0(\CIC1Sin/d5_71_N_706_34 ), 
    .Q0(\CIC1Sin/d5_34 ), .F1(\CIC1Sin/d5_71_N_706_35 ), .Q1(\CIC1Sin/d5_35 ), 
    .FCO(\CIC1Sin/n10779 ));
  CIC1Sin_SLICE_405 \CIC1Sin/SLICE_405 ( .B1(\CIC1Sin/d5_33 ), 
    .A1(\CIC1Sin/d4_33 ), .B0(\CIC1Sin/d5_32 ), .A0(\CIC1Sin/d4_32 ), 
    .DI1(\CIC1Sin/d5_71_N_706_33 ), .DI0(\CIC1Sin/d5_71_N_706_32 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n10777 ), .F0(\CIC1Sin/d5_71_N_706_32 ), 
    .Q0(\CIC1Sin/d5_32 ), .F1(\CIC1Sin/d5_71_N_706_33 ), .Q1(\CIC1Sin/d5_33 ), 
    .FCO(\CIC1Sin/n10778 ));
  CIC1Sin_SLICE_406 \CIC1Sin/SLICE_406 ( .B1(\CIC1Sin/d5_31 ), 
    .A1(\CIC1Sin/d4_31 ), .B0(\CIC1Sin/d5_30 ), .A0(\CIC1Sin/d4_30 ), 
    .DI1(\CIC1Sin/d5_71_N_706_31 ), .DI0(\CIC1Sin/d5_71_N_706_30 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n10776 ), .F0(\CIC1Sin/d5_71_N_706_30 ), 
    .Q0(\CIC1Sin/d5_30 ), .F1(\CIC1Sin/d5_71_N_706_31 ), .Q1(\CIC1Sin/d5_31 ), 
    .FCO(\CIC1Sin/n10777 ));
  CIC1Sin_SLICE_407 \CIC1Sin/SLICE_407 ( .B1(\CIC1Sin/d5_29 ), 
    .A1(\CIC1Sin/d4_29 ), .B0(\CIC1Sin/d5_28 ), .A0(\CIC1Sin/d4_28 ), 
    .DI1(\CIC1Sin/d5_71_N_706_29 ), .DI0(\CIC1Sin/d5_71_N_706_28 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n10775 ), .F0(\CIC1Sin/d5_71_N_706_28 ), 
    .Q0(\CIC1Sin/d5_28 ), .F1(\CIC1Sin/d5_71_N_706_29 ), .Q1(\CIC1Sin/d5_29 ), 
    .FCO(\CIC1Sin/n10776 ));
  CIC1Sin_SLICE_408 \CIC1Sin/SLICE_408 ( .B1(\CIC1Sin/d5_27 ), 
    .A1(\CIC1Sin/d4_27 ), .B0(\CIC1Sin/d5_26 ), .A0(\CIC1Sin/d4_26 ), 
    .DI1(\CIC1Sin/d5_71_N_706_27 ), .DI0(\CIC1Sin/d5_71_N_706_26 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n10774 ), .F0(\CIC1Sin/d5_71_N_706_26 ), 
    .Q0(\CIC1Sin/d5_26 ), .F1(\CIC1Sin/d5_71_N_706_27 ), .Q1(\CIC1Sin/d5_27 ), 
    .FCO(\CIC1Sin/n10775 ));
  CIC1Sin_SLICE_409 \CIC1Sin/SLICE_409 ( .B1(\CIC1Sin/d5_25 ), 
    .A1(\CIC1Sin/d4_25 ), .B0(\CIC1Sin/d5_24 ), .A0(\CIC1Sin/d4_24 ), 
    .DI1(\CIC1Sin/d5_71_N_706_25 ), .DI0(\CIC1Sin/d5_71_N_706_24 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n10773 ), .F0(\CIC1Sin/d5_71_N_706_24 ), 
    .Q0(\CIC1Sin/d5_24 ), .F1(\CIC1Sin/d5_71_N_706_25 ), .Q1(\CIC1Sin/d5_25 ), 
    .FCO(\CIC1Sin/n10774 ));
  CIC1Sin_SLICE_410 \CIC1Sin/SLICE_410 ( .B1(\CIC1Sin/d5_23 ), 
    .A1(\CIC1Sin/d4_23 ), .B0(\CIC1Sin/d5_22 ), .A0(\CIC1Sin/d4_22 ), 
    .DI1(\CIC1Sin/d5_71_N_706_23 ), .DI0(\CIC1Sin/d5_71_N_706_22 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n10772 ), .F0(\CIC1Sin/d5_71_N_706_22 ), 
    .Q0(\CIC1Sin/d5_22 ), .F1(\CIC1Sin/d5_71_N_706_23 ), .Q1(\CIC1Sin/d5_23 ), 
    .FCO(\CIC1Sin/n10773 ));
  CIC1Sin_SLICE_411 \CIC1Sin/SLICE_411 ( .B1(\CIC1Sin/d5_21 ), 
    .A1(\CIC1Sin/d4_21 ), .B0(\CIC1Sin/d5_20 ), .A0(\CIC1Sin/d4_20 ), 
    .DI1(\CIC1Sin/d5_71_N_706_21 ), .DI0(\CIC1Sin/d5_71_N_706_20 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n10771 ), .F0(\CIC1Sin/d5_71_N_706_20 ), 
    .Q0(\CIC1Sin/d5_20 ), .F1(\CIC1Sin/d5_71_N_706_21 ), .Q1(\CIC1Sin/d5_21 ), 
    .FCO(\CIC1Sin/n10772 ));
  CIC1Sin_SLICE_412 \CIC1Sin/SLICE_412 ( .B1(\CIC1Sin/d5_19 ), 
    .A1(\CIC1Sin/d4_19 ), .B0(\CIC1Sin/d5_18 ), .A0(\CIC1Sin/d4_18 ), 
    .DI1(\CIC1Sin/d5_71_N_706_19 ), .DI0(\CIC1Sin/d5_71_N_706_18 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n10770 ), .F0(\CIC1Sin/d5_71_N_706_18 ), 
    .Q0(\CIC1Sin/d5_18 ), .F1(\CIC1Sin/d5_71_N_706_19 ), .Q1(\CIC1Sin/d5_19 ), 
    .FCO(\CIC1Sin/n10771 ));
  CIC1Sin_SLICE_413 \CIC1Sin/SLICE_413 ( .B1(\CIC1Sin/d5_17 ), 
    .A1(\CIC1Sin/d4_17 ), .B0(\CIC1Sin/d5_16 ), .A0(\CIC1Sin/d4_16 ), 
    .DI1(\CIC1Sin/d5_71_N_706_17 ), .DI0(\CIC1Sin/d5_71_N_706_16 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n10769 ), .F0(\CIC1Sin/d5_71_N_706_16 ), 
    .Q0(\CIC1Sin/d5_16 ), .F1(\CIC1Sin/d5_71_N_706_17 ), .Q1(\CIC1Sin/d5_17 ), 
    .FCO(\CIC1Sin/n10770 ));
  CIC1Sin_SLICE_414 \CIC1Sin/SLICE_414 ( .B1(\CIC1Sin/d5_15 ), 
    .A1(\CIC1Sin/d4_15 ), .B0(\CIC1Sin/d5_14 ), .A0(\CIC1Sin/d4_14 ), 
    .DI1(\CIC1Sin/d5_71_N_706_15 ), .DI0(\CIC1Sin/d5_71_N_706_14 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n10768 ), .F0(\CIC1Sin/d5_71_N_706_14 ), 
    .Q0(\CIC1Sin/d5_14 ), .F1(\CIC1Sin/d5_71_N_706_15 ), .Q1(\CIC1Sin/d5_15 ), 
    .FCO(\CIC1Sin/n10769 ));
  CIC1Sin_SLICE_415 \CIC1Sin/SLICE_415 ( .B1(\CIC1Sin/d5_13 ), 
    .A1(\CIC1Sin/d4_13 ), .B0(\CIC1Sin/d5_12 ), .A0(\CIC1Sin/d4_12 ), 
    .DI1(\CIC1Sin/d5_71_N_706_13 ), .DI0(\CIC1Sin/d5_71_N_706_12 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n10767 ), .F0(\CIC1Sin/d5_71_N_706_12 ), 
    .Q0(\CIC1Sin/d5_12 ), .F1(\CIC1Sin/d5_71_N_706_13 ), .Q1(\CIC1Sin/d5_13 ), 
    .FCO(\CIC1Sin/n10768 ));
  CIC1Sin_SLICE_416 \CIC1Sin/SLICE_416 ( .B1(\CIC1Sin/d5_11 ), 
    .A1(\CIC1Sin/d4_11 ), .B0(\CIC1Sin/d5_10 ), .A0(\CIC1Sin/d4_10 ), 
    .DI1(\CIC1Sin/d5_71_N_706_11 ), .DI0(\CIC1Sin/d5_71_N_706_10 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n10766 ), .F0(\CIC1Sin/d5_71_N_706_10 ), 
    .Q0(\CIC1Sin/d5_10 ), .F1(\CIC1Sin/d5_71_N_706_11 ), .Q1(\CIC1Sin/d5_11 ), 
    .FCO(\CIC1Sin/n10767 ));
  CIC1Sin_SLICE_417 \CIC1Sin/SLICE_417 ( .B1(\CIC1Sin/d5_9 ), 
    .A1(\CIC1Sin/d4_9 ), .B0(\CIC1Sin/d5_8 ), .A0(\CIC1Sin/d4_8 ), 
    .DI1(\CIC1Sin/d5_71_N_706_9 ), .DI0(\CIC1Sin/d5_71_N_706_8 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n10765 ), .F0(\CIC1Sin/d5_71_N_706_8 ), 
    .Q0(\CIC1Sin/d5_8 ), .F1(\CIC1Sin/d5_71_N_706_9 ), .Q1(\CIC1Sin/d5_9 ), 
    .FCO(\CIC1Sin/n10766 ));
  CIC1Sin_SLICE_418 \CIC1Sin/SLICE_418 ( .B1(\CIC1Sin/d5_7 ), 
    .A1(\CIC1Sin/d4_7 ), .B0(\CIC1Sin/d5_6 ), .A0(\CIC1Sin/d4_6 ), 
    .DI1(\CIC1Sin/d5_71_N_706_7 ), .DI0(\CIC1Sin/d5_71_N_706_6 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n10764 ), .F0(\CIC1Sin/d5_71_N_706_6 ), 
    .Q0(\CIC1Sin/d5_6 ), .F1(\CIC1Sin/d5_71_N_706_7 ), .Q1(\CIC1Sin/d5_7 ), 
    .FCO(\CIC1Sin/n10765 ));
  CIC1Sin_SLICE_419 \CIC1Sin/SLICE_419 ( .B1(\CIC1Sin/d5_5 ), 
    .A1(\CIC1Sin/d4_5 ), .B0(\CIC1Sin/d5_4 ), .A0(\CIC1Sin/d4_4 ), 
    .DI1(\CIC1Sin/d5_71_N_706_5 ), .DI0(\CIC1Sin/d5_71_N_706_4 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n10763 ), .F0(\CIC1Sin/d5_71_N_706_4 ), 
    .Q0(\CIC1Sin/d5_4 ), .F1(\CIC1Sin/d5_71_N_706_5 ), .Q1(\CIC1Sin/d5_5 ), 
    .FCO(\CIC1Sin/n10764 ));
  CIC1Sin_SLICE_420 \CIC1Sin/SLICE_420 ( .B1(\CIC1Sin/d5_3 ), 
    .A1(\CIC1Sin/d4_3 ), .B0(\CIC1Sin/d5_2 ), .A0(\CIC1Sin/d4_2 ), 
    .DI1(\CIC1Sin/d5_71_N_706_3 ), .DI0(\CIC1Sin/d5_71_N_706_2 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n10762 ), .F0(\CIC1Sin/d5_71_N_706_2 ), 
    .Q0(\CIC1Sin/d5_2 ), .F1(\CIC1Sin/d5_71_N_706_3 ), .Q1(\CIC1Sin/d5_3 ), 
    .FCO(\CIC1Sin/n10763 ));
  CIC1Sin_SLICE_421 \CIC1Sin/SLICE_421 ( .B1(\CIC1Sin/d5_1 ), 
    .A1(\CIC1Sin/d4_1 ), .B0(\CIC1Sin/d5_0 ), .A0(\CIC1Sin/d4_0 ), 
    .DI1(\CIC1Sin/d5_71_N_706_1 ), .CLK(osc_clk), .F1(\CIC1Sin/d5_71_N_706_1 ), 
    .Q1(\CIC1Sin/d5_1 ), .FCO(\CIC1Sin/n10762 ));
  CIC1Sin_SLICE_422 \CIC1Sin/SLICE_422 ( .FCI(\CIC1Sin/n10760 ), 
    .F0(\CIC1Sin/n4752 ));
  CIC1Sin_SLICE_423 \CIC1Sin/SLICE_423 ( .B1(\CIC1Sin/d4_35 ), 
    .A1(\CIC1Sin/d3_35 ), .B0(\CIC1Sin/d4_34 ), .A0(\CIC1Sin/d3_34 ), 
    .DI1(\CIC1Sin/d4_71_N_634_35 ), .DI0(\CIC1Sin/d4_71_N_634_34 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n10759 ), .F0(\CIC1Sin/d4_71_N_634_34 ), 
    .Q0(\CIC1Sin/d4_34 ), .F1(\CIC1Sin/d4_71_N_634_35 ), .Q1(\CIC1Sin/d4_35 ), 
    .FCO(\CIC1Sin/n10760 ));
  CIC1Sin_SLICE_424 \CIC1Sin/SLICE_424 ( .B1(\CIC1Sin/d4_33 ), 
    .A1(\CIC1Sin/d3_33 ), .B0(\CIC1Sin/d4_32 ), .A0(\CIC1Sin/d3_32 ), 
    .DI1(\CIC1Sin/d4_71_N_634_33 ), .DI0(\CIC1Sin/d4_71_N_634_32 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n10758 ), .F0(\CIC1Sin/d4_71_N_634_32 ), 
    .Q0(\CIC1Sin/d4_32 ), .F1(\CIC1Sin/d4_71_N_634_33 ), .Q1(\CIC1Sin/d4_33 ), 
    .FCO(\CIC1Sin/n10759 ));
  CIC1Sin_SLICE_425 \CIC1Sin/SLICE_425 ( .B1(\CIC1Sin/d4_31 ), 
    .A1(\CIC1Sin/d3_31 ), .B0(\CIC1Sin/d4_30 ), .A0(\CIC1Sin/d3_30 ), 
    .DI1(\CIC1Sin/d4_71_N_634_31 ), .DI0(\CIC1Sin/d4_71_N_634_30 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n10757 ), .F0(\CIC1Sin/d4_71_N_634_30 ), 
    .Q0(\CIC1Sin/d4_30 ), .F1(\CIC1Sin/d4_71_N_634_31 ), .Q1(\CIC1Sin/d4_31 ), 
    .FCO(\CIC1Sin/n10758 ));
  CIC1Sin_SLICE_426 \CIC1Sin/SLICE_426 ( .B1(\CIC1Sin/d4_29 ), 
    .A1(\CIC1Sin/d3_29 ), .B0(\CIC1Sin/d4_28 ), .A0(\CIC1Sin/d3_28 ), 
    .DI1(\CIC1Sin/d4_71_N_634_29 ), .DI0(\CIC1Sin/d4_71_N_634_28 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n10756 ), .F0(\CIC1Sin/d4_71_N_634_28 ), 
    .Q0(\CIC1Sin/d4_28 ), .F1(\CIC1Sin/d4_71_N_634_29 ), .Q1(\CIC1Sin/d4_29 ), 
    .FCO(\CIC1Sin/n10757 ));
  CIC1Sin_SLICE_427 \CIC1Sin/SLICE_427 ( .B1(\CIC1Sin/d4_27 ), 
    .A1(\CIC1Sin/d3_27 ), .B0(\CIC1Sin/d4_26 ), .A0(\CIC1Sin/d3_26 ), 
    .DI1(\CIC1Sin/d4_71_N_634_27 ), .DI0(\CIC1Sin/d4_71_N_634_26 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n10755 ), .F0(\CIC1Sin/d4_71_N_634_26 ), 
    .Q0(\CIC1Sin/d4_26 ), .F1(\CIC1Sin/d4_71_N_634_27 ), .Q1(\CIC1Sin/d4_27 ), 
    .FCO(\CIC1Sin/n10756 ));
  CIC1Sin_SLICE_428 \CIC1Sin/SLICE_428 ( .B1(\CIC1Sin/d4_25 ), 
    .A1(\CIC1Sin/d3_25 ), .B0(\CIC1Sin/d4_24 ), .A0(\CIC1Sin/d3_24 ), 
    .DI1(\CIC1Sin/d4_71_N_634_25 ), .DI0(\CIC1Sin/d4_71_N_634_24 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n10754 ), .F0(\CIC1Sin/d4_71_N_634_24 ), 
    .Q0(\CIC1Sin/d4_24 ), .F1(\CIC1Sin/d4_71_N_634_25 ), .Q1(\CIC1Sin/d4_25 ), 
    .FCO(\CIC1Sin/n10755 ));
  CIC1Sin_SLICE_429 \CIC1Sin/SLICE_429 ( .B1(\CIC1Sin/d4_23 ), 
    .A1(\CIC1Sin/d3_23 ), .B0(\CIC1Sin/d4_22 ), .A0(\CIC1Sin/d3_22 ), 
    .DI1(\CIC1Sin/d4_71_N_634_23 ), .DI0(\CIC1Sin/d4_71_N_634_22 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n10753 ), .F0(\CIC1Sin/d4_71_N_634_22 ), 
    .Q0(\CIC1Sin/d4_22 ), .F1(\CIC1Sin/d4_71_N_634_23 ), .Q1(\CIC1Sin/d4_23 ), 
    .FCO(\CIC1Sin/n10754 ));
  CIC1Sin_SLICE_430 \CIC1Sin/SLICE_430 ( .B1(\CIC1Sin/d4_21 ), 
    .A1(\CIC1Sin/d3_21 ), .B0(\CIC1Sin/d4_20 ), .A0(\CIC1Sin/d3_20 ), 
    .DI1(\CIC1Sin/d4_71_N_634_21 ), .DI0(\CIC1Sin/d4_71_N_634_20 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n10752 ), .F0(\CIC1Sin/d4_71_N_634_20 ), 
    .Q0(\CIC1Sin/d4_20 ), .F1(\CIC1Sin/d4_71_N_634_21 ), .Q1(\CIC1Sin/d4_21 ), 
    .FCO(\CIC1Sin/n10753 ));
  CIC1Sin_SLICE_431 \CIC1Sin/SLICE_431 ( .B1(\CIC1Sin/d4_19 ), 
    .A1(\CIC1Sin/d3_19 ), .B0(\CIC1Sin/d4_18 ), .A0(\CIC1Sin/d3_18 ), 
    .DI1(\CIC1Sin/d4_71_N_634_19 ), .DI0(\CIC1Sin/d4_71_N_634_18 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n10751 ), .F0(\CIC1Sin/d4_71_N_634_18 ), 
    .Q0(\CIC1Sin/d4_18 ), .F1(\CIC1Sin/d4_71_N_634_19 ), .Q1(\CIC1Sin/d4_19 ), 
    .FCO(\CIC1Sin/n10752 ));
  CIC1Sin_SLICE_432 \CIC1Sin/SLICE_432 ( .B1(\CIC1Sin/d4_17 ), 
    .A1(\CIC1Sin/d3_17 ), .B0(\CIC1Sin/d4_16 ), .A0(\CIC1Sin/d3_16 ), 
    .DI1(\CIC1Sin/d4_71_N_634_17 ), .DI0(\CIC1Sin/d4_71_N_634_16 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n10750 ), .F0(\CIC1Sin/d4_71_N_634_16 ), 
    .Q0(\CIC1Sin/d4_16 ), .F1(\CIC1Sin/d4_71_N_634_17 ), .Q1(\CIC1Sin/d4_17 ), 
    .FCO(\CIC1Sin/n10751 ));
  CIC1Sin_SLICE_433 \CIC1Sin/SLICE_433 ( .B1(\CIC1Sin/d4_15 ), 
    .A1(\CIC1Sin/d3_15 ), .B0(\CIC1Sin/d4_14 ), .A0(\CIC1Sin/d3_14 ), 
    .DI1(\CIC1Sin/d4_71_N_634_15 ), .DI0(\CIC1Sin/d4_71_N_634_14 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n10749 ), .F0(\CIC1Sin/d4_71_N_634_14 ), 
    .Q0(\CIC1Sin/d4_14 ), .F1(\CIC1Sin/d4_71_N_634_15 ), .Q1(\CIC1Sin/d4_15 ), 
    .FCO(\CIC1Sin/n10750 ));
  CIC1Sin_SLICE_434 \CIC1Sin/SLICE_434 ( .B1(\CIC1Sin/d4_13 ), 
    .A1(\CIC1Sin/d3_13 ), .B0(\CIC1Sin/d4_12 ), .A0(\CIC1Sin/d3_12 ), 
    .DI1(\CIC1Sin/d4_71_N_634_13 ), .DI0(\CIC1Sin/d4_71_N_634_12 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n10748 ), .F0(\CIC1Sin/d4_71_N_634_12 ), 
    .Q0(\CIC1Sin/d4_12 ), .F1(\CIC1Sin/d4_71_N_634_13 ), .Q1(\CIC1Sin/d4_13 ), 
    .FCO(\CIC1Sin/n10749 ));
  CIC1Sin_SLICE_435 \CIC1Sin/SLICE_435 ( .B1(\CIC1Sin/d4_11 ), 
    .A1(\CIC1Sin/d3_11 ), .B0(\CIC1Sin/d4_10 ), .A0(\CIC1Sin/d3_10 ), 
    .DI1(\CIC1Sin/d4_71_N_634_11 ), .DI0(\CIC1Sin/d4_71_N_634_10 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n10747 ), .F0(\CIC1Sin/d4_71_N_634_10 ), 
    .Q0(\CIC1Sin/d4_10 ), .F1(\CIC1Sin/d4_71_N_634_11 ), .Q1(\CIC1Sin/d4_11 ), 
    .FCO(\CIC1Sin/n10748 ));
  CIC1Sin_SLICE_436 \CIC1Sin/SLICE_436 ( .B1(\CIC1Sin/d4_9 ), 
    .A1(\CIC1Sin/d3_9 ), .B0(\CIC1Sin/d4_8 ), .A0(\CIC1Sin/d3_8 ), 
    .DI1(\CIC1Sin/d4_71_N_634_9 ), .DI0(\CIC1Sin/d4_71_N_634_8 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n10746 ), .F0(\CIC1Sin/d4_71_N_634_8 ), 
    .Q0(\CIC1Sin/d4_8 ), .F1(\CIC1Sin/d4_71_N_634_9 ), .Q1(\CIC1Sin/d4_9 ), 
    .FCO(\CIC1Sin/n10747 ));
  CIC1Sin_SLICE_437 \CIC1Sin/SLICE_437 ( .B1(\CIC1Sin/d4_7 ), 
    .A1(\CIC1Sin/d3_7 ), .B0(\CIC1Sin/d4_6 ), .A0(\CIC1Sin/d3_6 ), 
    .DI1(\CIC1Sin/d4_71_N_634_7 ), .DI0(\CIC1Sin/d4_71_N_634_6 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n10745 ), .F0(\CIC1Sin/d4_71_N_634_6 ), 
    .Q0(\CIC1Sin/d4_6 ), .F1(\CIC1Sin/d4_71_N_634_7 ), .Q1(\CIC1Sin/d4_7 ), 
    .FCO(\CIC1Sin/n10746 ));
  CIC1Sin_SLICE_438 \CIC1Sin/SLICE_438 ( .B1(\CIC1Sin/d4_5 ), 
    .A1(\CIC1Sin/d3_5 ), .B0(\CIC1Sin/d4_4 ), .A0(\CIC1Sin/d3_4 ), 
    .DI1(\CIC1Sin/d4_71_N_634_5 ), .DI0(\CIC1Sin/d4_71_N_634_4 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n10744 ), .F0(\CIC1Sin/d4_71_N_634_4 ), 
    .Q0(\CIC1Sin/d4_4 ), .F1(\CIC1Sin/d4_71_N_634_5 ), .Q1(\CIC1Sin/d4_5 ), 
    .FCO(\CIC1Sin/n10745 ));
  CIC1Sin_SLICE_439 \CIC1Sin/SLICE_439 ( .B1(\CIC1Sin/d4_3 ), 
    .A1(\CIC1Sin/d3_3 ), .B0(\CIC1Sin/d4_2 ), .A0(\CIC1Sin/d3_2 ), 
    .DI1(\CIC1Sin/d4_71_N_634_3 ), .DI0(\CIC1Sin/d4_71_N_634_2 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n10743 ), .F0(\CIC1Sin/d4_71_N_634_2 ), 
    .Q0(\CIC1Sin/d4_2 ), .F1(\CIC1Sin/d4_71_N_634_3 ), .Q1(\CIC1Sin/d4_3 ), 
    .FCO(\CIC1Sin/n10744 ));
  CIC1Sin_SLICE_440 \CIC1Sin/SLICE_440 ( .B1(\CIC1Sin/d4_1 ), 
    .A1(\CIC1Sin/d3_1 ), .B0(\CIC1Sin/d4_0 ), .A0(\CIC1Sin/d3_0 ), 
    .DI1(\CIC1Sin/d4_71_N_634_1 ), .CLK(osc_clk), .F1(\CIC1Sin/d4_71_N_634_1 ), 
    .Q1(\CIC1Sin/d4_1 ), .FCO(\CIC1Sin/n10743 ));
  CIC1Sin_SLICE_441 \CIC1Sin/SLICE_441 ( .FCI(\CIC1Sin/n10741 ), 
    .F0(\CIC1Sin/n4600 ));
  CIC1Sin_SLICE_442 \CIC1Sin/SLICE_442 ( .B1(\CIC1Sin/d3_35 ), 
    .A1(\CIC1Sin/d2_35 ), .B0(\CIC1Sin/d3_34 ), .A0(\CIC1Sin/d2_34 ), 
    .DI1(\CIC1Sin/d3_71_N_562_35 ), .DI0(\CIC1Sin/d3_71_N_562_34 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n10740 ), .F0(\CIC1Sin/d3_71_N_562_34 ), 
    .Q0(\CIC1Sin/d3_34 ), .F1(\CIC1Sin/d3_71_N_562_35 ), .Q1(\CIC1Sin/d3_35 ), 
    .FCO(\CIC1Sin/n10741 ));
  CIC1Sin_SLICE_443 \CIC1Sin/SLICE_443 ( .B1(\CIC1Sin/d3_33 ), 
    .A1(\CIC1Sin/d2_33 ), .B0(\CIC1Sin/d3_32 ), .A0(\CIC1Sin/d2_32 ), 
    .DI1(\CIC1Sin/d3_71_N_562_33 ), .DI0(\CIC1Sin/d3_71_N_562_32 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n10739 ), .F0(\CIC1Sin/d3_71_N_562_32 ), 
    .Q0(\CIC1Sin/d3_32 ), .F1(\CIC1Sin/d3_71_N_562_33 ), .Q1(\CIC1Sin/d3_33 ), 
    .FCO(\CIC1Sin/n10740 ));
  CIC1Sin_SLICE_444 \CIC1Sin/SLICE_444 ( .B1(\CIC1Sin/d3_31 ), 
    .A1(\CIC1Sin/d2_31 ), .B0(\CIC1Sin/d3_30 ), .A0(\CIC1Sin/d2_30 ), 
    .DI1(\CIC1Sin/d3_71_N_562_31 ), .DI0(\CIC1Sin/d3_71_N_562_30 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n10738 ), .F0(\CIC1Sin/d3_71_N_562_30 ), 
    .Q0(\CIC1Sin/d3_30 ), .F1(\CIC1Sin/d3_71_N_562_31 ), .Q1(\CIC1Sin/d3_31 ), 
    .FCO(\CIC1Sin/n10739 ));
  CIC1Sin_SLICE_445 \CIC1Sin/SLICE_445 ( .B1(\CIC1Sin/d3_29 ), 
    .A1(\CIC1Sin/d2_29 ), .B0(\CIC1Sin/d3_28 ), .A0(\CIC1Sin/d2_28 ), 
    .DI1(\CIC1Sin/d3_71_N_562_29 ), .DI0(\CIC1Sin/d3_71_N_562_28 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n10737 ), .F0(\CIC1Sin/d3_71_N_562_28 ), 
    .Q0(\CIC1Sin/d3_28 ), .F1(\CIC1Sin/d3_71_N_562_29 ), .Q1(\CIC1Sin/d3_29 ), 
    .FCO(\CIC1Sin/n10738 ));
  CIC1Sin_SLICE_446 \CIC1Sin/SLICE_446 ( .B1(\CIC1Sin/d3_27 ), 
    .A1(\CIC1Sin/d2_27 ), .B0(\CIC1Sin/d3_26 ), .A0(\CIC1Sin/d2_26 ), 
    .DI1(\CIC1Sin/d3_71_N_562_27 ), .DI0(\CIC1Sin/d3_71_N_562_26 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n10736 ), .F0(\CIC1Sin/d3_71_N_562_26 ), 
    .Q0(\CIC1Sin/d3_26 ), .F1(\CIC1Sin/d3_71_N_562_27 ), .Q1(\CIC1Sin/d3_27 ), 
    .FCO(\CIC1Sin/n10737 ));
  CIC1Sin_SLICE_447 \CIC1Sin/SLICE_447 ( .B1(\CIC1Sin/d3_25 ), 
    .A1(\CIC1Sin/d2_25 ), .B0(\CIC1Sin/d3_24 ), .A0(\CIC1Sin/d2_24 ), 
    .DI1(\CIC1Sin/d3_71_N_562_25 ), .DI0(\CIC1Sin/d3_71_N_562_24 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n10735 ), .F0(\CIC1Sin/d3_71_N_562_24 ), 
    .Q0(\CIC1Sin/d3_24 ), .F1(\CIC1Sin/d3_71_N_562_25 ), .Q1(\CIC1Sin/d3_25 ), 
    .FCO(\CIC1Sin/n10736 ));
  CIC1Sin_SLICE_448 \CIC1Sin/SLICE_448 ( .B1(\CIC1Sin/d3_23 ), 
    .A1(\CIC1Sin/d2_23 ), .B0(\CIC1Sin/d3_22 ), .A0(\CIC1Sin/d2_22 ), 
    .DI1(\CIC1Sin/d3_71_N_562_23 ), .DI0(\CIC1Sin/d3_71_N_562_22 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n10734 ), .F0(\CIC1Sin/d3_71_N_562_22 ), 
    .Q0(\CIC1Sin/d3_22 ), .F1(\CIC1Sin/d3_71_N_562_23 ), .Q1(\CIC1Sin/d3_23 ), 
    .FCO(\CIC1Sin/n10735 ));
  CIC1Sin_SLICE_449 \CIC1Sin/SLICE_449 ( .B1(\CIC1Sin/d3_21 ), 
    .A1(\CIC1Sin/d2_21 ), .B0(\CIC1Sin/d3_20 ), .A0(\CIC1Sin/d2_20 ), 
    .DI1(\CIC1Sin/d3_71_N_562_21 ), .DI0(\CIC1Sin/d3_71_N_562_20 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n10733 ), .F0(\CIC1Sin/d3_71_N_562_20 ), 
    .Q0(\CIC1Sin/d3_20 ), .F1(\CIC1Sin/d3_71_N_562_21 ), .Q1(\CIC1Sin/d3_21 ), 
    .FCO(\CIC1Sin/n10734 ));
  CIC1Sin_SLICE_450 \CIC1Sin/SLICE_450 ( .B1(\CIC1Sin/d3_19 ), 
    .A1(\CIC1Sin/d2_19 ), .B0(\CIC1Sin/d3_18 ), .A0(\CIC1Sin/d2_18 ), 
    .DI1(\CIC1Sin/d3_71_N_562_19 ), .DI0(\CIC1Sin/d3_71_N_562_18 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n10732 ), .F0(\CIC1Sin/d3_71_N_562_18 ), 
    .Q0(\CIC1Sin/d3_18 ), .F1(\CIC1Sin/d3_71_N_562_19 ), .Q1(\CIC1Sin/d3_19 ), 
    .FCO(\CIC1Sin/n10733 ));
  CIC1Sin_SLICE_451 \CIC1Sin/SLICE_451 ( .B1(\CIC1Sin/d3_17 ), 
    .A1(\CIC1Sin/d2_17 ), .B0(\CIC1Sin/d3_16 ), .A0(\CIC1Sin/d2_16 ), 
    .DI1(\CIC1Sin/d3_71_N_562_17 ), .DI0(\CIC1Sin/d3_71_N_562_16 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n10731 ), .F0(\CIC1Sin/d3_71_N_562_16 ), 
    .Q0(\CIC1Sin/d3_16 ), .F1(\CIC1Sin/d3_71_N_562_17 ), .Q1(\CIC1Sin/d3_17 ), 
    .FCO(\CIC1Sin/n10732 ));
  CIC1Sin_SLICE_452 \CIC1Sin/SLICE_452 ( .B1(\CIC1Sin/d3_15 ), 
    .A1(\CIC1Sin/d2_15 ), .B0(\CIC1Sin/d3_14 ), .A0(\CIC1Sin/d2_14 ), 
    .DI1(\CIC1Sin/d3_71_N_562_15 ), .DI0(\CIC1Sin/d3_71_N_562_14 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n10730 ), .F0(\CIC1Sin/d3_71_N_562_14 ), 
    .Q0(\CIC1Sin/d3_14 ), .F1(\CIC1Sin/d3_71_N_562_15 ), .Q1(\CIC1Sin/d3_15 ), 
    .FCO(\CIC1Sin/n10731 ));
  CIC1Sin_SLICE_453 \CIC1Sin/SLICE_453 ( .B1(\CIC1Sin/d3_13 ), 
    .A1(\CIC1Sin/d2_13 ), .B0(\CIC1Sin/d3_12 ), .A0(\CIC1Sin/d2_12 ), 
    .DI1(\CIC1Sin/d3_71_N_562_13 ), .DI0(\CIC1Sin/d3_71_N_562_12 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n10729 ), .F0(\CIC1Sin/d3_71_N_562_12 ), 
    .Q0(\CIC1Sin/d3_12 ), .F1(\CIC1Sin/d3_71_N_562_13 ), .Q1(\CIC1Sin/d3_13 ), 
    .FCO(\CIC1Sin/n10730 ));
  CIC1Sin_SLICE_454 \CIC1Sin/SLICE_454 ( .B1(\CIC1Sin/d3_11 ), 
    .A1(\CIC1Sin/d2_11 ), .B0(\CIC1Sin/d3_10 ), .A0(\CIC1Sin/d2_10 ), 
    .DI1(\CIC1Sin/d3_71_N_562_11 ), .DI0(\CIC1Sin/d3_71_N_562_10 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n10728 ), .F0(\CIC1Sin/d3_71_N_562_10 ), 
    .Q0(\CIC1Sin/d3_10 ), .F1(\CIC1Sin/d3_71_N_562_11 ), .Q1(\CIC1Sin/d3_11 ), 
    .FCO(\CIC1Sin/n10729 ));
  CIC1Sin_SLICE_455 \CIC1Sin/SLICE_455 ( .B1(\CIC1Sin/d3_9 ), 
    .A1(\CIC1Sin/d2_9 ), .B0(\CIC1Sin/d3_8 ), .A0(\CIC1Sin/d2_8 ), 
    .DI1(\CIC1Sin/d3_71_N_562_9 ), .DI0(\CIC1Sin/d3_71_N_562_8 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n10727 ), .F0(\CIC1Sin/d3_71_N_562_8 ), 
    .Q0(\CIC1Sin/d3_8 ), .F1(\CIC1Sin/d3_71_N_562_9 ), .Q1(\CIC1Sin/d3_9 ), 
    .FCO(\CIC1Sin/n10728 ));
  CIC1Sin_SLICE_456 \CIC1Sin/SLICE_456 ( .B1(\CIC1Sin/d3_7 ), 
    .A1(\CIC1Sin/d2_7 ), .B0(\CIC1Sin/d3_6 ), .A0(\CIC1Sin/d2_6 ), 
    .DI1(\CIC1Sin/d3_71_N_562_7 ), .DI0(\CIC1Sin/d3_71_N_562_6 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n10726 ), .F0(\CIC1Sin/d3_71_N_562_6 ), 
    .Q0(\CIC1Sin/d3_6 ), .F1(\CIC1Sin/d3_71_N_562_7 ), .Q1(\CIC1Sin/d3_7 ), 
    .FCO(\CIC1Sin/n10727 ));
  CIC1Sin_SLICE_457 \CIC1Sin/SLICE_457 ( .B1(\CIC1Sin/d3_5 ), 
    .A1(\CIC1Sin/d2_5 ), .B0(\CIC1Sin/d3_4 ), .A0(\CIC1Sin/d2_4 ), 
    .DI1(\CIC1Sin/d3_71_N_562_5 ), .DI0(\CIC1Sin/d3_71_N_562_4 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n10725 ), .F0(\CIC1Sin/d3_71_N_562_4 ), 
    .Q0(\CIC1Sin/d3_4 ), .F1(\CIC1Sin/d3_71_N_562_5 ), .Q1(\CIC1Sin/d3_5 ), 
    .FCO(\CIC1Sin/n10726 ));
  CIC1Sin_SLICE_458 \CIC1Sin/SLICE_458 ( .B1(\CIC1Sin/d3_3 ), 
    .A1(\CIC1Sin/d2_3 ), .B0(\CIC1Sin/d3_2 ), .A0(\CIC1Sin/d2_2 ), 
    .DI1(\CIC1Sin/d3_71_N_562_3 ), .DI0(\CIC1Sin/d3_71_N_562_2 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n10724 ), .F0(\CIC1Sin/d3_71_N_562_2 ), 
    .Q0(\CIC1Sin/d3_2 ), .F1(\CIC1Sin/d3_71_N_562_3 ), .Q1(\CIC1Sin/d3_3 ), 
    .FCO(\CIC1Sin/n10725 ));
  CIC1Sin_SLICE_459 \CIC1Sin/SLICE_459 ( .B1(\CIC1Sin/d3_1 ), 
    .A1(\CIC1Sin/d2_1 ), .B0(\CIC1Sin/d3_0 ), .A0(\CIC1Sin/d2_0 ), 
    .DI1(\CIC1Sin/d3_71_N_562_1 ), .CLK(osc_clk), .F1(\CIC1Sin/d3_71_N_562_1 ), 
    .Q1(\CIC1Sin/d3_1 ), .FCO(\CIC1Sin/n10724 ));
  CIC1Sin_SLICE_460 \CIC1Sin/SLICE_460 ( .FCI(\CIC1Sin/n10722 ), 
    .F0(\CIC1Sin/n4448 ));
  CIC1Sin_SLICE_461 \CIC1Sin/SLICE_461 ( .B1(\CIC1Sin/d2_35 ), 
    .A1(\CIC1Sin/d1_35 ), .B0(\CIC1Sin/d2_34 ), .A0(\CIC1Sin/d1_34 ), 
    .DI1(\CIC1Sin/d2_71_N_490_35 ), .DI0(\CIC1Sin/d2_71_N_490_34 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n10721 ), .F0(\CIC1Sin/d2_71_N_490_34 ), 
    .Q0(\CIC1Sin/d2_34 ), .F1(\CIC1Sin/d2_71_N_490_35 ), .Q1(\CIC1Sin/d2_35 ), 
    .FCO(\CIC1Sin/n10722 ));
  CIC1Sin_SLICE_462 \CIC1Sin/SLICE_462 ( .B1(\CIC1Sin/d2_33 ), 
    .A1(\CIC1Sin/d1_33 ), .B0(\CIC1Sin/d2_32 ), .A0(\CIC1Sin/d1_32 ), 
    .DI1(\CIC1Sin/d2_71_N_490_33 ), .DI0(\CIC1Sin/d2_71_N_490_32 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n10720 ), .F0(\CIC1Sin/d2_71_N_490_32 ), 
    .Q0(\CIC1Sin/d2_32 ), .F1(\CIC1Sin/d2_71_N_490_33 ), .Q1(\CIC1Sin/d2_33 ), 
    .FCO(\CIC1Sin/n10721 ));
  CIC1Sin_SLICE_463 \CIC1Sin/SLICE_463 ( .B1(\CIC1Sin/d2_31 ), 
    .A1(\CIC1Sin/d1_31 ), .B0(\CIC1Sin/d2_30 ), .A0(\CIC1Sin/d1_30 ), 
    .DI1(\CIC1Sin/d2_71_N_490_31 ), .DI0(\CIC1Sin/d2_71_N_490_30 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n10719 ), .F0(\CIC1Sin/d2_71_N_490_30 ), 
    .Q0(\CIC1Sin/d2_30 ), .F1(\CIC1Sin/d2_71_N_490_31 ), .Q1(\CIC1Sin/d2_31 ), 
    .FCO(\CIC1Sin/n10720 ));
  CIC1Sin_SLICE_464 \CIC1Sin/SLICE_464 ( .B1(\CIC1Sin/d2_29 ), 
    .A1(\CIC1Sin/d1_29 ), .B0(\CIC1Sin/d2_28 ), .A0(\CIC1Sin/d1_28 ), 
    .DI1(\CIC1Sin/d2_71_N_490_29 ), .DI0(\CIC1Sin/d2_71_N_490_28 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n10718 ), .F0(\CIC1Sin/d2_71_N_490_28 ), 
    .Q0(\CIC1Sin/d2_28 ), .F1(\CIC1Sin/d2_71_N_490_29 ), .Q1(\CIC1Sin/d2_29 ), 
    .FCO(\CIC1Sin/n10719 ));
  CIC1Sin_SLICE_465 \CIC1Sin/SLICE_465 ( .B1(\CIC1Sin/d2_27 ), 
    .A1(\CIC1Sin/d1_27 ), .B0(\CIC1Sin/d2_26 ), .A0(\CIC1Sin/d1_26 ), 
    .DI1(\CIC1Sin/d2_71_N_490_27 ), .DI0(\CIC1Sin/d2_71_N_490_26 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n10717 ), .F0(\CIC1Sin/d2_71_N_490_26 ), 
    .Q0(\CIC1Sin/d2_26 ), .F1(\CIC1Sin/d2_71_N_490_27 ), .Q1(\CIC1Sin/d2_27 ), 
    .FCO(\CIC1Sin/n10718 ));
  CIC1Sin_SLICE_466 \CIC1Sin/SLICE_466 ( .B1(\CIC1Sin/d2_25 ), 
    .A1(\CIC1Sin/d1_25 ), .B0(\CIC1Sin/d2_24 ), .A0(\CIC1Sin/d1_24 ), 
    .DI1(\CIC1Sin/d2_71_N_490_25 ), .DI0(\CIC1Sin/d2_71_N_490_24 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n10716 ), .F0(\CIC1Sin/d2_71_N_490_24 ), 
    .Q0(\CIC1Sin/d2_24 ), .F1(\CIC1Sin/d2_71_N_490_25 ), .Q1(\CIC1Sin/d2_25 ), 
    .FCO(\CIC1Sin/n10717 ));
  CIC1Sin_SLICE_467 \CIC1Sin/SLICE_467 ( .B1(\CIC1Sin/d2_23 ), 
    .A1(\CIC1Sin/d1_23 ), .B0(\CIC1Sin/d2_22 ), .A0(\CIC1Sin/d1_22 ), 
    .DI1(\CIC1Sin/d2_71_N_490_23 ), .DI0(\CIC1Sin/d2_71_N_490_22 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n10715 ), .F0(\CIC1Sin/d2_71_N_490_22 ), 
    .Q0(\CIC1Sin/d2_22 ), .F1(\CIC1Sin/d2_71_N_490_23 ), .Q1(\CIC1Sin/d2_23 ), 
    .FCO(\CIC1Sin/n10716 ));
  CIC1Sin_SLICE_468 \CIC1Sin/SLICE_468 ( .B1(\CIC1Sin/d2_21 ), 
    .A1(\CIC1Sin/d1_21 ), .B0(\CIC1Sin/d2_20 ), .A0(\CIC1Sin/d1_20 ), 
    .DI1(\CIC1Sin/d2_71_N_490_21 ), .DI0(\CIC1Sin/d2_71_N_490_20 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n10714 ), .F0(\CIC1Sin/d2_71_N_490_20 ), 
    .Q0(\CIC1Sin/d2_20 ), .F1(\CIC1Sin/d2_71_N_490_21 ), .Q1(\CIC1Sin/d2_21 ), 
    .FCO(\CIC1Sin/n10715 ));
  CIC1Sin_SLICE_469 \CIC1Sin/SLICE_469 ( .B1(\CIC1Sin/d2_19 ), 
    .A1(\CIC1Sin/d1_19 ), .B0(\CIC1Sin/d2_18 ), .A0(\CIC1Sin/d1_18 ), 
    .DI1(\CIC1Sin/d2_71_N_490_19 ), .DI0(\CIC1Sin/d2_71_N_490_18 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n10713 ), .F0(\CIC1Sin/d2_71_N_490_18 ), 
    .Q0(\CIC1Sin/d2_18 ), .F1(\CIC1Sin/d2_71_N_490_19 ), .Q1(\CIC1Sin/d2_19 ), 
    .FCO(\CIC1Sin/n10714 ));
  CIC1Sin_SLICE_470 \CIC1Sin/SLICE_470 ( .B1(\CIC1Sin/d2_17 ), 
    .A1(\CIC1Sin/d1_17 ), .B0(\CIC1Sin/d2_16 ), .A0(\CIC1Sin/d1_16 ), 
    .DI1(\CIC1Sin/d2_71_N_490_17 ), .DI0(\CIC1Sin/d2_71_N_490_16 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n10712 ), .F0(\CIC1Sin/d2_71_N_490_16 ), 
    .Q0(\CIC1Sin/d2_16 ), .F1(\CIC1Sin/d2_71_N_490_17 ), .Q1(\CIC1Sin/d2_17 ), 
    .FCO(\CIC1Sin/n10713 ));
  CIC1Sin_SLICE_471 \CIC1Sin/SLICE_471 ( .B1(\CIC1Sin/d2_15 ), 
    .A1(\CIC1Sin/d1_15 ), .B0(\CIC1Sin/d2_14 ), .A0(\CIC1Sin/d1_14 ), 
    .DI1(\CIC1Sin/d2_71_N_490_15 ), .DI0(\CIC1Sin/d2_71_N_490_14 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n10711 ), .F0(\CIC1Sin/d2_71_N_490_14 ), 
    .Q0(\CIC1Sin/d2_14 ), .F1(\CIC1Sin/d2_71_N_490_15 ), .Q1(\CIC1Sin/d2_15 ), 
    .FCO(\CIC1Sin/n10712 ));
  CIC1Sin_SLICE_472 \CIC1Sin/SLICE_472 ( .B1(\CIC1Sin/d2_13 ), 
    .A1(\CIC1Sin/d1_13 ), .B0(\CIC1Sin/d2_12 ), .A0(\CIC1Sin/d1_12 ), 
    .DI1(\CIC1Sin/d2_71_N_490_13 ), .DI0(\CIC1Sin/d2_71_N_490_12 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n10710 ), .F0(\CIC1Sin/d2_71_N_490_12 ), 
    .Q0(\CIC1Sin/d2_12 ), .F1(\CIC1Sin/d2_71_N_490_13 ), .Q1(\CIC1Sin/d2_13 ), 
    .FCO(\CIC1Sin/n10711 ));
  CIC1Sin_SLICE_473 \CIC1Sin/SLICE_473 ( .B1(\CIC1Sin/d2_11 ), 
    .A1(\CIC1Sin/d1_11 ), .B0(\CIC1Sin/d2_10 ), .A0(\CIC1Sin/d1_10 ), 
    .DI1(\CIC1Sin/d2_71_N_490_11 ), .DI0(\CIC1Sin/d2_71_N_490_10 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n10709 ), .F0(\CIC1Sin/d2_71_N_490_10 ), 
    .Q0(\CIC1Sin/d2_10 ), .F1(\CIC1Sin/d2_71_N_490_11 ), .Q1(\CIC1Sin/d2_11 ), 
    .FCO(\CIC1Sin/n10710 ));
  CIC1Sin_SLICE_474 \CIC1Sin/SLICE_474 ( .B1(\CIC1Sin/d2_9 ), 
    .A1(\CIC1Sin/d1_9 ), .B0(\CIC1Sin/d2_8 ), .A0(\CIC1Sin/d1_8 ), 
    .DI1(\CIC1Sin/d2_71_N_490_9 ), .DI0(\CIC1Sin/d2_71_N_490_8 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n10708 ), .F0(\CIC1Sin/d2_71_N_490_8 ), 
    .Q0(\CIC1Sin/d2_8 ), .F1(\CIC1Sin/d2_71_N_490_9 ), .Q1(\CIC1Sin/d2_9 ), 
    .FCO(\CIC1Sin/n10709 ));
  CIC1Sin_SLICE_475 \CIC1Sin/SLICE_475 ( .B1(\CIC1Sin/d2_7 ), 
    .A1(\CIC1Sin/d1_7 ), .B0(\CIC1Sin/d2_6 ), .A0(\CIC1Sin/d1_6 ), 
    .DI1(\CIC1Sin/d2_71_N_490_7 ), .DI0(\CIC1Sin/d2_71_N_490_6 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n10707 ), .F0(\CIC1Sin/d2_71_N_490_6 ), 
    .Q0(\CIC1Sin/d2_6 ), .F1(\CIC1Sin/d2_71_N_490_7 ), .Q1(\CIC1Sin/d2_7 ), 
    .FCO(\CIC1Sin/n10708 ));
  CIC1Sin_SLICE_476 \CIC1Sin/SLICE_476 ( .B1(\CIC1Sin/d2_5 ), 
    .A1(\CIC1Sin/d1_5 ), .B0(\CIC1Sin/d2_4 ), .A0(\CIC1Sin/d1_4 ), 
    .DI1(\CIC1Sin/d2_71_N_490_5 ), .DI0(\CIC1Sin/d2_71_N_490_4 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n10706 ), .F0(\CIC1Sin/d2_71_N_490_4 ), 
    .Q0(\CIC1Sin/d2_4 ), .F1(\CIC1Sin/d2_71_N_490_5 ), .Q1(\CIC1Sin/d2_5 ), 
    .FCO(\CIC1Sin/n10707 ));
  CIC1Sin_SLICE_477 \CIC1Sin/SLICE_477 ( .B1(\CIC1Sin/d2_3 ), 
    .A1(\CIC1Sin/d1_3 ), .B0(\CIC1Sin/d2_2 ), .A0(\CIC1Sin/d1_2 ), 
    .DI1(\CIC1Sin/d2_71_N_490_3 ), .DI0(\CIC1Sin/d2_71_N_490_2 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n10705 ), .F0(\CIC1Sin/d2_71_N_490_2 ), 
    .Q0(\CIC1Sin/d2_2 ), .F1(\CIC1Sin/d2_71_N_490_3 ), .Q1(\CIC1Sin/d2_3 ), 
    .FCO(\CIC1Sin/n10706 ));
  CIC1Sin_SLICE_478 \CIC1Sin/SLICE_478 ( .B1(\CIC1Sin/d2_1 ), 
    .A1(\CIC1Sin/d1_1 ), .B0(\CIC1Sin/d2_0 ), .A0(\CIC1Sin/d1_0 ), 
    .DI1(\CIC1Sin/d2_71_N_490_1 ), .CLK(osc_clk), .F1(\CIC1Sin/d2_71_N_490_1 ), 
    .Q1(\CIC1Sin/d2_1 ), .FCO(\CIC1Sin/n10705 ));
  CIC1Sin_SLICE_479 \CIC1Sin/SLICE_479 ( .FCI(\CIC1Sin/n10660 ), 
    .F0(\CIC1Sin/n4296 ));
  CIC1Sin_SLICE_480 \CIC1Sin/SLICE_480 ( .B1(\CIC1Sin/d1_35 ), 
    .A1(MixerOutSin_11), .B0(\CIC1Sin/d1_34 ), .A0(MixerOutSin_11), 
    .DI1(\CIC1Sin/d1_71_N_418_35 ), .DI0(\CIC1Sin/d1_71_N_418_34 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n10659 ), .F0(\CIC1Sin/d1_71_N_418_34 ), 
    .Q0(\CIC1Sin/d1_34 ), .F1(\CIC1Sin/d1_71_N_418_35 ), .Q1(\CIC1Sin/d1_35 ), 
    .FCO(\CIC1Sin/n10660 ));
  CIC1Sin_SLICE_481 \CIC1Sin/SLICE_481 ( .B1(\CIC1Sin/d1_33 ), 
    .A1(MixerOutSin_11), .B0(\CIC1Sin/d1_32 ), .A0(MixerOutSin_11), 
    .DI1(\CIC1Sin/d1_71_N_418_33 ), .DI0(\CIC1Sin/d1_71_N_418_32 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n10658 ), .F0(\CIC1Sin/d1_71_N_418_32 ), 
    .Q0(\CIC1Sin/d1_32 ), .F1(\CIC1Sin/d1_71_N_418_33 ), .Q1(\CIC1Sin/d1_33 ), 
    .FCO(\CIC1Sin/n10659 ));
  CIC1Sin_SLICE_482 \CIC1Sin/SLICE_482 ( .B1(\CIC1Sin/d1_31 ), 
    .A1(MixerOutSin_11), .B0(\CIC1Sin/d1_30 ), .A0(MixerOutSin_11), 
    .DI1(\CIC1Sin/d1_71_N_418_31 ), .DI0(\CIC1Sin/d1_71_N_418_30 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n10657 ), .F0(\CIC1Sin/d1_71_N_418_30 ), 
    .Q0(\CIC1Sin/d1_30 ), .F1(\CIC1Sin/d1_71_N_418_31 ), .Q1(\CIC1Sin/d1_31 ), 
    .FCO(\CIC1Sin/n10658 ));
  CIC1Sin_SLICE_483 \CIC1Sin/SLICE_483 ( .B1(\CIC1Sin/d1_29 ), 
    .A1(MixerOutSin_11), .B0(\CIC1Sin/d1_28 ), .A0(MixerOutSin_11), 
    .DI1(\CIC1Sin/d1_71_N_418_29 ), .DI0(\CIC1Sin/d1_71_N_418_28 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n10656 ), .F0(\CIC1Sin/d1_71_N_418_28 ), 
    .Q0(\CIC1Sin/d1_28 ), .F1(\CIC1Sin/d1_71_N_418_29 ), .Q1(\CIC1Sin/d1_29 ), 
    .FCO(\CIC1Sin/n10657 ));
  CIC1Sin_SLICE_484 \CIC1Sin/SLICE_484 ( .B1(\CIC1Sin/d1_27 ), 
    .A1(MixerOutSin_11), .B0(\CIC1Sin/d1_26 ), .A0(MixerOutSin_11), 
    .DI1(\CIC1Sin/d1_71_N_418_27 ), .DI0(\CIC1Sin/d1_71_N_418_26 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n10655 ), .F0(\CIC1Sin/d1_71_N_418_26 ), 
    .Q0(\CIC1Sin/d1_26 ), .F1(\CIC1Sin/d1_71_N_418_27 ), .Q1(\CIC1Sin/d1_27 ), 
    .FCO(\CIC1Sin/n10656 ));
  CIC1Sin_SLICE_485 \CIC1Sin/SLICE_485 ( .B1(\CIC1Sin/d1_25 ), 
    .A1(MixerOutSin_11), .B0(\CIC1Sin/d1_24 ), .A0(MixerOutSin_11), 
    .DI1(\CIC1Sin/d1_71_N_418_25 ), .DI0(\CIC1Sin/d1_71_N_418_24 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n10654 ), .F0(\CIC1Sin/d1_71_N_418_24 ), 
    .Q0(\CIC1Sin/d1_24 ), .F1(\CIC1Sin/d1_71_N_418_25 ), .Q1(\CIC1Sin/d1_25 ), 
    .FCO(\CIC1Sin/n10655 ));
  CIC1Sin_SLICE_486 \CIC1Sin/SLICE_486 ( .B1(\CIC1Sin/d1_23 ), 
    .A1(MixerOutSin_11), .B0(\CIC1Sin/d1_22 ), .A0(MixerOutSin_11), 
    .DI1(\CIC1Sin/d1_71_N_418_23 ), .DI0(\CIC1Sin/d1_71_N_418_22 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n10653 ), .F0(\CIC1Sin/d1_71_N_418_22 ), 
    .Q0(\CIC1Sin/d1_22 ), .F1(\CIC1Sin/d1_71_N_418_23 ), .Q1(\CIC1Sin/d1_23 ), 
    .FCO(\CIC1Sin/n10654 ));
  CIC1Sin_SLICE_487 \CIC1Sin/SLICE_487 ( .B1(\CIC1Sin/d1_21 ), 
    .A1(MixerOutSin_11), .B0(\CIC1Sin/d1_20 ), .A0(MixerOutSin_11), 
    .DI1(\CIC1Sin/d1_71_N_418_21 ), .DI0(\CIC1Sin/d1_71_N_418_20 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n10652 ), .F0(\CIC1Sin/d1_71_N_418_20 ), 
    .Q0(\CIC1Sin/d1_20 ), .F1(\CIC1Sin/d1_71_N_418_21 ), .Q1(\CIC1Sin/d1_21 ), 
    .FCO(\CIC1Sin/n10653 ));
  CIC1Sin_SLICE_488 \CIC1Sin/SLICE_488 ( .B1(\CIC1Sin/d1_19 ), 
    .A1(MixerOutSin_11), .B0(\CIC1Sin/d1_18 ), .A0(MixerOutSin_11), 
    .DI1(\CIC1Sin/d1_71_N_418_19 ), .DI0(\CIC1Sin/d1_71_N_418_18 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n10651 ), .F0(\CIC1Sin/d1_71_N_418_18 ), 
    .Q0(\CIC1Sin/d1_18 ), .F1(\CIC1Sin/d1_71_N_418_19 ), .Q1(\CIC1Sin/d1_19 ), 
    .FCO(\CIC1Sin/n10652 ));
  CIC1Sin_SLICE_489 \CIC1Sin/SLICE_489 ( .B1(\CIC1Sin/d1_17 ), 
    .A1(MixerOutSin_11), .B0(\CIC1Sin/d1_16 ), .A0(MixerOutSin_11), 
    .DI1(\CIC1Sin/d1_71_N_418_17 ), .DI0(\CIC1Sin/d1_71_N_418_16 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n10650 ), .F0(\CIC1Sin/d1_71_N_418_16 ), 
    .Q0(\CIC1Sin/d1_16 ), .F1(\CIC1Sin/d1_71_N_418_17 ), .Q1(\CIC1Sin/d1_17 ), 
    .FCO(\CIC1Sin/n10651 ));
  CIC1Sin_SLICE_490 \CIC1Sin/SLICE_490 ( .B1(\CIC1Sin/d1_15 ), 
    .A1(MixerOutSin_11), .B0(\CIC1Sin/d1_14 ), .A0(MixerOutSin_11), 
    .DI1(\CIC1Sin/d1_71_N_418_15 ), .DI0(\CIC1Sin/d1_71_N_418_14 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n10649 ), .F0(\CIC1Sin/d1_71_N_418_14 ), 
    .Q0(\CIC1Sin/d1_14 ), .F1(\CIC1Sin/d1_71_N_418_15 ), .Q1(\CIC1Sin/d1_15 ), 
    .FCO(\CIC1Sin/n10650 ));
  CIC1Sin_SLICE_491 \CIC1Sin/SLICE_491 ( .B1(\CIC1Sin/d1_13 ), 
    .A1(MixerOutSin_11), .B0(\CIC1Sin/d1_12 ), .A0(MixerOutSin_11), 
    .DI1(\CIC1Sin/d1_71_N_418_13 ), .DI0(\CIC1Sin/d1_71_N_418_12 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n10648 ), .F0(\CIC1Sin/d1_71_N_418_12 ), 
    .Q0(\CIC1Sin/d1_12 ), .F1(\CIC1Sin/d1_71_N_418_13 ), .Q1(\CIC1Sin/d1_13 ), 
    .FCO(\CIC1Sin/n10649 ));
  CIC1Sin_SLICE_492 \CIC1Sin/SLICE_492 ( .B1(\CIC1Sin/d1_11 ), 
    .A1(MixerOutSin_11), .B0(\CIC1Sin/d1_10 ), .A0(MixerOutSin_10), 
    .DI1(\CIC1Sin/d1_71_N_418_11 ), .DI0(\CIC1Sin/d1_71_N_418_10 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n10647 ), .F0(\CIC1Sin/d1_71_N_418_10 ), 
    .Q0(\CIC1Sin/d1_10 ), .F1(\CIC1Sin/d1_71_N_418_11 ), .Q1(\CIC1Sin/d1_11 ), 
    .FCO(\CIC1Sin/n10648 ));
  CIC1Sin_SLICE_493 \CIC1Sin/SLICE_493 ( .B1(\CIC1Sin/d1_9 ), 
    .A1(MixerOutSin_9), .B0(\CIC1Sin/d1_8 ), .A0(MixerOutSin_8), 
    .DI1(\CIC1Sin/d1_71_N_418_9 ), .DI0(\CIC1Sin/d1_71_N_418_8 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n10646 ), .F0(\CIC1Sin/d1_71_N_418_8 ), 
    .Q0(\CIC1Sin/d1_8 ), .F1(\CIC1Sin/d1_71_N_418_9 ), .Q1(\CIC1Sin/d1_9 ), 
    .FCO(\CIC1Sin/n10647 ));
  CIC1Sin_SLICE_494 \CIC1Sin/SLICE_494 ( .B1(\CIC1Sin/d1_7 ), 
    .A1(MixerOutSin_7), .B0(\CIC1Sin/d1_6 ), .A0(MixerOutSin_6), 
    .DI1(\CIC1Sin/d1_71_N_418_7 ), .DI0(\CIC1Sin/d1_71_N_418_6 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n10645 ), .F0(\CIC1Sin/d1_71_N_418_6 ), 
    .Q0(\CIC1Sin/d1_6 ), .F1(\CIC1Sin/d1_71_N_418_7 ), .Q1(\CIC1Sin/d1_7 ), 
    .FCO(\CIC1Sin/n10646 ));
  CIC1Sin_SLICE_495 \CIC1Sin/SLICE_495 ( .B1(\CIC1Sin/d1_5 ), 
    .A1(MixerOutSin_5), .B0(\CIC1Sin/d1_4 ), .A0(MixerOutSin_4), 
    .DI1(\CIC1Sin/d1_71_N_418_5 ), .DI0(\CIC1Sin/d1_71_N_418_4 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n10644 ), .F0(\CIC1Sin/d1_71_N_418_4 ), 
    .Q0(\CIC1Sin/d1_4 ), .F1(\CIC1Sin/d1_71_N_418_5 ), .Q1(\CIC1Sin/d1_5 ), 
    .FCO(\CIC1Sin/n10645 ));
  CIC1Sin_SLICE_496 \CIC1Sin/SLICE_496 ( .B1(\CIC1Sin/d1_3 ), 
    .A1(MixerOutSin_3), .B0(\CIC1Sin/d1_2 ), .A0(MixerOutSin_2), 
    .DI1(\CIC1Sin/d1_71_N_418_3 ), .DI0(\CIC1Sin/d1_71_N_418_2 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n10643 ), .F0(\CIC1Sin/d1_71_N_418_2 ), 
    .Q0(\CIC1Sin/d1_2 ), .F1(\CIC1Sin/d1_71_N_418_3 ), .Q1(\CIC1Sin/d1_3 ), 
    .FCO(\CIC1Sin/n10644 ));
  CIC1Sin_SLICE_497 \CIC1Sin/SLICE_497 ( .B1(\CIC1Sin/d1_1 ), 
    .A1(MixerOutSin_1), .B0(\CIC1Sin/d1_0 ), .A0(MixerOutSin_0), 
    .DI1(\CIC1Sin/d1_71_N_418_1 ), .CLK(osc_clk), .F1(\CIC1Sin/d1_71_N_418_1 ), 
    .Q1(\CIC1Sin/d1_1 ), .FCO(\CIC1Sin/n10643 ));
  CIC1Sin_SLICE_498 \CIC1Sin/SLICE_498 ( .B0(\CIC1Sin/d_d6_35 ), 
    .A0(\CIC1Sin/d6_35 ), .DI0(\CIC1Sin/d7_71_N_1531_35 ), 
    .CE(\CIC1Sin/osc_clk_enable_360 ), .CLK(osc_clk), .FCI(\CIC1Sin/n12131 ), 
    .F0(\CIC1Sin/d7_71_N_1531_35 ), .Q0(\CIC1Sin/d7_35 ), .F1(\CIC1Sin/n7032 ));
  CIC1Sin_SLICE_499 \CIC1Sin/SLICE_499 ( .B1(\CIC1Sin/d_d6_34 ), 
    .A1(\CIC1Sin/d6_34 ), .B0(\CIC1Sin/d_d6_33 ), .A0(\CIC1Sin/d6_33 ), 
    .DI1(\CIC1Sin/d7_71_N_1531_34 ), .DI0(\CIC1Sin/d7_71_N_1531_33 ), 
    .CE(\CIC1Sin/osc_clk_enable_360 ), .CLK(osc_clk), .FCI(\CIC1Sin/n12130 ), 
    .F0(\CIC1Sin/d7_71_N_1531_33 ), .Q0(\CIC1Sin/d7_33 ), 
    .F1(\CIC1Sin/d7_71_N_1531_34 ), .Q1(\CIC1Sin/d7_34 ), 
    .FCO(\CIC1Sin/n12131 ));
  CIC1Sin_SLICE_500 \CIC1Sin/SLICE_500 ( .B1(\CIC1Sin/d_d6_32 ), 
    .A1(\CIC1Sin/d6_32 ), .B0(\CIC1Sin/d_d6_31 ), .A0(\CIC1Sin/d6_31 ), 
    .DI1(\CIC1Sin/d7_71_N_1531_32 ), .DI0(\CIC1Sin/d7_71_N_1531_31 ), 
    .CE(\CIC1Sin/osc_clk_enable_360 ), .CLK(osc_clk), .FCI(\CIC1Sin/n12129 ), 
    .F0(\CIC1Sin/d7_71_N_1531_31 ), .Q0(\CIC1Sin/d7_31 ), 
    .F1(\CIC1Sin/d7_71_N_1531_32 ), .Q1(\CIC1Sin/d7_32 ), 
    .FCO(\CIC1Sin/n12130 ));
  CIC1Sin_SLICE_501 \CIC1Sin/SLICE_501 ( .B1(\CIC1Sin/d_d6_30 ), 
    .A1(\CIC1Sin/d6_30 ), .B0(\CIC1Sin/d_d6_29 ), .A0(\CIC1Sin/d6_29 ), 
    .DI1(\CIC1Sin/d7_71_N_1531_30 ), .DI0(\CIC1Sin/d7_71_N_1531_29 ), 
    .CE(\CIC1Sin/osc_clk_enable_360 ), .CLK(osc_clk), .FCI(\CIC1Sin/n12128 ), 
    .F0(\CIC1Sin/d7_71_N_1531_29 ), .Q0(\CIC1Sin/d7_29 ), 
    .F1(\CIC1Sin/d7_71_N_1531_30 ), .Q1(\CIC1Sin/d7_30 ), 
    .FCO(\CIC1Sin/n12129 ));
  CIC1Sin_SLICE_502 \CIC1Sin/SLICE_502 ( .B1(\CIC1Sin/d_d6_28 ), 
    .A1(\CIC1Sin/d6_28 ), .B0(\CIC1Sin/d_d6_27 ), .A0(\CIC1Sin/d6_27 ), 
    .DI0(\CIC1Sin/d7_71_N_1531_27 ), .CE(\CIC1Sin/osc_clk_enable_310 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n12127 ), .F0(\CIC1Sin/d7_71_N_1531_27 ), 
    .Q0(\CIC1Sin/d7_27 ), .F1(\CIC1Sin/d7_71_N_1531_28 ), 
    .FCO(\CIC1Sin/n12128 ));
  CIC1Sin_SLICE_503 \CIC1Sin/SLICE_503 ( .B1(\CIC1Sin/d_d6_26 ), 
    .A1(\CIC1Sin/d6_26 ), .B0(\CIC1Sin/d_d6_25 ), .A0(\CIC1Sin/d6_25 ), 
    .DI1(\CIC1Sin/d7_71_N_1531_26 ), .DI0(\CIC1Sin/d7_71_N_1531_25 ), 
    .CE(\CIC1Sin/osc_clk_enable_310 ), .CLK(osc_clk), .FCI(\CIC1Sin/n12126 ), 
    .F0(\CIC1Sin/d7_71_N_1531_25 ), .Q0(\CIC1Sin/d7_25 ), 
    .F1(\CIC1Sin/d7_71_N_1531_26 ), .Q1(\CIC1Sin/d7_26 ), 
    .FCO(\CIC1Sin/n12127 ));
  CIC1Sin_SLICE_504 \CIC1Sin/SLICE_504 ( .B1(\CIC1Sin/d_d6_24 ), 
    .A1(\CIC1Sin/d6_24 ), .B0(\CIC1Sin/d_d6_23 ), .A0(\CIC1Sin/d6_23 ), 
    .DI1(\CIC1Sin/d7_71_N_1531_24 ), .DI0(\CIC1Sin/d7_71_N_1531_23 ), 
    .CE(\CIC1Sin/osc_clk_enable_310 ), .CLK(osc_clk), .FCI(\CIC1Sin/n12125 ), 
    .F0(\CIC1Sin/d7_71_N_1531_23 ), .Q0(\CIC1Sin/d7_23 ), 
    .F1(\CIC1Sin/d7_71_N_1531_24 ), .Q1(\CIC1Sin/d7_24 ), 
    .FCO(\CIC1Sin/n12126 ));
  CIC1Sin_SLICE_505 \CIC1Sin/SLICE_505 ( .B1(\CIC1Sin/d_d6_22 ), 
    .A1(\CIC1Sin/d6_22 ), .B0(\CIC1Sin/d_d6_21 ), .A0(\CIC1Sin/d6_21 ), 
    .DI1(\CIC1Sin/d7_71_N_1531_22 ), .DI0(\CIC1Sin/d7_71_N_1531_21 ), 
    .CE(\CIC1Sin/osc_clk_enable_310 ), .CLK(osc_clk), .FCI(\CIC1Sin/n12124 ), 
    .F0(\CIC1Sin/d7_71_N_1531_21 ), .Q0(\CIC1Sin/d7_21 ), 
    .F1(\CIC1Sin/d7_71_N_1531_22 ), .Q1(\CIC1Sin/d7_22 ), 
    .FCO(\CIC1Sin/n12125 ));
  CIC1Sin_SLICE_506 \CIC1Sin/SLICE_506 ( .B1(\CIC1Sin/d_d6_20 ), 
    .A1(\CIC1Sin/d6_20 ), .B0(\CIC1Sin/d_d6_19 ), .A0(\CIC1Sin/d6_19 ), 
    .DI1(\CIC1Sin/d7_71_N_1531_20 ), .DI0(\CIC1Sin/d7_71_N_1531_19 ), 
    .CE(\CIC1Sin/osc_clk_enable_310 ), .CLK(osc_clk), .FCI(\CIC1Sin/n12123 ), 
    .F0(\CIC1Sin/d7_71_N_1531_19 ), .Q0(\CIC1Sin/d7_19 ), 
    .F1(\CIC1Sin/d7_71_N_1531_20 ), .Q1(\CIC1Sin/d7_20 ), 
    .FCO(\CIC1Sin/n12124 ));
  CIC1Sin_SLICE_507 \CIC1Sin/SLICE_507 ( .B1(\CIC1Sin/d_d6_18 ), 
    .A1(\CIC1Sin/d6_18 ), .B0(\CIC1Sin/d_d6_17 ), .A0(\CIC1Sin/d6_17 ), 
    .DI1(\CIC1Sin/d7_71_N_1531_18 ), .DI0(\CIC1Sin/d7_71_N_1531_17 ), 
    .CE(\CIC1Sin/osc_clk_enable_310 ), .CLK(osc_clk), .FCI(\CIC1Sin/n12122 ), 
    .F0(\CIC1Sin/d7_71_N_1531_17 ), .Q0(\CIC1Sin/d7_17 ), 
    .F1(\CIC1Sin/d7_71_N_1531_18 ), .Q1(\CIC1Sin/d7_18 ), 
    .FCO(\CIC1Sin/n12123 ));
  CIC1Sin_SLICE_508 \CIC1Sin/SLICE_508 ( .B0(\CIC1Sin/d_d7_35 ), 
    .A0(\CIC1Sin/d7_35 ), .DI0(\CIC1Sin/d8_71_N_1603_35 ), 
    .CE(\CIC1Sin/osc_clk_enable_460 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11484 ), 
    .F0(\CIC1Sin/d8_71_N_1603_35 ), .Q0(\CIC1Sin/d8_35 ), .F1(\CIC1Sin/n6880 ));
  CIC1Sin_SLICE_509 \CIC1Sin/SLICE_509 ( .B1(\CIC1Sin/d_d7_34 ), 
    .A1(\CIC1Sin/d7_34 ), .B0(\CIC1Sin/d_d7_33 ), .A0(\CIC1Sin/d7_33 ), 
    .DI1(\CIC1Sin/d8_71_N_1603_34 ), .DI0(\CIC1Sin/d8_71_N_1603_33 ), 
    .CE(\CIC1Sin/osc_clk_enable_460 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11483 ), 
    .F0(\CIC1Sin/d8_71_N_1603_33 ), .Q0(\CIC1Sin/d8_33 ), 
    .F1(\CIC1Sin/d8_71_N_1603_34 ), .Q1(\CIC1Sin/d8_34 ), 
    .FCO(\CIC1Sin/n11484 ));
  CIC1Sin_SLICE_510 \CIC1Sin/SLICE_510 ( .B1(\CIC1Sin/d_d7_32 ), 
    .A1(\CIC1Sin/d7_32 ), .B0(\CIC1Sin/d_d7_31 ), .A0(\CIC1Sin/d7_31 ), 
    .DI1(\CIC1Sin/d8_71_N_1603_32 ), .DI0(\CIC1Sin/d8_71_N_1603_31 ), 
    .CE(\CIC1Sin/osc_clk_enable_460 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11482 ), 
    .F0(\CIC1Sin/d8_71_N_1603_31 ), .Q0(\CIC1Sin/d8_31 ), 
    .F1(\CIC1Sin/d8_71_N_1603_32 ), .Q1(\CIC1Sin/d8_32 ), 
    .FCO(\CIC1Sin/n11483 ));
  CIC1Sin_SLICE_511 \CIC1Sin/SLICE_511 ( .B1(\CIC1Sin/d_d7_30 ), 
    .A1(\CIC1Sin/d7_30 ), .B0(\CIC1Sin/d_d7_29 ), .A0(\CIC1Sin/d7_29 ), 
    .DI1(\CIC1Sin/d8_71_N_1603_30 ), .DI0(\CIC1Sin/d8_71_N_1603_29 ), 
    .CE(\CIC1Sin/osc_clk_enable_460 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11481 ), 
    .F0(\CIC1Sin/d8_71_N_1603_29 ), .Q0(\CIC1Sin/d8_29 ), 
    .F1(\CIC1Sin/d8_71_N_1603_30 ), .Q1(\CIC1Sin/d8_30 ), 
    .FCO(\CIC1Sin/n11482 ));
  CIC1Sin_SLICE_512 \CIC1Sin/SLICE_512 ( .B1(\CIC1Sin/d_d7_28 ), 
    .A1(\CIC1Sin/d7_28 ), .B0(\CIC1Sin/d_d7_27 ), .A0(\CIC1Sin/d7_27 ), 
    .DI1(\CIC1Sin/d8_71_N_1603_28 ), .DI0(\CIC1Sin/d8_71_N_1603_27 ), 
    .CE(\CIC1Sin/osc_clk_enable_460 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11480 ), 
    .F0(\CIC1Sin/d8_71_N_1603_27 ), .Q0(\CIC1Sin/d8_27 ), 
    .F1(\CIC1Sin/d8_71_N_1603_28 ), .Q1(\CIC1Sin/d8_28 ), 
    .FCO(\CIC1Sin/n11481 ));
  CIC1Sin_SLICE_513 \CIC1Sin/SLICE_513 ( .B1(\CIC1Sin/d_d7_26 ), 
    .A1(\CIC1Sin/d7_26 ), .B0(\CIC1Sin/d_d7_25 ), .A0(\CIC1Sin/d7_25 ), 
    .DI1(\CIC1Sin/d8_71_N_1603_26 ), .DI0(\CIC1Sin/d8_71_N_1603_25 ), 
    .CE(\CIC1Sin/osc_clk_enable_460 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11479 ), 
    .F0(\CIC1Sin/d8_71_N_1603_25 ), .Q0(\CIC1Sin/d8_25 ), 
    .F1(\CIC1Sin/d8_71_N_1603_26 ), .Q1(\CIC1Sin/d8_26 ), 
    .FCO(\CIC1Sin/n11480 ));
  CIC1Sin_SLICE_514 \CIC1Sin/SLICE_514 ( .B1(\CIC1Sin/d_d7_24 ), 
    .A1(\CIC1Sin/d7_24 ), .B0(\CIC1Sin/d_d7_23 ), .A0(\CIC1Sin/d7_23 ), 
    .DI1(\CIC1Sin/d8_71_N_1603_24 ), .DI0(\CIC1Sin/d8_71_N_1603_23 ), 
    .CE(\CIC1Sin/osc_clk_enable_460 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11478 ), 
    .F0(\CIC1Sin/d8_71_N_1603_23 ), .Q0(\CIC1Sin/d8_23 ), 
    .F1(\CIC1Sin/d8_71_N_1603_24 ), .Q1(\CIC1Sin/d8_24 ), 
    .FCO(\CIC1Sin/n11479 ));
  CIC1Sin_SLICE_515 \CIC1Sin/SLICE_515 ( .B1(\CIC1Sin/d_d7_22 ), 
    .A1(\CIC1Sin/d7_22 ), .B0(\CIC1Sin/d_d7_21 ), .A0(\CIC1Sin/d7_21 ), 
    .DI1(\CIC1Sin/d8_71_N_1603_22 ), .DI0(\CIC1Sin/d8_71_N_1603_21 ), 
    .CE(\CIC1Sin/osc_clk_enable_460 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11477 ), 
    .F0(\CIC1Sin/d8_71_N_1603_21 ), .Q0(\CIC1Sin/d8_21 ), 
    .F1(\CIC1Sin/d8_71_N_1603_22 ), .Q1(\CIC1Sin/d8_22 ), 
    .FCO(\CIC1Sin/n11478 ));
  CIC1Sin_SLICE_516 \CIC1Sin/SLICE_516 ( .B1(\CIC1Sin/d_d7_20 ), 
    .A1(\CIC1Sin/d7_20 ), .B0(\CIC1Sin/d_d7_19 ), .A0(\CIC1Sin/d7_19 ), 
    .DI1(\CIC1Sin/d8_71_N_1603_20 ), .DI0(\CIC1Sin/d8_71_N_1603_19 ), 
    .CE(\CIC1Sin/osc_clk_enable_460 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11476 ), 
    .F0(\CIC1Sin/d8_71_N_1603_19 ), .Q0(\CIC1Sin/d8_19 ), 
    .F1(\CIC1Sin/d8_71_N_1603_20 ), .Q1(\CIC1Sin/d8_20 ), 
    .FCO(\CIC1Sin/n11477 ));
  CIC1Sin_SLICE_517 \CIC1Sin/SLICE_517 ( .B1(\CIC1Sin/d_d7_18 ), 
    .A1(\CIC1Sin/d7_18 ), .B0(\CIC1Sin/d_d7_17 ), .A0(\CIC1Sin/d7_17 ), 
    .DI1(\CIC1Sin/d8_71_N_1603_18 ), .DI0(\CIC1Sin/d8_71_N_1603_17 ), 
    .CE(\CIC1Sin/osc_clk_enable_460 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11475 ), 
    .F0(\CIC1Sin/d8_71_N_1603_17 ), .Q0(\CIC1Sin/d8_17 ), 
    .F1(\CIC1Sin/d8_71_N_1603_18 ), .Q1(\CIC1Sin/d8_18 ), 
    .FCO(\CIC1Sin/n11476 ));
  CIC1Sin_SLICE_518 \CIC1Sin/SLICE_518 ( .B1(\CIC1Sin/d_d7_16 ), 
    .A1(\CIC1Sin/d7_16 ), .B0(\CIC1Sin/d_d7_15 ), .A0(\CIC1Sin/d7_15 ), 
    .DI1(\CIC1Sin/d8_71_N_1603_16 ), .DI0(\CIC1Sin/d8_71_N_1603_15 ), 
    .CE(\CIC1Sin/osc_clk_enable_460 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11474 ), 
    .F0(\CIC1Sin/d8_71_N_1603_15 ), .Q0(\CIC1Sin/d8_15 ), 
    .F1(\CIC1Sin/d8_71_N_1603_16 ), .Q1(\CIC1Sin/d8_16 ), 
    .FCO(\CIC1Sin/n11475 ));
  CIC1Sin_SLICE_519 \CIC1Sin/SLICE_519 ( .B1(\CIC1Sin/d_d7_14 ), 
    .A1(\CIC1Sin/d7_14 ), .B0(\CIC1Sin/d_d7_13 ), .A0(\CIC1Sin/d7_13 ), 
    .DI1(\CIC1Sin/d8_71_N_1603_14 ), .DI0(\CIC1Sin/d8_71_N_1603_13 ), 
    .CE(\CIC1Sin/osc_clk_enable_460 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11473 ), 
    .F0(\CIC1Sin/d8_71_N_1603_13 ), .Q0(\CIC1Sin/d8_13 ), 
    .F1(\CIC1Sin/d8_71_N_1603_14 ), .Q1(\CIC1Sin/d8_14 ), 
    .FCO(\CIC1Sin/n11474 ));
  CIC1Sin_SLICE_520 \CIC1Sin/SLICE_520 ( .B1(\CIC1Sin/d_d7_12 ), 
    .A1(\CIC1Sin/d7_12 ), .B0(\CIC1Sin/d_d7_11 ), .A0(\CIC1Sin/d7_11 ), 
    .DI1(\CIC1Sin/d8_71_N_1603_12 ), .DI0(\CIC1Sin/d8_71_N_1603_11 ), 
    .CE(\CIC1Sin/osc_clk_enable_460 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11472 ), 
    .F0(\CIC1Sin/d8_71_N_1603_11 ), .Q0(\CIC1Sin/d8_11 ), 
    .F1(\CIC1Sin/d8_71_N_1603_12 ), .Q1(\CIC1Sin/d8_12 ), 
    .FCO(\CIC1Sin/n11473 ));
  CIC1Sin_SLICE_521 \CIC1Sin/SLICE_521 ( .B1(\CIC1Sin/d_d7_10 ), 
    .A1(\CIC1Sin/d7_10 ), .B0(\CIC1Sin/d_d7_9 ), .A0(\CIC1Sin/d7_9 ), 
    .DI1(\CIC1Sin/d8_71_N_1603_10 ), .DI0(\CIC1Sin/d8_71_N_1603_9 ), 
    .CE(\CIC1Sin/osc_clk_enable_460 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11471 ), 
    .F0(\CIC1Sin/d8_71_N_1603_9 ), .Q0(\CIC1Sin/d8_9 ), 
    .F1(\CIC1Sin/d8_71_N_1603_10 ), .Q1(\CIC1Sin/d8_10 ), 
    .FCO(\CIC1Sin/n11472 ));
  CIC1Sin_SLICE_522 \CIC1Sin/SLICE_522 ( .B1(\CIC1Sin/d_d7_8 ), 
    .A1(\CIC1Sin/d7_8 ), .B0(\CIC1Sin/d_d7_7 ), .A0(\CIC1Sin/d7_7 ), 
    .DI1(\CIC1Sin/d8_71_N_1603_8 ), .DI0(\CIC1Sin/d8_71_N_1603_7 ), 
    .CE(\CIC1Sin/osc_clk_enable_460 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11470 ), 
    .F0(\CIC1Sin/d8_71_N_1603_7 ), .Q0(\CIC1Sin/d8_7 ), 
    .F1(\CIC1Sin/d8_71_N_1603_8 ), .Q1(\CIC1Sin/d8_8 ), .FCO(\CIC1Sin/n11471 ));
  CIC1Sin_SLICE_523 \CIC1Sin/SLICE_523 ( .B1(\CIC1Sin/d_d7_6 ), 
    .A1(\CIC1Sin/d7_6 ), .B0(\CIC1Sin/d_d7_5 ), .A0(\CIC1Sin/d7_5 ), 
    .DI1(\CIC1Sin/d8_71_N_1603_6 ), .DI0(\CIC1Sin/d8_71_N_1603_5 ), 
    .CE(\CIC1Sin/osc_clk_enable_460 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11469 ), 
    .F0(\CIC1Sin/d8_71_N_1603_5 ), .Q0(\CIC1Sin/d8_5 ), 
    .F1(\CIC1Sin/d8_71_N_1603_6 ), .Q1(\CIC1Sin/d8_6 ), .FCO(\CIC1Sin/n11470 ));
  CIC1Sin_SLICE_524 \CIC1Sin/SLICE_524 ( .B1(\CIC1Sin/d_d7_4 ), 
    .A1(\CIC1Sin/d7_4 ), .B0(\CIC1Sin/d_d7_3 ), .A0(\CIC1Sin/d7_3 ), 
    .DI1(\CIC1Sin/d8_71_N_1603_4 ), .DI0(\CIC1Sin/d8_71_N_1603_3 ), 
    .CE(\CIC1Sin/osc_clk_enable_460 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11468 ), 
    .F0(\CIC1Sin/d8_71_N_1603_3 ), .Q0(\CIC1Sin/d8_3 ), 
    .F1(\CIC1Sin/d8_71_N_1603_4 ), .Q1(\CIC1Sin/d8_4 ), .FCO(\CIC1Sin/n11469 ));
  CIC1Sin_SLICE_525 \CIC1Sin/SLICE_525 ( .B1(\CIC1Sin/d_d7_2 ), 
    .A1(\CIC1Sin/d7_2 ), .B0(\CIC1Sin/d_d7_1 ), .A0(\CIC1Sin/d7_1 ), 
    .DI1(\CIC1Sin/d8_71_N_1603_2 ), .DI0(\CIC1Sin/d8_71_N_1603_1 ), 
    .CE(\CIC1Sin/osc_clk_enable_460 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11467 ), 
    .F0(\CIC1Sin/d8_71_N_1603_1 ), .Q0(\CIC1Sin/d8_1 ), 
    .F1(\CIC1Sin/d8_71_N_1603_2 ), .Q1(\CIC1Sin/d8_2 ), .FCO(\CIC1Sin/n11468 ));
  CIC1Sin_SLICE_526 \CIC1Sin/SLICE_526 ( .B1(\CIC1Sin/d_d7_0 ), 
    .A1(\CIC1Sin/d7_0 ), .DI1(\CIC1Sin/d8_71_N_1603_0 ), 
    .CE(\CIC1Sin/osc_clk_enable_69 ), .CLK(osc_clk), 
    .F1(\CIC1Sin/d8_71_N_1603_0 ), .Q1(\CIC1Sin/d8_0 ), .FCO(\CIC1Sin/n11467 ));
  CIC1Sin_SLICE_527 \CIC1Sin/SLICE_527 ( .B0(\CIC1Sin/d_d9_35 ), 
    .A0(\CIC1Sin/d9_35 ), .FCI(\CIC1Sin/n11348 ), .F1(\CIC1Sin/n5968 ));
  CIC1Sin_SLICE_528 \CIC1Sin/SLICE_528 ( .B1(\CIC1Sin/d_d9_34 ), 
    .A1(\CIC1Sin/d9_34 ), .B0(\CIC1Sin/d_d9_33 ), .A0(\CIC1Sin/d9_33 ), 
    .FCI(\CIC1Sin/n11347 ), .FCO(\CIC1Sin/n11348 ));
  CIC1Sin_SLICE_529 \CIC1Sin/SLICE_529 ( .B1(\CIC1Sin/d_d9_32 ), 
    .A1(\CIC1Sin/d9_32 ), .B0(\CIC1Sin/d_d9_31 ), .A0(\CIC1Sin/d9_31 ), 
    .FCI(\CIC1Sin/n11346 ), .FCO(\CIC1Sin/n11347 ));
  CIC1Sin_SLICE_530 \CIC1Sin/SLICE_530 ( .B1(\CIC1Sin/d_d9_30 ), 
    .A1(\CIC1Sin/d9_30 ), .B0(\CIC1Sin/d_d9_29 ), .A0(\CIC1Sin/d9_29 ), 
    .FCI(\CIC1Sin/n11345 ), .FCO(\CIC1Sin/n11346 ));
  CIC1Sin_SLICE_531 \CIC1Sin/SLICE_531 ( .B1(\CIC1Sin/d_d9_28 ), 
    .A1(\CIC1Sin/d9_28 ), .B0(\CIC1Sin/d_d9_27 ), .A0(\CIC1Sin/d9_27 ), 
    .FCI(\CIC1Sin/n11344 ), .FCO(\CIC1Sin/n11345 ));
  CIC1Sin_SLICE_532 \CIC1Sin/SLICE_532 ( .B1(\CIC1Sin/d_d9_26 ), 
    .A1(\CIC1Sin/d9_26 ), .B0(\CIC1Sin/d_d9_25 ), .A0(\CIC1Sin/d9_25 ), 
    .FCI(\CIC1Sin/n11343 ), .FCO(\CIC1Sin/n11344 ));
  CIC1Sin_SLICE_533 \CIC1Sin/SLICE_533 ( .B1(\CIC1Sin/d_d9_24 ), 
    .A1(\CIC1Sin/d9_24 ), .B0(\CIC1Sin/d_d9_23 ), .A0(\CIC1Sin/d9_23 ), 
    .FCI(\CIC1Sin/n11342 ), .FCO(\CIC1Sin/n11343 ));
  CIC1Sin_SLICE_534 \CIC1Sin/SLICE_534 ( .B1(\CIC1Sin/d_d9_22 ), 
    .A1(\CIC1Sin/d9_22 ), .B0(\CIC1Sin/d_d9_21 ), .A0(\CIC1Sin/d9_21 ), 
    .FCI(\CIC1Sin/n11341 ), .FCO(\CIC1Sin/n11342 ));
  CIC1Sin_SLICE_535 \CIC1Sin/SLICE_535 ( .B1(\CIC1Sin/d_d9_20 ), 
    .A1(\CIC1Sin/d9_20 ), .B0(\CIC1Sin/d_d9_19 ), .A0(\CIC1Sin/d9_19 ), 
    .FCI(\CIC1Sin/n11340 ), .FCO(\CIC1Sin/n11341 ));
  CIC1Sin_SLICE_536 \CIC1Sin/SLICE_536 ( .B1(\CIC1Sin/d_d9_18 ), 
    .A1(\CIC1Sin/d9_18 ), .B0(\CIC1Sin/d_d9_17 ), .A0(\CIC1Sin/d9_17 ), 
    .FCI(\CIC1Sin/n11339 ), .FCO(\CIC1Sin/n11340 ));
  CIC1Sin_SLICE_537 \CIC1Sin/SLICE_537 ( .B1(\CIC1Sin/d_d9_16 ), 
    .A1(\CIC1Sin/d9_16 ), .B0(\CIC1Sin/d_d9_15 ), .A0(\CIC1Sin/d9_15 ), 
    .FCI(\CIC1Sin/n11338 ), .FCO(\CIC1Sin/n11339 ));
  CIC1Sin_SLICE_538 \CIC1Sin/SLICE_538 ( .B1(\CIC1Sin/d_d9_14 ), 
    .A1(\CIC1Sin/d9_14 ), .B0(\CIC1Sin/d_d9_13 ), .A0(\CIC1Sin/d9_13 ), 
    .FCI(\CIC1Sin/n11337 ), .FCO(\CIC1Sin/n11338 ));
  CIC1Sin_SLICE_539 \CIC1Sin/SLICE_539 ( .B1(\CIC1Sin/d_d9_12 ), 
    .A1(\CIC1Sin/d9_12 ), .B0(\CIC1Sin/d_d9_11 ), .A0(\CIC1Sin/d9_11 ), 
    .FCI(\CIC1Sin/n11336 ), .FCO(\CIC1Sin/n11337 ));
  CIC1Sin_SLICE_540 \CIC1Sin/SLICE_540 ( .B1(\CIC1Sin/d_d6_16 ), 
    .A1(\CIC1Sin/d6_16 ), .B0(\CIC1Sin/d_d6_15 ), .A0(\CIC1Sin/d6_15 ), 
    .DI1(\CIC1Sin/d7_71_N_1531_16 ), .DI0(\CIC1Sin/d7_71_N_1531_15 ), 
    .CE(\CIC1Sin/osc_clk_enable_310 ), .CLK(osc_clk), .FCI(\CIC1Sin/n12121 ), 
    .F0(\CIC1Sin/d7_71_N_1531_15 ), .Q0(\CIC1Sin/d7_15 ), 
    .F1(\CIC1Sin/d7_71_N_1531_16 ), .Q1(\CIC1Sin/d7_16 ), 
    .FCO(\CIC1Sin/n12122 ));
  CIC1Sin_SLICE_541 \CIC1Sin/SLICE_541 ( .B1(\CIC1Sin/d_d6_14 ), 
    .A1(\CIC1Sin/d6_14 ), .B0(\CIC1Sin/d_d6_13 ), .A0(\CIC1Sin/d6_13 ), 
    .DI1(\CIC1Sin/d7_71_N_1531_14 ), .DI0(\CIC1Sin/d7_71_N_1531_13 ), 
    .CE(\CIC1Sin/osc_clk_enable_310 ), .CLK(osc_clk), .FCI(\CIC1Sin/n12120 ), 
    .F0(\CIC1Sin/d7_71_N_1531_13 ), .Q0(\CIC1Sin/d7_13 ), 
    .F1(\CIC1Sin/d7_71_N_1531_14 ), .Q1(\CIC1Sin/d7_14 ), 
    .FCO(\CIC1Sin/n12121 ));
  CIC1Sin_SLICE_542 \CIC1Sin/SLICE_542 ( .B1(\CIC1Sin/d_d6_12 ), 
    .A1(\CIC1Sin/d6_12 ), .B0(\CIC1Sin/d_d6_11 ), .A0(\CIC1Sin/d6_11 ), 
    .DI1(\CIC1Sin/d7_71_N_1531_12 ), .DI0(\CIC1Sin/d7_71_N_1531_11 ), 
    .CE(\CIC1Sin/osc_clk_enable_310 ), .CLK(osc_clk), .FCI(\CIC1Sin/n12119 ), 
    .F0(\CIC1Sin/d7_71_N_1531_11 ), .Q0(\CIC1Sin/d7_11 ), 
    .F1(\CIC1Sin/d7_71_N_1531_12 ), .Q1(\CIC1Sin/d7_12 ), 
    .FCO(\CIC1Sin/n12120 ));
  CIC1Sin_SLICE_543 \CIC1Sin/SLICE_543 ( .B1(\CIC1Sin/d_d6_10 ), 
    .A1(\CIC1Sin/d6_10 ), .B0(\CIC1Sin/d_d6_9 ), .A0(\CIC1Sin/d6_9 ), 
    .DI1(\CIC1Sin/d7_71_N_1531_10 ), .DI0(\CIC1Sin/d7_71_N_1531_9 ), 
    .CE(\CIC1Sin/osc_clk_enable_310 ), .CLK(osc_clk), .FCI(\CIC1Sin/n12118 ), 
    .F0(\CIC1Sin/d7_71_N_1531_9 ), .Q0(\CIC1Sin/d7_9 ), 
    .F1(\CIC1Sin/d7_71_N_1531_10 ), .Q1(\CIC1Sin/d7_10 ), 
    .FCO(\CIC1Sin/n12119 ));
  CIC1Sin_SLICE_544 \CIC1Sin/SLICE_544 ( .B1(\CIC1Sin/d_d6_8 ), 
    .A1(\CIC1Sin/d6_8 ), .B0(\CIC1Sin/d_d6_7 ), .A0(\CIC1Sin/d6_7 ), 
    .DI1(\CIC1Sin/d7_71_N_1531_8 ), .DI0(\CIC1Sin/d7_71_N_1531_7 ), 
    .CE(\CIC1Sin/osc_clk_enable_310 ), .CLK(osc_clk), .FCI(\CIC1Sin/n12117 ), 
    .F0(\CIC1Sin/d7_71_N_1531_7 ), .Q0(\CIC1Sin/d7_7 ), 
    .F1(\CIC1Sin/d7_71_N_1531_8 ), .Q1(\CIC1Sin/d7_8 ), .FCO(\CIC1Sin/n12118 ));
  CIC1Sin_SLICE_545 \CIC1Sin/SLICE_545 ( .B1(\CIC1Sin/d_d6_6 ), 
    .A1(\CIC1Sin/d6_6 ), .B0(\CIC1Sin/d_d6_5 ), .A0(\CIC1Sin/d6_5 ), 
    .DI1(\CIC1Sin/d7_71_N_1531_6 ), .DI0(\CIC1Sin/d7_71_N_1531_5 ), 
    .CE(\CIC1Sin/osc_clk_enable_310 ), .CLK(osc_clk), .FCI(\CIC1Sin/n12116 ), 
    .F0(\CIC1Sin/d7_71_N_1531_5 ), .Q0(\CIC1Sin/d7_5 ), 
    .F1(\CIC1Sin/d7_71_N_1531_6 ), .Q1(\CIC1Sin/d7_6 ), .FCO(\CIC1Sin/n12117 ));
  CIC1Sin_SLICE_546 \CIC1Sin/SLICE_546 ( .B1(\CIC1Sin/d_d6_4 ), 
    .A1(\CIC1Sin/d6_4 ), .B0(\CIC1Sin/d_d6_3 ), .A0(\CIC1Sin/d6_3 ), 
    .DI1(\CIC1Sin/d7_71_N_1531_4 ), .DI0(\CIC1Sin/d7_71_N_1531_3 ), 
    .CE(\CIC1Sin/osc_clk_enable_310 ), .CLK(osc_clk), .FCI(\CIC1Sin/n12115 ), 
    .F0(\CIC1Sin/d7_71_N_1531_3 ), .Q0(\CIC1Sin/d7_3 ), 
    .F1(\CIC1Sin/d7_71_N_1531_4 ), .Q1(\CIC1Sin/d7_4 ), .FCO(\CIC1Sin/n12116 ));
  CIC1Sin_SLICE_547 \CIC1Sin/SLICE_547 ( .B1(\CIC1Sin/d_d6_2 ), 
    .A1(\CIC1Sin/d6_2 ), .B0(\CIC1Sin/d_d6_1 ), .A0(\CIC1Sin/d6_1 ), 
    .DI1(\CIC1Sin/d7_71_N_1531_2 ), .DI0(\CIC1Sin/d7_71_N_1531_1 ), 
    .CE(\CIC1Sin/osc_clk_enable_310 ), .CLK(osc_clk), .FCI(\CIC1Sin/n12114 ), 
    .F0(\CIC1Sin/d7_71_N_1531_1 ), .Q0(\CIC1Sin/d7_1 ), 
    .F1(\CIC1Sin/d7_71_N_1531_2 ), .Q1(\CIC1Sin/d7_2 ), .FCO(\CIC1Sin/n12115 ));
  CIC1Sin_SLICE_548 \CIC1Sin/SLICE_548 ( .B1(\CIC1Sin/d_d6_0 ), 
    .A1(\CIC1Sin/d6_0 ), .DI1(\CIC1Sin/d7_71_N_1531_0 ), 
    .CE(\CIC1Sin/osc_clk_enable_69 ), .CLK(osc_clk), 
    .F1(\CIC1Sin/d7_71_N_1531_0 ), .Q1(\CIC1Sin/d7_0 ), .FCO(\CIC1Sin/n12114 ));
  CIC1Sin_SLICE_549 \CIC1Sin/SLICE_549 ( .B1(\CIC1Sin/d3_53 ), 
    .A1(\CIC1Sin/d2_53 ), .B0(\CIC1Sin/d3_52 ), .A0(\CIC1Sin/d2_52 ), 
    .FCI(\CIC1Sin/n11905 ), .F0(\CIC1Sin/n4621 ), .F1(\CIC1Sin/n4620 ), 
    .FCO(\CIC1Sin/n11906 ));
  CIC1Sin_SLICE_550 \CIC1Sin/SLICE_550 ( .B1(\CIC1Sin/d3_51 ), 
    .A1(\CIC1Sin/d2_51 ), .B0(\CIC1Sin/d3_50 ), .A0(\CIC1Sin/d2_50 ), 
    .FCI(\CIC1Sin/n11904 ), .F0(\CIC1Sin/n4623 ), .F1(\CIC1Sin/n4622 ), 
    .FCO(\CIC1Sin/n11905 ));
  CIC1Sin_SLICE_551 \CIC1Sin/SLICE_551 ( .B1(\CIC1Sin/d3_49 ), 
    .A1(\CIC1Sin/d2_49 ), .B0(\CIC1Sin/d3_48 ), .A0(\CIC1Sin/d2_48 ), 
    .FCI(\CIC1Sin/n11903 ), .F0(\CIC1Sin/n4625 ), .F1(\CIC1Sin/n4624 ), 
    .FCO(\CIC1Sin/n11904 ));
  CIC1Sin_SLICE_552 \CIC1Sin/SLICE_552 ( .B1(\CIC1Sin/d3_47 ), 
    .A1(\CIC1Sin/d2_47 ), .B0(\CIC1Sin/d3_46 ), .A0(\CIC1Sin/d2_46 ), 
    .FCI(\CIC1Sin/n11902 ), .F0(\CIC1Sin/n4627 ), .F1(\CIC1Sin/n4626 ), 
    .FCO(\CIC1Sin/n11903 ));
  CIC1Sin_SLICE_553 \CIC1Sin/SLICE_553 ( .B1(\CIC1Sin/d3_45 ), 
    .A1(\CIC1Sin/d2_45 ), .B0(\CIC1Sin/d3_44 ), .A0(\CIC1Sin/d2_44 ), 
    .FCI(\CIC1Sin/n11901 ), .F0(\CIC1Sin/n4629 ), .F1(\CIC1Sin/n4628 ), 
    .FCO(\CIC1Sin/n11902 ));
  CIC1Sin_SLICE_554 \CIC1Sin/SLICE_554 ( .B1(\CIC1Sin/d3_43 ), 
    .A1(\CIC1Sin/d2_43 ), .B0(\CIC1Sin/d3_42 ), .A0(\CIC1Sin/d2_42 ), 
    .FCI(\CIC1Sin/n11900 ), .F0(\CIC1Sin/n4631 ), .F1(\CIC1Sin/n4630 ), 
    .FCO(\CIC1Sin/n11901 ));
  CIC1Sin_SLICE_555 \CIC1Sin/SLICE_555 ( .B1(\CIC1Sin/d3_41 ), 
    .A1(\CIC1Sin/d2_41 ), .B0(\CIC1Sin/d3_40 ), .A0(\CIC1Sin/d2_40 ), 
    .FCI(\CIC1Sin/n11899 ), .F0(\CIC1Sin/n4633 ), .F1(\CIC1Sin/n4632 ), 
    .FCO(\CIC1Sin/n11900 ));
  CIC1Sin_SLICE_556 \CIC1Sin/SLICE_556 ( .B1(\CIC1Sin/d3_39 ), 
    .A1(\CIC1Sin/d2_39 ), .B0(\CIC1Sin/d3_38 ), .A0(\CIC1Sin/d2_38 ), 
    .FCI(\CIC1Sin/n11898 ), .F0(\CIC1Sin/n4635 ), .F1(\CIC1Sin/n4634 ), 
    .FCO(\CIC1Sin/n11899 ));
  CIC1Sin_SLICE_557 \CIC1Sin/SLICE_557 ( .B1(\CIC1Sin/d3_37 ), 
    .A1(\CIC1Sin/d2_37 ), .B0(\CIC1Sin/d3_36 ), .A0(\CIC1Sin/d2_36 ), 
    .F1(\CIC1Sin/n4636 ), .FCO(\CIC1Sin/n11898 ));
  CIC1Sin_SLICE_558 \CIC1Sin/SLICE_558 ( .D1(\CIC1Sin/d2_71 ), 
    .C1(\CIC1Sin/n4602 ), .B1(\CIC1Sin/n4600 ), .A1(\CIC1Sin/d3_71 ), 
    .D0(\CIC1Sin/d2_70 ), .C0(\CIC1Sin/n4603 ), .B0(\CIC1Sin/n4600 ), 
    .A0(\CIC1Sin/d3_70 ), .DI1(\CIC1Sin/d3_71_N_562_71 ), 
    .DI0(\CIC1Sin/d3_71_N_562_70 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11895 ), 
    .F0(\CIC1Sin/d3_71_N_562_70 ), .Q0(\CIC1Sin/d3_70 ), 
    .F1(\CIC1Sin/d3_71_N_562_71 ), .Q1(\CIC1Sin/d3_71 ));
  CIC1Sin_SLICE_559 \CIC1Sin/SLICE_559 ( .D1(\CIC1Sin/d2_69 ), 
    .C1(\CIC1Sin/n4604 ), .B1(\CIC1Sin/n4600 ), .A1(\CIC1Sin/d3_69 ), 
    .D0(\CIC1Sin/d2_68 ), .C0(\CIC1Sin/n4605 ), .B0(\CIC1Sin/n4600 ), 
    .A0(\CIC1Sin/d3_68 ), .DI1(\CIC1Sin/d3_71_N_562_69 ), 
    .DI0(\CIC1Sin/d3_71_N_562_68 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11894 ), 
    .F0(\CIC1Sin/d3_71_N_562_68 ), .Q0(\CIC1Sin/d3_68 ), 
    .F1(\CIC1Sin/d3_71_N_562_69 ), .Q1(\CIC1Sin/d3_69 ), 
    .FCO(\CIC1Sin/n11895 ));
  CIC1Sin_SLICE_560 \CIC1Sin/SLICE_560 ( .D1(\CIC1Sin/d2_67 ), 
    .C1(\CIC1Sin/n4606 ), .B1(\CIC1Sin/n4600 ), .A1(\CIC1Sin/d3_67 ), 
    .D0(\CIC1Sin/d2_66 ), .C0(\CIC1Sin/n4607 ), .B0(\CIC1Sin/n4600 ), 
    .A0(\CIC1Sin/d3_66 ), .DI1(\CIC1Sin/d3_71_N_562_67 ), 
    .DI0(\CIC1Sin/d3_71_N_562_66 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11893 ), 
    .F0(\CIC1Sin/d3_71_N_562_66 ), .Q0(\CIC1Sin/d3_66 ), 
    .F1(\CIC1Sin/d3_71_N_562_67 ), .Q1(\CIC1Sin/d3_67 ), 
    .FCO(\CIC1Sin/n11894 ));
  CIC1Sin_SLICE_561 \CIC1Sin/SLICE_561 ( .D1(\CIC1Sin/d2_65 ), 
    .C1(\CIC1Sin/n4608 ), .B1(\CIC1Sin/n4600 ), .A1(\CIC1Sin/d3_65 ), 
    .D0(\CIC1Sin/d2_64 ), .C0(\CIC1Sin/n4609 ), .B0(\CIC1Sin/n4600 ), 
    .A0(\CIC1Sin/d3_64 ), .DI1(\CIC1Sin/d3_71_N_562_65 ), 
    .DI0(\CIC1Sin/d3_71_N_562_64 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11892 ), 
    .F0(\CIC1Sin/d3_71_N_562_64 ), .Q0(\CIC1Sin/d3_64 ), 
    .F1(\CIC1Sin/d3_71_N_562_65 ), .Q1(\CIC1Sin/d3_65 ), 
    .FCO(\CIC1Sin/n11893 ));
  CIC1Sin_SLICE_562 \CIC1Sin/SLICE_562 ( .D1(\CIC1Sin/d2_63 ), 
    .C1(\CIC1Sin/n4610 ), .B1(\CIC1Sin/n4600 ), .A1(\CIC1Sin/d3_63 ), 
    .D0(\CIC1Sin/d2_62 ), .C0(\CIC1Sin/n4611 ), .B0(\CIC1Sin/n4600 ), 
    .A0(\CIC1Sin/d3_62 ), .DI1(\CIC1Sin/d3_71_N_562_63 ), 
    .DI0(\CIC1Sin/d3_71_N_562_62 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11891 ), 
    .F0(\CIC1Sin/d3_71_N_562_62 ), .Q0(\CIC1Sin/d3_62 ), 
    .F1(\CIC1Sin/d3_71_N_562_63 ), .Q1(\CIC1Sin/d3_63 ), 
    .FCO(\CIC1Sin/n11892 ));
  CIC1Sin_SLICE_563 \CIC1Sin/SLICE_563 ( .D1(\CIC1Sin/d2_61 ), 
    .C1(\CIC1Sin/n4612 ), .B1(\CIC1Sin/n4600 ), .A1(\CIC1Sin/d3_61 ), 
    .D0(\CIC1Sin/d2_60 ), .C0(\CIC1Sin/n4613 ), .B0(\CIC1Sin/n4600 ), 
    .A0(\CIC1Sin/d3_60 ), .DI1(\CIC1Sin/d3_71_N_562_61 ), 
    .DI0(\CIC1Sin/d3_71_N_562_60 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11890 ), 
    .F0(\CIC1Sin/d3_71_N_562_60 ), .Q0(\CIC1Sin/d3_60 ), 
    .F1(\CIC1Sin/d3_71_N_562_61 ), .Q1(\CIC1Sin/d3_61 ), 
    .FCO(\CIC1Sin/n11891 ));
  CIC1Sin_SLICE_564 \CIC1Sin/SLICE_564 ( .D1(\CIC1Sin/d2_59 ), 
    .C1(\CIC1Sin/n4614 ), .B1(\CIC1Sin/n4600 ), .A1(\CIC1Sin/d3_59 ), 
    .D0(\CIC1Sin/d2_58 ), .C0(\CIC1Sin/n4615 ), .B0(\CIC1Sin/n4600 ), 
    .A0(\CIC1Sin/d3_58 ), .DI1(\CIC1Sin/d3_71_N_562_59 ), 
    .DI0(\CIC1Sin/d3_71_N_562_58 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11889 ), 
    .F0(\CIC1Sin/d3_71_N_562_58 ), .Q0(\CIC1Sin/d3_58 ), 
    .F1(\CIC1Sin/d3_71_N_562_59 ), .Q1(\CIC1Sin/d3_59 ), 
    .FCO(\CIC1Sin/n11890 ));
  CIC1Sin_SLICE_565 \CIC1Sin/SLICE_565 ( .D1(\CIC1Sin/d2_57 ), 
    .C1(\CIC1Sin/n4616 ), .B1(\CIC1Sin/n4600 ), .A1(\CIC1Sin/d3_57 ), 
    .D0(\CIC1Sin/d2_56 ), .C0(\CIC1Sin/n4617 ), .B0(\CIC1Sin/n4600 ), 
    .A0(\CIC1Sin/d3_56 ), .DI1(\CIC1Sin/d3_71_N_562_57 ), 
    .DI0(\CIC1Sin/d3_71_N_562_56 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11888 ), 
    .F0(\CIC1Sin/d3_71_N_562_56 ), .Q0(\CIC1Sin/d3_56 ), 
    .F1(\CIC1Sin/d3_71_N_562_57 ), .Q1(\CIC1Sin/d3_57 ), 
    .FCO(\CIC1Sin/n11889 ));
  CIC1Sin_SLICE_566 \CIC1Sin/SLICE_566 ( .D1(\CIC1Sin/d2_55 ), 
    .C1(\CIC1Sin/n4618 ), .B1(\CIC1Sin/n4600 ), .A1(\CIC1Sin/d3_55 ), 
    .D0(\CIC1Sin/d2_54 ), .C0(\CIC1Sin/n4619 ), .B0(\CIC1Sin/n4600 ), 
    .A0(\CIC1Sin/d3_54 ), .DI1(\CIC1Sin/d3_71_N_562_55 ), 
    .DI0(\CIC1Sin/d3_71_N_562_54 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11887 ), 
    .F0(\CIC1Sin/d3_71_N_562_54 ), .Q0(\CIC1Sin/d3_54 ), 
    .F1(\CIC1Sin/d3_71_N_562_55 ), .Q1(\CIC1Sin/d3_55 ), 
    .FCO(\CIC1Sin/n11888 ));
  CIC1Sin_SLICE_567 \CIC1Sin/SLICE_567 ( .D1(\CIC1Sin/d2_53 ), 
    .C1(\CIC1Sin/n4620 ), .B1(\CIC1Sin/n4600 ), .A1(\CIC1Sin/d3_53 ), 
    .D0(\CIC1Sin/d2_52 ), .C0(\CIC1Sin/n4621 ), .B0(\CIC1Sin/n4600 ), 
    .A0(\CIC1Sin/d3_52 ), .DI1(\CIC1Sin/d3_71_N_562_53 ), 
    .DI0(\CIC1Sin/d3_71_N_562_52 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11886 ), 
    .F0(\CIC1Sin/d3_71_N_562_52 ), .Q0(\CIC1Sin/d3_52 ), 
    .F1(\CIC1Sin/d3_71_N_562_53 ), .Q1(\CIC1Sin/d3_53 ), 
    .FCO(\CIC1Sin/n11887 ));
  CIC1Sin_SLICE_568 \CIC1Sin/SLICE_568 ( .D1(\CIC1Sin/d2_51 ), 
    .C1(\CIC1Sin/n4622 ), .B1(\CIC1Sin/n4600 ), .A1(\CIC1Sin/d3_51 ), 
    .D0(\CIC1Sin/d2_50 ), .C0(\CIC1Sin/n4623 ), .B0(\CIC1Sin/n4600 ), 
    .A0(\CIC1Sin/d3_50 ), .DI1(\CIC1Sin/d3_71_N_562_51 ), 
    .DI0(\CIC1Sin/d3_71_N_562_50 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11885 ), 
    .F0(\CIC1Sin/d3_71_N_562_50 ), .Q0(\CIC1Sin/d3_50 ), 
    .F1(\CIC1Sin/d3_71_N_562_51 ), .Q1(\CIC1Sin/d3_51 ), 
    .FCO(\CIC1Sin/n11886 ));
  CIC1Sin_SLICE_569 \CIC1Sin/SLICE_569 ( .D1(\CIC1Sin/d2_49 ), 
    .C1(\CIC1Sin/n4624 ), .B1(\CIC1Sin/n4600 ), .A1(\CIC1Sin/d3_49 ), 
    .D0(\CIC1Sin/d2_48 ), .C0(\CIC1Sin/n4625 ), .B0(\CIC1Sin/n4600 ), 
    .A0(\CIC1Sin/d3_48 ), .DI1(\CIC1Sin/d3_71_N_562_49 ), 
    .DI0(\CIC1Sin/d3_71_N_562_48 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11884 ), 
    .F0(\CIC1Sin/d3_71_N_562_48 ), .Q0(\CIC1Sin/d3_48 ), 
    .F1(\CIC1Sin/d3_71_N_562_49 ), .Q1(\CIC1Sin/d3_49 ), 
    .FCO(\CIC1Sin/n11885 ));
  CIC1Sin_SLICE_570 \CIC1Sin/SLICE_570 ( .D1(\CIC1Sin/d2_47 ), 
    .C1(\CIC1Sin/n4626 ), .B1(\CIC1Sin/n4600 ), .A1(\CIC1Sin/d3_47 ), 
    .D0(\CIC1Sin/d2_46 ), .C0(\CIC1Sin/n4627 ), .B0(\CIC1Sin/n4600 ), 
    .A0(\CIC1Sin/d3_46 ), .DI1(\CIC1Sin/d3_71_N_562_47 ), 
    .DI0(\CIC1Sin/d3_71_N_562_46 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11883 ), 
    .F0(\CIC1Sin/d3_71_N_562_46 ), .Q0(\CIC1Sin/d3_46 ), 
    .F1(\CIC1Sin/d3_71_N_562_47 ), .Q1(\CIC1Sin/d3_47 ), 
    .FCO(\CIC1Sin/n11884 ));
  CIC1Sin_SLICE_571 \CIC1Sin/SLICE_571 ( .D1(\CIC1Sin/d2_45 ), 
    .C1(\CIC1Sin/n4628 ), .B1(\CIC1Sin/n4600 ), .A1(\CIC1Sin/d3_45 ), 
    .D0(\CIC1Sin/d2_44 ), .C0(\CIC1Sin/n4629 ), .B0(\CIC1Sin/n4600 ), 
    .A0(\CIC1Sin/d3_44 ), .DI1(\CIC1Sin/d3_71_N_562_45 ), 
    .DI0(\CIC1Sin/d3_71_N_562_44 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11882 ), 
    .F0(\CIC1Sin/d3_71_N_562_44 ), .Q0(\CIC1Sin/d3_44 ), 
    .F1(\CIC1Sin/d3_71_N_562_45 ), .Q1(\CIC1Sin/d3_45 ), 
    .FCO(\CIC1Sin/n11883 ));
  CIC1Sin_SLICE_572 \CIC1Sin/SLICE_572 ( .D1(\CIC1Sin/d2_43 ), 
    .C1(\CIC1Sin/n4630 ), .B1(\CIC1Sin/n4600 ), .A1(\CIC1Sin/d3_43 ), 
    .D0(\CIC1Sin/d2_42 ), .C0(\CIC1Sin/n4631 ), .B0(\CIC1Sin/n4600 ), 
    .A0(\CIC1Sin/d3_42 ), .DI1(\CIC1Sin/d3_71_N_562_43 ), 
    .DI0(\CIC1Sin/d3_71_N_562_42 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11881 ), 
    .F0(\CIC1Sin/d3_71_N_562_42 ), .Q0(\CIC1Sin/d3_42 ), 
    .F1(\CIC1Sin/d3_71_N_562_43 ), .Q1(\CIC1Sin/d3_43 ), 
    .FCO(\CIC1Sin/n11882 ));
  CIC1Sin_SLICE_573 \CIC1Sin/SLICE_573 ( .D1(\CIC1Sin/d2_41 ), 
    .C1(\CIC1Sin/n4632 ), .B1(\CIC1Sin/n4600 ), .A1(\CIC1Sin/d3_41 ), 
    .D0(\CIC1Sin/d2_40 ), .C0(\CIC1Sin/n4633 ), .B0(\CIC1Sin/n4600 ), 
    .A0(\CIC1Sin/d3_40 ), .DI1(\CIC1Sin/d3_71_N_562_41 ), 
    .DI0(\CIC1Sin/d3_71_N_562_40 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11880 ), 
    .F0(\CIC1Sin/d3_71_N_562_40 ), .Q0(\CIC1Sin/d3_40 ), 
    .F1(\CIC1Sin/d3_71_N_562_41 ), .Q1(\CIC1Sin/d3_41 ), 
    .FCO(\CIC1Sin/n11881 ));
  CIC1Sin_SLICE_574 \CIC1Sin/SLICE_574 ( .D1(\CIC1Sin/d2_39 ), 
    .C1(\CIC1Sin/n4634 ), .B1(\CIC1Sin/n4600 ), .A1(\CIC1Sin/d3_39 ), 
    .D0(\CIC1Sin/d2_38 ), .C0(\CIC1Sin/n4635 ), .B0(\CIC1Sin/n4600 ), 
    .A0(\CIC1Sin/d3_38 ), .DI1(\CIC1Sin/d3_71_N_562_39 ), 
    .DI0(\CIC1Sin/d3_71_N_562_38 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11879 ), 
    .F0(\CIC1Sin/d3_71_N_562_38 ), .Q0(\CIC1Sin/d3_38 ), 
    .F1(\CIC1Sin/d3_71_N_562_39 ), .Q1(\CIC1Sin/d3_39 ), 
    .FCO(\CIC1Sin/n11880 ));
  CIC1Sin_SLICE_575 \CIC1Sin/SLICE_575 ( .D1(\CIC1Sin/d2_37 ), 
    .C1(\CIC1Sin/n4636 ), .B1(\CIC1Sin/n4600 ), .A1(\CIC1Sin/d3_37 ), 
    .D0(\CIC1Sin/d2_36 ), .C0(\CIC1Sin/n4637 ), .B0(\CIC1Sin/n4600 ), 
    .A0(\CIC1Sin/d3_36 ), .DI1(\CIC1Sin/d3_71_N_562_37 ), 
    .DI0(\CIC1Sin/d3_71_N_562_36 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11878 ), 
    .F0(\CIC1Sin/d3_71_N_562_36 ), .Q0(\CIC1Sin/d3_36 ), 
    .F1(\CIC1Sin/d3_71_N_562_37 ), .Q1(\CIC1Sin/d3_37 ), 
    .FCO(\CIC1Sin/n11879 ));
  CIC1Sin_SLICE_576 \CIC1Sin/SLICE_576 ( .A1(\CIC1Sin/n4600 ), 
    .FCO(\CIC1Sin/n11878 ));
  CIC1Sin_SLICE_577 \CIC1Sin/SLICE_577 ( .B1(\CIC1Sin/d4_71 ), 
    .A1(\CIC1Sin/d3_71 ), .B0(\CIC1Sin/d4_70 ), .A0(\CIC1Sin/d3_70 ), 
    .FCI(\CIC1Sin/n11873 ), .F0(\CIC1Sin/n4755 ), .F1(\CIC1Sin/n4754 ));
  CIC1Sin_SLICE_578 \CIC1Sin/SLICE_578 ( .B1(\CIC1Sin/d4_69 ), 
    .A1(\CIC1Sin/d3_69 ), .B0(\CIC1Sin/d4_68 ), .A0(\CIC1Sin/d3_68 ), 
    .FCI(\CIC1Sin/n11872 ), .F0(\CIC1Sin/n4757 ), .F1(\CIC1Sin/n4756 ), 
    .FCO(\CIC1Sin/n11873 ));
  CIC1Sin_SLICE_579 \CIC1Sin/SLICE_579 ( .B1(\CIC1Sin/d4_67 ), 
    .A1(\CIC1Sin/d3_67 ), .B0(\CIC1Sin/d4_66 ), .A0(\CIC1Sin/d3_66 ), 
    .FCI(\CIC1Sin/n11871 ), .F0(\CIC1Sin/n4759 ), .F1(\CIC1Sin/n4758 ), 
    .FCO(\CIC1Sin/n11872 ));
  CIC1Sin_SLICE_580 \CIC1Sin/SLICE_580 ( .B1(\CIC1Sin/d4_65 ), 
    .A1(\CIC1Sin/d3_65 ), .B0(\CIC1Sin/d4_64 ), .A0(\CIC1Sin/d3_64 ), 
    .FCI(\CIC1Sin/n11870 ), .F0(\CIC1Sin/n4761 ), .F1(\CIC1Sin/n4760 ), 
    .FCO(\CIC1Sin/n11871 ));
  CIC1Sin_SLICE_581 \CIC1Sin/SLICE_581 ( .B1(\CIC1Sin/d4_63 ), 
    .A1(\CIC1Sin/d3_63 ), .B0(\CIC1Sin/d4_62 ), .A0(\CIC1Sin/d3_62 ), 
    .FCI(\CIC1Sin/n11869 ), .F0(\CIC1Sin/n4763 ), .F1(\CIC1Sin/n4762 ), 
    .FCO(\CIC1Sin/n11870 ));
  CIC1Sin_SLICE_582 \CIC1Sin/SLICE_582 ( .B1(\CIC1Sin/d4_61 ), 
    .A1(\CIC1Sin/d3_61 ), .B0(\CIC1Sin/d4_60 ), .A0(\CIC1Sin/d3_60 ), 
    .FCI(\CIC1Sin/n11868 ), .F0(\CIC1Sin/n4765 ), .F1(\CIC1Sin/n4764 ), 
    .FCO(\CIC1Sin/n11869 ));
  CIC1Sin_SLICE_583 \CIC1Sin/SLICE_583 ( .B1(\CIC1Sin/d4_59 ), 
    .A1(\CIC1Sin/d3_59 ), .B0(\CIC1Sin/d4_58 ), .A0(\CIC1Sin/d3_58 ), 
    .FCI(\CIC1Sin/n11867 ), .F0(\CIC1Sin/n4767 ), .F1(\CIC1Sin/n4766 ), 
    .FCO(\CIC1Sin/n11868 ));
  CIC1Sin_SLICE_584 \CIC1Sin/SLICE_584 ( .B1(\CIC1Sin/d4_57 ), 
    .A1(\CIC1Sin/d3_57 ), .B0(\CIC1Sin/d4_56 ), .A0(\CIC1Sin/d3_56 ), 
    .FCI(\CIC1Sin/n11866 ), .F0(\CIC1Sin/n4769 ), .F1(\CIC1Sin/n4768 ), 
    .FCO(\CIC1Sin/n11867 ));
  CIC1Sin_SLICE_585 \CIC1Sin/SLICE_585 ( .B1(\CIC1Sin/d4_55 ), 
    .A1(\CIC1Sin/d3_55 ), .B0(\CIC1Sin/d4_54 ), .A0(\CIC1Sin/d3_54 ), 
    .FCI(\CIC1Sin/n11865 ), .F0(\CIC1Sin/n4771 ), .F1(\CIC1Sin/n4770 ), 
    .FCO(\CIC1Sin/n11866 ));
  CIC1Sin_SLICE_586 \CIC1Sin/SLICE_586 ( .B1(\CIC1Sin/d4_53 ), 
    .A1(\CIC1Sin/d3_53 ), .B0(\CIC1Sin/d4_52 ), .A0(\CIC1Sin/d3_52 ), 
    .FCI(\CIC1Sin/n11864 ), .F0(\CIC1Sin/n4773 ), .F1(\CIC1Sin/n4772 ), 
    .FCO(\CIC1Sin/n11865 ));
  CIC1Sin_SLICE_587 \CIC1Sin/SLICE_587 ( .B1(\CIC1Sin/d4_51 ), 
    .A1(\CIC1Sin/d3_51 ), .B0(\CIC1Sin/d4_50 ), .A0(\CIC1Sin/d3_50 ), 
    .FCI(\CIC1Sin/n11863 ), .F0(\CIC1Sin/n4775 ), .F1(\CIC1Sin/n4774 ), 
    .FCO(\CIC1Sin/n11864 ));
  CIC1Sin_SLICE_588 \CIC1Sin/SLICE_588 ( .B1(\CIC1Sin/d4_49 ), 
    .A1(\CIC1Sin/d3_49 ), .B0(\CIC1Sin/d4_48 ), .A0(\CIC1Sin/d3_48 ), 
    .FCI(\CIC1Sin/n11862 ), .F0(\CIC1Sin/n4777 ), .F1(\CIC1Sin/n4776 ), 
    .FCO(\CIC1Sin/n11863 ));
  CIC1Sin_SLICE_589 \CIC1Sin/SLICE_589 ( .B1(\CIC1Sin/d4_47 ), 
    .A1(\CIC1Sin/d3_47 ), .B0(\CIC1Sin/d4_46 ), .A0(\CIC1Sin/d3_46 ), 
    .FCI(\CIC1Sin/n11861 ), .F0(\CIC1Sin/n4779 ), .F1(\CIC1Sin/n4778 ), 
    .FCO(\CIC1Sin/n11862 ));
  CIC1Sin_SLICE_590 \CIC1Sin/SLICE_590 ( .B1(\CIC1Sin/d4_45 ), 
    .A1(\CIC1Sin/d3_45 ), .B0(\CIC1Sin/d4_44 ), .A0(\CIC1Sin/d3_44 ), 
    .FCI(\CIC1Sin/n11860 ), .F0(\CIC1Sin/n4781 ), .F1(\CIC1Sin/n4780 ), 
    .FCO(\CIC1Sin/n11861 ));
  CIC1Sin_SLICE_591 \CIC1Sin/SLICE_591 ( .B1(\CIC1Sin/d4_43 ), 
    .A1(\CIC1Sin/d3_43 ), .B0(\CIC1Sin/d4_42 ), .A0(\CIC1Sin/d3_42 ), 
    .FCI(\CIC1Sin/n11859 ), .F0(\CIC1Sin/n4783 ), .F1(\CIC1Sin/n4782 ), 
    .FCO(\CIC1Sin/n11860 ));
  CIC1Sin_SLICE_592 \CIC1Sin/SLICE_592 ( .B1(\CIC1Sin/d4_41 ), 
    .A1(\CIC1Sin/d3_41 ), .B0(\CIC1Sin/d4_40 ), .A0(\CIC1Sin/d3_40 ), 
    .FCI(\CIC1Sin/n11858 ), .F0(\CIC1Sin/n4785 ), .F1(\CIC1Sin/n4784 ), 
    .FCO(\CIC1Sin/n11859 ));
  CIC1Sin_SLICE_593 \CIC1Sin/SLICE_593 ( .B1(\CIC1Sin/d4_39 ), 
    .A1(\CIC1Sin/d3_39 ), .B0(\CIC1Sin/d4_38 ), .A0(\CIC1Sin/d3_38 ), 
    .FCI(\CIC1Sin/n11857 ), .F0(\CIC1Sin/n4787 ), .F1(\CIC1Sin/n4786 ), 
    .FCO(\CIC1Sin/n11858 ));
  CIC1Sin_SLICE_594 \CIC1Sin/SLICE_594 ( .B1(\CIC1Sin/d4_37 ), 
    .A1(\CIC1Sin/d3_37 ), .B0(\CIC1Sin/d4_36 ), .A0(\CIC1Sin/d3_36 ), 
    .F1(\CIC1Sin/n4788 ), .FCO(\CIC1Sin/n11857 ));
  CIC1Sin_SLICE_595 \CIC1Sin/SLICE_595 ( .D1(\CIC1Sin/d3_71 ), 
    .C1(\CIC1Sin/n4754 ), .B1(\CIC1Sin/n4752 ), .A1(\CIC1Sin/d4_71 ), 
    .D0(\CIC1Sin/d3_70 ), .C0(\CIC1Sin/n4755 ), .B0(\CIC1Sin/n4752 ), 
    .A0(\CIC1Sin/d4_70 ), .DI1(\CIC1Sin/d4_71_N_634_71 ), 
    .DI0(\CIC1Sin/d4_71_N_634_70 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11854 ), 
    .F0(\CIC1Sin/d4_71_N_634_70 ), .Q0(\CIC1Sin/d4_70 ), 
    .F1(\CIC1Sin/d4_71_N_634_71 ), .Q1(\CIC1Sin/d4_71 ));
  CIC1Sin_SLICE_596 \CIC1Sin/SLICE_596 ( .D1(\CIC1Sin/d3_69 ), 
    .C1(\CIC1Sin/n4756 ), .B1(\CIC1Sin/n4752 ), .A1(\CIC1Sin/d4_69 ), 
    .D0(\CIC1Sin/d3_68 ), .C0(\CIC1Sin/n4757 ), .B0(\CIC1Sin/n4752 ), 
    .A0(\CIC1Sin/d4_68 ), .DI1(\CIC1Sin/d4_71_N_634_69 ), 
    .DI0(\CIC1Sin/d4_71_N_634_68 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11853 ), 
    .F0(\CIC1Sin/d4_71_N_634_68 ), .Q0(\CIC1Sin/d4_68 ), 
    .F1(\CIC1Sin/d4_71_N_634_69 ), .Q1(\CIC1Sin/d4_69 ), 
    .FCO(\CIC1Sin/n11854 ));
  CIC1Sin_SLICE_597 \CIC1Sin/SLICE_597 ( .D1(\CIC1Sin/d3_67 ), 
    .C1(\CIC1Sin/n4758 ), .B1(\CIC1Sin/n4752 ), .A1(\CIC1Sin/d4_67 ), 
    .D0(\CIC1Sin/d3_66 ), .C0(\CIC1Sin/n4759 ), .B0(\CIC1Sin/n4752 ), 
    .A0(\CIC1Sin/d4_66 ), .DI1(\CIC1Sin/d4_71_N_634_67 ), 
    .DI0(\CIC1Sin/d4_71_N_634_66 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11852 ), 
    .F0(\CIC1Sin/d4_71_N_634_66 ), .Q0(\CIC1Sin/d4_66 ), 
    .F1(\CIC1Sin/d4_71_N_634_67 ), .Q1(\CIC1Sin/d4_67 ), 
    .FCO(\CIC1Sin/n11853 ));
  CIC1Sin_SLICE_598 \CIC1Sin/SLICE_598 ( .D1(\CIC1Sin/d3_65 ), 
    .C1(\CIC1Sin/n4760 ), .B1(\CIC1Sin/n4752 ), .A1(\CIC1Sin/d4_65 ), 
    .D0(\CIC1Sin/d3_64 ), .C0(\CIC1Sin/n4761 ), .B0(\CIC1Sin/n4752 ), 
    .A0(\CIC1Sin/d4_64 ), .DI1(\CIC1Sin/d4_71_N_634_65 ), 
    .DI0(\CIC1Sin/d4_71_N_634_64 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11851 ), 
    .F0(\CIC1Sin/d4_71_N_634_64 ), .Q0(\CIC1Sin/d4_64 ), 
    .F1(\CIC1Sin/d4_71_N_634_65 ), .Q1(\CIC1Sin/d4_65 ), 
    .FCO(\CIC1Sin/n11852 ));
  CIC1Sin_SLICE_599 \CIC1Sin/SLICE_599 ( .D1(\CIC1Sin/d3_63 ), 
    .C1(\CIC1Sin/n4762 ), .B1(\CIC1Sin/n4752 ), .A1(\CIC1Sin/d4_63 ), 
    .D0(\CIC1Sin/d3_62 ), .C0(\CIC1Sin/n4763 ), .B0(\CIC1Sin/n4752 ), 
    .A0(\CIC1Sin/d4_62 ), .DI1(\CIC1Sin/d4_71_N_634_63 ), 
    .DI0(\CIC1Sin/d4_71_N_634_62 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11850 ), 
    .F0(\CIC1Sin/d4_71_N_634_62 ), .Q0(\CIC1Sin/d4_62 ), 
    .F1(\CIC1Sin/d4_71_N_634_63 ), .Q1(\CIC1Sin/d4_63 ), 
    .FCO(\CIC1Sin/n11851 ));
  CIC1Sin_SLICE_600 \CIC1Sin/SLICE_600 ( .D1(\CIC1Sin/d3_61 ), 
    .C1(\CIC1Sin/n4764 ), .B1(\CIC1Sin/n4752 ), .A1(\CIC1Sin/d4_61 ), 
    .D0(\CIC1Sin/d3_60 ), .C0(\CIC1Sin/n4765 ), .B0(\CIC1Sin/n4752 ), 
    .A0(\CIC1Sin/d4_60 ), .DI1(\CIC1Sin/d4_71_N_634_61 ), 
    .DI0(\CIC1Sin/d4_71_N_634_60 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11849 ), 
    .F0(\CIC1Sin/d4_71_N_634_60 ), .Q0(\CIC1Sin/d4_60 ), 
    .F1(\CIC1Sin/d4_71_N_634_61 ), .Q1(\CIC1Sin/d4_61 ), 
    .FCO(\CIC1Sin/n11850 ));
  CIC1Sin_SLICE_601 \CIC1Sin/SLICE_601 ( .B0(\CIC1Sin/d_d_tmp_71 ), 
    .A0(\CIC1Sin/d_tmp_71 ), .FCI(\CIC1Sin/n12037 ), .F0(\CIC1Sin/n4146 ));
  CIC1Sin_SLICE_602 \CIC1Sin/SLICE_602 ( .B1(\CIC1Sin/d_d_tmp_70 ), 
    .A1(\CIC1Sin/d_tmp_70 ), .B0(\CIC1Sin/d_d_tmp_69 ), 
    .A0(\CIC1Sin/d_tmp_69 ), .FCI(\CIC1Sin/n12036 ), .F0(\CIC1Sin/n4148 ), 
    .F1(\CIC1Sin/n4147 ), .FCO(\CIC1Sin/n12037 ));
  CIC1Sin_SLICE_603 \CIC1Sin/SLICE_603 ( .B1(\CIC1Sin/d_d_tmp_68 ), 
    .A1(\CIC1Sin/d_tmp_68 ), .B0(\CIC1Sin/d_d_tmp_67 ), 
    .A0(\CIC1Sin/d_tmp_67 ), .FCI(\CIC1Sin/n12035 ), .F0(\CIC1Sin/n4150 ), 
    .F1(\CIC1Sin/n4149 ), .FCO(\CIC1Sin/n12036 ));
  CIC1Sin_SLICE_604 \CIC1Sin/SLICE_604 ( .D1(\CIC1Sin/d3_59 ), 
    .C1(\CIC1Sin/n4766 ), .B1(\CIC1Sin/n4752 ), .A1(\CIC1Sin/d4_59 ), 
    .D0(\CIC1Sin/d3_58 ), .C0(\CIC1Sin/n4767 ), .B0(\CIC1Sin/n4752 ), 
    .A0(\CIC1Sin/d4_58 ), .DI1(\CIC1Sin/d4_71_N_634_59 ), 
    .DI0(\CIC1Sin/d4_71_N_634_58 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11848 ), 
    .F0(\CIC1Sin/d4_71_N_634_58 ), .Q0(\CIC1Sin/d4_58 ), 
    .F1(\CIC1Sin/d4_71_N_634_59 ), .Q1(\CIC1Sin/d4_59 ), 
    .FCO(\CIC1Sin/n11849 ));
  CIC1Sin_SLICE_605 \CIC1Sin/SLICE_605 ( .B1(\CIC1Sin/d_d_tmp_66 ), 
    .A1(\CIC1Sin/d_tmp_66 ), .B0(\CIC1Sin/d_d_tmp_65 ), 
    .A0(\CIC1Sin/d_tmp_65 ), .FCI(\CIC1Sin/n12034 ), .F0(\CIC1Sin/n4152 ), 
    .F1(\CIC1Sin/n4151 ), .FCO(\CIC1Sin/n12035 ));
  CIC1Sin_SLICE_606 \CIC1Sin/SLICE_606 ( .B1(\CIC1Sin/d_d_tmp_64 ), 
    .A1(\CIC1Sin/d_tmp_64 ), .B0(\CIC1Sin/d_d_tmp_63 ), 
    .A0(\CIC1Sin/d_tmp_63 ), .FCI(\CIC1Sin/n12033 ), .F0(\CIC1Sin/n4154 ), 
    .F1(\CIC1Sin/n4153 ), .FCO(\CIC1Sin/n12034 ));
  CIC1Sin_SLICE_607 \CIC1Sin/SLICE_607 ( .B1(\CIC1Sin/d_d_tmp_62 ), 
    .A1(\CIC1Sin/d_tmp_62 ), .B0(\CIC1Sin/d_d_tmp_61 ), 
    .A0(\CIC1Sin/d_tmp_61 ), .FCI(\CIC1Sin/n12032 ), .F0(\CIC1Sin/n4156 ), 
    .F1(\CIC1Sin/n4155 ), .FCO(\CIC1Sin/n12033 ));
  CIC1Sin_SLICE_608 \CIC1Sin/SLICE_608 ( .D1(\CIC1Sin/d3_57 ), 
    .C1(\CIC1Sin/n4768 ), .B1(\CIC1Sin/n4752 ), .A1(\CIC1Sin/d4_57 ), 
    .D0(\CIC1Sin/d3_56 ), .C0(\CIC1Sin/n4769 ), .B0(\CIC1Sin/n4752 ), 
    .A0(\CIC1Sin/d4_56 ), .DI1(\CIC1Sin/d4_71_N_634_57 ), 
    .DI0(\CIC1Sin/d4_71_N_634_56 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11847 ), 
    .F0(\CIC1Sin/d4_71_N_634_56 ), .Q0(\CIC1Sin/d4_56 ), 
    .F1(\CIC1Sin/d4_71_N_634_57 ), .Q1(\CIC1Sin/d4_57 ), 
    .FCO(\CIC1Sin/n11848 ));
  CIC1Sin_SLICE_609 \CIC1Sin/SLICE_609 ( .D1(\CIC1Sin/d3_55 ), 
    .C1(\CIC1Sin/n4770 ), .B1(\CIC1Sin/n4752 ), .A1(\CIC1Sin/d4_55 ), 
    .D0(\CIC1Sin/d3_54 ), .C0(\CIC1Sin/n4771 ), .B0(\CIC1Sin/n4752 ), 
    .A0(\CIC1Sin/d4_54 ), .DI1(\CIC1Sin/d4_71_N_634_55 ), 
    .DI0(\CIC1Sin/d4_71_N_634_54 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11846 ), 
    .F0(\CIC1Sin/d4_71_N_634_54 ), .Q0(\CIC1Sin/d4_54 ), 
    .F1(\CIC1Sin/d4_71_N_634_55 ), .Q1(\CIC1Sin/d4_55 ), 
    .FCO(\CIC1Sin/n11847 ));
  CIC1Sin_SLICE_610 \CIC1Sin/SLICE_610 ( .B1(\CIC1Sin/d_d_tmp_60 ), 
    .A1(\CIC1Sin/d_tmp_60 ), .B0(\CIC1Sin/d_d_tmp_59 ), 
    .A0(\CIC1Sin/d_tmp_59 ), .FCI(\CIC1Sin/n12031 ), .F0(\CIC1Sin/n4158 ), 
    .F1(\CIC1Sin/n4157 ), .FCO(\CIC1Sin/n12032 ));
  CIC1Sin_SLICE_611 \CIC1Sin/SLICE_611 ( .B1(\CIC1Sin/d_d_tmp_58 ), 
    .A1(\CIC1Sin/d_tmp_58 ), .B0(\CIC1Sin/d_d_tmp_57 ), 
    .A0(\CIC1Sin/d_tmp_57 ), .FCI(\CIC1Sin/n12030 ), .F0(\CIC1Sin/n4160 ), 
    .F1(\CIC1Sin/n4159 ), .FCO(\CIC1Sin/n12031 ));
  CIC1Sin_SLICE_612 \CIC1Sin/SLICE_612 ( .B1(\CIC1Sin/d_d_tmp_56 ), 
    .A1(\CIC1Sin/d_tmp_56 ), .B0(\CIC1Sin/d_d_tmp_55 ), 
    .A0(\CIC1Sin/d_tmp_55 ), .FCI(\CIC1Sin/n12029 ), .F0(\CIC1Sin/n4162 ), 
    .F1(\CIC1Sin/n4161 ), .FCO(\CIC1Sin/n12030 ));
  CIC1Sin_SLICE_613 \CIC1Sin/SLICE_613 ( .D1(\CIC1Sin/d3_53 ), 
    .C1(\CIC1Sin/n4772 ), .B1(\CIC1Sin/n4752 ), .A1(\CIC1Sin/d4_53 ), 
    .D0(\CIC1Sin/d3_52 ), .C0(\CIC1Sin/n4773 ), .B0(\CIC1Sin/n4752 ), 
    .A0(\CIC1Sin/d4_52 ), .DI1(\CIC1Sin/d4_71_N_634_53 ), 
    .DI0(\CIC1Sin/d4_71_N_634_52 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11845 ), 
    .F0(\CIC1Sin/d4_71_N_634_52 ), .Q0(\CIC1Sin/d4_52 ), 
    .F1(\CIC1Sin/d4_71_N_634_53 ), .Q1(\CIC1Sin/d4_53 ), 
    .FCO(\CIC1Sin/n11846 ));
  CIC1Sin_SLICE_614 \CIC1Sin/SLICE_614 ( .B1(\CIC1Sin/d_d_tmp_54 ), 
    .A1(\CIC1Sin/d_tmp_54 ), .B0(\CIC1Sin/d_d_tmp_53 ), 
    .A0(\CIC1Sin/d_tmp_53 ), .FCI(\CIC1Sin/n12028 ), .F0(\CIC1Sin/n4164 ), 
    .F1(\CIC1Sin/n4163 ), .FCO(\CIC1Sin/n12029 ));
  CIC1Sin_SLICE_615 \CIC1Sin/SLICE_615 ( .B1(\CIC1Sin/d_d_tmp_52 ), 
    .A1(\CIC1Sin/d_tmp_52 ), .B0(\CIC1Sin/d_d_tmp_51 ), 
    .A0(\CIC1Sin/d_tmp_51 ), .FCI(\CIC1Sin/n12027 ), .F0(\CIC1Sin/n4166 ), 
    .F1(\CIC1Sin/n4165 ), .FCO(\CIC1Sin/n12028 ));
  CIC1Sin_SLICE_616 \CIC1Sin/SLICE_616 ( .B1(\CIC1Sin/d_d_tmp_50 ), 
    .A1(\CIC1Sin/d_tmp_50 ), .B0(\CIC1Sin/d_d_tmp_49 ), 
    .A0(\CIC1Sin/d_tmp_49 ), .FCI(\CIC1Sin/n12026 ), .F0(\CIC1Sin/n4168 ), 
    .F1(\CIC1Sin/n4167 ), .FCO(\CIC1Sin/n12027 ));
  CIC1Sin_SLICE_617 \CIC1Sin/SLICE_617 ( .D1(\CIC1Sin/d3_51 ), 
    .C1(\CIC1Sin/n4774 ), .B1(\CIC1Sin/n4752 ), .A1(\CIC1Sin/d4_51 ), 
    .D0(\CIC1Sin/d3_50 ), .C0(\CIC1Sin/n4775 ), .B0(\CIC1Sin/n4752 ), 
    .A0(\CIC1Sin/d4_50 ), .DI1(\CIC1Sin/d4_71_N_634_51 ), 
    .DI0(\CIC1Sin/d4_71_N_634_50 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11844 ), 
    .F0(\CIC1Sin/d4_71_N_634_50 ), .Q0(\CIC1Sin/d4_50 ), 
    .F1(\CIC1Sin/d4_71_N_634_51 ), .Q1(\CIC1Sin/d4_51 ), 
    .FCO(\CIC1Sin/n11845 ));
  CIC1Sin_SLICE_618 \CIC1Sin/SLICE_618 ( .D1(\CIC1Sin/d3_49 ), 
    .C1(\CIC1Sin/n4776 ), .B1(\CIC1Sin/n4752 ), .A1(\CIC1Sin/d4_49 ), 
    .D0(\CIC1Sin/d3_48 ), .C0(\CIC1Sin/n4777 ), .B0(\CIC1Sin/n4752 ), 
    .A0(\CIC1Sin/d4_48 ), .DI1(\CIC1Sin/d4_71_N_634_49 ), 
    .DI0(\CIC1Sin/d4_71_N_634_48 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11843 ), 
    .F0(\CIC1Sin/d4_71_N_634_48 ), .Q0(\CIC1Sin/d4_48 ), 
    .F1(\CIC1Sin/d4_71_N_634_49 ), .Q1(\CIC1Sin/d4_49 ), 
    .FCO(\CIC1Sin/n11844 ));
  CIC1Sin_SLICE_619 \CIC1Sin/SLICE_619 ( .B1(\CIC1Sin/d_d_tmp_48 ), 
    .A1(\CIC1Sin/d_tmp_48 ), .B0(\CIC1Sin/d_d_tmp_47 ), 
    .A0(\CIC1Sin/d_tmp_47 ), .FCI(\CIC1Sin/n12025 ), .F0(\CIC1Sin/n4170 ), 
    .F1(\CIC1Sin/n4169 ), .FCO(\CIC1Sin/n12026 ));
  CIC1Sin_SLICE_620 \CIC1Sin/SLICE_620 ( .B1(\CIC1Sin/d_d_tmp_46 ), 
    .A1(\CIC1Sin/d_tmp_46 ), .B0(\CIC1Sin/d_d_tmp_45 ), 
    .A0(\CIC1Sin/d_tmp_45 ), .FCI(\CIC1Sin/n12024 ), .F0(\CIC1Sin/n4172 ), 
    .F1(\CIC1Sin/n4171 ), .FCO(\CIC1Sin/n12025 ));
  CIC1Sin_SLICE_621 \CIC1Sin/SLICE_621 ( .B1(\CIC1Sin/d_d_tmp_44 ), 
    .A1(\CIC1Sin/d_tmp_44 ), .B0(\CIC1Sin/d_d_tmp_43 ), 
    .A0(\CIC1Sin/d_tmp_43 ), .FCI(\CIC1Sin/n12023 ), .F0(\CIC1Sin/n4174 ), 
    .F1(\CIC1Sin/n4173 ), .FCO(\CIC1Sin/n12024 ));
  CIC1Sin_SLICE_622 \CIC1Sin/SLICE_622 ( .D1(\CIC1Sin/d3_47 ), 
    .C1(\CIC1Sin/n4778 ), .B1(\CIC1Sin/n4752 ), .A1(\CIC1Sin/d4_47 ), 
    .D0(\CIC1Sin/d3_46 ), .C0(\CIC1Sin/n4779 ), .B0(\CIC1Sin/n4752 ), 
    .A0(\CIC1Sin/d4_46 ), .DI1(\CIC1Sin/d4_71_N_634_47 ), 
    .DI0(\CIC1Sin/d4_71_N_634_46 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11842 ), 
    .F0(\CIC1Sin/d4_71_N_634_46 ), .Q0(\CIC1Sin/d4_46 ), 
    .F1(\CIC1Sin/d4_71_N_634_47 ), .Q1(\CIC1Sin/d4_47 ), 
    .FCO(\CIC1Sin/n11843 ));
  CIC1Sin_SLICE_623 \CIC1Sin/SLICE_623 ( .B1(\CIC1Sin/d_d_tmp_42 ), 
    .A1(\CIC1Sin/d_tmp_42 ), .B0(\CIC1Sin/d_d_tmp_41 ), 
    .A0(\CIC1Sin/d_tmp_41 ), .FCI(\CIC1Sin/n12022 ), .F0(\CIC1Sin/n4176 ), 
    .F1(\CIC1Sin/n4175 ), .FCO(\CIC1Sin/n12023 ));
  CIC1Sin_SLICE_624 \CIC1Sin/SLICE_624 ( .B1(\CIC1Sin/d_d_tmp_40 ), 
    .A1(\CIC1Sin/d_tmp_40 ), .B0(\CIC1Sin/d_d_tmp_39 ), 
    .A0(\CIC1Sin/d_tmp_39 ), .FCI(\CIC1Sin/n12021 ), .F0(\CIC1Sin/n4178 ), 
    .F1(\CIC1Sin/n4177 ), .FCO(\CIC1Sin/n12022 ));
  CIC1Sin_SLICE_625 \CIC1Sin/SLICE_625 ( .B1(\CIC1Sin/d_d_tmp_38 ), 
    .A1(\CIC1Sin/d_tmp_38 ), .B0(\CIC1Sin/d_d_tmp_37 ), 
    .A0(\CIC1Sin/d_tmp_37 ), .FCI(\CIC1Sin/n12020 ), .F0(\CIC1Sin/n4180 ), 
    .F1(\CIC1Sin/n4179 ), .FCO(\CIC1Sin/n12021 ));
  CIC1Sin_SLICE_626 \CIC1Sin/SLICE_626 ( .D1(\CIC1Sin/d3_45 ), 
    .C1(\CIC1Sin/n4780 ), .B1(\CIC1Sin/n4752 ), .A1(\CIC1Sin/d4_45 ), 
    .D0(\CIC1Sin/d3_44 ), .C0(\CIC1Sin/n4781 ), .B0(\CIC1Sin/n4752 ), 
    .A0(\CIC1Sin/d4_44 ), .DI1(\CIC1Sin/d4_71_N_634_45 ), 
    .DI0(\CIC1Sin/d4_71_N_634_44 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11841 ), 
    .F0(\CIC1Sin/d4_71_N_634_44 ), .Q0(\CIC1Sin/d4_44 ), 
    .F1(\CIC1Sin/d4_71_N_634_45 ), .Q1(\CIC1Sin/d4_45 ), 
    .FCO(\CIC1Sin/n11842 ));
  CIC1Sin_SLICE_627 \CIC1Sin/SLICE_627 ( .D1(\CIC1Sin/d3_43 ), 
    .C1(\CIC1Sin/n4782 ), .B1(\CIC1Sin/n4752 ), .A1(\CIC1Sin/d4_43 ), 
    .D0(\CIC1Sin/d3_42 ), .C0(\CIC1Sin/n4783 ), .B0(\CIC1Sin/n4752 ), 
    .A0(\CIC1Sin/d4_42 ), .DI1(\CIC1Sin/d4_71_N_634_43 ), 
    .DI0(\CIC1Sin/d4_71_N_634_42 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11840 ), 
    .F0(\CIC1Sin/d4_71_N_634_42 ), .Q0(\CIC1Sin/d4_42 ), 
    .F1(\CIC1Sin/d4_71_N_634_43 ), .Q1(\CIC1Sin/d4_43 ), 
    .FCO(\CIC1Sin/n11841 ));
  CIC1Sin_SLICE_628 \CIC1Sin/SLICE_628 ( .B1(\CIC1Sin/d_d_tmp_36 ), 
    .A1(\CIC1Sin/d_tmp_36 ), .F1(\CIC1Sin/n4181 ), .FCO(\CIC1Sin/n12020 ));
  CIC1Sin_SLICE_629 \CIC1Sin/SLICE_629 ( .D1(\CIC1Sin/d_tmp_71 ), 
    .C1(\CIC1Sin/n4146 ), .B1(\CIC1Sin/n4144 ), .A1(\CIC1Sin/d_d_tmp_71 ), 
    .D0(\CIC1Sin/d_tmp_70 ), .C0(\CIC1Sin/n4147 ), .B0(\CIC1Sin/n4144 ), 
    .A0(\CIC1Sin/d_d_tmp_70 ), .DI1(\CIC1Sin/d6_71_N_1459_71 ), 
    .DI0(\CIC1Sin/d6_71_N_1459_70 ), .CE(\CIC1Sin/osc_clk_enable_260 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n12018 ), .F0(\CIC1Sin/d6_71_N_1459_70 ), 
    .Q0(\CIC1Sin/d6_70 ), .F1(\CIC1Sin/d6_71_N_1459_71 ), .Q1(\CIC1Sin/d6_71 ));
  CIC1Sin_SLICE_630 \CIC1Sin/SLICE_630 ( .D1(\CIC1Sin/d_tmp_69 ), 
    .C1(\CIC1Sin/n4148 ), .B1(\CIC1Sin/n4144 ), .A1(\CIC1Sin/d_d_tmp_69 ), 
    .D0(\CIC1Sin/d_tmp_68 ), .C0(\CIC1Sin/n4149 ), .B0(\CIC1Sin/n4144 ), 
    .A0(\CIC1Sin/d_d_tmp_68 ), .DI1(\CIC1Sin/d6_71_N_1459_69 ), 
    .DI0(\CIC1Sin/d6_71_N_1459_68 ), .CE(\CIC1Sin/osc_clk_enable_210 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n12017 ), .F0(\CIC1Sin/d6_71_N_1459_68 ), 
    .Q0(\CIC1Sin/d6_68 ), .F1(\CIC1Sin/d6_71_N_1459_69 ), .Q1(\CIC1Sin/d6_69 ), 
    .FCO(\CIC1Sin/n12018 ));
  CIC1Sin_SLICE_631 \CIC1Sin/SLICE_631 ( .D1(\CIC1Sin/d_tmp_67 ), 
    .C1(\CIC1Sin/n4150 ), .B1(\CIC1Sin/n4144 ), .A1(\CIC1Sin/d_d_tmp_67 ), 
    .D0(\CIC1Sin/d_tmp_66 ), .C0(\CIC1Sin/n4151 ), .B0(\CIC1Sin/n4144 ), 
    .A0(\CIC1Sin/d_d_tmp_66 ), .DI1(\CIC1Sin/d6_71_N_1459_67 ), 
    .DI0(\CIC1Sin/d6_71_N_1459_66 ), .CE(\CIC1Sin/osc_clk_enable_210 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n12016 ), .F0(\CIC1Sin/d6_71_N_1459_66 ), 
    .Q0(\CIC1Sin/d6_66 ), .F1(\CIC1Sin/d6_71_N_1459_67 ), .Q1(\CIC1Sin/d6_67 ), 
    .FCO(\CIC1Sin/n12017 ));
  CIC1Sin_SLICE_632 \CIC1Sin/SLICE_632 ( .D1(\CIC1Sin/d_tmp_65 ), 
    .C1(\CIC1Sin/n4152 ), .B1(\CIC1Sin/n4144 ), .A1(\CIC1Sin/d_d_tmp_65 ), 
    .D0(\CIC1Sin/d_tmp_64 ), .C0(\CIC1Sin/n4153 ), .B0(\CIC1Sin/n4144 ), 
    .A0(\CIC1Sin/d_d_tmp_64 ), .DI1(\CIC1Sin/d6_71_N_1459_65 ), 
    .DI0(\CIC1Sin/d6_71_N_1459_64 ), .CE(\CIC1Sin/osc_clk_enable_210 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n12015 ), .F0(\CIC1Sin/d6_71_N_1459_64 ), 
    .Q0(\CIC1Sin/d6_64 ), .F1(\CIC1Sin/d6_71_N_1459_65 ), .Q1(\CIC1Sin/d6_65 ), 
    .FCO(\CIC1Sin/n12016 ));
  CIC1Sin_SLICE_633 \CIC1Sin/SLICE_633 ( .D1(\CIC1Sin/d_tmp_63 ), 
    .C1(\CIC1Sin/n4154 ), .B1(\CIC1Sin/n4144 ), .A1(\CIC1Sin/d_d_tmp_63 ), 
    .D0(\CIC1Sin/d_tmp_62 ), .C0(\CIC1Sin/n4155 ), .B0(\CIC1Sin/n4144 ), 
    .A0(\CIC1Sin/d_d_tmp_62 ), .DI1(\CIC1Sin/d6_71_N_1459_63 ), 
    .DI0(\CIC1Sin/d6_71_N_1459_62 ), .CE(\CIC1Sin/osc_clk_enable_210 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n12014 ), .F0(\CIC1Sin/d6_71_N_1459_62 ), 
    .Q0(\CIC1Sin/d6_62 ), .F1(\CIC1Sin/d6_71_N_1459_63 ), .Q1(\CIC1Sin/d6_63 ), 
    .FCO(\CIC1Sin/n12015 ));
  CIC1Sin_SLICE_634 \CIC1Sin/SLICE_634 ( .D1(\CIC1Sin/d_tmp_61 ), 
    .C1(\CIC1Sin/n4156 ), .B1(\CIC1Sin/n4144 ), .A1(\CIC1Sin/d_d_tmp_61 ), 
    .D0(\CIC1Sin/d_tmp_60 ), .C0(\CIC1Sin/n4157 ), .B0(\CIC1Sin/n4144 ), 
    .A0(\CIC1Sin/d_d_tmp_60 ), .DI1(\CIC1Sin/d6_71_N_1459_61 ), 
    .DI0(\CIC1Sin/d6_71_N_1459_60 ), .CE(\CIC1Sin/osc_clk_enable_210 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n12013 ), .F0(\CIC1Sin/d6_71_N_1459_60 ), 
    .Q0(\CIC1Sin/d6_60 ), .F1(\CIC1Sin/d6_71_N_1459_61 ), .Q1(\CIC1Sin/d6_61 ), 
    .FCO(\CIC1Sin/n12014 ));
  CIC1Sin_SLICE_635 \CIC1Sin/SLICE_635 ( .D1(\CIC1Sin/d_tmp_59 ), 
    .C1(\CIC1Sin/n4158 ), .B1(\CIC1Sin/n4144 ), .A1(\CIC1Sin/d_d_tmp_59 ), 
    .D0(\CIC1Sin/d_tmp_58 ), .C0(\CIC1Sin/n4159 ), .B0(\CIC1Sin/n4144 ), 
    .A0(\CIC1Sin/d_d_tmp_58 ), .DI1(\CIC1Sin/d6_71_N_1459_59 ), 
    .DI0(\CIC1Sin/d6_71_N_1459_58 ), .CE(\CIC1Sin/osc_clk_enable_210 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n12012 ), .F0(\CIC1Sin/d6_71_N_1459_58 ), 
    .Q0(\CIC1Sin/d6_58 ), .F1(\CIC1Sin/d6_71_N_1459_59 ), .Q1(\CIC1Sin/d6_59 ), 
    .FCO(\CIC1Sin/n12013 ));
  CIC1Sin_SLICE_636 \CIC1Sin/SLICE_636 ( .D1(\CIC1Sin/d_tmp_57 ), 
    .C1(\CIC1Sin/n4160 ), .B1(\CIC1Sin/n4144 ), .A1(\CIC1Sin/d_d_tmp_57 ), 
    .D0(\CIC1Sin/d_tmp_56 ), .C0(\CIC1Sin/n4161 ), .B0(\CIC1Sin/n4144 ), 
    .A0(\CIC1Sin/d_d_tmp_56 ), .DI1(\CIC1Sin/d6_71_N_1459_57 ), 
    .DI0(\CIC1Sin/d6_71_N_1459_56 ), .CE(\CIC1Sin/osc_clk_enable_210 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n12011 ), .F0(\CIC1Sin/d6_71_N_1459_56 ), 
    .Q0(\CIC1Sin/d6_56 ), .F1(\CIC1Sin/d6_71_N_1459_57 ), .Q1(\CIC1Sin/d6_57 ), 
    .FCO(\CIC1Sin/n12012 ));
  CIC1Sin_SLICE_637 \CIC1Sin/SLICE_637 ( .D1(\CIC1Sin/d_tmp_55 ), 
    .C1(\CIC1Sin/n4162 ), .B1(\CIC1Sin/n4144 ), .A1(\CIC1Sin/d_d_tmp_55 ), 
    .D0(\CIC1Sin/d_tmp_54 ), .C0(\CIC1Sin/n4163 ), .B0(\CIC1Sin/n4144 ), 
    .A0(\CIC1Sin/d_d_tmp_54 ), .DI1(\CIC1Sin/d6_71_N_1459_55 ), 
    .DI0(\CIC1Sin/d6_71_N_1459_54 ), .CE(\CIC1Sin/osc_clk_enable_210 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n12010 ), .F0(\CIC1Sin/d6_71_N_1459_54 ), 
    .Q0(\CIC1Sin/d6_54 ), .F1(\CIC1Sin/d6_71_N_1459_55 ), .Q1(\CIC1Sin/d6_55 ), 
    .FCO(\CIC1Sin/n12011 ));
  CIC1Sin_SLICE_638 \CIC1Sin/SLICE_638 ( .D1(\CIC1Sin/d_tmp_53 ), 
    .C1(\CIC1Sin/n4164 ), .B1(\CIC1Sin/n4144 ), .A1(\CIC1Sin/d_d_tmp_53 ), 
    .D0(\CIC1Sin/d_tmp_52 ), .C0(\CIC1Sin/n4165 ), .B0(\CIC1Sin/n4144 ), 
    .A0(\CIC1Sin/d_d_tmp_52 ), .DI1(\CIC1Sin/d6_71_N_1459_53 ), 
    .DI0(\CIC1Sin/d6_71_N_1459_52 ), .CE(\CIC1Sin/osc_clk_enable_210 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n12009 ), .F0(\CIC1Sin/d6_71_N_1459_52 ), 
    .Q0(\CIC1Sin/d6_52 ), .F1(\CIC1Sin/d6_71_N_1459_53 ), .Q1(\CIC1Sin/d6_53 ), 
    .FCO(\CIC1Sin/n12010 ));
  CIC1Sin_SLICE_639 \CIC1Sin/SLICE_639 ( .D1(\CIC1Sin/d_tmp_51 ), 
    .C1(\CIC1Sin/n4166 ), .B1(\CIC1Sin/n4144 ), .A1(\CIC1Sin/d_d_tmp_51 ), 
    .D0(\CIC1Sin/d_tmp_50 ), .C0(\CIC1Sin/n4167 ), .B0(\CIC1Sin/n4144 ), 
    .A0(\CIC1Sin/d_d_tmp_50 ), .DI1(\CIC1Sin/d6_71_N_1459_51 ), 
    .DI0(\CIC1Sin/d6_71_N_1459_50 ), .CE(\CIC1Sin/osc_clk_enable_210 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n12008 ), .F0(\CIC1Sin/d6_71_N_1459_50 ), 
    .Q0(\CIC1Sin/d6_50 ), .F1(\CIC1Sin/d6_71_N_1459_51 ), .Q1(\CIC1Sin/d6_51 ), 
    .FCO(\CIC1Sin/n12009 ));
  CIC1Sin_SLICE_640 \CIC1Sin/SLICE_640 ( .D1(\CIC1Sin/d_tmp_49 ), 
    .C1(\CIC1Sin/n4168 ), .B1(\CIC1Sin/n4144 ), .A1(\CIC1Sin/d_d_tmp_49 ), 
    .D0(\CIC1Sin/d_tmp_48 ), .C0(\CIC1Sin/n4169 ), .B0(\CIC1Sin/n4144 ), 
    .A0(\CIC1Sin/d_d_tmp_48 ), .DI1(\CIC1Sin/d6_71_N_1459_49 ), 
    .DI0(\CIC1Sin/d6_71_N_1459_48 ), .CE(\CIC1Sin/osc_clk_enable_210 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n12007 ), .F0(\CIC1Sin/d6_71_N_1459_48 ), 
    .Q0(\CIC1Sin/d6_48 ), .F1(\CIC1Sin/d6_71_N_1459_49 ), .Q1(\CIC1Sin/d6_49 ), 
    .FCO(\CIC1Sin/n12008 ));
  CIC1Sin_SLICE_641 \CIC1Sin/SLICE_641 ( .D1(\CIC1Sin/d_tmp_47 ), 
    .C1(\CIC1Sin/n4170 ), .B1(\CIC1Sin/n4144 ), .A1(\CIC1Sin/d_d_tmp_47 ), 
    .D0(\CIC1Sin/d_tmp_46 ), .C0(\CIC1Sin/n4171 ), .B0(\CIC1Sin/n4144 ), 
    .A0(\CIC1Sin/d_d_tmp_46 ), .DI1(\CIC1Sin/d6_71_N_1459_47 ), 
    .DI0(\CIC1Sin/d6_71_N_1459_46 ), .CE(\CIC1Sin/osc_clk_enable_210 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n12006 ), .F0(\CIC1Sin/d6_71_N_1459_46 ), 
    .Q0(\CIC1Sin/d6_46 ), .F1(\CIC1Sin/d6_71_N_1459_47 ), .Q1(\CIC1Sin/d6_47 ), 
    .FCO(\CIC1Sin/n12007 ));
  CIC1Sin_SLICE_642 \CIC1Sin/SLICE_642 ( .D1(\CIC1Sin/d_tmp_45 ), 
    .C1(\CIC1Sin/n4172 ), .B1(\CIC1Sin/n4144 ), .A1(\CIC1Sin/d_d_tmp_45 ), 
    .D0(\CIC1Sin/d_tmp_44 ), .C0(\CIC1Sin/n4173 ), .B0(\CIC1Sin/n4144 ), 
    .A0(\CIC1Sin/d_d_tmp_44 ), .DI1(\CIC1Sin/d6_71_N_1459_45 ), 
    .DI0(\CIC1Sin/d6_71_N_1459_44 ), .CE(\CIC1Sin/osc_clk_enable_210 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n12005 ), .F0(\CIC1Sin/d6_71_N_1459_44 ), 
    .Q0(\CIC1Sin/d6_44 ), .F1(\CIC1Sin/d6_71_N_1459_45 ), .Q1(\CIC1Sin/d6_45 ), 
    .FCO(\CIC1Sin/n12006 ));
  CIC1Sin_SLICE_643 \CIC1Sin/SLICE_643 ( .D1(\CIC1Sin/d_tmp_43 ), 
    .C1(\CIC1Sin/n4174 ), .B1(\CIC1Sin/n4144 ), .A1(\CIC1Sin/d_d_tmp_43 ), 
    .D0(\CIC1Sin/d_tmp_42 ), .C0(\CIC1Sin/n4175 ), .B0(\CIC1Sin/n4144 ), 
    .A0(\CIC1Sin/d_d_tmp_42 ), .DI1(\CIC1Sin/d6_71_N_1459_43 ), 
    .DI0(\CIC1Sin/d6_71_N_1459_42 ), .CE(\CIC1Sin/osc_clk_enable_210 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n12004 ), .F0(\CIC1Sin/d6_71_N_1459_42 ), 
    .Q0(\CIC1Sin/d6_42 ), .F1(\CIC1Sin/d6_71_N_1459_43 ), .Q1(\CIC1Sin/d6_43 ), 
    .FCO(\CIC1Sin/n12005 ));
  CIC1Sin_SLICE_644 \CIC1Sin/SLICE_644 ( .D1(\CIC1Sin/d_tmp_41 ), 
    .C1(\CIC1Sin/n4176 ), .B1(\CIC1Sin/n4144 ), .A1(\CIC1Sin/d_d_tmp_41 ), 
    .D0(\CIC1Sin/d_tmp_40 ), .C0(\CIC1Sin/n4177 ), .B0(\CIC1Sin/n4144 ), 
    .A0(\CIC1Sin/d_d_tmp_40 ), .DI1(\CIC1Sin/d6_71_N_1459_41 ), 
    .DI0(\CIC1Sin/d6_71_N_1459_40 ), .CE(\CIC1Sin/osc_clk_enable_210 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n12003 ), .F0(\CIC1Sin/d6_71_N_1459_40 ), 
    .Q0(\CIC1Sin/d6_40 ), .F1(\CIC1Sin/d6_71_N_1459_41 ), .Q1(\CIC1Sin/d6_41 ), 
    .FCO(\CIC1Sin/n12004 ));
  CIC1Sin_SLICE_645 \CIC1Sin/SLICE_645 ( .D1(\CIC1Sin/d3_41 ), 
    .C1(\CIC1Sin/n4784 ), .B1(\CIC1Sin/n4752 ), .A1(\CIC1Sin/d4_41 ), 
    .D0(\CIC1Sin/d3_40 ), .C0(\CIC1Sin/n4785 ), .B0(\CIC1Sin/n4752 ), 
    .A0(\CIC1Sin/d4_40 ), .DI1(\CIC1Sin/d4_71_N_634_41 ), 
    .DI0(\CIC1Sin/d4_71_N_634_40 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11839 ), 
    .F0(\CIC1Sin/d4_71_N_634_40 ), .Q0(\CIC1Sin/d4_40 ), 
    .F1(\CIC1Sin/d4_71_N_634_41 ), .Q1(\CIC1Sin/d4_41 ), 
    .FCO(\CIC1Sin/n11840 ));
  CIC1Sin_SLICE_646 \CIC1Sin/SLICE_646 ( .D1(\CIC1Sin/d_tmp_39 ), 
    .C1(\CIC1Sin/n4178 ), .B1(\CIC1Sin/n4144 ), .A1(\CIC1Sin/d_d_tmp_39 ), 
    .D0(\CIC1Sin/d_tmp_38 ), .C0(\CIC1Sin/n4179 ), .B0(\CIC1Sin/n4144 ), 
    .A0(\CIC1Sin/d_d_tmp_38 ), .DI1(\CIC1Sin/d6_71_N_1459_39 ), 
    .DI0(\CIC1Sin/d6_71_N_1459_38 ), .CE(\CIC1Sin/osc_clk_enable_210 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n12002 ), .F0(\CIC1Sin/d6_71_N_1459_38 ), 
    .Q0(\CIC1Sin/d6_38 ), .F1(\CIC1Sin/d6_71_N_1459_39 ), .Q1(\CIC1Sin/d6_39 ), 
    .FCO(\CIC1Sin/n12003 ));
  CIC1Sin_SLICE_647 \CIC1Sin/SLICE_647 ( .D1(\CIC1Sin/d_tmp_37 ), 
    .C1(\CIC1Sin/n4180 ), .B1(\CIC1Sin/n4144 ), .A1(\CIC1Sin/d_d_tmp_37 ), 
    .D0(\CIC1Sin/d_tmp_36 ), .C0(\CIC1Sin/n4181 ), .B0(\CIC1Sin/n4144 ), 
    .A0(\CIC1Sin/d_d_tmp_36 ), .DI1(\CIC1Sin/d6_71_N_1459_37 ), 
    .DI0(\CIC1Sin/d6_71_N_1459_36 ), .CE(\CIC1Sin/osc_clk_enable_210 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n12001 ), .F0(\CIC1Sin/d6_71_N_1459_36 ), 
    .Q0(\CIC1Sin/d6_36 ), .F1(\CIC1Sin/d6_71_N_1459_37 ), .Q1(\CIC1Sin/d6_37 ), 
    .FCO(\CIC1Sin/n12002 ));
  CIC1Sin_SLICE_648 \CIC1Sin/SLICE_648 ( .A1(\CIC1Sin/n4144 ), 
    .FCO(\CIC1Sin/n12001 ));
  CIC1Sin_SLICE_649 \CIC1Sin/SLICE_649 ( .B1(\CIC1Sin/d1_71 ), 
    .A1(MixerOutSin_11), .B0(\CIC1Sin/d1_70 ), .A0(MixerOutSin_11), 
    .FCI(\CIC1Sin/n11996 ), .F0(\CIC1Sin/n4299 ), .F1(\CIC1Sin/n4298 ));
  CIC1Sin_SLICE_650 \CIC1Sin/SLICE_650 ( .B1(\CIC1Sin/d1_69 ), 
    .A1(MixerOutSin_11), .B0(\CIC1Sin/d1_68 ), .A0(MixerOutSin_11), 
    .FCI(\CIC1Sin/n11995 ), .F0(\CIC1Sin/n4301 ), .F1(\CIC1Sin/n4300 ), 
    .FCO(\CIC1Sin/n11996 ));
  CIC1Sin_SLICE_651 \CIC1Sin/SLICE_651 ( .B1(\CIC1Sin/d1_67 ), 
    .A1(MixerOutSin_11), .B0(\CIC1Sin/d1_66 ), .A0(MixerOutSin_11), 
    .FCI(\CIC1Sin/n11994 ), .F0(\CIC1Sin/n4303 ), .F1(\CIC1Sin/n4302 ), 
    .FCO(\CIC1Sin/n11995 ));
  CIC1Sin_SLICE_652 \CIC1Sin/SLICE_652 ( .D1(\CIC1Sin/d3_39 ), 
    .C1(\CIC1Sin/n4786 ), .B1(\CIC1Sin/n4752 ), .A1(\CIC1Sin/d4_39 ), 
    .D0(\CIC1Sin/d3_38 ), .C0(\CIC1Sin/n4787 ), .B0(\CIC1Sin/n4752 ), 
    .A0(\CIC1Sin/d4_38 ), .DI1(\CIC1Sin/d4_71_N_634_39 ), 
    .DI0(\CIC1Sin/d4_71_N_634_38 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11838 ), 
    .F0(\CIC1Sin/d4_71_N_634_38 ), .Q0(\CIC1Sin/d4_38 ), 
    .F1(\CIC1Sin/d4_71_N_634_39 ), .Q1(\CIC1Sin/d4_39 ), 
    .FCO(\CIC1Sin/n11839 ));
  CIC1Sin_SLICE_653 \CIC1Sin/SLICE_653 ( .B1(\CIC1Sin/d1_65 ), 
    .A1(MixerOutSin_11), .B0(\CIC1Sin/d1_64 ), .A0(MixerOutSin_11), 
    .FCI(\CIC1Sin/n11993 ), .F0(\CIC1Sin/n4305 ), .F1(\CIC1Sin/n4304 ), 
    .FCO(\CIC1Sin/n11994 ));
  CIC1Sin_SLICE_654 \CIC1Sin/SLICE_654 ( .B1(\CIC1Sin/d1_63 ), 
    .A1(MixerOutSin_11), .B0(\CIC1Sin/d1_62 ), .A0(MixerOutSin_11), 
    .FCI(\CIC1Sin/n11992 ), .F0(\CIC1Sin/n4307 ), .F1(\CIC1Sin/n4306 ), 
    .FCO(\CIC1Sin/n11993 ));
  CIC1Sin_SLICE_655 \CIC1Sin/SLICE_655 ( .B1(\CIC1Sin/d1_61 ), 
    .A1(MixerOutSin_11), .B0(\CIC1Sin/d1_60 ), .A0(MixerOutSin_11), 
    .FCI(\CIC1Sin/n11991 ), .F0(\CIC1Sin/n4309 ), .F1(\CIC1Sin/n4308 ), 
    .FCO(\CIC1Sin/n11992 ));
  CIC1Sin_SLICE_656 \CIC1Sin/SLICE_656 ( .B1(\CIC1Sin/d1_59 ), 
    .A1(MixerOutSin_11), .B0(\CIC1Sin/d1_58 ), .A0(MixerOutSin_11), 
    .FCI(\CIC1Sin/n11990 ), .F0(\CIC1Sin/n4311 ), .F1(\CIC1Sin/n4310 ), 
    .FCO(\CIC1Sin/n11991 ));
  CIC1Sin_SLICE_657 \CIC1Sin/SLICE_657 ( .B1(\CIC1Sin/d1_57 ), 
    .A1(MixerOutSin_11), .B0(\CIC1Sin/d1_56 ), .A0(MixerOutSin_11), 
    .FCI(\CIC1Sin/n11989 ), .F0(\CIC1Sin/n4313 ), .F1(\CIC1Sin/n4312 ), 
    .FCO(\CIC1Sin/n11990 ));
  CIC1Sin_SLICE_658 \CIC1Sin/SLICE_658 ( .D1(\CIC1Sin/d3_37 ), 
    .C1(\CIC1Sin/n4788 ), .B1(\CIC1Sin/n4752 ), .A1(\CIC1Sin/d4_37 ), 
    .D0(\CIC1Sin/d3_36 ), .C0(\CIC1Sin/n4789 ), .B0(\CIC1Sin/n4752 ), 
    .A0(\CIC1Sin/d4_36 ), .DI1(\CIC1Sin/d4_71_N_634_37 ), 
    .DI0(\CIC1Sin/d4_71_N_634_36 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11837 ), 
    .F0(\CIC1Sin/d4_71_N_634_36 ), .Q0(\CIC1Sin/d4_36 ), 
    .F1(\CIC1Sin/d4_71_N_634_37 ), .Q1(\CIC1Sin/d4_37 ), 
    .FCO(\CIC1Sin/n11838 ));
  CIC1Sin_SLICE_659 \CIC1Sin/SLICE_659 ( .B1(\CIC1Sin/d1_55 ), 
    .A1(MixerOutSin_11), .B0(\CIC1Sin/d1_54 ), .A0(MixerOutSin_11), 
    .FCI(\CIC1Sin/n11988 ), .F0(\CIC1Sin/n4315 ), .F1(\CIC1Sin/n4314 ), 
    .FCO(\CIC1Sin/n11989 ));
  CIC1Sin_SLICE_660 \CIC1Sin/SLICE_660 ( .B1(\CIC1Sin/d1_53 ), 
    .A1(MixerOutSin_11), .B0(\CIC1Sin/d1_52 ), .A0(MixerOutSin_11), 
    .FCI(\CIC1Sin/n11987 ), .F0(\CIC1Sin/n4317 ), .F1(\CIC1Sin/n4316 ), 
    .FCO(\CIC1Sin/n11988 ));
  CIC1Sin_SLICE_661 \CIC1Sin/SLICE_661 ( .B1(\CIC1Sin/d1_51 ), 
    .A1(MixerOutSin_11), .B0(\CIC1Sin/d1_50 ), .A0(MixerOutSin_11), 
    .FCI(\CIC1Sin/n11986 ), .F0(\CIC1Sin/n4319 ), .F1(\CIC1Sin/n4318 ), 
    .FCO(\CIC1Sin/n11987 ));
  CIC1Sin_SLICE_662 \CIC1Sin/SLICE_662 ( .B1(\CIC1Sin/d1_49 ), 
    .A1(MixerOutSin_11), .B0(\CIC1Sin/d1_48 ), .A0(MixerOutSin_11), 
    .FCI(\CIC1Sin/n11985 ), .F0(\CIC1Sin/n4321 ), .F1(\CIC1Sin/n4320 ), 
    .FCO(\CIC1Sin/n11986 ));
  CIC1Sin_SLICE_663 \CIC1Sin/SLICE_663 ( .B1(\CIC1Sin/d_d9_44 ), 
    .A1(\CIC1Sin/d9_44 ), .B0(\CIC1Sin/d_d9_43 ), .A0(\CIC1Sin/d9_43 ), 
    .FCI(\CIC1Sin/n11533 ), .FCO(\CIC1Sin/n11534 ));
  CIC1Sin_SLICE_664 \CIC1Sin/SLICE_664 ( .B1(\CIC1Sin/d_d9_64 ), 
    .A1(\CIC1Sin/d9_64 ), .B0(\CIC1Sin/d_d9_63 ), .A0(\CIC1Sin/d9_63 ), 
    .FCI(\CIC1Sin/n11543 ), .F0(\CIC1Sin/n5978 ), .F1(\CIC1Sin/n5977 ), 
    .FCO(\CIC1Sin/n11544 ));
  CIC1Sin_SLICE_665 \CIC1Sin/SLICE_665 ( .B1(\CIC1Sin/d_d9_60 ), 
    .A1(\CIC1Sin/d9_60 ), .B0(\CIC1Sin/d_d9_59 ), .A0(\CIC1Sin/d9_59 ), 
    .FCI(\CIC1Sin/n11541 ), .F0(\CIC1Sin/n5982 ), .F1(\CIC1Sin/n5981 ), 
    .FCO(\CIC1Sin/n11542 ));
  CIC1Sin_SLICE_666 \CIC1Sin/SLICE_666 ( .B1(\CIC1Sin/d_d9_62 ), 
    .A1(\CIC1Sin/d9_62 ), .B0(\CIC1Sin/d_d9_61 ), .A0(\CIC1Sin/d9_61 ), 
    .FCI(\CIC1Sin/n11542 ), .F0(\CIC1Sin/n5980 ), .F1(\CIC1Sin/n5979 ), 
    .FCO(\CIC1Sin/n11543 ));
  CIC1Sin_SLICE_667 \CIC1Sin/SLICE_667 ( .B1(\CIC1Sin/d1_47 ), 
    .A1(MixerOutSin_11), .B0(\CIC1Sin/d1_46 ), .A0(MixerOutSin_11), 
    .FCI(\CIC1Sin/n11984 ), .F0(\CIC1Sin/n4323 ), .F1(\CIC1Sin/n4322 ), 
    .FCO(\CIC1Sin/n11985 ));
  CIC1Sin_SLICE_668 \CIC1Sin/SLICE_668 ( .B1(\CIC1Sin/d1_45 ), 
    .A1(MixerOutSin_11), .B0(\CIC1Sin/d1_44 ), .A0(MixerOutSin_11), 
    .FCI(\CIC1Sin/n11983 ), .F0(\CIC1Sin/n4325 ), .F1(\CIC1Sin/n4324 ), 
    .FCO(\CIC1Sin/n11984 ));
  CIC1Sin_SLICE_669 \CIC1Sin/SLICE_669 ( .B1(\CIC1Sin/d1_43 ), 
    .A1(MixerOutSin_11), .B0(\CIC1Sin/d1_42 ), .A0(MixerOutSin_11), 
    .FCI(\CIC1Sin/n11982 ), .F0(\CIC1Sin/n4327 ), .F1(\CIC1Sin/n4326 ), 
    .FCO(\CIC1Sin/n11983 ));
  CIC1Sin_SLICE_670 \CIC1Sin/SLICE_670 ( .B1(\CIC1Sin/d1_41 ), 
    .A1(MixerOutSin_11), .B0(\CIC1Sin/d1_40 ), .A0(MixerOutSin_11), 
    .FCI(\CIC1Sin/n11981 ), .F0(\CIC1Sin/n4329 ), .F1(\CIC1Sin/n4328 ), 
    .FCO(\CIC1Sin/n11982 ));
  CIC1Sin_SLICE_671 \CIC1Sin/SLICE_671 ( .B1(\CIC1Sin/d1_39 ), 
    .A1(MixerOutSin_11), .B0(\CIC1Sin/d1_38 ), .A0(MixerOutSin_11), 
    .FCI(\CIC1Sin/n11980 ), .F0(\CIC1Sin/n4331 ), .F1(\CIC1Sin/n4330 ), 
    .FCO(\CIC1Sin/n11981 ));
  CIC1Sin_SLICE_672 \CIC1Sin/SLICE_672 ( .B1(\CIC1Sin/d1_37 ), 
    .A1(MixerOutSin_11), .B0(\CIC1Sin/d1_36 ), .A0(MixerOutSin_11), 
    .F1(\CIC1Sin/n4332 ), .FCO(\CIC1Sin/n11980 ));
  CIC1Sin_SLICE_673 \CIC1Sin/SLICE_673 ( .D1(MixerOutSin_11), 
    .C1(\CIC1Sin/n4298 ), .B1(\CIC1Sin/n4296 ), .A1(\CIC1Sin/d1_71 ), 
    .D0(MixerOutSin_11), .C0(\CIC1Sin/n4299 ), .B0(\CIC1Sin/n4296 ), 
    .A0(\CIC1Sin/d1_70 ), .DI1(\CIC1Sin/d1_71_N_418_71 ), 
    .DI0(\CIC1Sin/d1_71_N_418_70 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11977 ), 
    .F0(\CIC1Sin/d1_71_N_418_70 ), .Q0(\CIC1Sin/d1_70 ), 
    .F1(\CIC1Sin/d1_71_N_418_71 ), .Q1(\CIC1Sin/d1_71 ));
  CIC1Sin_SLICE_674 \CIC1Sin/SLICE_674 ( .D1(MixerOutSin_11), 
    .C1(\CIC1Sin/n4300 ), .B1(\CIC1Sin/n4296 ), .A1(\CIC1Sin/d1_69 ), 
    .D0(MixerOutSin_11), .C0(\CIC1Sin/n4301 ), .B0(\CIC1Sin/n4296 ), 
    .A0(\CIC1Sin/d1_68 ), .DI1(\CIC1Sin/d1_71_N_418_69 ), 
    .DI0(\CIC1Sin/d1_71_N_418_68 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11976 ), 
    .F0(\CIC1Sin/d1_71_N_418_68 ), .Q0(\CIC1Sin/d1_68 ), 
    .F1(\CIC1Sin/d1_71_N_418_69 ), .Q1(\CIC1Sin/d1_69 ), 
    .FCO(\CIC1Sin/n11977 ));
  CIC1Sin_SLICE_675 \CIC1Sin/SLICE_675 ( .A1(\CIC1Sin/n4752 ), 
    .FCO(\CIC1Sin/n11837 ));
  CIC1Sin_SLICE_676 \CIC1Sin/SLICE_676 ( .B1(\CIC1Sin/d5_71 ), 
    .A1(\CIC1Sin/d4_71 ), .B0(\CIC1Sin/d5_70 ), .A0(\CIC1Sin/d4_70 ), 
    .FCI(\CIC1Sin/n11832 ), .F0(\CIC1Sin/n4907 ), .F1(\CIC1Sin/n4906 ));
  CIC1Sin_SLICE_677 \CIC1Sin/SLICE_677 ( .B1(\CIC1Sin/d5_69 ), 
    .A1(\CIC1Sin/d4_69 ), .B0(\CIC1Sin/d5_68 ), .A0(\CIC1Sin/d4_68 ), 
    .FCI(\CIC1Sin/n11831 ), .F0(\CIC1Sin/n4909 ), .F1(\CIC1Sin/n4908 ), 
    .FCO(\CIC1Sin/n11832 ));
  CIC1Sin_SLICE_678 \CIC1Sin/SLICE_678 ( .B1(\CIC1Sin/d5_67 ), 
    .A1(\CIC1Sin/d4_67 ), .B0(\CIC1Sin/d5_66 ), .A0(\CIC1Sin/d4_66 ), 
    .FCI(\CIC1Sin/n11830 ), .F0(\CIC1Sin/n4911 ), .F1(\CIC1Sin/n4910 ), 
    .FCO(\CIC1Sin/n11831 ));
  CIC1Sin_SLICE_679 \CIC1Sin/SLICE_679 ( .B1(\CIC1Sin/d5_65 ), 
    .A1(\CIC1Sin/d4_65 ), .B0(\CIC1Sin/d5_64 ), .A0(\CIC1Sin/d4_64 ), 
    .FCI(\CIC1Sin/n11829 ), .F0(\CIC1Sin/n4913 ), .F1(\CIC1Sin/n4912 ), 
    .FCO(\CIC1Sin/n11830 ));
  CIC1Sin_SLICE_680 \CIC1Sin/SLICE_680 ( .B1(\CIC1Sin/d5_63 ), 
    .A1(\CIC1Sin/d4_63 ), .B0(\CIC1Sin/d5_62 ), .A0(\CIC1Sin/d4_62 ), 
    .FCI(\CIC1Sin/n11828 ), .F0(\CIC1Sin/n4915 ), .F1(\CIC1Sin/n4914 ), 
    .FCO(\CIC1Sin/n11829 ));
  CIC1Sin_SLICE_681 \CIC1Sin/SLICE_681 ( .B1(\CIC1Sin/d5_61 ), 
    .A1(\CIC1Sin/d4_61 ), .B0(\CIC1Sin/d5_60 ), .A0(\CIC1Sin/d4_60 ), 
    .FCI(\CIC1Sin/n11827 ), .F0(\CIC1Sin/n4917 ), .F1(\CIC1Sin/n4916 ), 
    .FCO(\CIC1Sin/n11828 ));
  CIC1Sin_SLICE_682 \CIC1Sin/SLICE_682 ( .B1(\CIC1Sin/d5_59 ), 
    .A1(\CIC1Sin/d4_59 ), .B0(\CIC1Sin/d5_58 ), .A0(\CIC1Sin/d4_58 ), 
    .FCI(\CIC1Sin/n11826 ), .F0(\CIC1Sin/n4919 ), .F1(\CIC1Sin/n4918 ), 
    .FCO(\CIC1Sin/n11827 ));
  CIC1Sin_SLICE_683 \CIC1Sin/SLICE_683 ( .B1(\CIC1Sin/d5_57 ), 
    .A1(\CIC1Sin/d4_57 ), .B0(\CIC1Sin/d5_56 ), .A0(\CIC1Sin/d4_56 ), 
    .FCI(\CIC1Sin/n11825 ), .F0(\CIC1Sin/n4921 ), .F1(\CIC1Sin/n4920 ), 
    .FCO(\CIC1Sin/n11826 ));
  CIC1Sin_SLICE_684 \CIC1Sin/SLICE_684 ( .B1(\CIC1Sin/d5_55 ), 
    .A1(\CIC1Sin/d4_55 ), .B0(\CIC1Sin/d5_54 ), .A0(\CIC1Sin/d4_54 ), 
    .FCI(\CIC1Sin/n11824 ), .F0(\CIC1Sin/n4923 ), .F1(\CIC1Sin/n4922 ), 
    .FCO(\CIC1Sin/n11825 ));
  CIC1Sin_SLICE_685 \CIC1Sin/SLICE_685 ( .B1(\CIC1Sin/d5_53 ), 
    .A1(\CIC1Sin/d4_53 ), .B0(\CIC1Sin/d5_52 ), .A0(\CIC1Sin/d4_52 ), 
    .FCI(\CIC1Sin/n11823 ), .F0(\CIC1Sin/n4925 ), .F1(\CIC1Sin/n4924 ), 
    .FCO(\CIC1Sin/n11824 ));
  CIC1Sin_SLICE_686 \CIC1Sin/SLICE_686 ( .B1(\CIC1Sin/d5_51 ), 
    .A1(\CIC1Sin/d4_51 ), .B0(\CIC1Sin/d5_50 ), .A0(\CIC1Sin/d4_50 ), 
    .FCI(\CIC1Sin/n11822 ), .F0(\CIC1Sin/n4927 ), .F1(\CIC1Sin/n4926 ), 
    .FCO(\CIC1Sin/n11823 ));
  CIC1Sin_SLICE_687 \CIC1Sin/SLICE_687 ( .B1(\CIC1Sin/d5_49 ), 
    .A1(\CIC1Sin/d4_49 ), .B0(\CIC1Sin/d5_48 ), .A0(\CIC1Sin/d4_48 ), 
    .FCI(\CIC1Sin/n11821 ), .F0(\CIC1Sin/n4929 ), .F1(\CIC1Sin/n4928 ), 
    .FCO(\CIC1Sin/n11822 ));
  CIC1Sin_SLICE_688 \CIC1Sin/SLICE_688 ( .B1(\CIC1Sin/d5_47 ), 
    .A1(\CIC1Sin/d4_47 ), .B0(\CIC1Sin/d5_46 ), .A0(\CIC1Sin/d4_46 ), 
    .FCI(\CIC1Sin/n11820 ), .F0(\CIC1Sin/n4931 ), .F1(\CIC1Sin/n4930 ), 
    .FCO(\CIC1Sin/n11821 ));
  CIC1Sin_SLICE_689 \CIC1Sin/SLICE_689 ( .B1(\CIC1Sin/d5_45 ), 
    .A1(\CIC1Sin/d4_45 ), .B0(\CIC1Sin/d5_44 ), .A0(\CIC1Sin/d4_44 ), 
    .FCI(\CIC1Sin/n11819 ), .F0(\CIC1Sin/n4933 ), .F1(\CIC1Sin/n4932 ), 
    .FCO(\CIC1Sin/n11820 ));
  CIC1Sin_SLICE_690 \CIC1Sin/SLICE_690 ( .B1(\CIC1Sin/d5_43 ), 
    .A1(\CIC1Sin/d4_43 ), .B0(\CIC1Sin/d5_42 ), .A0(\CIC1Sin/d4_42 ), 
    .FCI(\CIC1Sin/n11818 ), .F0(\CIC1Sin/n4935 ), .F1(\CIC1Sin/n4934 ), 
    .FCO(\CIC1Sin/n11819 ));
  CIC1Sin_SLICE_691 \CIC1Sin/SLICE_691 ( .B1(\CIC1Sin/d5_41 ), 
    .A1(\CIC1Sin/d4_41 ), .B0(\CIC1Sin/d5_40 ), .A0(\CIC1Sin/d4_40 ), 
    .FCI(\CIC1Sin/n11817 ), .F0(\CIC1Sin/n4937 ), .F1(\CIC1Sin/n4936 ), 
    .FCO(\CIC1Sin/n11818 ));
  CIC1Sin_SLICE_692 \CIC1Sin/SLICE_692 ( .B1(\CIC1Sin/d5_39 ), 
    .A1(\CIC1Sin/d4_39 ), .B0(\CIC1Sin/d5_38 ), .A0(\CIC1Sin/d4_38 ), 
    .FCI(\CIC1Sin/n11816 ), .F0(\CIC1Sin/n4939 ), .F1(\CIC1Sin/n4938 ), 
    .FCO(\CIC1Sin/n11817 ));
  CIC1Sin_SLICE_693 \CIC1Sin/SLICE_693 ( .B1(\CIC1Sin/d5_37 ), 
    .A1(\CIC1Sin/d4_37 ), .B0(\CIC1Sin/d5_36 ), .A0(\CIC1Sin/d4_36 ), 
    .F1(\CIC1Sin/n4940 ), .FCO(\CIC1Sin/n11816 ));
  CIC1Sin_SLICE_694 \CIC1Sin/SLICE_694 ( .D1(\CIC1Sin/d4_71 ), 
    .C1(\CIC1Sin/n4906 ), .B1(\CIC1Sin/n4904 ), .A1(\CIC1Sin/d5_71 ), 
    .D0(\CIC1Sin/d4_70 ), .C0(\CIC1Sin/n4907 ), .B0(\CIC1Sin/n4904 ), 
    .A0(\CIC1Sin/d5_70 ), .DI1(\CIC1Sin/d5_71_N_706_71 ), 
    .DI0(\CIC1Sin/d5_71_N_706_70 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11813 ), 
    .F0(\CIC1Sin/d5_71_N_706_70 ), .Q0(\CIC1Sin/d5_70 ), 
    .F1(\CIC1Sin/d5_71_N_706_71 ), .Q1(\CIC1Sin/d5_71 ));
  CIC1Sin_SLICE_695 \CIC1Sin/SLICE_695 ( .D1(\CIC1Sin/d4_69 ), 
    .C1(\CIC1Sin/n4908 ), .B1(\CIC1Sin/n4904 ), .A1(\CIC1Sin/d5_69 ), 
    .D0(\CIC1Sin/d4_68 ), .C0(\CIC1Sin/n4909 ), .B0(\CIC1Sin/n4904 ), 
    .A0(\CIC1Sin/d5_68 ), .DI1(\CIC1Sin/d5_71_N_706_69 ), 
    .DI0(\CIC1Sin/d5_71_N_706_68 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11812 ), 
    .F0(\CIC1Sin/d5_71_N_706_68 ), .Q0(\CIC1Sin/d5_68 ), 
    .F1(\CIC1Sin/d5_71_N_706_69 ), .Q1(\CIC1Sin/d5_69 ), 
    .FCO(\CIC1Sin/n11813 ));
  CIC1Sin_SLICE_696 \CIC1Sin/SLICE_696 ( .D1(\CIC1Sin/d4_67 ), 
    .C1(\CIC1Sin/n4910 ), .B1(\CIC1Sin/n4904 ), .A1(\CIC1Sin/d5_67 ), 
    .D0(\CIC1Sin/d4_66 ), .C0(\CIC1Sin/n4911 ), .B0(\CIC1Sin/n4904 ), 
    .A0(\CIC1Sin/d5_66 ), .DI1(\CIC1Sin/d5_71_N_706_67 ), 
    .DI0(\CIC1Sin/d5_71_N_706_66 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11811 ), 
    .F0(\CIC1Sin/d5_71_N_706_66 ), .Q0(\CIC1Sin/d5_66 ), 
    .F1(\CIC1Sin/d5_71_N_706_67 ), .Q1(\CIC1Sin/d5_67 ), 
    .FCO(\CIC1Sin/n11812 ));
  CIC1Sin_SLICE_697 \CIC1Sin/SLICE_697 ( .D1(\CIC1Sin/d4_65 ), 
    .C1(\CIC1Sin/n4912 ), .B1(\CIC1Sin/n4904 ), .A1(\CIC1Sin/d5_65 ), 
    .D0(\CIC1Sin/d4_64 ), .C0(\CIC1Sin/n4913 ), .B0(\CIC1Sin/n4904 ), 
    .A0(\CIC1Sin/d5_64 ), .DI1(\CIC1Sin/d5_71_N_706_65 ), 
    .DI0(\CIC1Sin/d5_71_N_706_64 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11810 ), 
    .F0(\CIC1Sin/d5_71_N_706_64 ), .Q0(\CIC1Sin/d5_64 ), 
    .F1(\CIC1Sin/d5_71_N_706_65 ), .Q1(\CIC1Sin/d5_65 ), 
    .FCO(\CIC1Sin/n11811 ));
  CIC1Sin_SLICE_698 \CIC1Sin/SLICE_698 ( .D1(\CIC1Sin/d4_63 ), 
    .C1(\CIC1Sin/n4914 ), .B1(\CIC1Sin/n4904 ), .A1(\CIC1Sin/d5_63 ), 
    .D0(\CIC1Sin/d4_62 ), .C0(\CIC1Sin/n4915 ), .B0(\CIC1Sin/n4904 ), 
    .A0(\CIC1Sin/d5_62 ), .DI1(\CIC1Sin/d5_71_N_706_63 ), 
    .DI0(\CIC1Sin/d5_71_N_706_62 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11809 ), 
    .F0(\CIC1Sin/d5_71_N_706_62 ), .Q0(\CIC1Sin/d5_62 ), 
    .F1(\CIC1Sin/d5_71_N_706_63 ), .Q1(\CIC1Sin/d5_63 ), 
    .FCO(\CIC1Sin/n11810 ));
  CIC1Sin_SLICE_699 \CIC1Sin/SLICE_699 ( .D1(MixerOutSin_11), 
    .C1(\CIC1Sin/n4302 ), .B1(\CIC1Sin/n4296 ), .A1(\CIC1Sin/d1_67 ), 
    .D0(MixerOutSin_11), .C0(\CIC1Sin/n4303 ), .B0(\CIC1Sin/n4296 ), 
    .A0(\CIC1Sin/d1_66 ), .DI1(\CIC1Sin/d1_71_N_418_67 ), 
    .DI0(\CIC1Sin/d1_71_N_418_66 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11975 ), 
    .F0(\CIC1Sin/d1_71_N_418_66 ), .Q0(\CIC1Sin/d1_66 ), 
    .F1(\CIC1Sin/d1_71_N_418_67 ), .Q1(\CIC1Sin/d1_67 ), 
    .FCO(\CIC1Sin/n11976 ));
  CIC1Sin_SLICE_700 \CIC1Sin/SLICE_700 ( .D1(\CIC1Sin/d4_61 ), 
    .C1(\CIC1Sin/n4916 ), .B1(\CIC1Sin/n4904 ), .A1(\CIC1Sin/d5_61 ), 
    .D0(\CIC1Sin/d4_60 ), .C0(\CIC1Sin/n4917 ), .B0(\CIC1Sin/n4904 ), 
    .A0(\CIC1Sin/d5_60 ), .DI1(\CIC1Sin/d5_71_N_706_61 ), 
    .DI0(\CIC1Sin/d5_71_N_706_60 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11808 ), 
    .F0(\CIC1Sin/d5_71_N_706_60 ), .Q0(\CIC1Sin/d5_60 ), 
    .F1(\CIC1Sin/d5_71_N_706_61 ), .Q1(\CIC1Sin/d5_61 ), 
    .FCO(\CIC1Sin/n11809 ));
  CIC1Sin_SLICE_701 \CIC1Sin/SLICE_701 ( .D1(\CIC1Sin/d4_59 ), 
    .C1(\CIC1Sin/n4918 ), .B1(\CIC1Sin/n4904 ), .A1(\CIC1Sin/d5_59 ), 
    .D0(\CIC1Sin/d4_58 ), .C0(\CIC1Sin/n4919 ), .B0(\CIC1Sin/n4904 ), 
    .A0(\CIC1Sin/d5_58 ), .DI1(\CIC1Sin/d5_71_N_706_59 ), 
    .DI0(\CIC1Sin/d5_71_N_706_58 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11807 ), 
    .F0(\CIC1Sin/d5_71_N_706_58 ), .Q0(\CIC1Sin/d5_58 ), 
    .F1(\CIC1Sin/d5_71_N_706_59 ), .Q1(\CIC1Sin/d5_59 ), 
    .FCO(\CIC1Sin/n11808 ));
  CIC1Sin_SLICE_702 \CIC1Sin/SLICE_702 ( .D1(MixerOutSin_11), 
    .C1(\CIC1Sin/n4304 ), .B1(\CIC1Sin/n4296 ), .A1(\CIC1Sin/d1_65 ), 
    .D0(MixerOutSin_11), .C0(\CIC1Sin/n4305 ), .B0(\CIC1Sin/n4296 ), 
    .A0(\CIC1Sin/d1_64 ), .DI1(\CIC1Sin/d1_71_N_418_65 ), 
    .DI0(\CIC1Sin/d1_71_N_418_64 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11974 ), 
    .F0(\CIC1Sin/d1_71_N_418_64 ), .Q0(\CIC1Sin/d1_64 ), 
    .F1(\CIC1Sin/d1_71_N_418_65 ), .Q1(\CIC1Sin/d1_65 ), 
    .FCO(\CIC1Sin/n11975 ));
  CIC1Sin_SLICE_703 \CIC1Sin/SLICE_703 ( .D1(MixerOutSin_11), 
    .C1(\CIC1Sin/n4306 ), .B1(\CIC1Sin/n4296 ), .A1(\CIC1Sin/d1_63 ), 
    .D0(MixerOutSin_11), .C0(\CIC1Sin/n4307 ), .B0(\CIC1Sin/n4296 ), 
    .A0(\CIC1Sin/d1_62 ), .DI1(\CIC1Sin/d1_71_N_418_63 ), 
    .DI0(\CIC1Sin/d1_71_N_418_62 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11973 ), 
    .F0(\CIC1Sin/d1_71_N_418_62 ), .Q0(\CIC1Sin/d1_62 ), 
    .F1(\CIC1Sin/d1_71_N_418_63 ), .Q1(\CIC1Sin/d1_63 ), 
    .FCO(\CIC1Sin/n11974 ));
  CIC1Sin_SLICE_704 \CIC1Sin/SLICE_704 ( .D1(\CIC1Sin/d4_57 ), 
    .C1(\CIC1Sin/n4920 ), .B1(\CIC1Sin/n4904 ), .A1(\CIC1Sin/d5_57 ), 
    .D0(\CIC1Sin/d4_56 ), .C0(\CIC1Sin/n4921 ), .B0(\CIC1Sin/n4904 ), 
    .A0(\CIC1Sin/d5_56 ), .DI1(\CIC1Sin/d5_71_N_706_57 ), 
    .DI0(\CIC1Sin/d5_71_N_706_56 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11806 ), 
    .F0(\CIC1Sin/d5_71_N_706_56 ), .Q0(\CIC1Sin/d5_56 ), 
    .F1(\CIC1Sin/d5_71_N_706_57 ), .Q1(\CIC1Sin/d5_57 ), 
    .FCO(\CIC1Sin/n11807 ));
  CIC1Sin_SLICE_705 \CIC1Sin/SLICE_705 ( .D1(\CIC1Sin/d4_55 ), 
    .C1(\CIC1Sin/n4922 ), .B1(\CIC1Sin/n4904 ), .A1(\CIC1Sin/d5_55 ), 
    .D0(\CIC1Sin/d4_54 ), .C0(\CIC1Sin/n4923 ), .B0(\CIC1Sin/n4904 ), 
    .A0(\CIC1Sin/d5_54 ), .DI1(\CIC1Sin/d5_71_N_706_55 ), 
    .DI0(\CIC1Sin/d5_71_N_706_54 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11805 ), 
    .F0(\CIC1Sin/d5_71_N_706_54 ), .Q0(\CIC1Sin/d5_54 ), 
    .F1(\CIC1Sin/d5_71_N_706_55 ), .Q1(\CIC1Sin/d5_55 ), 
    .FCO(\CIC1Sin/n11806 ));
  CIC1Sin_SLICE_706 \CIC1Sin/SLICE_706 ( .D1(\CIC1Sin/d4_53 ), 
    .C1(\CIC1Sin/n4924 ), .B1(\CIC1Sin/n4904 ), .A1(\CIC1Sin/d5_53 ), 
    .D0(\CIC1Sin/d4_52 ), .C0(\CIC1Sin/n4925 ), .B0(\CIC1Sin/n4904 ), 
    .A0(\CIC1Sin/d5_52 ), .DI1(\CIC1Sin/d5_71_N_706_53 ), 
    .DI0(\CIC1Sin/d5_71_N_706_52 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11804 ), 
    .F0(\CIC1Sin/d5_71_N_706_52 ), .Q0(\CIC1Sin/d5_52 ), 
    .F1(\CIC1Sin/d5_71_N_706_53 ), .Q1(\CIC1Sin/d5_53 ), 
    .FCO(\CIC1Sin/n11805 ));
  CIC1Sin_SLICE_707 \CIC1Sin/SLICE_707 ( .D1(\CIC1Sin/d4_51 ), 
    .C1(\CIC1Sin/n4926 ), .B1(\CIC1Sin/n4904 ), .A1(\CIC1Sin/d5_51 ), 
    .D0(\CIC1Sin/d4_50 ), .C0(\CIC1Sin/n4927 ), .B0(\CIC1Sin/n4904 ), 
    .A0(\CIC1Sin/d5_50 ), .DI1(\CIC1Sin/d5_71_N_706_51 ), 
    .DI0(\CIC1Sin/d5_71_N_706_50 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11803 ), 
    .F0(\CIC1Sin/d5_71_N_706_50 ), .Q0(\CIC1Sin/d5_50 ), 
    .F1(\CIC1Sin/d5_71_N_706_51 ), .Q1(\CIC1Sin/d5_51 ), 
    .FCO(\CIC1Sin/n11804 ));
  CIC1Sin_SLICE_708 \CIC1Sin/SLICE_708 ( .D1(\CIC1Sin/d4_49 ), 
    .C1(\CIC1Sin/n4928 ), .B1(\CIC1Sin/n4904 ), .A1(\CIC1Sin/d5_49 ), 
    .D0(\CIC1Sin/d4_48 ), .C0(\CIC1Sin/n4929 ), .B0(\CIC1Sin/n4904 ), 
    .A0(\CIC1Sin/d5_48 ), .DI1(\CIC1Sin/d5_71_N_706_49 ), 
    .DI0(\CIC1Sin/d5_71_N_706_48 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11802 ), 
    .F0(\CIC1Sin/d5_71_N_706_48 ), .Q0(\CIC1Sin/d5_48 ), 
    .F1(\CIC1Sin/d5_71_N_706_49 ), .Q1(\CIC1Sin/d5_49 ), 
    .FCO(\CIC1Sin/n11803 ));
  CIC1Sin_SLICE_709 \CIC1Sin/SLICE_709 ( .D1(\CIC1Sin/d4_47 ), 
    .C1(\CIC1Sin/n4930 ), .B1(\CIC1Sin/n4904 ), .A1(\CIC1Sin/d5_47 ), 
    .D0(\CIC1Sin/d4_46 ), .C0(\CIC1Sin/n4931 ), .B0(\CIC1Sin/n4904 ), 
    .A0(\CIC1Sin/d5_46 ), .DI1(\CIC1Sin/d5_71_N_706_47 ), 
    .DI0(\CIC1Sin/d5_71_N_706_46 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11801 ), 
    .F0(\CIC1Sin/d5_71_N_706_46 ), .Q0(\CIC1Sin/d5_46 ), 
    .F1(\CIC1Sin/d5_71_N_706_47 ), .Q1(\CIC1Sin/d5_47 ), 
    .FCO(\CIC1Sin/n11802 ));
  CIC1Sin_SLICE_710 \CIC1Sin/SLICE_710 ( .D1(\CIC1Sin/d4_45 ), 
    .C1(\CIC1Sin/n4932 ), .B1(\CIC1Sin/n4904 ), .A1(\CIC1Sin/d5_45 ), 
    .D0(\CIC1Sin/d4_44 ), .C0(\CIC1Sin/n4933 ), .B0(\CIC1Sin/n4904 ), 
    .A0(\CIC1Sin/d5_44 ), .DI1(\CIC1Sin/d5_71_N_706_45 ), 
    .DI0(\CIC1Sin/d5_71_N_706_44 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11800 ), 
    .F0(\CIC1Sin/d5_71_N_706_44 ), .Q0(\CIC1Sin/d5_44 ), 
    .F1(\CIC1Sin/d5_71_N_706_45 ), .Q1(\CIC1Sin/d5_45 ), 
    .FCO(\CIC1Sin/n11801 ));
  CIC1Sin_SLICE_711 \CIC1Sin/SLICE_711 ( .D1(\CIC1Sin/d4_43 ), 
    .C1(\CIC1Sin/n4934 ), .B1(\CIC1Sin/n4904 ), .A1(\CIC1Sin/d5_43 ), 
    .D0(\CIC1Sin/d4_42 ), .C0(\CIC1Sin/n4935 ), .B0(\CIC1Sin/n4904 ), 
    .A0(\CIC1Sin/d5_42 ), .DI1(\CIC1Sin/d5_71_N_706_43 ), 
    .DI0(\CIC1Sin/d5_71_N_706_42 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11799 ), 
    .F0(\CIC1Sin/d5_71_N_706_42 ), .Q0(\CIC1Sin/d5_42 ), 
    .F1(\CIC1Sin/d5_71_N_706_43 ), .Q1(\CIC1Sin/d5_43 ), 
    .FCO(\CIC1Sin/n11800 ));
  CIC1Sin_SLICE_712 \CIC1Sin/SLICE_712 ( .D1(\CIC1Sin/d4_41 ), 
    .C1(\CIC1Sin/n4936 ), .B1(\CIC1Sin/n4904 ), .A1(\CIC1Sin/d5_41 ), 
    .D0(\CIC1Sin/d4_40 ), .C0(\CIC1Sin/n4937 ), .B0(\CIC1Sin/n4904 ), 
    .A0(\CIC1Sin/d5_40 ), .DI1(\CIC1Sin/d5_71_N_706_41 ), 
    .DI0(\CIC1Sin/d5_71_N_706_40 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11798 ), 
    .F0(\CIC1Sin/d5_71_N_706_40 ), .Q0(\CIC1Sin/d5_40 ), 
    .F1(\CIC1Sin/d5_71_N_706_41 ), .Q1(\CIC1Sin/d5_41 ), 
    .FCO(\CIC1Sin/n11799 ));
  CIC1Sin_SLICE_713 \CIC1Sin/SLICE_713 ( .D1(\CIC1Sin/d4_39 ), 
    .C1(\CIC1Sin/n4938 ), .B1(\CIC1Sin/n4904 ), .A1(\CIC1Sin/d5_39 ), 
    .D0(\CIC1Sin/d4_38 ), .C0(\CIC1Sin/n4939 ), .B0(\CIC1Sin/n4904 ), 
    .A0(\CIC1Sin/d5_38 ), .DI1(\CIC1Sin/d5_71_N_706_39 ), 
    .DI0(\CIC1Sin/d5_71_N_706_38 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11797 ), 
    .F0(\CIC1Sin/d5_71_N_706_38 ), .Q0(\CIC1Sin/d5_38 ), 
    .F1(\CIC1Sin/d5_71_N_706_39 ), .Q1(\CIC1Sin/d5_39 ), 
    .FCO(\CIC1Sin/n11798 ));
  CIC1Sin_SLICE_714 \CIC1Sin/SLICE_714 ( .D1(\CIC1Sin/d4_37 ), 
    .C1(\CIC1Sin/n4940 ), .B1(\CIC1Sin/n4904 ), .A1(\CIC1Sin/d5_37 ), 
    .D0(\CIC1Sin/d4_36 ), .C0(\CIC1Sin/n4941 ), .B0(\CIC1Sin/n4904 ), 
    .A0(\CIC1Sin/d5_36 ), .DI1(\CIC1Sin/d5_71_N_706_37 ), 
    .DI0(\CIC1Sin/d5_71_N_706_36 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11796 ), 
    .F0(\CIC1Sin/d5_71_N_706_36 ), .Q0(\CIC1Sin/d5_36 ), 
    .F1(\CIC1Sin/d5_71_N_706_37 ), .Q1(\CIC1Sin/d5_37 ), 
    .FCO(\CIC1Sin/n11797 ));
  CIC1Sin_SLICE_715 \CIC1Sin/SLICE_715 ( .A1(\CIC1Sin/n4904 ), 
    .FCO(\CIC1Sin/n11796 ));
  CIC1Sin_SLICE_716 \CIC1Sin/SLICE_716 ( .D1(MixerOutSin_11), 
    .C1(\CIC1Sin/n4308 ), .B1(\CIC1Sin/n4296 ), .A1(\CIC1Sin/d1_61 ), 
    .D0(MixerOutSin_11), .C0(\CIC1Sin/n4309 ), .B0(\CIC1Sin/n4296 ), 
    .A0(\CIC1Sin/d1_60 ), .DI1(\CIC1Sin/d1_71_N_418_61 ), 
    .DI0(\CIC1Sin/d1_71_N_418_60 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11972 ), 
    .F0(\CIC1Sin/d1_71_N_418_60 ), .Q0(\CIC1Sin/d1_60 ), 
    .F1(\CIC1Sin/d1_71_N_418_61 ), .Q1(\CIC1Sin/d1_61 ), 
    .FCO(\CIC1Sin/n11973 ));
  CIC1Sin_SLICE_717 \CIC1Sin/SLICE_717 ( .D1(MixerOutSin_11), 
    .C1(\CIC1Sin/n4310 ), .B1(\CIC1Sin/n4296 ), .A1(\CIC1Sin/d1_59 ), 
    .D0(MixerOutSin_11), .C0(\CIC1Sin/n4311 ), .B0(\CIC1Sin/n4296 ), 
    .A0(\CIC1Sin/d1_58 ), .DI1(\CIC1Sin/d1_71_N_418_59 ), 
    .DI0(\CIC1Sin/d1_71_N_418_58 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11971 ), 
    .F0(\CIC1Sin/d1_71_N_418_58 ), .Q0(\CIC1Sin/d1_58 ), 
    .F1(\CIC1Sin/d1_71_N_418_59 ), .Q1(\CIC1Sin/d1_59 ), 
    .FCO(\CIC1Sin/n11972 ));
  CIC1Sin_SLICE_718 \CIC1Sin/SLICE_718 ( .D1(MixerOutSin_11), 
    .C1(\CIC1Sin/n4312 ), .B1(\CIC1Sin/n4296 ), .A1(\CIC1Sin/d1_57 ), 
    .D0(MixerOutSin_11), .C0(\CIC1Sin/n4313 ), .B0(\CIC1Sin/n4296 ), 
    .A0(\CIC1Sin/d1_56 ), .DI1(\CIC1Sin/d1_71_N_418_57 ), 
    .DI0(\CIC1Sin/d1_71_N_418_56 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11970 ), 
    .F0(\CIC1Sin/d1_71_N_418_56 ), .Q0(\CIC1Sin/d1_56 ), 
    .F1(\CIC1Sin/d1_71_N_418_57 ), .Q1(\CIC1Sin/d1_57 ), 
    .FCO(\CIC1Sin/n11971 ));
  CIC1Sin_SLICE_719 \CIC1Sin/SLICE_719 ( .D1(MixerOutSin_11), 
    .C1(\CIC1Sin/n4314 ), .B1(\CIC1Sin/n4296 ), .A1(\CIC1Sin/d1_55 ), 
    .D0(MixerOutSin_11), .C0(\CIC1Sin/n4315 ), .B0(\CIC1Sin/n4296 ), 
    .A0(\CIC1Sin/d1_54 ), .DI1(\CIC1Sin/d1_71_N_418_55 ), 
    .DI0(\CIC1Sin/d1_71_N_418_54 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11969 ), 
    .F0(\CIC1Sin/d1_71_N_418_54 ), .Q0(\CIC1Sin/d1_54 ), 
    .F1(\CIC1Sin/d1_71_N_418_55 ), .Q1(\CIC1Sin/d1_55 ), 
    .FCO(\CIC1Sin/n11970 ));
  CIC1Sin_SLICE_720 \CIC1Sin/SLICE_720 ( .D1(MixerOutSin_11), 
    .C1(\CIC1Sin/n4316 ), .B1(\CIC1Sin/n4296 ), .A1(\CIC1Sin/d1_53 ), 
    .D0(MixerOutSin_11), .C0(\CIC1Sin/n4317 ), .B0(\CIC1Sin/n4296 ), 
    .A0(\CIC1Sin/d1_52 ), .DI1(\CIC1Sin/d1_71_N_418_53 ), 
    .DI0(\CIC1Sin/d1_71_N_418_52 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11968 ), 
    .F0(\CIC1Sin/d1_71_N_418_52 ), .Q0(\CIC1Sin/d1_52 ), 
    .F1(\CIC1Sin/d1_71_N_418_53 ), .Q1(\CIC1Sin/d1_53 ), 
    .FCO(\CIC1Sin/n11969 ));
  CIC1Sin_SLICE_721 \CIC1Sin/SLICE_721 ( .D1(MixerOutSin_11), 
    .C1(\CIC1Sin/n4318 ), .B1(\CIC1Sin/n4296 ), .A1(\CIC1Sin/d1_51 ), 
    .D0(MixerOutSin_11), .C0(\CIC1Sin/n4319 ), .B0(\CIC1Sin/n4296 ), 
    .A0(\CIC1Sin/d1_50 ), .DI1(\CIC1Sin/d1_71_N_418_51 ), 
    .DI0(\CIC1Sin/d1_71_N_418_50 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11967 ), 
    .F0(\CIC1Sin/d1_71_N_418_50 ), .Q0(\CIC1Sin/d1_50 ), 
    .F1(\CIC1Sin/d1_71_N_418_51 ), .Q1(\CIC1Sin/d1_51 ), 
    .FCO(\CIC1Sin/n11968 ));
  CIC1Sin_SLICE_722 \CIC1Sin/SLICE_722 ( .D1(MixerOutSin_11), 
    .C1(\CIC1Sin/n4320 ), .B1(\CIC1Sin/n4296 ), .A1(\CIC1Sin/d1_49 ), 
    .D0(MixerOutSin_11), .C0(\CIC1Sin/n4321 ), .B0(\CIC1Sin/n4296 ), 
    .A0(\CIC1Sin/d1_48 ), .DI1(\CIC1Sin/d1_71_N_418_49 ), 
    .DI0(\CIC1Sin/d1_71_N_418_48 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11966 ), 
    .F0(\CIC1Sin/d1_71_N_418_48 ), .Q0(\CIC1Sin/d1_48 ), 
    .F1(\CIC1Sin/d1_71_N_418_49 ), .Q1(\CIC1Sin/d1_49 ), 
    .FCO(\CIC1Sin/n11967 ));
  CIC1Sin_SLICE_723 \CIC1Sin/SLICE_723 ( .D1(MixerOutSin_11), 
    .C1(\CIC1Sin/n4322 ), .B1(\CIC1Sin/n4296 ), .A1(\CIC1Sin/d1_47 ), 
    .D0(MixerOutSin_11), .C0(\CIC1Sin/n4323 ), .B0(\CIC1Sin/n4296 ), 
    .A0(\CIC1Sin/d1_46 ), .DI1(\CIC1Sin/d1_71_N_418_47 ), 
    .DI0(\CIC1Sin/d1_71_N_418_46 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11965 ), 
    .F0(\CIC1Sin/d1_71_N_418_46 ), .Q0(\CIC1Sin/d1_46 ), 
    .F1(\CIC1Sin/d1_71_N_418_47 ), .Q1(\CIC1Sin/d1_47 ), 
    .FCO(\CIC1Sin/n11966 ));
  CIC1Sin_SLICE_724 \CIC1Sin/SLICE_724 ( .D1(MixerOutSin_11), 
    .C1(\CIC1Sin/n4324 ), .B1(\CIC1Sin/n4296 ), .A1(\CIC1Sin/d1_45 ), 
    .D0(MixerOutSin_11), .C0(\CIC1Sin/n4325 ), .B0(\CIC1Sin/n4296 ), 
    .A0(\CIC1Sin/d1_44 ), .DI1(\CIC1Sin/d1_71_N_418_45 ), 
    .DI0(\CIC1Sin/d1_71_N_418_44 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11964 ), 
    .F0(\CIC1Sin/d1_71_N_418_44 ), .Q0(\CIC1Sin/d1_44 ), 
    .F1(\CIC1Sin/d1_71_N_418_45 ), .Q1(\CIC1Sin/d1_45 ), 
    .FCO(\CIC1Sin/n11965 ));
  ncoGen_SLICE_725 \ncoGen/SLICE_725 ( .B1(phase_inc_carrGen1_63), 
    .A1(phase_accum_63), .B0(phase_inc_carrGen1_62), .A0(phase_accum_62), 
    .DI1(\ncoGen/phase_accum_63_N_146_63 ), 
    .DI0(\ncoGen/phase_accum_63_N_146_62 ), .CLK(osc_clk), 
    .FCI(\ncoGen/n10692 ), .F0(\ncoGen/phase_accum_63_N_146_62 ), 
    .Q0(phase_accum_62), .F1(\ncoGen/phase_accum_63_N_146_63 ), 
    .Q1(phase_accum_63));
  ncoGen_SLICE_726 \ncoGen/SLICE_726 ( .B1(phase_inc_carrGen1_61), 
    .A1(phase_accum_61), .B0(phase_inc_carrGen1_60), .A0(phase_accum_60), 
    .DI1(\ncoGen/phase_accum_63_N_146_61 ), 
    .DI0(\ncoGen/phase_accum_63_N_146_60 ), .CLK(osc_clk), 
    .FCI(\ncoGen/n10691 ), .F0(\ncoGen/phase_accum_63_N_146_60 ), 
    .Q0(phase_accum_60), .F1(\ncoGen/phase_accum_63_N_146_61 ), 
    .Q1(phase_accum_61), .FCO(\ncoGen/n10692 ));
  ncoGen_SLICE_727 \ncoGen/SLICE_727 ( .B1(phase_inc_carrGen1_59), 
    .A1(phase_accum_59), .B0(phase_inc_carrGen1_58), .A0(phase_accum_58), 
    .DI1(\ncoGen/phase_accum_63_N_146_59 ), 
    .DI0(\ncoGen/phase_accum_63_N_146_58 ), .CLK(osc_clk), 
    .FCI(\ncoGen/n10690 ), .F0(\ncoGen/phase_accum_63_N_146_58 ), 
    .Q0(phase_accum_58), .F1(\ncoGen/phase_accum_63_N_146_59 ), 
    .Q1(phase_accum_59), .FCO(\ncoGen/n10691 ));
  ncoGen_SLICE_728 \ncoGen/SLICE_728 ( .B1(phase_inc_carrGen1_57), 
    .A1(phase_accum_57), .B0(phase_inc_carrGen1_56), .A0(phase_accum_56), 
    .DI1(\ncoGen/phase_accum_63_N_146_57 ), 
    .DI0(\ncoGen/phase_accum_63_N_146_56 ), .CLK(osc_clk), 
    .FCI(\ncoGen/n10689 ), .F0(\ncoGen/phase_accum_63_N_146_56 ), 
    .Q0(phase_accum_56), .F1(\ncoGen/phase_accum_63_N_146_57 ), 
    .Q1(phase_accum_57), .FCO(\ncoGen/n10690 ));
  ncoGen_SLICE_729 \ncoGen/SLICE_729 ( .B1(phase_inc_carrGen1_55), 
    .A1(\ncoGen/phase_accum_55 ), .B0(phase_inc_carrGen1_54), 
    .A0(\ncoGen/phase_accum_54 ), .DI1(\ncoGen/phase_accum_63_N_146_55 ), 
    .DI0(\ncoGen/phase_accum_63_N_146_54 ), .CLK(osc_clk), 
    .FCI(\ncoGen/n10688 ), .F0(\ncoGen/phase_accum_63_N_146_54 ), 
    .Q0(\ncoGen/phase_accum_54 ), .F1(\ncoGen/phase_accum_63_N_146_55 ), 
    .Q1(\ncoGen/phase_accum_55 ), .FCO(\ncoGen/n10689 ));
  ncoGen_SLICE_730 \ncoGen/SLICE_730 ( .B1(phase_inc_carrGen1_53), 
    .A1(\ncoGen/phase_accum_53 ), .B0(phase_inc_carrGen1_52), 
    .A0(\ncoGen/phase_accum_52 ), .DI1(\ncoGen/phase_accum_63_N_146_53 ), 
    .DI0(\ncoGen/phase_accum_63_N_146_52 ), .CLK(osc_clk), 
    .FCI(\ncoGen/n10687 ), .F0(\ncoGen/phase_accum_63_N_146_52 ), 
    .Q0(\ncoGen/phase_accum_52 ), .F1(\ncoGen/phase_accum_63_N_146_53 ), 
    .Q1(\ncoGen/phase_accum_53 ), .FCO(\ncoGen/n10688 ));
  ncoGen_SLICE_731 \ncoGen/SLICE_731 ( .B1(phase_inc_carrGen1_51), 
    .A1(\ncoGen/phase_accum_51 ), .B0(phase_inc_carrGen1_50), 
    .A0(\ncoGen/phase_accum_50 ), .DI1(\ncoGen/phase_accum_63_N_146_51 ), 
    .DI0(\ncoGen/phase_accum_63_N_146_50 ), .CLK(osc_clk), 
    .FCI(\ncoGen/n10686 ), .F0(\ncoGen/phase_accum_63_N_146_50 ), 
    .Q0(\ncoGen/phase_accum_50 ), .F1(\ncoGen/phase_accum_63_N_146_51 ), 
    .Q1(\ncoGen/phase_accum_51 ), .FCO(\ncoGen/n10687 ));
  ncoGen_SLICE_732 \ncoGen/SLICE_732 ( .B1(phase_inc_carrGen1_49), 
    .A1(\ncoGen/phase_accum_49 ), .B0(phase_inc_carrGen1_48), 
    .A0(\ncoGen/phase_accum_48 ), .DI1(\ncoGen/phase_accum_63_N_146_49 ), 
    .DI0(\ncoGen/phase_accum_63_N_146_48 ), .CLK(osc_clk), 
    .FCI(\ncoGen/n10685 ), .F0(\ncoGen/phase_accum_63_N_146_48 ), 
    .Q0(\ncoGen/phase_accum_48 ), .F1(\ncoGen/phase_accum_63_N_146_49 ), 
    .Q1(\ncoGen/phase_accum_49 ), .FCO(\ncoGen/n10686 ));
  ncoGen_SLICE_733 \ncoGen/SLICE_733 ( .B1(phase_inc_carrGen1_47), 
    .A1(\ncoGen/phase_accum_47 ), .B0(phase_inc_carrGen1_46), 
    .A0(\ncoGen/phase_accum_46 ), .DI1(\ncoGen/phase_accum_63_N_146_47 ), 
    .DI0(\ncoGen/phase_accum_63_N_146_46 ), .CLK(osc_clk), 
    .FCI(\ncoGen/n10684 ), .F0(\ncoGen/phase_accum_63_N_146_46 ), 
    .Q0(\ncoGen/phase_accum_46 ), .F1(\ncoGen/phase_accum_63_N_146_47 ), 
    .Q1(\ncoGen/phase_accum_47 ), .FCO(\ncoGen/n10685 ));
  ncoGen_SLICE_734 \ncoGen/SLICE_734 ( .B1(phase_inc_carrGen1_45), 
    .A1(\ncoGen/phase_accum_45 ), .B0(phase_inc_carrGen1_44), 
    .A0(\ncoGen/phase_accum_44 ), .DI1(\ncoGen/phase_accum_63_N_146_45 ), 
    .DI0(\ncoGen/phase_accum_63_N_146_44 ), .CLK(osc_clk), 
    .FCI(\ncoGen/n10683 ), .F0(\ncoGen/phase_accum_63_N_146_44 ), 
    .Q0(\ncoGen/phase_accum_44 ), .F1(\ncoGen/phase_accum_63_N_146_45 ), 
    .Q1(\ncoGen/phase_accum_45 ), .FCO(\ncoGen/n10684 ));
  ncoGen_SLICE_735 \ncoGen/SLICE_735 ( .B1(phase_inc_carrGen1_43), 
    .A1(\ncoGen/phase_accum_43 ), .B0(phase_inc_carrGen1_42), 
    .A0(\ncoGen/phase_accum_42 ), .DI1(\ncoGen/phase_accum_63_N_146_43 ), 
    .DI0(\ncoGen/phase_accum_63_N_146_42 ), .CLK(osc_clk), 
    .FCI(\ncoGen/n10682 ), .F0(\ncoGen/phase_accum_63_N_146_42 ), 
    .Q0(\ncoGen/phase_accum_42 ), .F1(\ncoGen/phase_accum_63_N_146_43 ), 
    .Q1(\ncoGen/phase_accum_43 ), .FCO(\ncoGen/n10683 ));
  ncoGen_SLICE_736 \ncoGen/SLICE_736 ( .B1(phase_inc_carrGen1_41), 
    .A1(\ncoGen/phase_accum_41 ), .B0(phase_inc_carrGen1_40), 
    .A0(\ncoGen/phase_accum_40 ), .DI1(\ncoGen/phase_accum_63_N_146_41 ), 
    .DI0(\ncoGen/phase_accum_63_N_146_40 ), .CLK(osc_clk), 
    .FCI(\ncoGen/n10681 ), .F0(\ncoGen/phase_accum_63_N_146_40 ), 
    .Q0(\ncoGen/phase_accum_40 ), .F1(\ncoGen/phase_accum_63_N_146_41 ), 
    .Q1(\ncoGen/phase_accum_41 ), .FCO(\ncoGen/n10682 ));
  ncoGen_SLICE_737 \ncoGen/SLICE_737 ( .B1(phase_inc_carrGen1_39), 
    .A1(\ncoGen/phase_accum_39 ), .B0(phase_inc_carrGen1_38), 
    .A0(\ncoGen/phase_accum_38 ), .DI1(\ncoGen/phase_accum_63_N_146_39 ), 
    .DI0(\ncoGen/phase_accum_63_N_146_38 ), .CLK(osc_clk), 
    .FCI(\ncoGen/n10680 ), .F0(\ncoGen/phase_accum_63_N_146_38 ), 
    .Q0(\ncoGen/phase_accum_38 ), .F1(\ncoGen/phase_accum_63_N_146_39 ), 
    .Q1(\ncoGen/phase_accum_39 ), .FCO(\ncoGen/n10681 ));
  ncoGen_SLICE_738 \ncoGen/SLICE_738 ( .B1(phase_inc_carrGen1_37), 
    .A1(\ncoGen/phase_accum_37 ), .B0(phase_inc_carrGen1_36), 
    .A0(\ncoGen/phase_accum_36 ), .DI1(\ncoGen/phase_accum_63_N_146_37 ), 
    .DI0(\ncoGen/phase_accum_63_N_146_36 ), .CLK(osc_clk), 
    .FCI(\ncoGen/n10679 ), .F0(\ncoGen/phase_accum_63_N_146_36 ), 
    .Q0(\ncoGen/phase_accum_36 ), .F1(\ncoGen/phase_accum_63_N_146_37 ), 
    .Q1(\ncoGen/phase_accum_37 ), .FCO(\ncoGen/n10680 ));
  ncoGen_SLICE_739 \ncoGen/SLICE_739 ( .B1(phase_inc_carrGen1_35), 
    .A1(\ncoGen/phase_accum_35 ), .B0(phase_inc_carrGen1_34), 
    .A0(\ncoGen/phase_accum_34 ), .DI1(\ncoGen/phase_accum_63_N_146_35 ), 
    .DI0(\ncoGen/phase_accum_63_N_146_34 ), .CLK(osc_clk), 
    .FCI(\ncoGen/n10678 ), .F0(\ncoGen/phase_accum_63_N_146_34 ), 
    .Q0(\ncoGen/phase_accum_34 ), .F1(\ncoGen/phase_accum_63_N_146_35 ), 
    .Q1(\ncoGen/phase_accum_35 ), .FCO(\ncoGen/n10679 ));
  ncoGen_SLICE_740 \ncoGen/SLICE_740 ( .B1(phase_inc_carrGen1_33), 
    .A1(\ncoGen/phase_accum_33 ), .B0(phase_inc_carrGen1_32), 
    .A0(\ncoGen/phase_accum_32 ), .DI1(\ncoGen/phase_accum_63_N_146_33 ), 
    .DI0(\ncoGen/phase_accum_63_N_146_32 ), .CLK(osc_clk), 
    .FCI(\ncoGen/n10677 ), .F0(\ncoGen/phase_accum_63_N_146_32 ), 
    .Q0(\ncoGen/phase_accum_32 ), .F1(\ncoGen/phase_accum_63_N_146_33 ), 
    .Q1(\ncoGen/phase_accum_33 ), .FCO(\ncoGen/n10678 ));
  ncoGen_SLICE_741 \ncoGen/SLICE_741 ( .B1(phase_inc_carrGen1_31), 
    .A1(\ncoGen/phase_accum_31 ), .B0(phase_inc_carrGen1_30), 
    .A0(\ncoGen/phase_accum_30 ), .DI1(\ncoGen/phase_accum_63_N_146_31 ), 
    .DI0(\ncoGen/phase_accum_63_N_146_30 ), .CLK(osc_clk), 
    .FCI(\ncoGen/n10676 ), .F0(\ncoGen/phase_accum_63_N_146_30 ), 
    .Q0(\ncoGen/phase_accum_30 ), .F1(\ncoGen/phase_accum_63_N_146_31 ), 
    .Q1(\ncoGen/phase_accum_31 ), .FCO(\ncoGen/n10677 ));
  ncoGen_SLICE_742 \ncoGen/SLICE_742 ( .B1(phase_inc_carrGen1_29), 
    .A1(\ncoGen/phase_accum_29 ), .B0(phase_inc_carrGen1_28), 
    .A0(\ncoGen/phase_accum_28 ), .DI1(\ncoGen/phase_accum_63_N_146_29 ), 
    .DI0(\ncoGen/phase_accum_63_N_146_28 ), .CLK(osc_clk), 
    .FCI(\ncoGen/n10675 ), .F0(\ncoGen/phase_accum_63_N_146_28 ), 
    .Q0(\ncoGen/phase_accum_28 ), .F1(\ncoGen/phase_accum_63_N_146_29 ), 
    .Q1(\ncoGen/phase_accum_29 ), .FCO(\ncoGen/n10676 ));
  ncoGen_SLICE_743 \ncoGen/SLICE_743 ( .B1(phase_inc_carrGen1_27), 
    .A1(\ncoGen/phase_accum_27 ), .B0(phase_inc_carrGen1_26), 
    .A0(\ncoGen/phase_accum_26 ), .DI1(\ncoGen/phase_accum_63_N_146_27 ), 
    .DI0(\ncoGen/phase_accum_63_N_146_26 ), .CLK(osc_clk), 
    .FCI(\ncoGen/n10674 ), .F0(\ncoGen/phase_accum_63_N_146_26 ), 
    .Q0(\ncoGen/phase_accum_26 ), .F1(\ncoGen/phase_accum_63_N_146_27 ), 
    .Q1(\ncoGen/phase_accum_27 ), .FCO(\ncoGen/n10675 ));
  ncoGen_SLICE_744 \ncoGen/SLICE_744 ( .B1(phase_inc_carrGen1_25), 
    .A1(\ncoGen/phase_accum_25 ), .B0(phase_inc_carrGen1_24), 
    .A0(\ncoGen/phase_accum_24 ), .DI1(\ncoGen/phase_accum_63_N_146_25 ), 
    .DI0(\ncoGen/phase_accum_63_N_146_24 ), .CLK(osc_clk), 
    .FCI(\ncoGen/n10673 ), .F0(\ncoGen/phase_accum_63_N_146_24 ), 
    .Q0(\ncoGen/phase_accum_24 ), .F1(\ncoGen/phase_accum_63_N_146_25 ), 
    .Q1(\ncoGen/phase_accum_25 ), .FCO(\ncoGen/n10674 ));
  ncoGen_SLICE_745 \ncoGen/SLICE_745 ( .B1(phase_inc_carrGen1_23), 
    .A1(\ncoGen/phase_accum_23 ), .B0(phase_inc_carrGen1_22), 
    .A0(\ncoGen/phase_accum_22 ), .DI1(\ncoGen/phase_accum_63_N_146_23 ), 
    .DI0(\ncoGen/phase_accum_63_N_146_22 ), .CLK(osc_clk), 
    .FCI(\ncoGen/n10672 ), .F0(\ncoGen/phase_accum_63_N_146_22 ), 
    .Q0(\ncoGen/phase_accum_22 ), .F1(\ncoGen/phase_accum_63_N_146_23 ), 
    .Q1(\ncoGen/phase_accum_23 ), .FCO(\ncoGen/n10673 ));
  ncoGen_SLICE_746 \ncoGen/SLICE_746 ( .B1(phase_inc_carrGen1_21), 
    .A1(\ncoGen/phase_accum_21 ), .B0(phase_inc_carrGen1_20), 
    .A0(\ncoGen/phase_accum_20 ), .DI1(\ncoGen/phase_accum_63_N_146_21 ), 
    .DI0(\ncoGen/phase_accum_63_N_146_20 ), .CLK(osc_clk), 
    .FCI(\ncoGen/n10671 ), .F0(\ncoGen/phase_accum_63_N_146_20 ), 
    .Q0(\ncoGen/phase_accum_20 ), .F1(\ncoGen/phase_accum_63_N_146_21 ), 
    .Q1(\ncoGen/phase_accum_21 ), .FCO(\ncoGen/n10672 ));
  ncoGen_SLICE_747 \ncoGen/SLICE_747 ( .B1(phase_inc_carrGen1_19), 
    .A1(\ncoGen/phase_accum_19 ), .B0(phase_inc_carrGen1_18), 
    .A0(\ncoGen/phase_accum_18 ), .DI1(\ncoGen/phase_accum_63_N_146_19 ), 
    .DI0(\ncoGen/phase_accum_63_N_146_18 ), .CLK(osc_clk), 
    .FCI(\ncoGen/n10670 ), .F0(\ncoGen/phase_accum_63_N_146_18 ), 
    .Q0(\ncoGen/phase_accum_18 ), .F1(\ncoGen/phase_accum_63_N_146_19 ), 
    .Q1(\ncoGen/phase_accum_19 ), .FCO(\ncoGen/n10671 ));
  ncoGen_SLICE_748 \ncoGen/SLICE_748 ( .B1(phase_inc_carrGen1_17), 
    .A1(\ncoGen/phase_accum_17 ), .B0(phase_inc_carrGen1_16), 
    .A0(\ncoGen/phase_accum_16 ), .DI1(\ncoGen/phase_accum_63_N_146_17 ), 
    .DI0(\ncoGen/phase_accum_63_N_146_16 ), .CLK(osc_clk), 
    .FCI(\ncoGen/n10669 ), .F0(\ncoGen/phase_accum_63_N_146_16 ), 
    .Q0(\ncoGen/phase_accum_16 ), .F1(\ncoGen/phase_accum_63_N_146_17 ), 
    .Q1(\ncoGen/phase_accum_17 ), .FCO(\ncoGen/n10670 ));
  ncoGen_SLICE_749 \ncoGen/SLICE_749 ( .B1(phase_inc_carrGen1_15), 
    .A1(\ncoGen/phase_accum_15 ), .B0(phase_inc_carrGen1_14), 
    .A0(\ncoGen/phase_accum_14 ), .DI1(\ncoGen/phase_accum_63_N_146_15 ), 
    .DI0(\ncoGen/phase_accum_63_N_146_14 ), .CLK(osc_clk), 
    .FCI(\ncoGen/n10668 ), .F0(\ncoGen/phase_accum_63_N_146_14 ), 
    .Q0(\ncoGen/phase_accum_14 ), .F1(\ncoGen/phase_accum_63_N_146_15 ), 
    .Q1(\ncoGen/phase_accum_15 ), .FCO(\ncoGen/n10669 ));
  ncoGen_SLICE_750 \ncoGen/SLICE_750 ( .B1(phase_inc_carrGen1_13), 
    .A1(\ncoGen/phase_accum_13 ), .B0(phase_inc_carrGen1_12), 
    .A0(\ncoGen/phase_accum_12 ), .DI1(\ncoGen/phase_accum_63_N_146_13 ), 
    .DI0(\ncoGen/phase_accum_63_N_146_12 ), .CLK(osc_clk), 
    .FCI(\ncoGen/n10667 ), .F0(\ncoGen/phase_accum_63_N_146_12 ), 
    .Q0(\ncoGen/phase_accum_12 ), .F1(\ncoGen/phase_accum_63_N_146_13 ), 
    .Q1(\ncoGen/phase_accum_13 ), .FCO(\ncoGen/n10668 ));
  ncoGen_SLICE_751 \ncoGen/SLICE_751 ( .B1(phase_inc_carrGen1_11), 
    .A1(\ncoGen/phase_accum_11 ), .B0(phase_inc_carrGen1_10), 
    .A0(\ncoGen/phase_accum_10 ), .DI1(\ncoGen/phase_accum_63_N_146_11 ), 
    .DI0(\ncoGen/phase_accum_63_N_146_10 ), .CLK(osc_clk), 
    .FCI(\ncoGen/n10666 ), .F0(\ncoGen/phase_accum_63_N_146_10 ), 
    .Q0(\ncoGen/phase_accum_10 ), .F1(\ncoGen/phase_accum_63_N_146_11 ), 
    .Q1(\ncoGen/phase_accum_11 ), .FCO(\ncoGen/n10667 ));
  ncoGen_SLICE_752 \ncoGen/SLICE_752 ( .B1(phase_inc_carrGen1_9), 
    .A1(\ncoGen/phase_accum_9 ), .B0(phase_inc_carrGen1_8), 
    .A0(\ncoGen/phase_accum_8 ), .DI1(\ncoGen/phase_accum_63_N_146_9 ), 
    .DI0(\ncoGen/phase_accum_63_N_146_8 ), .CLK(osc_clk), 
    .FCI(\ncoGen/n10665 ), .F0(\ncoGen/phase_accum_63_N_146_8 ), 
    .Q0(\ncoGen/phase_accum_8 ), .F1(\ncoGen/phase_accum_63_N_146_9 ), 
    .Q1(\ncoGen/phase_accum_9 ), .FCO(\ncoGen/n10666 ));
  ncoGen_SLICE_753 \ncoGen/SLICE_753 ( .B1(phase_inc_carrGen1_7), 
    .A1(\ncoGen/phase_accum_7 ), .B0(phase_inc_carrGen1_6), 
    .A0(\ncoGen/phase_accum_6 ), .DI1(\ncoGen/phase_accum_63_N_146_7 ), 
    .DI0(\ncoGen/phase_accum_63_N_146_6 ), .CLK(osc_clk), 
    .FCI(\ncoGen/n10664 ), .F0(\ncoGen/phase_accum_63_N_146_6 ), 
    .Q0(\ncoGen/phase_accum_6 ), .F1(\ncoGen/phase_accum_63_N_146_7 ), 
    .Q1(\ncoGen/phase_accum_7 ), .FCO(\ncoGen/n10665 ));
  ncoGen_SLICE_754 \ncoGen/SLICE_754 ( .B1(phase_inc_carrGen1_5), 
    .A1(\ncoGen/phase_accum_5 ), .B0(phase_inc_carrGen1_4), 
    .A0(\ncoGen/phase_accum_4 ), .DI1(\ncoGen/phase_accum_63_N_146_5 ), 
    .DI0(\ncoGen/phase_accum_63_N_146_4 ), .CLK(osc_clk), 
    .FCI(\ncoGen/n10663 ), .F0(\ncoGen/phase_accum_63_N_146_4 ), 
    .Q0(\ncoGen/phase_accum_4 ), .F1(\ncoGen/phase_accum_63_N_146_5 ), 
    .Q1(\ncoGen/phase_accum_5 ), .FCO(\ncoGen/n10664 ));
  ncoGen_SLICE_755 \ncoGen/SLICE_755 ( .B1(phase_inc_carrGen1_3), 
    .A1(\ncoGen/phase_accum_3 ), .B0(phase_inc_carrGen1_2), 
    .A0(\ncoGen/phase_accum_2 ), .DI1(\ncoGen/phase_accum_63_N_146_3 ), 
    .DI0(\ncoGen/phase_accum_63_N_146_2 ), .CLK(osc_clk), 
    .FCI(\ncoGen/n10662 ), .F0(\ncoGen/phase_accum_63_N_146_2 ), 
    .Q0(\ncoGen/phase_accum_2 ), .F1(\ncoGen/phase_accum_63_N_146_3 ), 
    .Q1(\ncoGen/phase_accum_3 ), .FCO(\ncoGen/n10663 ));
  ncoGen_SLICE_756 \ncoGen/SLICE_756 ( .B1(phase_inc_carrGen1_1), 
    .A1(\ncoGen/phase_accum_1 ), .B0(phase_inc_carrGen1_0), 
    .A0(\ncoGen/phase_accum_0 ), .DI1(\ncoGen/phase_accum_63_N_146_1 ), 
    .CLK(osc_clk), .F1(\ncoGen/phase_accum_63_N_146_1 ), 
    .Q1(\ncoGen/phase_accum_1 ), .FCO(\ncoGen/n10662 ));
  AMDemodulator1_SLICE_757 \AMDemodulator1/SLICE_757 ( 
    .B1(\AMDemodulator1/d_out_d_11__N_1873 ), 
    .A1(\AMDemodulator1/d_out_d_11_N_1874_17 ), 
    .B0(\AMDemodulator1/d_out_d_11__N_1873 ), 
    .A0(\AMDemodulator1/d_out_d_11_N_1874_17 ), .FCI(\AMDemodulator1/n11503 ), 
    .F0(\AMDemodulator1/n438 ), .F1(\AMDemodulator1/d_out_d_11_N_1876_17 ));
  AMDemodulator1_SLICE_758 \AMDemodulator1/SLICE_758 ( 
    .B1(\AMDemodulator1/d_out_d_11_N_1874_17 ), .A1(\AMDemodulator1/n380 ), 
    .B0(\AMDemodulator1/d_out_d_11_N_1874_17 ), .A0(\AMDemodulator1/n381 ), 
    .FCI(\AMDemodulator1/n11502 ), .F0(\AMDemodulator1/n440 ), 
    .F1(\AMDemodulator1/n439 ), .FCO(\AMDemodulator1/n11503 ));
  AMDemodulator1_SLICE_759 \AMDemodulator1/SLICE_759 ( 
    .C1(\AMDemodulator1/n382 ), .B1(\AMDemodulator1/d_out_d_11_N_1874_17 ), 
    .A1(\AMDemodulator1/ISquare_31 ), .C0(\AMDemodulator1/n383 ), 
    .B0(\AMDemodulator1/d_out_d_11_N_1874_17 ), 
    .A0(\AMDemodulator1/ISquare_31 ), .FCI(\AMDemodulator1/n11501 ), 
    .F0(\AMDemodulator1/n442 ), .F1(\AMDemodulator1/n441 ), 
    .FCO(\AMDemodulator1/n11502 ));
  AMDemodulator1_SLICE_760 \AMDemodulator1/SLICE_760 ( 
    .C1(\AMDemodulator1/n384 ), .B1(\AMDemodulator1/d_out_d_11_N_1874_17 ), 
    .A1(\AMDemodulator1/ISquare_31 ), 
    .B0(\AMDemodulator1/d_out_d_11_N_1874_17 ), .A0(\AMDemodulator1/n385 ), 
    .FCI(\AMDemodulator1/n11500 ), .F0(\AMDemodulator1/n444 ), 
    .F1(\AMDemodulator1/n443 ), .FCO(\AMDemodulator1/n11501 ));
  AMDemodulator1_SLICE_761 \AMDemodulator1/SLICE_761 ( 
    .C1(\AMDemodulator1/n386 ), .B1(\AMDemodulator1/d_out_d_11_N_1874_17 ), 
    .A1(\AMDemodulator1/d_out_d_11_N_1872_17 ), .A0(\AMDemodulator1/n387 ), 
    .FCI(\AMDemodulator1/n11499 ), .F0(\AMDemodulator1/n446 ), 
    .F1(\AMDemodulator1/n445 ), .FCO(\AMDemodulator1/n11500 ));
  AMDemodulator1_SLICE_762 \AMDemodulator1/SLICE_762 ( 
    .A1(\AMDemodulator1/ISquare_19 ), 
    .B0(\AMDemodulator1/d_out_d_11_N_1874_17 ), 
    .A0(\AMDemodulator1/ISquare_18 ), .FCI(\AMDemodulator1/n11498 ), 
    .F1(\AMDemodulator1/n447 ), .FCO(\AMDemodulator1/n11499 ));
  AMDemodulator1_SLICE_763 \AMDemodulator1/SLICE_763 ( 
    .A1(\AMDemodulator1/d_out_d_11_N_1874_17 ), .FCO(\AMDemodulator1/n11498 ));
  AMDemodulator1_SLICE_764 \AMDemodulator1/SLICE_764 ( 
    .A1(\AMDemodulator1/n912 ), .B0(\AMDemodulator1/ISquare_31 ), 
    .A0(\AMDemodulator1/n913 ), .FCI(\AMDemodulator1/n11492 ), 
    .F1(\AMDemodulator1/d_out_d_11_N_2335_17 ));
  AMDemodulator1_SLICE_765 \AMDemodulator1/SLICE_765 ( 
    .FCI(\AMDemodulator1/n12158 ), .F0(\AMDemodulator1/d_out_d_11_N_1872_17 ));
  AMDemodulator1_SLICE_766 \AMDemodulator1/SLICE_766 ( 
    .B1(\AMDemodulator1/ISquare_31 ), .A1(\AMDemodulator1/n914 ), 
    .B0(\AMDemodulator1/ISquare_31 ), .A0(\AMDemodulator1/n915 ), 
    .FCI(\AMDemodulator1/n11491 ), .FCO(\AMDemodulator1/n11492 ));
  AMDemodulator1_SLICE_767 \AMDemodulator1/SLICE_767 ( 
    .B0(\AMDemodulator1/ISquare_31 ), .A0(\AMDemodulator1/n209 ), 
    .FCI(\AMDemodulator1/n12157 ), .F0(\AMDemodulator1/n323 ), 
    .F1(\AMDemodulator1/n322 ), .FCO(\AMDemodulator1/n12158 ));
  AMDemodulator1_SLICE_768 \AMDemodulator1/SLICE_768 ( 
    .A1(\AMDemodulator1/ISquare_31 ), .B0(\AMDemodulator1/ISquare_31 ), 
    .A0(\AMDemodulator1/n209 ), .FCI(\AMDemodulator1/n12156 ), 
    .F0(\AMDemodulator1/n325 ), .F1(\AMDemodulator1/n324 ), 
    .FCO(\AMDemodulator1/n12157 ));
  AMDemodulator1_SLICE_769 \AMDemodulator1/SLICE_769 ( 
    .B0(\AMDemodulator1/ISquare_22 ), .A0(\AMDemodulator1/ISquare_23 ), 
    .F1(\AMDemodulator1/n326 ), .FCO(\AMDemodulator1/n12156 ));
  AMDemodulator1_SLICE_770 \AMDemodulator1/SLICE_770 ( 
    .A1(\AMDemodulator1/n916 ), .B0(\AMDemodulator1/d_out_d_11_N_1872_17 ), 
    .A0(\AMDemodulator1/n917 ), .FCI(\AMDemodulator1/n11490 ), 
    .FCO(\AMDemodulator1/n11491 ));
  AMDemodulator1_SLICE_771 \AMDemodulator1/SLICE_771 ( 
    .B1(\AMDemodulator1/d_out_d_11__N_1877 ), 
    .A1(\AMDemodulator1/d_out_d_11_N_1878_17 ), 
    .B0(\AMDemodulator1/d_out_d_11__N_1877 ), 
    .A0(\AMDemodulator1/d_out_d_11_N_1878_17 ), .FCI(\AMDemodulator1/n12152 ), 
    .F0(\AMDemodulator1/n554 ), .F1(\AMDemodulator1/d_out_d_11_N_1880_17 ));
  AMDemodulator1_SLICE_772 \AMDemodulator1/SLICE_772 ( 
    .B1(\AMDemodulator1/d_out_d_11_N_1874_17 ), .A1(\AMDemodulator1/n918 ), 
    .B0(\AMDemodulator1/d_out_d_11_N_1876_17 ), .A0(\AMDemodulator1/n919 ), 
    .FCI(\AMDemodulator1/n11489 ), .FCO(\AMDemodulator1/n11490 ));
  AMDemodulator1_SLICE_773 \AMDemodulator1/SLICE_773 ( 
    .B1(\AMDemodulator1/d_out_d_11_N_1878_17 ), .A1(\AMDemodulator1/n920 ), 
    .B0(\AMDemodulator1/d_out_d_11_N_1880_17 ), .A0(\AMDemodulator1/n921 ), 
    .FCI(\AMDemodulator1/n11488 ), .FCO(\AMDemodulator1/n11489 ));
  AMDemodulator1_SLICE_774 \AMDemodulator1/SLICE_774 ( 
    .B1(\AMDemodulator1/d_out_d_11_N_1882_17 ), .A1(\AMDemodulator1/n922 ), 
    .B0(\AMDemodulator1/d_out_d_11_N_1884_17 ), .A0(\AMDemodulator1/n923 ), 
    .FCI(\AMDemodulator1/n11487 ), .FCO(\AMDemodulator1/n11488 ));
  AMDemodulator1_SLICE_775 \AMDemodulator1/SLICE_775 ( 
    .B0(\AMDemodulator1/MultResult2_23 ), .A0(\AMDemodulator1/MultResult1_23 ), 
    .DI0(\AMDemodulator1/ISquare_31_N_1895_24 ), .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/n10951 ), .F0(\AMDemodulator1/ISquare_31_N_1895_24 ), 
    .Q0(\AMDemodulator1/ISquare_31 ));
  AMDemodulator1_SLICE_776 \AMDemodulator1/SLICE_776 ( 
    .B1(\AMDemodulator1/MultResult2_23 ), .A1(\AMDemodulator1/MultResult1_23 ), 
    .B0(\AMDemodulator1/MultResult2_22 ), .A0(\AMDemodulator1/MultResult1_22 ), 
    .DI1(\AMDemodulator1/ISquare_31_N_1895_23 ), 
    .DI0(\AMDemodulator1/ISquare_31_N_1895_22 ), .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/n10950 ), .F0(\AMDemodulator1/ISquare_31_N_1895_22 ), 
    .Q0(\AMDemodulator1/ISquare_22 ), 
    .F1(\AMDemodulator1/ISquare_31_N_1895_23 ), 
    .Q1(\AMDemodulator1/ISquare_23 ), .FCO(\AMDemodulator1/n10951 ));
  AMDemodulator1_SLICE_777 \AMDemodulator1/SLICE_777 ( 
    .B1(\AMDemodulator1/MultResult2_21 ), .A1(\AMDemodulator1/MultResult1_21 ), 
    .B0(\AMDemodulator1/MultResult2_20 ), .A0(\AMDemodulator1/MultResult1_20 ), 
    .DI1(\AMDemodulator1/ISquare_31_N_1895_21 ), 
    .DI0(\AMDemodulator1/ISquare_31_N_1895_20 ), .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/n10949 ), .F0(\AMDemodulator1/ISquare_31_N_1895_20 ), 
    .Q0(\AMDemodulator1/ISquare_20 ), 
    .F1(\AMDemodulator1/ISquare_31_N_1895_21 ), 
    .Q1(\AMDemodulator1/ISquare_21 ), .FCO(\AMDemodulator1/n10950 ));
  AMDemodulator1_SLICE_778 \AMDemodulator1/SLICE_778 ( 
    .B1(\AMDemodulator1/MultResult2_19 ), .A1(\AMDemodulator1/MultResult1_19 ), 
    .B0(\AMDemodulator1/MultResult2_18 ), .A0(\AMDemodulator1/MultResult1_18 ), 
    .DI1(\AMDemodulator1/ISquare_31_N_1895_19 ), 
    .DI0(\AMDemodulator1/ISquare_31_N_1895_18 ), .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/n10948 ), .F0(\AMDemodulator1/ISquare_31_N_1895_18 ), 
    .Q0(\AMDemodulator1/ISquare_18 ), 
    .F1(\AMDemodulator1/ISquare_31_N_1895_19 ), 
    .Q1(\AMDemodulator1/ISquare_19 ), .FCO(\AMDemodulator1/n10949 ));
  AMDemodulator1_SLICE_779 \AMDemodulator1/SLICE_779 ( 
    .B1(\AMDemodulator1/MultResult2_17 ), .A1(\AMDemodulator1/MultResult1_17 ), 
    .B0(\AMDemodulator1/MultResult2_16 ), .A0(\AMDemodulator1/MultResult1_16 ), 
    .DI1(\AMDemodulator1/ISquare_31_N_1895_17 ), 
    .DI0(\AMDemodulator1/ISquare_31_N_1895_16 ), .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/n10947 ), .F0(\AMDemodulator1/ISquare_31_N_1895_16 ), 
    .Q0(\AMDemodulator1/ISquare_16 ), 
    .F1(\AMDemodulator1/ISquare_31_N_1895_17 ), 
    .Q1(\AMDemodulator1/ISquare_17 ), .FCO(\AMDemodulator1/n10948 ));
  AMDemodulator1_SLICE_780 \AMDemodulator1/SLICE_780 ( 
    .B1(\AMDemodulator1/MultResult2_15 ), .A1(\AMDemodulator1/MultResult1_15 ), 
    .B0(\AMDemodulator1/MultResult2_14 ), .A0(\AMDemodulator1/MultResult1_14 ), 
    .DI1(\AMDemodulator1/ISquare_31_N_1895_15 ), 
    .DI0(\AMDemodulator1/ISquare_31_N_1895_14 ), .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/n10946 ), .F0(\AMDemodulator1/ISquare_31_N_1895_14 ), 
    .Q0(\AMDemodulator1/ISquare_14 ), 
    .F1(\AMDemodulator1/ISquare_31_N_1895_15 ), 
    .Q1(\AMDemodulator1/ISquare_15 ), .FCO(\AMDemodulator1/n10947 ));
  AMDemodulator1_SLICE_781 \AMDemodulator1/SLICE_781 ( 
    .B1(\AMDemodulator1/MultResult2_13 ), .A1(\AMDemodulator1/MultResult1_13 ), 
    .B0(\AMDemodulator1/MultResult2_12 ), .A0(\AMDemodulator1/MultResult1_12 ), 
    .DI1(\AMDemodulator1/ISquare_31_N_1895_13 ), 
    .DI0(\AMDemodulator1/ISquare_31_N_1895_12 ), .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/n10945 ), .F0(\AMDemodulator1/ISquare_31_N_1895_12 ), 
    .Q0(\AMDemodulator1/ISquare_12 ), 
    .F1(\AMDemodulator1/ISquare_31_N_1895_13 ), 
    .Q1(\AMDemodulator1/ISquare_13 ), .FCO(\AMDemodulator1/n10946 ));
  AMDemodulator1_SLICE_782 \AMDemodulator1/SLICE_782 ( 
    .B1(\AMDemodulator1/MultResult2_11 ), .A1(\AMDemodulator1/MultResult1_11 ), 
    .B0(\AMDemodulator1/MultResult2_10 ), .A0(\AMDemodulator1/MultResult1_10 ), 
    .DI1(\AMDemodulator1/ISquare_31_N_1895_11 ), 
    .DI0(\AMDemodulator1/ISquare_31_N_1895_10 ), .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/n10944 ), .F0(\AMDemodulator1/ISquare_31_N_1895_10 ), 
    .Q0(\AMDemodulator1/ISquare_10 ), 
    .F1(\AMDemodulator1/ISquare_31_N_1895_11 ), 
    .Q1(\AMDemodulator1/ISquare_11 ), .FCO(\AMDemodulator1/n10945 ));
  AMDemodulator1_SLICE_783 \AMDemodulator1/SLICE_783 ( 
    .B1(\AMDemodulator1/MultResult2_9 ), .A1(\AMDemodulator1/MultResult1_9 ), 
    .B0(\AMDemodulator1/MultResult2_8 ), .A0(\AMDemodulator1/MultResult1_8 ), 
    .DI1(\AMDemodulator1/ISquare_31_N_1895_9 ), 
    .DI0(\AMDemodulator1/ISquare_31_N_1895_8 ), .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/n10943 ), .F0(\AMDemodulator1/ISquare_31_N_1895_8 ), 
    .Q0(\AMDemodulator1/ISquare_8 ), .F1(\AMDemodulator1/ISquare_31_N_1895_9 ), 
    .Q1(\AMDemodulator1/ISquare_9 ), .FCO(\AMDemodulator1/n10944 ));
  AMDemodulator1_SLICE_784 \AMDemodulator1/SLICE_784 ( 
    .B1(\AMDemodulator1/MultResult2_7 ), .A1(\AMDemodulator1/MultResult1_7 ), 
    .B0(\AMDemodulator1/MultResult2_6 ), .A0(\AMDemodulator1/MultResult1_6 ), 
    .DI1(\AMDemodulator1/ISquare_31_N_1895_7 ), 
    .DI0(\AMDemodulator1/ISquare_31_N_1895_6 ), .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/n10942 ), .F0(\AMDemodulator1/ISquare_31_N_1895_6 ), 
    .Q0(\AMDemodulator1/ISquare_6 ), .F1(\AMDemodulator1/ISquare_31_N_1895_7 ), 
    .Q1(\AMDemodulator1/ISquare_7 ), .FCO(\AMDemodulator1/n10943 ));
  AMDemodulator1_SLICE_785 \AMDemodulator1/SLICE_785 ( 
    .B1(\AMDemodulator1/MultResult2_5 ), .A1(\AMDemodulator1/MultResult1_5 ), 
    .B0(\AMDemodulator1/MultResult2_4 ), .A0(\AMDemodulator1/MultResult1_4 ), 
    .DI1(\AMDemodulator1/ISquare_31_N_1895_5 ), 
    .DI0(\AMDemodulator1/ISquare_31_N_1895_4 ), .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/n10941 ), .F0(\AMDemodulator1/ISquare_31_N_1895_4 ), 
    .Q0(\AMDemodulator1/ISquare_4 ), .F1(\AMDemodulator1/ISquare_31_N_1895_5 ), 
    .Q1(\AMDemodulator1/ISquare_5 ), .FCO(\AMDemodulator1/n10942 ));
  AMDemodulator1_SLICE_786 \AMDemodulator1/SLICE_786 ( 
    .B1(\AMDemodulator1/MultResult2_3 ), .A1(\AMDemodulator1/MultResult1_3 ), 
    .B0(\AMDemodulator1/MultResult2_2 ), .A0(\AMDemodulator1/MultResult1_2 ), 
    .DI1(\AMDemodulator1/ISquare_31_N_1895_3 ), 
    .DI0(\AMDemodulator1/ISquare_31_N_1895_2 ), .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/n10940 ), .F0(\AMDemodulator1/ISquare_31_N_1895_2 ), 
    .Q0(\AMDemodulator1/ISquare_2 ), .F1(\AMDemodulator1/ISquare_31_N_1895_3 ), 
    .Q1(\AMDemodulator1/ISquare_3 ), .FCO(\AMDemodulator1/n10941 ));
  AMDemodulator1_SLICE_787 \AMDemodulator1/SLICE_787 ( 
    .B1(\AMDemodulator1/MultResult2_1 ), .A1(\AMDemodulator1/MultResult1_1 ), 
    .B0(\AMDemodulator1/MultResult2_0 ), .A0(\AMDemodulator1/MultResult1_0 ), 
    .DI1(\AMDemodulator1/ISquare_31_N_1895_1 ), .CLK(CIC1_out_clkSin), 
    .F1(\AMDemodulator1/ISquare_31_N_1895_1 ), .Q1(\AMDemodulator1/ISquare_1 ), 
    .FCO(\AMDemodulator1/n10940 ));
  AMDemodulator1_SLICE_788 \AMDemodulator1/SLICE_788 ( 
    .B1(\AMDemodulator1/d_out_d_11__N_1871 ), 
    .A1(\AMDemodulator1/d_out_d_11_N_1872_17 ), 
    .B0(\AMDemodulator1/d_out_d_11__N_1871 ), 
    .A0(\AMDemodulator1/d_out_d_11_N_1872_17 ), .FCI(\AMDemodulator1/n10702 ), 
    .F0(\AMDemodulator1/n380 ), .F1(\AMDemodulator1/d_out_d_11_N_1874_17 ));
  AMDemodulator1_SLICE_789 \AMDemodulator1/SLICE_789 ( 
    .B1(\AMDemodulator1/d_out_d_11_N_1872_17 ), .A1(\AMDemodulator1/n322 ), 
    .C0(\AMDemodulator1/n323 ), .B0(\AMDemodulator1/d_out_d_11_N_1872_17 ), 
    .A0(\AMDemodulator1/ISquare_31 ), .FCI(\AMDemodulator1/n10701 ), 
    .F0(\AMDemodulator1/n382 ), .F1(\AMDemodulator1/n381 ), 
    .FCO(\AMDemodulator1/n10702 ));
  AMDemodulator1_SLICE_790 \AMDemodulator1/SLICE_790 ( 
    .C1(\AMDemodulator1/n324 ), .B1(\AMDemodulator1/d_out_d_11_N_1872_17 ), 
    .A1(\AMDemodulator1/ISquare_31 ), .C0(\AMDemodulator1/n325 ), 
    .B0(\AMDemodulator1/d_out_d_11_N_1872_17 ), 
    .A0(\AMDemodulator1/ISquare_31 ), .FCI(\AMDemodulator1/n10700 ), 
    .F0(\AMDemodulator1/n384 ), .F1(\AMDemodulator1/n383 ), 
    .FCO(\AMDemodulator1/n10701 ));
  AMDemodulator1_SLICE_791 \AMDemodulator1/SLICE_791 ( 
    .B1(\AMDemodulator1/d_out_d_11_N_1872_17 ), .A1(\AMDemodulator1/n326 ), 
    .A0(\AMDemodulator1/n12154 ), .FCI(\AMDemodulator1/n10699 ), 
    .F0(\AMDemodulator1/n386 ), .F1(\AMDemodulator1/n385 ), 
    .FCO(\AMDemodulator1/n10700 ));
  AMDemodulator1_SLICE_792 \AMDemodulator1/SLICE_792 ( 
    .A1(\AMDemodulator1/ISquare_21 ), 
    .B0(\AMDemodulator1/d_out_d_11_N_1872_17 ), 
    .A0(\AMDemodulator1/ISquare_20 ), .FCI(\AMDemodulator1/n10698 ), 
    .F1(\AMDemodulator1/n387 ), .FCO(\AMDemodulator1/n10699 ));
  AMDemodulator1_SLICE_793 \AMDemodulator1/SLICE_793 ( 
    .A1(\AMDemodulator1/d_out_d_11_N_1872_17 ), .FCO(\AMDemodulator1/n10698 ));
  AMDemodulator1_SLICE_794 \AMDemodulator1/SLICE_794 ( 
    .B1(\AMDemodulator1/d_out_d_11_N_1878_17 ), .A1(\AMDemodulator1/n496 ), 
    .B0(\AMDemodulator1/d_out_d_11_N_1878_17 ), .A0(\AMDemodulator1/n497 ), 
    .FCI(\AMDemodulator1/n12151 ), .F0(\AMDemodulator1/n556 ), 
    .F1(\AMDemodulator1/n555 ), .FCO(\AMDemodulator1/n12152 ));
  AMDemodulator1_SLICE_795 \AMDemodulator1/SLICE_795 ( 
    .B1(\AMDemodulator1/d_out_d_11_N_1878_17 ), .A1(\AMDemodulator1/n498 ), 
    .B0(\AMDemodulator1/d_out_d_11_N_1878_17 ), .A0(\AMDemodulator1/n499 ), 
    .FCI(\AMDemodulator1/n12150 ), .F0(\AMDemodulator1/n558 ), 
    .F1(\AMDemodulator1/n557 ), .FCO(\AMDemodulator1/n12151 ));
  AMDemodulator1_SLICE_796 \AMDemodulator1/SLICE_796 ( 
    .C1(\AMDemodulator1/n500 ), .B1(\AMDemodulator1/d_out_d_11_N_1878_17 ), 
    .A1(\AMDemodulator1/ISquare_31 ), .C0(\AMDemodulator1/n501 ), 
    .B0(\AMDemodulator1/d_out_d_11_N_1878_17 ), 
    .A0(\AMDemodulator1/ISquare_31 ), .FCI(\AMDemodulator1/n12149 ), 
    .F0(\AMDemodulator1/n560 ), .F1(\AMDemodulator1/n559 ), 
    .FCO(\AMDemodulator1/n12150 ));
  AMDemodulator1_SLICE_797 \AMDemodulator1/SLICE_797 ( 
    .C1(\AMDemodulator1/n502 ), .B1(\AMDemodulator1/d_out_d_11_N_1878_17 ), 
    .A1(\AMDemodulator1/ISquare_31 ), 
    .B0(\AMDemodulator1/d_out_d_11_N_1878_17 ), .A0(\AMDemodulator1/n503 ), 
    .FCI(\AMDemodulator1/n12148 ), .F0(\AMDemodulator1/n562 ), 
    .F1(\AMDemodulator1/n561 ), .FCO(\AMDemodulator1/n12149 ));
  AMDemodulator1_SLICE_798 \AMDemodulator1/SLICE_798 ( 
    .C1(\AMDemodulator1/n504 ), .B1(\AMDemodulator1/d_out_d_11_N_1878_17 ), 
    .A1(\AMDemodulator1/d_out_d_11_N_1872_17 ), .C0(\AMDemodulator1/n505 ), 
    .B0(\AMDemodulator1/d_out_d_11_N_1878_17 ), 
    .A0(\AMDemodulator1/d_out_d_11_N_1874_17 ), .FCI(\AMDemodulator1/n12147 ), 
    .F0(\AMDemodulator1/n564 ), .F1(\AMDemodulator1/n563 ), 
    .FCO(\AMDemodulator1/n12148 ));
  AMDemodulator1_SLICE_799 \AMDemodulator1/SLICE_799 ( 
    .C1(\AMDemodulator1/n506 ), .B1(\AMDemodulator1/d_out_d_11_N_1878_17 ), 
    .A1(\AMDemodulator1/d_out_d_11_N_1876_17 ), .A0(\AMDemodulator1/n507 ), 
    .FCI(\AMDemodulator1/n12146 ), .F0(\AMDemodulator1/n566 ), 
    .F1(\AMDemodulator1/n565 ), .FCO(\AMDemodulator1/n12147 ));
  AMDemodulator1_SLICE_800 \AMDemodulator1/SLICE_800 ( 
    .A1(\AMDemodulator1/ISquare_15 ), 
    .B0(\AMDemodulator1/d_out_d_11_N_1878_17 ), 
    .A0(\AMDemodulator1/ISquare_14 ), .FCI(\AMDemodulator1/n12145 ), 
    .F1(\AMDemodulator1/n567 ), .FCO(\AMDemodulator1/n12146 ));
  AMDemodulator1_SLICE_801 \AMDemodulator1/SLICE_801 ( 
    .A1(\AMDemodulator1/d_out_d_11_N_1878_17 ), .FCO(\AMDemodulator1/n12145 ));
  AMDemodulator1_SLICE_802 \AMDemodulator1/SLICE_802 ( 
    .A1(\AMDemodulator1/n912 ), .B0(\AMDemodulator1/ISquare_31 ), 
    .A0(\AMDemodulator1/n913 ), .FCI(\AMDemodulator1/n12139 ), 
    .F1(\AMDemodulator1/d_out_d_11_N_2353_17 ));
  AMDemodulator1_SLICE_803 \AMDemodulator1/SLICE_803 ( 
    .B1(\AMDemodulator1/d_out_d_11_N_1886_17 ), .A1(\AMDemodulator1/n924 ), 
    .B0(\AMDemodulator1/d_out_d_11_N_1888_17 ), .A0(\AMDemodulator1/n925 ), 
    .FCI(\AMDemodulator1/n11486 ), .FCO(\AMDemodulator1/n11487 ));
  AMDemodulator1_SLICE_804 \AMDemodulator1/SLICE_804 ( 
    .B1(\AMDemodulator1/ISquare_31 ), .A1(\AMDemodulator1/n914 ), 
    .B0(\AMDemodulator1/ISquare_31 ), .A0(\AMDemodulator1/n915 ), 
    .FCI(\AMDemodulator1/n12138 ), .FCO(\AMDemodulator1/n12139 ));
  AMDemodulator1_SLICE_805 \AMDemodulator1/SLICE_805 ( 
    .A1(\AMDemodulator1/n916 ), .B0(\AMDemodulator1/d_out_d_11_N_1872_17 ), 
    .A0(\AMDemodulator1/n917 ), .FCI(\AMDemodulator1/n12137 ), 
    .FCO(\AMDemodulator1/n12138 ));
  AMDemodulator1_SLICE_806 \AMDemodulator1/SLICE_806 ( 
    .B1(\AMDemodulator1/d_out_d_11_N_1874_17 ), .A1(\AMDemodulator1/n918 ), 
    .B0(\AMDemodulator1/d_out_d_11_N_1876_17 ), .A0(\AMDemodulator1/n919 ), 
    .FCI(\AMDemodulator1/n12136 ), .FCO(\AMDemodulator1/n12137 ));
  AMDemodulator1_SLICE_807 \AMDemodulator1/SLICE_807 ( 
    .B1(\AMDemodulator1/d_out_d_11_N_1878_17 ), .A1(\AMDemodulator1/n920 ), 
    .B0(\AMDemodulator1/d_out_d_11_N_1880_17 ), .A0(\AMDemodulator1/n921 ), 
    .FCI(\AMDemodulator1/n12135 ), .FCO(\AMDemodulator1/n12136 ));
  AMDemodulator1_SLICE_808 \AMDemodulator1/SLICE_808 ( 
    .B1(\AMDemodulator1/d_out_d_11_N_1882_17 ), .A1(\AMDemodulator1/n922 ), 
    .B0(\AMDemodulator1/d_out_d_11_N_1884_17 ), .A0(\AMDemodulator1/n923 ), 
    .FCI(\AMDemodulator1/n12134 ), .FCO(\AMDemodulator1/n12135 ));
  AMDemodulator1_SLICE_809 \AMDemodulator1/SLICE_809 ( 
    .B1(\AMDemodulator1/d_out_d_11_N_1886_17 ), .A1(\AMDemodulator1/n924 ), 
    .B0(\AMDemodulator1/d_out_d_11_N_1888_17 ), .A0(\AMDemodulator1/n925 ), 
    .FCI(\AMDemodulator1/n12133 ), .FCO(\AMDemodulator1/n12134 ));
  AMDemodulator1_SLICE_810 \AMDemodulator1/SLICE_810 ( 
    .B1(\AMDemodulator1/d_out_d_11_N_1890_17 ), .A1(\AMDemodulator1/n926 ), 
    .B0(\AMDemodulator1/d_out_d_11_N_1892_17 ), .A0(\AMDemodulator1/n927 ), 
    .FCI(\AMDemodulator1/n12132 ), .FCO(\AMDemodulator1/n12133 ));
  AMDemodulator1_SLICE_811 \AMDemodulator1/SLICE_811 ( 
    .B1(\AMDemodulator1/d_out_d_11_N_1892_17 ), 
    .A1(\AMDemodulator1/ISquare_1 ), .A0(\AMDemodulator1/ISquare_0 ), 
    .FCO(\AMDemodulator1/n12132 ));
  AMDemodulator1_SLICE_812 \AMDemodulator1/SLICE_812 ( 
    .B1(\AMDemodulator1/d_out_d_11_N_1890_17 ), .A1(\AMDemodulator1/n926 ), 
    .B0(\AMDemodulator1/d_out_d_11_N_1892_17 ), .A0(\AMDemodulator1/n927 ), 
    .FCI(\AMDemodulator1/n11485 ), .FCO(\AMDemodulator1/n11486 ));
  AMDemodulator1_SLICE_813 \AMDemodulator1/SLICE_813 ( 
    .B1(\AMDemodulator1/d_out_d_11_N_1892_17 ), 
    .A1(\AMDemodulator1/ISquare_1 ), .A0(\AMDemodulator1/ISquare_0 ), 
    .FCO(\AMDemodulator1/n11485 ));
  AMDemodulator1_SLICE_814 \AMDemodulator1/SLICE_814 ( 
    .B1(\AMDemodulator1/d_out_d_11_N_1886_17 ), .A1(\AMDemodulator1/n732 ), 
    .B0(\AMDemodulator1/d_out_d_11_N_1886_17 ), .A0(\AMDemodulator1/n733 ), 
    .FCI(\AMDemodulator1/n11465 ), .F0(\AMDemodulator1/n792 ), 
    .F1(\AMDemodulator1/d_out_d_11_N_1888_17 ));
  AMDemodulator1_SLICE_815 \AMDemodulator1/SLICE_815 ( 
    .B1(\AMDemodulator1/d_out_d_11_N_1886_17 ), .A1(\AMDemodulator1/n734 ), 
    .B0(\AMDemodulator1/d_out_d_11_N_1886_17 ), .A0(\AMDemodulator1/n735 ), 
    .FCI(\AMDemodulator1/n11464 ), .F0(\AMDemodulator1/n794 ), 
    .F1(\AMDemodulator1/n793 ), .FCO(\AMDemodulator1/n11465 ));
  AMDemodulator1_SLICE_816 \AMDemodulator1/SLICE_816 ( 
    .C1(\AMDemodulator1/n736 ), .B1(\AMDemodulator1/d_out_d_11_N_1886_17 ), 
    .A1(\AMDemodulator1/ISquare_31 ), .C0(\AMDemodulator1/n737 ), 
    .B0(\AMDemodulator1/d_out_d_11_N_1886_17 ), 
    .A0(\AMDemodulator1/ISquare_31 ), .FCI(\AMDemodulator1/n11463 ), 
    .F0(\AMDemodulator1/n796 ), .F1(\AMDemodulator1/n795 ), 
    .FCO(\AMDemodulator1/n11464 ));
  AMDemodulator1_SLICE_817 \AMDemodulator1/SLICE_817 ( 
    .C1(\AMDemodulator1/n738 ), .B1(\AMDemodulator1/d_out_d_11_N_1886_17 ), 
    .A1(\AMDemodulator1/ISquare_31 ), 
    .B0(\AMDemodulator1/d_out_d_11_N_1886_17 ), .A0(\AMDemodulator1/n739 ), 
    .FCI(\AMDemodulator1/n11462 ), .F0(\AMDemodulator1/n798 ), 
    .F1(\AMDemodulator1/n797 ), .FCO(\AMDemodulator1/n11463 ));
  AMDemodulator1_SLICE_818 \AMDemodulator1/SLICE_818 ( 
    .C1(\AMDemodulator1/n740 ), .B1(\AMDemodulator1/d_out_d_11_N_1886_17 ), 
    .A1(\AMDemodulator1/d_out_d_11_N_1872_17 ), .C0(\AMDemodulator1/n741 ), 
    .B0(\AMDemodulator1/d_out_d_11_N_1886_17 ), 
    .A0(\AMDemodulator1/d_out_d_11_N_1874_17 ), .FCI(\AMDemodulator1/n11461 ), 
    .F0(\AMDemodulator1/n800 ), .F1(\AMDemodulator1/n799 ), 
    .FCO(\AMDemodulator1/n11462 ));
  AMDemodulator1_SLICE_819 \AMDemodulator1/SLICE_819 ( 
    .C1(\AMDemodulator1/n742 ), .B1(\AMDemodulator1/d_out_d_11_N_1886_17 ), 
    .A1(\AMDemodulator1/d_out_d_11_N_1876_17 ), .C0(\AMDemodulator1/n743 ), 
    .B0(\AMDemodulator1/d_out_d_11_N_1886_17 ), 
    .A0(\AMDemodulator1/d_out_d_11_N_1878_17 ), .FCI(\AMDemodulator1/n11460 ), 
    .F0(\AMDemodulator1/n802 ), .F1(\AMDemodulator1/n801 ), 
    .FCO(\AMDemodulator1/n11461 ));
  AMDemodulator1_SLICE_820 \AMDemodulator1/SLICE_820 ( 
    .C1(\AMDemodulator1/n744 ), .B1(\AMDemodulator1/d_out_d_11_N_1886_17 ), 
    .A1(\AMDemodulator1/d_out_d_11_N_1880_17 ), .C0(\AMDemodulator1/n745 ), 
    .B0(\AMDemodulator1/d_out_d_11_N_1886_17 ), 
    .A0(\AMDemodulator1/d_out_d_11_N_1882_17 ), .FCI(\AMDemodulator1/n11459 ), 
    .F0(\AMDemodulator1/n804 ), .F1(\AMDemodulator1/n803 ), 
    .FCO(\AMDemodulator1/n11460 ));
  AMDemodulator1_SLICE_821 \AMDemodulator1/SLICE_821 ( 
    .C1(\AMDemodulator1/n746 ), .B1(\AMDemodulator1/d_out_d_11_N_1886_17 ), 
    .A1(\AMDemodulator1/d_out_d_11_N_1884_17 ), .A0(\AMDemodulator1/n747 ), 
    .FCI(\AMDemodulator1/n11458 ), .F0(\AMDemodulator1/n806 ), 
    .F1(\AMDemodulator1/n805 ), .FCO(\AMDemodulator1/n11459 ));
  AMDemodulator1_SLICE_822 \AMDemodulator1/SLICE_822 ( 
    .A1(\AMDemodulator1/ISquare_7 ), 
    .B0(\AMDemodulator1/d_out_d_11_N_1886_17 ), 
    .A0(\AMDemodulator1/ISquare_6 ), .FCI(\AMDemodulator1/n11457 ), 
    .F1(\AMDemodulator1/n807 ), .FCO(\AMDemodulator1/n11458 ));
  AMDemodulator1_SLICE_823 \AMDemodulator1/SLICE_823 ( 
    .A1(\AMDemodulator1/d_out_d_11_N_1886_17 ), .FCO(\AMDemodulator1/n11457 ));
  AMDemodulator1_SLICE_824 \AMDemodulator1/SLICE_824 ( 
    .B1(\AMDemodulator1/d_out_d_11__N_1879 ), 
    .A1(\AMDemodulator1/d_out_d_11_N_1880_17 ), 
    .B0(\AMDemodulator1/d_out_d_11__N_1879 ), 
    .A0(\AMDemodulator1/d_out_d_11_N_1880_17 ), .FCI(\AMDemodulator1/n11361 ), 
    .F0(\AMDemodulator1/n612 ), .F1(\AMDemodulator1/d_out_d_11_N_1882_17 ));
  AMDemodulator1_SLICE_825 \AMDemodulator1/SLICE_825 ( 
    .B1(\AMDemodulator1/d_out_d_11_N_1880_17 ), .A1(\AMDemodulator1/n554 ), 
    .B0(\AMDemodulator1/d_out_d_11_N_1880_17 ), .A0(\AMDemodulator1/n555 ), 
    .FCI(\AMDemodulator1/n11360 ), .F0(\AMDemodulator1/n614 ), 
    .F1(\AMDemodulator1/n613 ), .FCO(\AMDemodulator1/n11361 ));
  AMDemodulator1_SLICE_826 \AMDemodulator1/SLICE_826 ( 
    .B1(\AMDemodulator1/d_out_d_11_N_1880_17 ), .A1(\AMDemodulator1/n556 ), 
    .B0(\AMDemodulator1/d_out_d_11_N_1880_17 ), .A0(\AMDemodulator1/n557 ), 
    .FCI(\AMDemodulator1/n11359 ), .F0(\AMDemodulator1/n616 ), 
    .F1(\AMDemodulator1/n615 ), .FCO(\AMDemodulator1/n11360 ));
  AMDemodulator1_SLICE_827 \AMDemodulator1/SLICE_827 ( 
    .B1(\AMDemodulator1/d_out_d_11_N_1880_17 ), .A1(\AMDemodulator1/n558 ), 
    .C0(\AMDemodulator1/n559 ), .B0(\AMDemodulator1/d_out_d_11_N_1880_17 ), 
    .A0(\AMDemodulator1/ISquare_31 ), .FCI(\AMDemodulator1/n11358 ), 
    .F0(\AMDemodulator1/n618 ), .F1(\AMDemodulator1/n617 ), 
    .FCO(\AMDemodulator1/n11359 ));
  AMDemodulator1_SLICE_828 \AMDemodulator1/SLICE_828 ( 
    .C1(\AMDemodulator1/n560 ), .B1(\AMDemodulator1/d_out_d_11_N_1880_17 ), 
    .A1(\AMDemodulator1/ISquare_31 ), .C0(\AMDemodulator1/n561 ), 
    .B0(\AMDemodulator1/d_out_d_11_N_1880_17 ), 
    .A0(\AMDemodulator1/ISquare_31 ), .FCI(\AMDemodulator1/n11357 ), 
    .F0(\AMDemodulator1/n620 ), .F1(\AMDemodulator1/n619 ), 
    .FCO(\AMDemodulator1/n11358 ));
  AMDemodulator1_SLICE_829 \AMDemodulator1/SLICE_829 ( 
    .B1(\AMDemodulator1/d_out_d_11_N_1880_17 ), .A1(\AMDemodulator1/n562 ), 
    .C0(\AMDemodulator1/n563 ), .B0(\AMDemodulator1/d_out_d_11_N_1880_17 ), 
    .A0(\AMDemodulator1/d_out_d_11_N_1872_17 ), .FCI(\AMDemodulator1/n11356 ), 
    .F0(\AMDemodulator1/n622 ), .F1(\AMDemodulator1/n621 ), 
    .FCO(\AMDemodulator1/n11357 ));
  AMDemodulator1_SLICE_830 \AMDemodulator1/SLICE_830 ( 
    .C1(\AMDemodulator1/n564 ), .B1(\AMDemodulator1/d_out_d_11_N_1880_17 ), 
    .A1(\AMDemodulator1/d_out_d_11_N_1874_17 ), .C0(\AMDemodulator1/n565 ), 
    .B0(\AMDemodulator1/d_out_d_11_N_1880_17 ), 
    .A0(\AMDemodulator1/d_out_d_11_N_1876_17 ), .FCI(\AMDemodulator1/n11355 ), 
    .F0(\AMDemodulator1/n624 ), .F1(\AMDemodulator1/n623 ), 
    .FCO(\AMDemodulator1/n11356 ));
  AMDemodulator1_SLICE_831 \AMDemodulator1/SLICE_831 ( 
    .C1(\AMDemodulator1/n566 ), .B1(\AMDemodulator1/d_out_d_11_N_1880_17 ), 
    .A1(\AMDemodulator1/d_out_d_11_N_1878_17 ), .A0(\AMDemodulator1/n567 ), 
    .FCI(\AMDemodulator1/n11354 ), .F0(\AMDemodulator1/n626 ), 
    .F1(\AMDemodulator1/n625 ), .FCO(\AMDemodulator1/n11355 ));
  AMDemodulator1_SLICE_832 \AMDemodulator1/SLICE_832 ( 
    .A1(\AMDemodulator1/ISquare_13 ), 
    .B0(\AMDemodulator1/d_out_d_11_N_1880_17 ), 
    .A0(\AMDemodulator1/ISquare_12 ), .FCI(\AMDemodulator1/n11353 ), 
    .F1(\AMDemodulator1/n627 ), .FCO(\AMDemodulator1/n11354 ));
  AMDemodulator1_SLICE_833 \AMDemodulator1/SLICE_833 ( 
    .A1(\AMDemodulator1/d_out_d_11_N_1880_17 ), .FCO(\AMDemodulator1/n11353 ));
  AMDemodulator1_SLICE_834 \AMDemodulator1/SLICE_834 ( 
    .B1(\AMDemodulator1/d_out_d_11_N_1884_17 ), .A1(\AMDemodulator1/n672 ), 
    .B0(\AMDemodulator1/d_out_d_11_N_1884_17 ), .A0(\AMDemodulator1/n673 ), 
    .FCI(\AMDemodulator1/n12104 ), .F0(\AMDemodulator1/n732 ), 
    .F1(\AMDemodulator1/d_out_d_11_N_1886_17 ));
  AMDemodulator1_SLICE_835 \AMDemodulator1/SLICE_835 ( 
    .B1(\AMDemodulator1/d_out_d_11_N_1884_17 ), .A1(\AMDemodulator1/n674 ), 
    .B0(\AMDemodulator1/d_out_d_11_N_1884_17 ), .A0(\AMDemodulator1/n675 ), 
    .FCI(\AMDemodulator1/n12103 ), .F0(\AMDemodulator1/n734 ), 
    .F1(\AMDemodulator1/n733 ), .FCO(\AMDemodulator1/n12104 ));
  AMDemodulator1_SLICE_836 \AMDemodulator1/SLICE_836 ( 
    .B1(\AMDemodulator1/d_out_d_11_N_1884_17 ), .A1(\AMDemodulator1/n676 ), 
    .C0(\AMDemodulator1/n677 ), .B0(\AMDemodulator1/d_out_d_11_N_1884_17 ), 
    .A0(\AMDemodulator1/ISquare_31 ), .FCI(\AMDemodulator1/n12102 ), 
    .F0(\AMDemodulator1/n736 ), .F1(\AMDemodulator1/n735 ), 
    .FCO(\AMDemodulator1/n12103 ));
  AMDemodulator1_SLICE_837 \AMDemodulator1/SLICE_837 ( 
    .C1(\AMDemodulator1/n678 ), .B1(\AMDemodulator1/d_out_d_11_N_1884_17 ), 
    .A1(\AMDemodulator1/ISquare_31 ), .C0(\AMDemodulator1/n679 ), 
    .B0(\AMDemodulator1/d_out_d_11_N_1884_17 ), 
    .A0(\AMDemodulator1/ISquare_31 ), .FCI(\AMDemodulator1/n12101 ), 
    .F0(\AMDemodulator1/n738 ), .F1(\AMDemodulator1/n737 ), 
    .FCO(\AMDemodulator1/n12102 ));
  AMDemodulator1_SLICE_838 \AMDemodulator1/SLICE_838 ( 
    .B1(\AMDemodulator1/d_out_d_11_N_1884_17 ), .A1(\AMDemodulator1/n680 ), 
    .C0(\AMDemodulator1/n681 ), .B0(\AMDemodulator1/d_out_d_11_N_1884_17 ), 
    .A0(\AMDemodulator1/d_out_d_11_N_1872_17 ), .FCI(\AMDemodulator1/n12100 ), 
    .F0(\AMDemodulator1/n740 ), .F1(\AMDemodulator1/n739 ), 
    .FCO(\AMDemodulator1/n12101 ));
  AMDemodulator1_SLICE_839 \AMDemodulator1/SLICE_839 ( 
    .C1(\AMDemodulator1/n682 ), .B1(\AMDemodulator1/d_out_d_11_N_1884_17 ), 
    .A1(\AMDemodulator1/d_out_d_11_N_1874_17 ), .C0(\AMDemodulator1/n683 ), 
    .B0(\AMDemodulator1/d_out_d_11_N_1884_17 ), 
    .A0(\AMDemodulator1/d_out_d_11_N_1876_17 ), .FCI(\AMDemodulator1/n12099 ), 
    .F0(\AMDemodulator1/n742 ), .F1(\AMDemodulator1/n741 ), 
    .FCO(\AMDemodulator1/n12100 ));
  AMDemodulator1_SLICE_840 \AMDemodulator1/SLICE_840 ( 
    .C1(\AMDemodulator1/n684 ), .B1(\AMDemodulator1/d_out_d_11_N_1884_17 ), 
    .A1(\AMDemodulator1/d_out_d_11_N_1878_17 ), .C0(\AMDemodulator1/n685 ), 
    .B0(\AMDemodulator1/d_out_d_11_N_1884_17 ), 
    .A0(\AMDemodulator1/d_out_d_11_N_1880_17 ), .FCI(\AMDemodulator1/n12098 ), 
    .F0(\AMDemodulator1/n744 ), .F1(\AMDemodulator1/n743 ), 
    .FCO(\AMDemodulator1/n12099 ));
  AMDemodulator1_SLICE_841 \AMDemodulator1/SLICE_841 ( 
    .C1(\AMDemodulator1/n686 ), .B1(\AMDemodulator1/d_out_d_11_N_1884_17 ), 
    .A1(\AMDemodulator1/d_out_d_11_N_1882_17 ), .A0(\AMDemodulator1/n687 ), 
    .FCI(\AMDemodulator1/n12097 ), .F0(\AMDemodulator1/n746 ), 
    .F1(\AMDemodulator1/n745 ), .FCO(\AMDemodulator1/n12098 ));
  AMDemodulator1_SLICE_842 \AMDemodulator1/SLICE_842 ( 
    .A1(\AMDemodulator1/ISquare_9 ), 
    .B0(\AMDemodulator1/d_out_d_11_N_1884_17 ), 
    .A0(\AMDemodulator1/ISquare_8 ), .FCI(\AMDemodulator1/n12096 ), 
    .F1(\AMDemodulator1/n747 ), .FCO(\AMDemodulator1/n12097 ));
  AMDemodulator1_SLICE_843 \AMDemodulator1/SLICE_843 ( 
    .A1(\AMDemodulator1/d_out_d_11_N_1884_17 ), .FCO(\AMDemodulator1/n12096 ));
  AMDemodulator1_SLICE_844 \AMDemodulator1/SLICE_844 ( 
    .B1(\AMDemodulator1/d_out_d_11_N_1882_17 ), .A1(\AMDemodulator1/n612 ), 
    .B0(\AMDemodulator1/d_out_d_11_N_1882_17 ), .A0(\AMDemodulator1/n613 ), 
    .FCI(\AMDemodulator1/n12090 ), .F0(\AMDemodulator1/n672 ), 
    .F1(\AMDemodulator1/d_out_d_11_N_1884_17 ));
  AMDemodulator1_SLICE_845 \AMDemodulator1/SLICE_845 ( 
    .B1(\AMDemodulator1/d_out_d_11_N_1882_17 ), .A1(\AMDemodulator1/n614 ), 
    .B0(\AMDemodulator1/d_out_d_11_N_1882_17 ), .A0(\AMDemodulator1/n615 ), 
    .FCI(\AMDemodulator1/n12089 ), .F0(\AMDemodulator1/n674 ), 
    .F1(\AMDemodulator1/n673 ), .FCO(\AMDemodulator1/n12090 ));
  AMDemodulator1_SLICE_846 \AMDemodulator1/SLICE_846 ( 
    .B1(\AMDemodulator1/d_out_d_11_N_1882_17 ), .A1(\AMDemodulator1/n616 ), 
    .B0(\AMDemodulator1/d_out_d_11_N_1882_17 ), .A0(\AMDemodulator1/n617 ), 
    .FCI(\AMDemodulator1/n12088 ), .F0(\AMDemodulator1/n676 ), 
    .F1(\AMDemodulator1/n675 ), .FCO(\AMDemodulator1/n12089 ));
  AMDemodulator1_SLICE_847 \AMDemodulator1/SLICE_847 ( 
    .C1(\AMDemodulator1/n618 ), .B1(\AMDemodulator1/d_out_d_11_N_1882_17 ), 
    .A1(\AMDemodulator1/ISquare_31 ), .C0(\AMDemodulator1/n619 ), 
    .B0(\AMDemodulator1/d_out_d_11_N_1882_17 ), 
    .A0(\AMDemodulator1/ISquare_31 ), .FCI(\AMDemodulator1/n12087 ), 
    .F0(\AMDemodulator1/n678 ), .F1(\AMDemodulator1/n677 ), 
    .FCO(\AMDemodulator1/n12088 ));
  AMDemodulator1_SLICE_848 \AMDemodulator1/SLICE_848 ( 
    .C1(\AMDemodulator1/n620 ), .B1(\AMDemodulator1/d_out_d_11_N_1882_17 ), 
    .A1(\AMDemodulator1/ISquare_31 ), 
    .B0(\AMDemodulator1/d_out_d_11_N_1882_17 ), .A0(\AMDemodulator1/n621 ), 
    .FCI(\AMDemodulator1/n12086 ), .F0(\AMDemodulator1/n680 ), 
    .F1(\AMDemodulator1/n679 ), .FCO(\AMDemodulator1/n12087 ));
  AMDemodulator1_SLICE_849 \AMDemodulator1/SLICE_849 ( 
    .C1(\AMDemodulator1/n622 ), .B1(\AMDemodulator1/d_out_d_11_N_1882_17 ), 
    .A1(\AMDemodulator1/d_out_d_11_N_1872_17 ), .C0(\AMDemodulator1/n623 ), 
    .B0(\AMDemodulator1/d_out_d_11_N_1882_17 ), 
    .A0(\AMDemodulator1/d_out_d_11_N_1874_17 ), .FCI(\AMDemodulator1/n12085 ), 
    .F0(\AMDemodulator1/n682 ), .F1(\AMDemodulator1/n681 ), 
    .FCO(\AMDemodulator1/n12086 ));
  AMDemodulator1_SLICE_850 \AMDemodulator1/SLICE_850 ( 
    .C1(\AMDemodulator1/n624 ), .B1(\AMDemodulator1/d_out_d_11_N_1882_17 ), 
    .A1(\AMDemodulator1/d_out_d_11_N_1876_17 ), .C0(\AMDemodulator1/n625 ), 
    .B0(\AMDemodulator1/d_out_d_11_N_1882_17 ), 
    .A0(\AMDemodulator1/d_out_d_11_N_1878_17 ), .FCI(\AMDemodulator1/n12084 ), 
    .F0(\AMDemodulator1/n684 ), .F1(\AMDemodulator1/n683 ), 
    .FCO(\AMDemodulator1/n12085 ));
  AMDemodulator1_SLICE_851 \AMDemodulator1/SLICE_851 ( 
    .C1(\AMDemodulator1/n626 ), .B1(\AMDemodulator1/d_out_d_11_N_1882_17 ), 
    .A1(\AMDemodulator1/d_out_d_11_N_1880_17 ), .A0(\AMDemodulator1/n627 ), 
    .FCI(\AMDemodulator1/n12083 ), .F0(\AMDemodulator1/n686 ), 
    .F1(\AMDemodulator1/n685 ), .FCO(\AMDemodulator1/n12084 ));
  AMDemodulator1_SLICE_852 \AMDemodulator1/SLICE_852 ( 
    .A1(\AMDemodulator1/ISquare_11 ), 
    .B0(\AMDemodulator1/d_out_d_11_N_1882_17 ), 
    .A0(\AMDemodulator1/ISquare_10 ), .FCI(\AMDemodulator1/n12082 ), 
    .F1(\AMDemodulator1/n687 ), .FCO(\AMDemodulator1/n12083 ));
  AMDemodulator1_SLICE_853 \AMDemodulator1/SLICE_853 ( 
    .A1(\AMDemodulator1/d_out_d_11_N_1882_17 ), .FCO(\AMDemodulator1/n12082 ));
  AMDemodulator1_SLICE_854 \AMDemodulator1/SLICE_854 ( 
    .B1(\AMDemodulator1/d_out_d_11_N_1890_17 ), .A1(\AMDemodulator1/n852 ), 
    .B0(\AMDemodulator1/d_out_d_11_N_1890_17 ), .A0(\AMDemodulator1/n853 ), 
    .FCI(\AMDemodulator1/n12076 ), .F0(\AMDemodulator1/n912 ), 
    .F1(\AMDemodulator1/d_out_d_11_N_1892_17 ));
  AMDemodulator1_SLICE_855 \AMDemodulator1/SLICE_855 ( 
    .C1(\AMDemodulator1/n854 ), .B1(\AMDemodulator1/d_out_d_11_N_1890_17 ), 
    .A1(\AMDemodulator1/ISquare_31 ), .C0(\AMDemodulator1/n855 ), 
    .B0(\AMDemodulator1/d_out_d_11_N_1890_17 ), 
    .A0(\AMDemodulator1/ISquare_31 ), .FCI(\AMDemodulator1/n12075 ), 
    .F0(\AMDemodulator1/n914 ), .F1(\AMDemodulator1/n913 ), 
    .FCO(\AMDemodulator1/n12076 ));
  AMDemodulator1_SLICE_856 \AMDemodulator1/SLICE_856 ( 
    .C1(\AMDemodulator1/n856 ), .B1(\AMDemodulator1/d_out_d_11_N_1890_17 ), 
    .A1(\AMDemodulator1/ISquare_31 ), 
    .B0(\AMDemodulator1/d_out_d_11_N_1890_17 ), .A0(\AMDemodulator1/n857 ), 
    .FCI(\AMDemodulator1/n12074 ), .F0(\AMDemodulator1/n916 ), 
    .F1(\AMDemodulator1/n915 ), .FCO(\AMDemodulator1/n12075 ));
  AMDemodulator1_SLICE_857 \AMDemodulator1/SLICE_857 ( 
    .C1(\AMDemodulator1/n858 ), .B1(\AMDemodulator1/d_out_d_11_N_1890_17 ), 
    .A1(\AMDemodulator1/d_out_d_11_N_1872_17 ), .C0(\AMDemodulator1/n859 ), 
    .B0(\AMDemodulator1/d_out_d_11_N_1890_17 ), 
    .A0(\AMDemodulator1/d_out_d_11_N_1874_17 ), .FCI(\AMDemodulator1/n12073 ), 
    .F0(\AMDemodulator1/n918 ), .F1(\AMDemodulator1/n917 ), 
    .FCO(\AMDemodulator1/n12074 ));
  AMDemodulator1_SLICE_858 \AMDemodulator1/SLICE_858 ( 
    .C1(\AMDemodulator1/n860 ), .B1(\AMDemodulator1/d_out_d_11_N_1890_17 ), 
    .A1(\AMDemodulator1/d_out_d_11_N_1876_17 ), .C0(\AMDemodulator1/n861 ), 
    .B0(\AMDemodulator1/d_out_d_11_N_1890_17 ), 
    .A0(\AMDemodulator1/d_out_d_11_N_1878_17 ), .FCI(\AMDemodulator1/n12072 ), 
    .F0(\AMDemodulator1/n920 ), .F1(\AMDemodulator1/n919 ), 
    .FCO(\AMDemodulator1/n12073 ));
  AMDemodulator1_SLICE_859 \AMDemodulator1/SLICE_859 ( 
    .C1(\AMDemodulator1/n862 ), .B1(\AMDemodulator1/d_out_d_11_N_1890_17 ), 
    .A1(\AMDemodulator1/d_out_d_11_N_1880_17 ), .C0(\AMDemodulator1/n863 ), 
    .B0(\AMDemodulator1/d_out_d_11_N_1890_17 ), 
    .A0(\AMDemodulator1/d_out_d_11_N_1882_17 ), .FCI(\AMDemodulator1/n12071 ), 
    .F0(\AMDemodulator1/n922 ), .F1(\AMDemodulator1/n921 ), 
    .FCO(\AMDemodulator1/n12072 ));
  AMDemodulator1_SLICE_860 \AMDemodulator1/SLICE_860 ( 
    .C1(\AMDemodulator1/n864 ), .B1(\AMDemodulator1/d_out_d_11_N_1890_17 ), 
    .A1(\AMDemodulator1/d_out_d_11_N_1884_17 ), .C0(\AMDemodulator1/n865 ), 
    .B0(\AMDemodulator1/d_out_d_11_N_1890_17 ), 
    .A0(\AMDemodulator1/d_out_d_11_N_1886_17 ), .FCI(\AMDemodulator1/n12070 ), 
    .F0(\AMDemodulator1/n924 ), .F1(\AMDemodulator1/n923 ), 
    .FCO(\AMDemodulator1/n12071 ));
  AMDemodulator1_SLICE_861 \AMDemodulator1/SLICE_861 ( 
    .C1(\AMDemodulator1/n866 ), .B1(\AMDemodulator1/d_out_d_11_N_1890_17 ), 
    .A1(\AMDemodulator1/d_out_d_11_N_1888_17 ), .A0(\AMDemodulator1/n867 ), 
    .FCI(\AMDemodulator1/n12069 ), .F0(\AMDemodulator1/n926 ), 
    .F1(\AMDemodulator1/n925 ), .FCO(\AMDemodulator1/n12070 ));
  AMDemodulator1_SLICE_862 \AMDemodulator1/SLICE_862 ( 
    .A1(\AMDemodulator1/ISquare_3 ), 
    .B0(\AMDemodulator1/d_out_d_11_N_1890_17 ), 
    .A0(\AMDemodulator1/ISquare_2 ), .FCI(\AMDemodulator1/n12068 ), 
    .F1(\AMDemodulator1/n927 ), .FCO(\AMDemodulator1/n12069 ));
  AMDemodulator1_SLICE_863 \AMDemodulator1/SLICE_863 ( 
    .A1(\AMDemodulator1/d_out_d_11_N_1890_17 ), .FCO(\AMDemodulator1/n12068 ));
  AMDemodulator1_SLICE_864 \AMDemodulator1/SLICE_864 ( 
    .B1(\AMDemodulator1/d_out_d_11_N_1888_17 ), .A1(\AMDemodulator1/n792 ), 
    .B0(\AMDemodulator1/d_out_d_11_N_1888_17 ), .A0(\AMDemodulator1/n793 ), 
    .FCI(\AMDemodulator1/n12062 ), .F0(\AMDemodulator1/n852 ), 
    .F1(\AMDemodulator1/d_out_d_11_N_1890_17 ));
  AMDemodulator1_SLICE_865 \AMDemodulator1/SLICE_865 ( 
    .B1(\AMDemodulator1/d_out_d_11_N_1888_17 ), .A1(\AMDemodulator1/n794 ), 
    .C0(\AMDemodulator1/n795 ), .B0(\AMDemodulator1/d_out_d_11_N_1888_17 ), 
    .A0(\AMDemodulator1/ISquare_31 ), .FCI(\AMDemodulator1/n12061 ), 
    .F0(\AMDemodulator1/n854 ), .F1(\AMDemodulator1/n853 ), 
    .FCO(\AMDemodulator1/n12062 ));
  AMDemodulator1_SLICE_866 \AMDemodulator1/SLICE_866 ( 
    .C1(\AMDemodulator1/n796 ), .B1(\AMDemodulator1/d_out_d_11_N_1888_17 ), 
    .A1(\AMDemodulator1/ISquare_31 ), .C0(\AMDemodulator1/n797 ), 
    .B0(\AMDemodulator1/d_out_d_11_N_1888_17 ), 
    .A0(\AMDemodulator1/ISquare_31 ), .FCI(\AMDemodulator1/n12060 ), 
    .F0(\AMDemodulator1/n856 ), .F1(\AMDemodulator1/n855 ), 
    .FCO(\AMDemodulator1/n12061 ));
  AMDemodulator1_SLICE_867 \AMDemodulator1/SLICE_867 ( 
    .B1(\AMDemodulator1/d_out_d_11_N_1888_17 ), .A1(\AMDemodulator1/n798 ), 
    .C0(\AMDemodulator1/n799 ), .B0(\AMDemodulator1/d_out_d_11_N_1888_17 ), 
    .A0(\AMDemodulator1/d_out_d_11_N_1872_17 ), .FCI(\AMDemodulator1/n12059 ), 
    .F0(\AMDemodulator1/n858 ), .F1(\AMDemodulator1/n857 ), 
    .FCO(\AMDemodulator1/n12060 ));
  AMDemodulator1_SLICE_868 \AMDemodulator1/SLICE_868 ( 
    .C1(\AMDemodulator1/n800 ), .B1(\AMDemodulator1/d_out_d_11_N_1888_17 ), 
    .A1(\AMDemodulator1/d_out_d_11_N_1874_17 ), .C0(\AMDemodulator1/n801 ), 
    .B0(\AMDemodulator1/d_out_d_11_N_1888_17 ), 
    .A0(\AMDemodulator1/d_out_d_11_N_1876_17 ), .FCI(\AMDemodulator1/n12058 ), 
    .F0(\AMDemodulator1/n860 ), .F1(\AMDemodulator1/n859 ), 
    .FCO(\AMDemodulator1/n12059 ));
  AMDemodulator1_SLICE_869 \AMDemodulator1/SLICE_869 ( 
    .C1(\AMDemodulator1/n802 ), .B1(\AMDemodulator1/d_out_d_11_N_1888_17 ), 
    .A1(\AMDemodulator1/d_out_d_11_N_1878_17 ), .C0(\AMDemodulator1/n803 ), 
    .B0(\AMDemodulator1/d_out_d_11_N_1888_17 ), 
    .A0(\AMDemodulator1/d_out_d_11_N_1880_17 ), .FCI(\AMDemodulator1/n12057 ), 
    .F0(\AMDemodulator1/n862 ), .F1(\AMDemodulator1/n861 ), 
    .FCO(\AMDemodulator1/n12058 ));
  AMDemodulator1_SLICE_870 \AMDemodulator1/SLICE_870 ( 
    .C1(\AMDemodulator1/n804 ), .B1(\AMDemodulator1/d_out_d_11_N_1888_17 ), 
    .A1(\AMDemodulator1/d_out_d_11_N_1882_17 ), .C0(\AMDemodulator1/n805 ), 
    .B0(\AMDemodulator1/d_out_d_11_N_1888_17 ), 
    .A0(\AMDemodulator1/d_out_d_11_N_1884_17 ), .FCI(\AMDemodulator1/n12056 ), 
    .F0(\AMDemodulator1/n864 ), .F1(\AMDemodulator1/n863 ), 
    .FCO(\AMDemodulator1/n12057 ));
  AMDemodulator1_SLICE_871 \AMDemodulator1/SLICE_871 ( 
    .C1(\AMDemodulator1/n806 ), .B1(\AMDemodulator1/d_out_d_11_N_1888_17 ), 
    .A1(\AMDemodulator1/d_out_d_11_N_1886_17 ), .A0(\AMDemodulator1/n807 ), 
    .FCI(\AMDemodulator1/n12055 ), .F0(\AMDemodulator1/n866 ), 
    .F1(\AMDemodulator1/n865 ), .FCO(\AMDemodulator1/n12056 ));
  AMDemodulator1_SLICE_872 \AMDemodulator1/SLICE_872 ( 
    .A1(\AMDemodulator1/ISquare_5 ), 
    .B0(\AMDemodulator1/d_out_d_11_N_1888_17 ), 
    .A0(\AMDemodulator1/ISquare_4 ), .FCI(\AMDemodulator1/n12054 ), 
    .F1(\AMDemodulator1/n867 ), .FCO(\AMDemodulator1/n12055 ));
  AMDemodulator1_SLICE_873 \AMDemodulator1/SLICE_873 ( 
    .A1(\AMDemodulator1/d_out_d_11_N_1888_17 ), .FCO(\AMDemodulator1/n12054 ));
  AMDemodulator1_SLICE_874 \AMDemodulator1/SLICE_874 ( 
    .B1(\AMDemodulator1/d_out_d_11__N_1875 ), 
    .A1(\AMDemodulator1/d_out_d_11_N_1876_17 ), 
    .B0(\AMDemodulator1/d_out_d_11__N_1875 ), 
    .A0(\AMDemodulator1/d_out_d_11_N_1876_17 ), .FCI(\AMDemodulator1/n12048 ), 
    .F0(\AMDemodulator1/n496 ), .F1(\AMDemodulator1/d_out_d_11_N_1878_17 ));
  AMDemodulator1_SLICE_875 \AMDemodulator1/SLICE_875 ( 
    .B1(\AMDemodulator1/d_out_d_11_N_1876_17 ), .A1(\AMDemodulator1/n438 ), 
    .B0(\AMDemodulator1/d_out_d_11_N_1876_17 ), .A0(\AMDemodulator1/n439 ), 
    .FCI(\AMDemodulator1/n12047 ), .F0(\AMDemodulator1/n498 ), 
    .F1(\AMDemodulator1/n497 ), .FCO(\AMDemodulator1/n12048 ));
  AMDemodulator1_SLICE_876 \AMDemodulator1/SLICE_876 ( 
    .B1(\AMDemodulator1/d_out_d_11_N_1876_17 ), .A1(\AMDemodulator1/n440 ), 
    .C0(\AMDemodulator1/n441 ), .B0(\AMDemodulator1/d_out_d_11_N_1876_17 ), 
    .A0(\AMDemodulator1/ISquare_31 ), .FCI(\AMDemodulator1/n12046 ), 
    .F0(\AMDemodulator1/n500 ), .F1(\AMDemodulator1/n499 ), 
    .FCO(\AMDemodulator1/n12047 ));
  AMDemodulator1_SLICE_877 \AMDemodulator1/SLICE_877 ( 
    .C1(\AMDemodulator1/n442 ), .B1(\AMDemodulator1/d_out_d_11_N_1876_17 ), 
    .A1(\AMDemodulator1/ISquare_31 ), .C0(\AMDemodulator1/n443 ), 
    .B0(\AMDemodulator1/d_out_d_11_N_1876_17 ), 
    .A0(\AMDemodulator1/ISquare_31 ), .FCI(\AMDemodulator1/n12045 ), 
    .F0(\AMDemodulator1/n502 ), .F1(\AMDemodulator1/n501 ), 
    .FCO(\AMDemodulator1/n12046 ));
  AMDemodulator1_SLICE_878 \AMDemodulator1/SLICE_878 ( 
    .B1(\AMDemodulator1/d_out_d_11_N_1876_17 ), .A1(\AMDemodulator1/n444 ), 
    .C0(\AMDemodulator1/n445 ), .B0(\AMDemodulator1/d_out_d_11_N_1876_17 ), 
    .A0(\AMDemodulator1/d_out_d_11_N_1872_17 ), .FCI(\AMDemodulator1/n12044 ), 
    .F0(\AMDemodulator1/n504 ), .F1(\AMDemodulator1/n503 ), 
    .FCO(\AMDemodulator1/n12045 ));
  AMDemodulator1_SLICE_879 \AMDemodulator1/SLICE_879 ( 
    .C1(\AMDemodulator1/n446 ), .B1(\AMDemodulator1/d_out_d_11_N_1876_17 ), 
    .A1(\AMDemodulator1/d_out_d_11_N_1874_17 ), .A0(\AMDemodulator1/n447 ), 
    .FCI(\AMDemodulator1/n12043 ), .F0(\AMDemodulator1/n506 ), 
    .F1(\AMDemodulator1/n505 ), .FCO(\AMDemodulator1/n12044 ));
  AMDemodulator1_SLICE_880 \AMDemodulator1/SLICE_880 ( 
    .A1(\AMDemodulator1/ISquare_17 ), 
    .B0(\AMDemodulator1/d_out_d_11_N_1876_17 ), 
    .A0(\AMDemodulator1/ISquare_16 ), .FCI(\AMDemodulator1/n12042 ), 
    .F1(\AMDemodulator1/n507 ), .FCO(\AMDemodulator1/n12043 ));
  AMDemodulator1_SLICE_881 \AMDemodulator1/SLICE_881 ( 
    .A1(\AMDemodulator1/d_out_d_11_N_1876_17 ), .FCO(\AMDemodulator1/n12042 ));
  AMDemodulator1_Multiplier2_SLICE_882 \AMDemodulator1/Multiplier2/SLICE_882 
    ( .FCO(\AMDemodulator1/Multiplier2/Multiplier_0_cin_lr_0 ));
  AMDemodulator1_Multiplier2_SLICE_883 \AMDemodulator1/Multiplier2/SLICE_883 
    ( .FCI(\AMDemodulator1/Multiplier2/mfco ), 
    .F0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_0_13 ));
  AMDemodulator1_Multiplier2_SLICE_884 \AMDemodulator1/Multiplier2/SLICE_884 
    ( .FCO(\AMDemodulator1/Multiplier2/Multiplier_0_cin_lr_2 ));
  AMDemodulator1_Multiplier2_SLICE_885 \AMDemodulator1/Multiplier2/SLICE_885 
    ( .FCI(\AMDemodulator1/Multiplier2/mfco_1 ), 
    .F0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_1_15 ));
  AMDemodulator1_Multiplier2_SLICE_886 \AMDemodulator1/Multiplier2/SLICE_886 
    ( .FCO(\AMDemodulator1/Multiplier2/Multiplier_0_cin_lr_4 ));
  AMDemodulator1_Multiplier2_SLICE_887 \AMDemodulator1/Multiplier2/SLICE_887 
    ( .FCI(\AMDemodulator1/Multiplier2/mfco_2 ), 
    .F0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_2_17 ));
  AMDemodulator1_Multiplier2_SLICE_888 \AMDemodulator1/Multiplier2/SLICE_888 
    ( .FCO(\AMDemodulator1/Multiplier2/Multiplier_0_cin_lr_6 ));
  AMDemodulator1_Multiplier2_SLICE_889 \AMDemodulator1/Multiplier2/SLICE_889 
    ( .FCI(\AMDemodulator1/Multiplier2/mfco_3 ), 
    .F0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_3_19 ));
  AMDemodulator1_Multiplier2_SLICE_890 \AMDemodulator1/Multiplier2/SLICE_890 
    ( .FCO(\AMDemodulator1/Multiplier2/Multiplier_0_cin_lr_8 ));
  AMDemodulator1_Multiplier2_SLICE_891 \AMDemodulator1/Multiplier2/SLICE_891 
    ( .FCI(\AMDemodulator1/Multiplier2/mfco_4 ), 
    .F0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_4_21 ));
  AMDemodulator1_Multiplier2_SLICE_892 \AMDemodulator1/Multiplier2/SLICE_892 
    ( .FCO(\AMDemodulator1/Multiplier2/Multiplier_0_cin_lr_10 ));
  AMDemodulator1_Multiplier2_SLICE_893 \AMDemodulator1/Multiplier2/SLICE_893 
    ( .FCI(\AMDemodulator1/Multiplier2/mfco_5 ), 
    .F0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_5_23 ));
  AMDemodulator1_Multiplier2_SLICE_894 \AMDemodulator1/Multiplier2/SLICE_894 
    ( .B1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_1_2 ), 
    .A1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_0_2 ), 
    .DI1(\AMDemodulator1/Multiplier2/s_Multiplier_0_0_2 ), 
    .CLK(CIC1_out_clkSin), 
    .F1(\AMDemodulator1/Multiplier2/s_Multiplier_0_0_2 ), 
    .Q1(\AMDemodulator1/Multiplier2/rego_o_2 ), 
    .FCO(\AMDemodulator1/Multiplier2/co_Multiplier_0_0_1 ));
  AMDemodulator1_Multiplier2_SLICE_895 \AMDemodulator1/Multiplier2/SLICE_895 
    ( .B1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_1_4 ), 
    .A1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_0_4 ), 
    .B0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_1_3 ), 
    .A0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_0_3 ), 
    .DI1(\AMDemodulator1/Multiplier2/s_Multiplier_0_0_4 ), 
    .DI0(\AMDemodulator1/Multiplier2/s_Multiplier_0_0_3 ), 
    .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier2/co_Multiplier_0_0_1 ), 
    .F0(\AMDemodulator1/Multiplier2/s_Multiplier_0_0_3 ), 
    .Q0(\AMDemodulator1/Multiplier2/rego_o_3 ), 
    .F1(\AMDemodulator1/Multiplier2/s_Multiplier_0_0_4 ), 
    .Q1(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_0_4 ), 
    .FCO(\AMDemodulator1/Multiplier2/co_Multiplier_0_0_2 ));
  AMDemodulator1_Multiplier2_SLICE_896 \AMDemodulator1/Multiplier2/SLICE_896 
    ( .B1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_1_6 ), 
    .A1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_0_6 ), 
    .B0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_1_5 ), 
    .A0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_0_5 ), 
    .DI1(\AMDemodulator1/Multiplier2/s_Multiplier_0_0_6 ), 
    .DI0(\AMDemodulator1/Multiplier2/s_Multiplier_0_0_5 ), 
    .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier2/co_Multiplier_0_0_2 ), 
    .F0(\AMDemodulator1/Multiplier2/s_Multiplier_0_0_5 ), 
    .Q0(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_0_5 ), 
    .F1(\AMDemodulator1/Multiplier2/s_Multiplier_0_0_6 ), 
    .Q1(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_0_6 ), 
    .FCO(\AMDemodulator1/Multiplier2/co_Multiplier_0_0_3 ));
  AMDemodulator1_Multiplier2_SLICE_897 \AMDemodulator1/Multiplier2/SLICE_897 
    ( .B1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_1_8 ), 
    .A1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_0_8 ), 
    .B0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_1_7 ), 
    .A0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_0_7 ), 
    .DI1(\AMDemodulator1/Multiplier2/s_Multiplier_0_0_8 ), 
    .DI0(\AMDemodulator1/Multiplier2/s_Multiplier_0_0_7 ), 
    .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier2/co_Multiplier_0_0_3 ), 
    .F0(\AMDemodulator1/Multiplier2/s_Multiplier_0_0_7 ), 
    .Q0(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_0_7 ), 
    .F1(\AMDemodulator1/Multiplier2/s_Multiplier_0_0_8 ), 
    .Q1(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_0_8 ), 
    .FCO(\AMDemodulator1/Multiplier2/co_Multiplier_0_0_4 ));
  AMDemodulator1_Multiplier2_SLICE_898 \AMDemodulator1/Multiplier2/SLICE_898 
    ( .B1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_1_10 ), 
    .A1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_0_10 ), 
    .B0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_1_9 ), 
    .A0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_0_9 ), 
    .DI1(\AMDemodulator1/Multiplier2/s_Multiplier_0_0_10 ), 
    .DI0(\AMDemodulator1/Multiplier2/s_Multiplier_0_0_9 ), 
    .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier2/co_Multiplier_0_0_4 ), 
    .F0(\AMDemodulator1/Multiplier2/s_Multiplier_0_0_9 ), 
    .Q0(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_0_9 ), 
    .F1(\AMDemodulator1/Multiplier2/s_Multiplier_0_0_10 ), 
    .Q1(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_0_10 ), 
    .FCO(\AMDemodulator1/Multiplier2/co_Multiplier_0_0_5 ));
  AMDemodulator1_Multiplier2_SLICE_899 \AMDemodulator1/Multiplier2/SLICE_899 
    ( .B1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_1_12 ), 
    .A1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_0_12 ), 
    .B0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_1_11 ), 
    .A0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_0_11 ), 
    .DI1(\AMDemodulator1/Multiplier2/s_Multiplier_0_0_12 ), 
    .DI0(\AMDemodulator1/Multiplier2/s_Multiplier_0_0_11 ), 
    .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier2/co_Multiplier_0_0_5 ), 
    .F0(\AMDemodulator1/Multiplier2/s_Multiplier_0_0_11 ), 
    .Q0(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_0_11 ), 
    .F1(\AMDemodulator1/Multiplier2/s_Multiplier_0_0_12 ), 
    .Q1(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_0_12 ), 
    .FCO(\AMDemodulator1/Multiplier2/co_Multiplier_0_0_6 ));
  AMDemodulator1_Multiplier2_SLICE_900 \AMDemodulator1/Multiplier2/SLICE_900 
    ( .A1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_1_14 ), 
    .B0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_0_13 ), 
    .A0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_1_13 ), 
    .DI1(\AMDemodulator1/Multiplier2/s_Multiplier_0_0_14 ), 
    .DI0(\AMDemodulator1/Multiplier2/s_Multiplier_0_0_13 ), 
    .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier2/co_Multiplier_0_0_6 ), 
    .F0(\AMDemodulator1/Multiplier2/s_Multiplier_0_0_13 ), 
    .Q0(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_0_13 ), 
    .F1(\AMDemodulator1/Multiplier2/s_Multiplier_0_0_14 ), 
    .Q1(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_0_14 ), 
    .FCO(\AMDemodulator1/Multiplier2/co_Multiplier_0_0_7 ));
  AMDemodulator1_Multiplier2_SLICE_901 \AMDemodulator1/Multiplier2/SLICE_901 
    ( .A0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_1_15 ), 
    .DI1(\AMDemodulator1/Multiplier2/s_Multiplier_0_0_16 ), 
    .DI0(\AMDemodulator1/Multiplier2/s_Multiplier_0_0_15 ), 
    .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier2/co_Multiplier_0_0_7 ), 
    .F0(\AMDemodulator1/Multiplier2/s_Multiplier_0_0_15 ), 
    .Q0(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_0_15 ), 
    .F1(\AMDemodulator1/Multiplier2/s_Multiplier_0_0_16 ), 
    .Q1(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_0_16 ), 
    .FCO(\AMDemodulator1/Multiplier2/co_Multiplier_0_0_8 ));
  AMDemodulator1_Multiplier2_SLICE_902 \AMDemodulator1/Multiplier2/SLICE_902 
    ( .DI0(\AMDemodulator1/Multiplier2/s_Multiplier_0_0_17 ), 
    .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier2/co_Multiplier_0_0_8 ), 
    .F0(\AMDemodulator1/Multiplier2/s_Multiplier_0_0_17 ), 
    .Q0(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_0_17 ));
  AMDemodulator1_Multiplier2_SLICE_903 \AMDemodulator1/Multiplier2/SLICE_903 
    ( .B1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_3_6 ), 
    .A1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_2_6 ), 
    .DI1(\AMDemodulator1/Multiplier2/s_Multiplier_0_1_6 ), 
    .CLK(CIC1_out_clkSin), 
    .F1(\AMDemodulator1/Multiplier2/s_Multiplier_0_1_6 ), 
    .Q1(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_1_6 ), 
    .FCO(\AMDemodulator1/Multiplier2/co_Multiplier_0_1_1 ));
  AMDemodulator1_Multiplier2_SLICE_904 \AMDemodulator1/Multiplier2/SLICE_904 
    ( .B1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_3_8 ), 
    .A1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_2_8 ), 
    .B0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_3_7 ), 
    .A0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_2_7 ), 
    .DI1(\AMDemodulator1/Multiplier2/s_Multiplier_0_1_8 ), 
    .DI0(\AMDemodulator1/Multiplier2/s_Multiplier_0_1_7 ), 
    .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier2/co_Multiplier_0_1_1 ), 
    .F0(\AMDemodulator1/Multiplier2/s_Multiplier_0_1_7 ), 
    .Q0(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_1_7 ), 
    .F1(\AMDemodulator1/Multiplier2/s_Multiplier_0_1_8 ), 
    .Q1(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_1_8 ), 
    .FCO(\AMDemodulator1/Multiplier2/co_Multiplier_0_1_2 ));
  AMDemodulator1_Multiplier2_SLICE_905 \AMDemodulator1/Multiplier2/SLICE_905 
    ( .B1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_3_10 ), 
    .A1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_2_10 ), 
    .B0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_3_9 ), 
    .A0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_2_9 ), 
    .DI1(\AMDemodulator1/Multiplier2/s_Multiplier_0_1_10 ), 
    .DI0(\AMDemodulator1/Multiplier2/s_Multiplier_0_1_9 ), 
    .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier2/co_Multiplier_0_1_2 ), 
    .F0(\AMDemodulator1/Multiplier2/s_Multiplier_0_1_9 ), 
    .Q0(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_1_9 ), 
    .F1(\AMDemodulator1/Multiplier2/s_Multiplier_0_1_10 ), 
    .Q1(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_1_10 ), 
    .FCO(\AMDemodulator1/Multiplier2/co_Multiplier_0_1_3 ));
  AMDemodulator1_Multiplier2_SLICE_906 \AMDemodulator1/Multiplier2/SLICE_906 
    ( .B1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_3_12 ), 
    .A1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_2_12 ), 
    .B0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_3_11 ), 
    .A0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_2_11 ), 
    .DI1(\AMDemodulator1/Multiplier2/s_Multiplier_0_1_12 ), 
    .DI0(\AMDemodulator1/Multiplier2/s_Multiplier_0_1_11 ), 
    .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier2/co_Multiplier_0_1_3 ), 
    .F0(\AMDemodulator1/Multiplier2/s_Multiplier_0_1_11 ), 
    .Q0(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_1_11 ), 
    .F1(\AMDemodulator1/Multiplier2/s_Multiplier_0_1_12 ), 
    .Q1(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_1_12 ), 
    .FCO(\AMDemodulator1/Multiplier2/co_Multiplier_0_1_4 ));
  AMDemodulator1_Multiplier2_SLICE_907 \AMDemodulator1/Multiplier2/SLICE_907 
    ( .B1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_3_14 ), 
    .A1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_2_14 ), 
    .B0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_3_13 ), 
    .A0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_2_13 ), 
    .DI1(\AMDemodulator1/Multiplier2/s_Multiplier_0_1_14 ), 
    .DI0(\AMDemodulator1/Multiplier2/s_Multiplier_0_1_13 ), 
    .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier2/co_Multiplier_0_1_4 ), 
    .F0(\AMDemodulator1/Multiplier2/s_Multiplier_0_1_13 ), 
    .Q0(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_1_13 ), 
    .F1(\AMDemodulator1/Multiplier2/s_Multiplier_0_1_14 ), 
    .Q1(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_1_14 ), 
    .FCO(\AMDemodulator1/Multiplier2/co_Multiplier_0_1_5 ));
  AMDemodulator1_Multiplier2_SLICE_908 \AMDemodulator1/Multiplier2/SLICE_908 
    ( .B1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_3_16 ), 
    .A1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_2_16 ), 
    .B0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_3_15 ), 
    .A0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_2_15 ), 
    .DI1(\AMDemodulator1/Multiplier2/s_Multiplier_0_1_16 ), 
    .DI0(\AMDemodulator1/Multiplier2/s_Multiplier_0_1_15 ), 
    .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier2/co_Multiplier_0_1_5 ), 
    .F0(\AMDemodulator1/Multiplier2/s_Multiplier_0_1_15 ), 
    .Q0(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_1_15 ), 
    .F1(\AMDemodulator1/Multiplier2/s_Multiplier_0_1_16 ), 
    .Q1(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_1_16 ), 
    .FCO(\AMDemodulator1/Multiplier2/co_Multiplier_0_1_6 ));
  AMDemodulator1_Multiplier2_SLICE_909 \AMDemodulator1/Multiplier2/SLICE_909 
    ( .A1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_3_18 ), 
    .B0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_2_17 ), 
    .A0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_3_17 ), 
    .DI1(\AMDemodulator1/Multiplier2/s_Multiplier_0_1_18 ), 
    .DI0(\AMDemodulator1/Multiplier2/s_Multiplier_0_1_17 ), 
    .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier2/co_Multiplier_0_1_6 ), 
    .F0(\AMDemodulator1/Multiplier2/s_Multiplier_0_1_17 ), 
    .Q0(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_1_17 ), 
    .F1(\AMDemodulator1/Multiplier2/s_Multiplier_0_1_18 ), 
    .Q1(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_1_18 ), 
    .FCO(\AMDemodulator1/Multiplier2/co_Multiplier_0_1_7 ));
  AMDemodulator1_Multiplier2_SLICE_910 \AMDemodulator1/Multiplier2/SLICE_910 
    ( .A0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_3_19 ), 
    .DI1(\AMDemodulator1/Multiplier2/s_Multiplier_0_1_20 ), 
    .DI0(\AMDemodulator1/Multiplier2/s_Multiplier_0_1_19 ), 
    .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier2/co_Multiplier_0_1_7 ), 
    .F0(\AMDemodulator1/Multiplier2/s_Multiplier_0_1_19 ), 
    .Q0(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_1_19 ), 
    .F1(\AMDemodulator1/Multiplier2/s_Multiplier_0_1_20 ), 
    .Q1(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_1_20 ), 
    .FCO(\AMDemodulator1/Multiplier2/co_Multiplier_0_1_8 ));
  AMDemodulator1_Multiplier2_SLICE_911 \AMDemodulator1/Multiplier2/SLICE_911 
    ( .DI0(\AMDemodulator1/Multiplier2/s_Multiplier_0_1_21 ), 
    .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier2/co_Multiplier_0_1_8 ), 
    .F0(\AMDemodulator1/Multiplier2/s_Multiplier_0_1_21 ), 
    .Q0(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_1_21 ));
  AMDemodulator1_Multiplier2_SLICE_912 \AMDemodulator1/Multiplier2/SLICE_912 
    ( .B1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_5_10 ), 
    .A1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_4_10 ), 
    .DI1(\AMDemodulator1/Multiplier2/s_Multiplier_0_2_10 ), 
    .CLK(CIC1_out_clkSin), 
    .F1(\AMDemodulator1/Multiplier2/s_Multiplier_0_2_10 ), 
    .Q1(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_2_10 ), 
    .FCO(\AMDemodulator1/Multiplier2/co_Multiplier_0_2_1 ));
  AMDemodulator1_Multiplier2_SLICE_913 \AMDemodulator1/Multiplier2/SLICE_913 
    ( .B1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_5_12 ), 
    .A1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_4_12 ), 
    .B0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_5_11 ), 
    .A0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_4_11 ), 
    .DI1(\AMDemodulator1/Multiplier2/s_Multiplier_0_2_12 ), 
    .DI0(\AMDemodulator1/Multiplier2/s_Multiplier_0_2_11 ), 
    .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier2/co_Multiplier_0_2_1 ), 
    .F0(\AMDemodulator1/Multiplier2/s_Multiplier_0_2_11 ), 
    .Q0(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_2_11 ), 
    .F1(\AMDemodulator1/Multiplier2/s_Multiplier_0_2_12 ), 
    .Q1(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_2_12 ), 
    .FCO(\AMDemodulator1/Multiplier2/co_Multiplier_0_2_2 ));
  AMDemodulator1_Multiplier2_SLICE_914 \AMDemodulator1/Multiplier2/SLICE_914 
    ( .B1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_5_14 ), 
    .A1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_4_14 ), 
    .B0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_5_13 ), 
    .A0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_4_13 ), 
    .DI1(\AMDemodulator1/Multiplier2/s_Multiplier_0_2_14 ), 
    .DI0(\AMDemodulator1/Multiplier2/s_Multiplier_0_2_13 ), 
    .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier2/co_Multiplier_0_2_2 ), 
    .F0(\AMDemodulator1/Multiplier2/s_Multiplier_0_2_13 ), 
    .Q0(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_2_13 ), 
    .F1(\AMDemodulator1/Multiplier2/s_Multiplier_0_2_14 ), 
    .Q1(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_2_14 ), 
    .FCO(\AMDemodulator1/Multiplier2/co_Multiplier_0_2_3 ));
  AMDemodulator1_Multiplier2_SLICE_915 \AMDemodulator1/Multiplier2/SLICE_915 
    ( .B1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_5_16 ), 
    .A1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_4_16 ), 
    .B0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_5_15 ), 
    .A0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_4_15 ), 
    .DI1(\AMDemodulator1/Multiplier2/s_Multiplier_0_2_16 ), 
    .DI0(\AMDemodulator1/Multiplier2/s_Multiplier_0_2_15 ), 
    .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier2/co_Multiplier_0_2_3 ), 
    .F0(\AMDemodulator1/Multiplier2/s_Multiplier_0_2_15 ), 
    .Q0(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_2_15 ), 
    .F1(\AMDemodulator1/Multiplier2/s_Multiplier_0_2_16 ), 
    .Q1(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_2_16 ), 
    .FCO(\AMDemodulator1/Multiplier2/co_Multiplier_0_2_4 ));
  AMDemodulator1_Multiplier2_SLICE_916 \AMDemodulator1/Multiplier2/SLICE_916 
    ( .B1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_5_18 ), 
    .A1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_4_18 ), 
    .B0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_5_17 ), 
    .A0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_4_17 ), 
    .DI1(\AMDemodulator1/Multiplier2/s_Multiplier_0_2_18 ), 
    .DI0(\AMDemodulator1/Multiplier2/s_Multiplier_0_2_17 ), 
    .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier2/co_Multiplier_0_2_4 ), 
    .F0(\AMDemodulator1/Multiplier2/s_Multiplier_0_2_17 ), 
    .Q0(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_2_17 ), 
    .F1(\AMDemodulator1/Multiplier2/s_Multiplier_0_2_18 ), 
    .Q1(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_2_18 ), 
    .FCO(\AMDemodulator1/Multiplier2/co_Multiplier_0_2_5 ));
  AMDemodulator1_Multiplier2_SLICE_917 \AMDemodulator1/Multiplier2/SLICE_917 
    ( .B1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_5_20 ), 
    .A1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_4_20 ), 
    .B0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_5_19 ), 
    .A0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_4_19 ), 
    .DI1(\AMDemodulator1/Multiplier2/s_Multiplier_0_2_20 ), 
    .DI0(\AMDemodulator1/Multiplier2/s_Multiplier_0_2_19 ), 
    .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier2/co_Multiplier_0_2_5 ), 
    .F0(\AMDemodulator1/Multiplier2/s_Multiplier_0_2_19 ), 
    .Q0(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_2_19 ), 
    .F1(\AMDemodulator1/Multiplier2/s_Multiplier_0_2_20 ), 
    .Q1(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_2_20 ), 
    .FCO(\AMDemodulator1/Multiplier2/co_Multiplier_0_2_6 ));
  AMDemodulator1_Multiplier2_SLICE_918 \AMDemodulator1/Multiplier2/SLICE_918 
    ( .A1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_5_22 ), 
    .B0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_4_21 ), 
    .A0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_5_21 ), 
    .DI1(\AMDemodulator1/Multiplier2/s_Multiplier_0_2_22 ), 
    .DI0(\AMDemodulator1/Multiplier2/s_Multiplier_0_2_21 ), 
    .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier2/co_Multiplier_0_2_6 ), 
    .F0(\AMDemodulator1/Multiplier2/s_Multiplier_0_2_21 ), 
    .Q0(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_2_21 ), 
    .F1(\AMDemodulator1/Multiplier2/s_Multiplier_0_2_22 ), 
    .Q1(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_2_22 ), 
    .FCO(\AMDemodulator1/Multiplier2/co_Multiplier_0_2_7 ));
  AMDemodulator1_Multiplier2_SLICE_919 \AMDemodulator1/Multiplier2/SLICE_919 
    ( .A0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_5_23 ), 
    .DI0(\AMDemodulator1/Multiplier2/s_Multiplier_0_2_23 ), 
    .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier2/co_Multiplier_0_2_7 ), 
    .F0(\AMDemodulator1/Multiplier2/s_Multiplier_0_2_23 ), 
    .Q0(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_2_23 ));
  AMDemodulator1_Multiplier2_SLICE_920 \AMDemodulator1/Multiplier2/SLICE_920 
    ( .B1(\AMDemodulator1/Multiplier2/f_Multiplier_0_pp_2_4 ), 
    .A1(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_0_4 ), 
    .DI1(\AMDemodulator1/Multiplier2/rego_o_4 ), .CLK(CIC1_out_clkSin), 
    .F1(\AMDemodulator1/Multiplier2/rego_o_4 ), 
    .Q1(\AMDemodulator1/MultResult2_4 ), 
    .FCO(\AMDemodulator1/Multiplier2/co_Multiplier_0_3_1 ));
  AMDemodulator1_Multiplier2_SLICE_921 \AMDemodulator1/Multiplier2/SLICE_921 
    ( .B1(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_1_6 ), 
    .A1(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_0_6 ), 
    .B0(\AMDemodulator1/Multiplier2/f_Multiplier_0_pp_2_5 ), 
    .A0(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_0_5 ), 
    .DI1(\AMDemodulator1/Multiplier2/rego_o_6 ), 
    .DI0(\AMDemodulator1/Multiplier2/rego_o_5 ), .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier2/co_Multiplier_0_3_1 ), 
    .F0(\AMDemodulator1/Multiplier2/rego_o_5 ), 
    .Q0(\AMDemodulator1/MultResult2_5 ), 
    .F1(\AMDemodulator1/Multiplier2/rego_o_6 ), 
    .Q1(\AMDemodulator1/MultResult2_6 ), 
    .FCO(\AMDemodulator1/Multiplier2/co_Multiplier_0_3_2 ));
  AMDemodulator1_Multiplier2_SLICE_922 \AMDemodulator1/Multiplier2/SLICE_922 
    ( .B1(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_1_8 ), 
    .A1(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_0_8 ), 
    .B0(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_1_7 ), 
    .A0(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_0_7 ), 
    .DI0(\AMDemodulator1/Multiplier2/rego_o_7 ), .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier2/co_Multiplier_0_3_2 ), 
    .F0(\AMDemodulator1/Multiplier2/rego_o_7 ), 
    .Q0(\AMDemodulator1/MultResult2_7 ), 
    .F1(\AMDemodulator1/Multiplier2/s_Multiplier_0_3_8 ), 
    .FCO(\AMDemodulator1/Multiplier2/co_Multiplier_0_3_3 ));
  AMDemodulator1_Multiplier2_SLICE_923 \AMDemodulator1/Multiplier2/SLICE_923 
    ( .B1(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_1_10 ), 
    .A1(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_0_10 ), 
    .B0(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_1_9 ), 
    .A0(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_0_9 ), 
    .FCI(\AMDemodulator1/Multiplier2/co_Multiplier_0_3_3 ), 
    .F0(\AMDemodulator1/Multiplier2/s_Multiplier_0_3_9 ), 
    .F1(\AMDemodulator1/Multiplier2/s_Multiplier_0_3_10 ), 
    .FCO(\AMDemodulator1/Multiplier2/co_Multiplier_0_3_4 ));
  AMDemodulator1_Multiplier2_SLICE_924 \AMDemodulator1/Multiplier2/SLICE_924 
    ( .B1(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_1_12 ), 
    .A1(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_0_12 ), 
    .B0(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_1_11 ), 
    .A0(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_0_11 ), 
    .FCI(\AMDemodulator1/Multiplier2/co_Multiplier_0_3_4 ), 
    .F0(\AMDemodulator1/Multiplier2/s_Multiplier_0_3_11 ), 
    .F1(\AMDemodulator1/Multiplier2/s_Multiplier_0_3_12 ), 
    .FCO(\AMDemodulator1/Multiplier2/co_Multiplier_0_3_5 ));
  AMDemodulator1_Multiplier2_SLICE_925 \AMDemodulator1/Multiplier2/SLICE_925 
    ( .B1(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_1_14 ), 
    .A1(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_0_14 ), 
    .B0(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_1_13 ), 
    .A0(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_0_13 ), 
    .FCI(\AMDemodulator1/Multiplier2/co_Multiplier_0_3_5 ), 
    .F0(\AMDemodulator1/Multiplier2/s_Multiplier_0_3_13 ), 
    .F1(\AMDemodulator1/Multiplier2/s_Multiplier_0_3_14 ), 
    .FCO(\AMDemodulator1/Multiplier2/co_Multiplier_0_3_6 ));
  AMDemodulator1_Multiplier2_SLICE_926 \AMDemodulator1/Multiplier2/SLICE_926 
    ( .B1(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_1_16 ), 
    .A1(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_0_16 ), 
    .B0(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_1_15 ), 
    .A0(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_0_15 ), 
    .FCI(\AMDemodulator1/Multiplier2/co_Multiplier_0_3_6 ), 
    .F0(\AMDemodulator1/Multiplier2/s_Multiplier_0_3_15 ), 
    .F1(\AMDemodulator1/Multiplier2/s_Multiplier_0_3_16 ), 
    .FCO(\AMDemodulator1/Multiplier2/co_Multiplier_0_3_7 ));
  AMDemodulator1_Multiplier2_SLICE_927 \AMDemodulator1/Multiplier2/SLICE_927 
    ( .B1(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_1_18 ), 
    .B0(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_1_17 ), 
    .A0(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_0_17 ), 
    .FCI(\AMDemodulator1/Multiplier2/co_Multiplier_0_3_7 ), 
    .F0(\AMDemodulator1/Multiplier2/s_Multiplier_0_3_17 ), 
    .F1(\AMDemodulator1/Multiplier2/s_Multiplier_0_3_18 ), 
    .FCO(\AMDemodulator1/Multiplier2/co_Multiplier_0_3_8 ));
  AMDemodulator1_Multiplier2_SLICE_928 \AMDemodulator1/Multiplier2/SLICE_928 
    ( .B1(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_1_20 ), 
    .B0(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_1_19 ), 
    .FCI(\AMDemodulator1/Multiplier2/co_Multiplier_0_3_8 ), 
    .F0(\AMDemodulator1/Multiplier2/s_Multiplier_0_3_19 ), 
    .F1(\AMDemodulator1/Multiplier2/s_Multiplier_0_3_20 ), 
    .FCO(\AMDemodulator1/Multiplier2/co_Multiplier_0_3_9 ));
  AMDemodulator1_Multiplier2_SLICE_929 \AMDemodulator1/Multiplier2/SLICE_929 
    ( .B0(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_1_21 ), 
    .FCI(\AMDemodulator1/Multiplier2/co_Multiplier_0_3_9 ), 
    .F0(\AMDemodulator1/Multiplier2/s_Multiplier_0_3_21 ), 
    .F1(\AMDemodulator1/Multiplier2/s_Multiplier_0_3_22 ), 
    .FCO(\AMDemodulator1/Multiplier2/co_Multiplier_0_3_10 ));
  AMDemodulator1_Multiplier2_SLICE_930 \AMDemodulator1/Multiplier2/SLICE_930 
    ( .FCI(\AMDemodulator1/Multiplier2/co_Multiplier_0_3_10 ), 
    .F0(\AMDemodulator1/Multiplier2/s_Multiplier_0_3_23 ));
  AMDemodulator1_Multiplier2_SLICE_931 \AMDemodulator1/Multiplier2/SLICE_931 
    ( .B1(\AMDemodulator1/Multiplier2/f_Multiplier_0_pp_4_8 ), 
    .A1(\AMDemodulator1/Multiplier2/s_Multiplier_0_3_8 ), 
    .DI1(\AMDemodulator1/Multiplier2/rego_o_8 ), .CLK(CIC1_out_clkSin), 
    .F1(\AMDemodulator1/Multiplier2/rego_o_8 ), 
    .Q1(\AMDemodulator1/MultResult2_8 ), 
    .FCO(\AMDemodulator1/Multiplier2/co_t_Multiplier_0_4_1 ));
  AMDemodulator1_Multiplier2_SLICE_932 \AMDemodulator1/Multiplier2/SLICE_932 
    ( .B1(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_2_10 ), 
    .A1(\AMDemodulator1/Multiplier2/s_Multiplier_0_3_10 ), 
    .B0(\AMDemodulator1/Multiplier2/f_Multiplier_0_pp_4_9 ), 
    .A0(\AMDemodulator1/Multiplier2/s_Multiplier_0_3_9 ), 
    .DI1(\AMDemodulator1/Multiplier2/rego_o_10 ), 
    .DI0(\AMDemodulator1/Multiplier2/rego_o_9 ), .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier2/co_t_Multiplier_0_4_1 ), 
    .F0(\AMDemodulator1/Multiplier2/rego_o_9 ), 
    .Q0(\AMDemodulator1/MultResult2_9 ), 
    .F1(\AMDemodulator1/Multiplier2/rego_o_10 ), 
    .Q1(\AMDemodulator1/MultResult2_10 ), 
    .FCO(\AMDemodulator1/Multiplier2/co_t_Multiplier_0_4_2 ));
  AMDemodulator1_Multiplier2_SLICE_933 \AMDemodulator1/Multiplier2/SLICE_933 
    ( .B1(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_2_12 ), 
    .A1(\AMDemodulator1/Multiplier2/s_Multiplier_0_3_12 ), 
    .B0(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_2_11 ), 
    .A0(\AMDemodulator1/Multiplier2/s_Multiplier_0_3_11 ), 
    .DI1(\AMDemodulator1/Multiplier2/rego_o_12 ), 
    .DI0(\AMDemodulator1/Multiplier2/rego_o_11 ), .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier2/co_t_Multiplier_0_4_2 ), 
    .F0(\AMDemodulator1/Multiplier2/rego_o_11 ), 
    .Q0(\AMDemodulator1/MultResult2_11 ), 
    .F1(\AMDemodulator1/Multiplier2/rego_o_12 ), 
    .Q1(\AMDemodulator1/MultResult2_12 ), 
    .FCO(\AMDemodulator1/Multiplier2/co_t_Multiplier_0_4_3 ));
  AMDemodulator1_Multiplier2_SLICE_934 \AMDemodulator1/Multiplier2/SLICE_934 
    ( .B1(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_2_14 ), 
    .A1(\AMDemodulator1/Multiplier2/s_Multiplier_0_3_14 ), 
    .B0(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_2_13 ), 
    .A0(\AMDemodulator1/Multiplier2/s_Multiplier_0_3_13 ), 
    .DI1(\AMDemodulator1/Multiplier2/rego_o_14 ), 
    .DI0(\AMDemodulator1/Multiplier2/rego_o_13 ), .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier2/co_t_Multiplier_0_4_3 ), 
    .F0(\AMDemodulator1/Multiplier2/rego_o_13 ), 
    .Q0(\AMDemodulator1/MultResult2_13 ), 
    .F1(\AMDemodulator1/Multiplier2/rego_o_14 ), 
    .Q1(\AMDemodulator1/MultResult2_14 ), 
    .FCO(\AMDemodulator1/Multiplier2/co_t_Multiplier_0_4_4 ));
  AMDemodulator1_Multiplier2_SLICE_935 \AMDemodulator1/Multiplier2/SLICE_935 
    ( .B1(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_2_16 ), 
    .A1(\AMDemodulator1/Multiplier2/s_Multiplier_0_3_16 ), 
    .B0(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_2_15 ), 
    .A0(\AMDemodulator1/Multiplier2/s_Multiplier_0_3_15 ), 
    .DI1(\AMDemodulator1/Multiplier2/rego_o_16 ), 
    .DI0(\AMDemodulator1/Multiplier2/rego_o_15 ), .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier2/co_t_Multiplier_0_4_4 ), 
    .F0(\AMDemodulator1/Multiplier2/rego_o_15 ), 
    .Q0(\AMDemodulator1/MultResult2_15 ), 
    .F1(\AMDemodulator1/Multiplier2/rego_o_16 ), 
    .Q1(\AMDemodulator1/MultResult2_16 ), 
    .FCO(\AMDemodulator1/Multiplier2/co_t_Multiplier_0_4_5 ));
  AMDemodulator1_Multiplier2_SLICE_936 \AMDemodulator1/Multiplier2/SLICE_936 
    ( .B1(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_2_18 ), 
    .A1(\AMDemodulator1/Multiplier2/s_Multiplier_0_3_18 ), 
    .B0(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_2_17 ), 
    .A0(\AMDemodulator1/Multiplier2/s_Multiplier_0_3_17 ), 
    .DI1(\AMDemodulator1/Multiplier2/rego_o_18 ), 
    .DI0(\AMDemodulator1/Multiplier2/rego_o_17 ), .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier2/co_t_Multiplier_0_4_5 ), 
    .F0(\AMDemodulator1/Multiplier2/rego_o_17 ), 
    .Q0(\AMDemodulator1/MultResult2_17 ), 
    .F1(\AMDemodulator1/Multiplier2/rego_o_18 ), 
    .Q1(\AMDemodulator1/MultResult2_18 ), 
    .FCO(\AMDemodulator1/Multiplier2/co_t_Multiplier_0_4_6 ));
  AMDemodulator1_Multiplier2_SLICE_937 \AMDemodulator1/Multiplier2/SLICE_937 
    ( .B1(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_2_20 ), 
    .A1(\AMDemodulator1/Multiplier2/s_Multiplier_0_3_20 ), 
    .B0(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_2_19 ), 
    .A0(\AMDemodulator1/Multiplier2/s_Multiplier_0_3_19 ), 
    .DI1(\AMDemodulator1/Multiplier2/rego_o_20 ), 
    .DI0(\AMDemodulator1/Multiplier2/rego_o_19 ), .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier2/co_t_Multiplier_0_4_6 ), 
    .F0(\AMDemodulator1/Multiplier2/rego_o_19 ), 
    .Q0(\AMDemodulator1/MultResult2_19 ), 
    .F1(\AMDemodulator1/Multiplier2/rego_o_20 ), 
    .Q1(\AMDemodulator1/MultResult2_20 ), 
    .FCO(\AMDemodulator1/Multiplier2/co_t_Multiplier_0_4_7 ));
  AMDemodulator1_Multiplier2_SLICE_938 \AMDemodulator1/Multiplier2/SLICE_938 
    ( .B1(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_2_22 ), 
    .A1(\AMDemodulator1/Multiplier2/s_Multiplier_0_3_22 ), 
    .B0(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_2_21 ), 
    .A0(\AMDemodulator1/Multiplier2/s_Multiplier_0_3_21 ), 
    .DI1(\AMDemodulator1/Multiplier2/rego_o_22 ), 
    .DI0(\AMDemodulator1/Multiplier2/rego_o_21 ), .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier2/co_t_Multiplier_0_4_7 ), 
    .F0(\AMDemodulator1/Multiplier2/rego_o_21 ), 
    .Q0(\AMDemodulator1/MultResult2_21 ), 
    .F1(\AMDemodulator1/Multiplier2/rego_o_22 ), 
    .Q1(\AMDemodulator1/MultResult2_22 ), 
    .FCO(\AMDemodulator1/Multiplier2/co_t_Multiplier_0_4_8 ));
  AMDemodulator1_Multiplier2_SLICE_939 \AMDemodulator1/Multiplier2/SLICE_939 
    ( .B0(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_2_23 ), 
    .A0(\AMDemodulator1/Multiplier2/s_Multiplier_0_3_23 ), 
    .DI0(\AMDemodulator1/Multiplier2/rego_o_23 ), .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier2/co_t_Multiplier_0_4_8 ), 
    .F0(\AMDemodulator1/Multiplier2/rego_o_23 ), 
    .Q0(\AMDemodulator1/MultResult2_23 ));
  AMDemodulator1_Multiplier2_SLICE_940 \AMDemodulator1/Multiplier2/SLICE_940 
    ( .D1(\AMDemodulator1/Multiplier2/regb_b_0 ), 
    .C1(\AMDemodulator1/Multiplier2/rega_a_2 ), 
    .B1(\AMDemodulator1/Multiplier2/regb_b_1 ), 
    .A1(\AMDemodulator1/Multiplier2/rega_a_1 ), 
    .D0(\AMDemodulator1/Multiplier2/regb_b_0 ), 
    .C0(\AMDemodulator1/Multiplier2/rega_a_1 ), 
    .B0(\AMDemodulator1/Multiplier2/regb_b_1 ), 
    .A0(\AMDemodulator1/Multiplier2/regb_b_0 ), 
    .DI0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_0_1 ), 
    .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier2/Multiplier_0_cin_lr_0 ), 
    .F0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_0_1 ), 
    .Q0(\AMDemodulator1/Multiplier2/rego_o_1 ), 
    .F1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_0_2 ), 
    .FCO(\AMDemodulator1/Multiplier2/mco ));
  AMDemodulator1_Multiplier2_SLICE_941 \AMDemodulator1/Multiplier2/SLICE_941 
    ( .D1(\AMDemodulator1/Multiplier2/regb_b_0 ), 
    .C1(\AMDemodulator1/Multiplier2/rega_a_4 ), 
    .B1(\AMDemodulator1/Multiplier2/regb_b_1 ), 
    .A1(\AMDemodulator1/Multiplier2/rega_a_3 ), 
    .D0(\AMDemodulator1/Multiplier2/regb_b_0 ), 
    .C0(\AMDemodulator1/Multiplier2/rega_a_3 ), 
    .B0(\AMDemodulator1/Multiplier2/regb_b_1 ), 
    .A0(\AMDemodulator1/Multiplier2/rega_a_2 ), 
    .FCI(\AMDemodulator1/Multiplier2/mco ), 
    .F0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_0_3 ), 
    .F1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_0_4 ), 
    .FCO(\AMDemodulator1/Multiplier2/mco_1 ));
  AMDemodulator1_Multiplier2_SLICE_942 \AMDemodulator1/Multiplier2/SLICE_942 
    ( .D1(\AMDemodulator1/Multiplier2/regb_b_0 ), 
    .C1(\AMDemodulator1/Multiplier2/rega_a_6 ), 
    .B1(\AMDemodulator1/Multiplier2/regb_b_1 ), 
    .A1(\AMDemodulator1/Multiplier2/rega_a_5 ), 
    .D0(\AMDemodulator1/Multiplier2/regb_b_0 ), 
    .C0(\AMDemodulator1/Multiplier2/rega_a_5 ), 
    .B0(\AMDemodulator1/Multiplier2/regb_b_1 ), 
    .A0(\AMDemodulator1/Multiplier2/rega_a_4 ), 
    .FCI(\AMDemodulator1/Multiplier2/mco_1 ), 
    .F0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_0_5 ), 
    .F1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_0_6 ), 
    .FCO(\AMDemodulator1/Multiplier2/mco_2 ));
  AMDemodulator1_Multiplier2_SLICE_943 \AMDemodulator1/Multiplier2/SLICE_943 
    ( .D1(\AMDemodulator1/Multiplier2/regb_b_0 ), 
    .C1(\AMDemodulator1/Multiplier2/rega_a_8 ), 
    .B1(\AMDemodulator1/Multiplier2/regb_b_1 ), 
    .A1(\AMDemodulator1/Multiplier2/rega_a_7 ), 
    .D0(\AMDemodulator1/Multiplier2/regb_b_0 ), 
    .C0(\AMDemodulator1/Multiplier2/rega_a_7 ), 
    .B0(\AMDemodulator1/Multiplier2/regb_b_1 ), 
    .A0(\AMDemodulator1/Multiplier2/rega_a_6 ), 
    .FCI(\AMDemodulator1/Multiplier2/mco_2 ), 
    .F0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_0_7 ), 
    .F1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_0_8 ), 
    .FCO(\AMDemodulator1/Multiplier2/mco_3 ));
  AMDemodulator1_Multiplier2_SLICE_944 \AMDemodulator1/Multiplier2/SLICE_944 
    ( .D1(\AMDemodulator1/Multiplier2/regb_b_0 ), 
    .C1(\AMDemodulator1/Multiplier2/rega_a_10 ), 
    .B1(\AMDemodulator1/Multiplier2/regb_b_1 ), 
    .A1(\AMDemodulator1/Multiplier2/rega_a_9 ), 
    .D0(\AMDemodulator1/Multiplier2/regb_b_0 ), 
    .C0(\AMDemodulator1/Multiplier2/rega_a_9 ), 
    .B0(\AMDemodulator1/Multiplier2/regb_b_1 ), 
    .A0(\AMDemodulator1/Multiplier2/rega_a_8 ), 
    .FCI(\AMDemodulator1/Multiplier2/mco_3 ), 
    .F0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_0_9 ), 
    .F1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_0_10 ), 
    .FCO(\AMDemodulator1/Multiplier2/mco_4 ));
  AMDemodulator1_Multiplier2_SLICE_945 \AMDemodulator1/Multiplier2/SLICE_945 
    ( .D1(VCC_net), .C1(VCC_net), .B1(VCC_net), 
    .A1(\AMDemodulator1/Multiplier2/Multiplier_0_mult_0_5_n1 ), .D0(VCC_net), 
    .C0(\AMDemodulator1/Multiplier2/Multiplier_0_mult_0_5_n2 ), 
    .B0(\AMDemodulator1/Multiplier2/regb_b_1 ), 
    .A0(\AMDemodulator1/Multiplier2/rega_a_10 ), 
    .FCI(\AMDemodulator1/Multiplier2/mco_4 ), 
    .F0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_0_11 ), 
    .F1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_0_12 ), 
    .FCO(\AMDemodulator1/Multiplier2/mfco ));
  AMDemodulator1_Multiplier2_SLICE_946 \AMDemodulator1/Multiplier2/SLICE_946 
    ( .D1(\AMDemodulator1/Multiplier2/regb_b_2 ), 
    .C1(\AMDemodulator1/Multiplier2/rega_a_2 ), 
    .B1(\AMDemodulator1/Multiplier2/regb_b_3 ), 
    .A1(\AMDemodulator1/Multiplier2/rega_a_1 ), 
    .D0(\AMDemodulator1/Multiplier2/regb_b_2 ), 
    .C0(\AMDemodulator1/Multiplier2/rega_a_1 ), 
    .B0(\AMDemodulator1/Multiplier2/regb_b_3 ), 
    .A0(\AMDemodulator1/Multiplier2/regb_b_0 ), 
    .FCI(\AMDemodulator1/Multiplier2/Multiplier_0_cin_lr_2 ), 
    .F0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_1_3 ), 
    .F1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_1_4 ), 
    .FCO(\AMDemodulator1/Multiplier2/mco_5 ));
  AMDemodulator1_Multiplier2_SLICE_947 \AMDemodulator1/Multiplier2/SLICE_947 
    ( .D1(\AMDemodulator1/Multiplier2/regb_b_2 ), 
    .C1(\AMDemodulator1/Multiplier2/rega_a_4 ), 
    .B1(\AMDemodulator1/Multiplier2/regb_b_3 ), 
    .A1(\AMDemodulator1/Multiplier2/rega_a_3 ), 
    .D0(\AMDemodulator1/Multiplier2/regb_b_2 ), 
    .C0(\AMDemodulator1/Multiplier2/rega_a_3 ), 
    .B0(\AMDemodulator1/Multiplier2/regb_b_3 ), 
    .A0(\AMDemodulator1/Multiplier2/rega_a_2 ), 
    .FCI(\AMDemodulator1/Multiplier2/mco_5 ), 
    .F0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_1_5 ), 
    .F1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_1_6 ), 
    .FCO(\AMDemodulator1/Multiplier2/mco_6 ));
  AMDemodulator1_Multiplier2_SLICE_948 \AMDemodulator1/Multiplier2/SLICE_948 
    ( .D1(\AMDemodulator1/Multiplier2/regb_b_2 ), 
    .C1(\AMDemodulator1/Multiplier2/rega_a_6 ), 
    .B1(\AMDemodulator1/Multiplier2/regb_b_3 ), 
    .A1(\AMDemodulator1/Multiplier2/rega_a_5 ), 
    .D0(\AMDemodulator1/Multiplier2/regb_b_2 ), 
    .C0(\AMDemodulator1/Multiplier2/rega_a_5 ), 
    .B0(\AMDemodulator1/Multiplier2/regb_b_3 ), 
    .A0(\AMDemodulator1/Multiplier2/rega_a_4 ), 
    .FCI(\AMDemodulator1/Multiplier2/mco_6 ), 
    .F0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_1_7 ), 
    .F1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_1_8 ), 
    .FCO(\AMDemodulator1/Multiplier2/mco_7 ));
  AMDemodulator1_Multiplier2_SLICE_949 \AMDemodulator1/Multiplier2/SLICE_949 
    ( .D1(\AMDemodulator1/Multiplier2/regb_b_2 ), 
    .C1(\AMDemodulator1/Multiplier2/rega_a_8 ), 
    .B1(\AMDemodulator1/Multiplier2/regb_b_3 ), 
    .A1(\AMDemodulator1/Multiplier2/rega_a_7 ), 
    .D0(\AMDemodulator1/Multiplier2/regb_b_2 ), 
    .C0(\AMDemodulator1/Multiplier2/rega_a_7 ), 
    .B0(\AMDemodulator1/Multiplier2/regb_b_3 ), 
    .A0(\AMDemodulator1/Multiplier2/rega_a_6 ), 
    .FCI(\AMDemodulator1/Multiplier2/mco_7 ), 
    .F0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_1_9 ), 
    .F1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_1_10 ), 
    .FCO(\AMDemodulator1/Multiplier2/mco_8 ));
  AMDemodulator1_Multiplier2_SLICE_950 \AMDemodulator1/Multiplier2/SLICE_950 
    ( .D1(\AMDemodulator1/Multiplier2/regb_b_2 ), 
    .C1(\AMDemodulator1/Multiplier2/rega_a_10 ), 
    .B1(\AMDemodulator1/Multiplier2/regb_b_3 ), 
    .A1(\AMDemodulator1/Multiplier2/rega_a_9 ), 
    .D0(\AMDemodulator1/Multiplier2/regb_b_2 ), 
    .C0(\AMDemodulator1/Multiplier2/rega_a_9 ), 
    .B0(\AMDemodulator1/Multiplier2/regb_b_3 ), 
    .A0(\AMDemodulator1/Multiplier2/rega_a_8 ), 
    .FCI(\AMDemodulator1/Multiplier2/mco_8 ), 
    .F0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_1_11 ), 
    .F1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_1_12 ), 
    .FCO(\AMDemodulator1/Multiplier2/mco_9 ));
  AMDemodulator1_Multiplier2_SLICE_951 \AMDemodulator1/Multiplier2/SLICE_951 
    ( .D1(\AMDemodulator1/Multiplier2/regb_b_2 ), .B1(VCC_net), 
    .A1(\AMDemodulator1/Multiplier2/Multiplier_0_mult_2_5_n1 ), .D0(VCC_net), 
    .C0(\AMDemodulator1/Multiplier2/Multiplier_0_mult_2_5_n2 ), 
    .B0(\AMDemodulator1/Multiplier2/regb_b_3 ), 
    .A0(\AMDemodulator1/Multiplier2/rega_a_10 ), 
    .FCI(\AMDemodulator1/Multiplier2/mco_9 ), 
    .F0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_1_13 ), 
    .F1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_1_14 ), 
    .FCO(\AMDemodulator1/Multiplier2/mfco_1 ));
  AMDemodulator1_Multiplier2_SLICE_952 \AMDemodulator1/Multiplier2/SLICE_952 
    ( .D1(\AMDemodulator1/Multiplier2/regb_b_4 ), 
    .C1(\AMDemodulator1/Multiplier2/rega_a_2 ), 
    .B1(\AMDemodulator1/Multiplier2/regb_b_5 ), 
    .A1(\AMDemodulator1/Multiplier2/rega_a_1 ), 
    .D0(\AMDemodulator1/Multiplier2/regb_b_4 ), 
    .C0(\AMDemodulator1/Multiplier2/rega_a_1 ), 
    .B0(\AMDemodulator1/Multiplier2/regb_b_5 ), 
    .A0(\AMDemodulator1/Multiplier2/regb_b_0 ), 
    .DI0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_2_5 ), 
    .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier2/Multiplier_0_cin_lr_4 ), 
    .F0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_2_5 ), 
    .Q0(\AMDemodulator1/Multiplier2/f_Multiplier_0_pp_2_5 ), 
    .F1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_2_6 ), 
    .FCO(\AMDemodulator1/Multiplier2/mco_10 ));
  AMDemodulator1_Multiplier2_SLICE_953 \AMDemodulator1/Multiplier2/SLICE_953 
    ( .D1(\AMDemodulator1/Multiplier2/regb_b_4 ), 
    .C1(\AMDemodulator1/Multiplier2/rega_a_4 ), 
    .B1(\AMDemodulator1/Multiplier2/regb_b_5 ), 
    .A1(\AMDemodulator1/Multiplier2/rega_a_3 ), 
    .D0(\AMDemodulator1/Multiplier2/regb_b_4 ), 
    .C0(\AMDemodulator1/Multiplier2/rega_a_3 ), 
    .B0(\AMDemodulator1/Multiplier2/regb_b_5 ), 
    .A0(\AMDemodulator1/Multiplier2/rega_a_2 ), 
    .FCI(\AMDemodulator1/Multiplier2/mco_10 ), 
    .F0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_2_7 ), 
    .F1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_2_8 ), 
    .FCO(\AMDemodulator1/Multiplier2/mco_11 ));
  AMDemodulator1_Multiplier2_SLICE_954 \AMDemodulator1/Multiplier2/SLICE_954 
    ( .D1(\AMDemodulator1/Multiplier2/regb_b_4 ), 
    .C1(\AMDemodulator1/Multiplier2/rega_a_6 ), 
    .B1(\AMDemodulator1/Multiplier2/regb_b_5 ), 
    .A1(\AMDemodulator1/Multiplier2/rega_a_5 ), 
    .D0(\AMDemodulator1/Multiplier2/regb_b_4 ), 
    .C0(\AMDemodulator1/Multiplier2/rega_a_5 ), 
    .B0(\AMDemodulator1/Multiplier2/regb_b_5 ), 
    .A0(\AMDemodulator1/Multiplier2/rega_a_4 ), 
    .FCI(\AMDemodulator1/Multiplier2/mco_11 ), 
    .F0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_2_9 ), 
    .F1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_2_10 ), 
    .FCO(\AMDemodulator1/Multiplier2/mco_12 ));
  AMDemodulator1_Multiplier2_SLICE_955 \AMDemodulator1/Multiplier2/SLICE_955 
    ( .D1(\AMDemodulator1/Multiplier2/regb_b_4 ), 
    .C1(\AMDemodulator1/Multiplier2/rega_a_8 ), 
    .B1(\AMDemodulator1/Multiplier2/regb_b_5 ), 
    .A1(\AMDemodulator1/Multiplier2/rega_a_7 ), 
    .D0(\AMDemodulator1/Multiplier2/regb_b_4 ), 
    .C0(\AMDemodulator1/Multiplier2/rega_a_7 ), 
    .B0(\AMDemodulator1/Multiplier2/regb_b_5 ), 
    .A0(\AMDemodulator1/Multiplier2/rega_a_6 ), 
    .FCI(\AMDemodulator1/Multiplier2/mco_12 ), 
    .F0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_2_11 ), 
    .F1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_2_12 ), 
    .FCO(\AMDemodulator1/Multiplier2/mco_13 ));
  AMDemodulator1_Multiplier2_SLICE_956 \AMDemodulator1/Multiplier2/SLICE_956 
    ( .D1(\AMDemodulator1/Multiplier2/regb_b_4 ), 
    .C1(\AMDemodulator1/Multiplier2/rega_a_10 ), 
    .B1(\AMDemodulator1/Multiplier2/regb_b_5 ), 
    .A1(\AMDemodulator1/Multiplier2/rega_a_9 ), 
    .D0(\AMDemodulator1/Multiplier2/regb_b_4 ), 
    .C0(\AMDemodulator1/Multiplier2/rega_a_9 ), 
    .B0(\AMDemodulator1/Multiplier2/regb_b_5 ), 
    .A0(\AMDemodulator1/Multiplier2/rega_a_8 ), 
    .FCI(\AMDemodulator1/Multiplier2/mco_13 ), 
    .F0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_2_13 ), 
    .F1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_2_14 ), 
    .FCO(\AMDemodulator1/Multiplier2/mco_14 ));
  AMDemodulator1_Multiplier2_SLICE_957 \AMDemodulator1/Multiplier2/SLICE_957 
    ( .D1(\AMDemodulator1/Multiplier2/regb_b_4 ), .B1(VCC_net), 
    .A1(\AMDemodulator1/Multiplier2/Multiplier_0_mult_4_5_n1 ), .D0(VCC_net), 
    .C0(\AMDemodulator1/Multiplier2/Multiplier_0_mult_4_5_n2 ), 
    .B0(\AMDemodulator1/Multiplier2/regb_b_5 ), 
    .A0(\AMDemodulator1/Multiplier2/rega_a_10 ), 
    .FCI(\AMDemodulator1/Multiplier2/mco_14 ), 
    .F0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_2_15 ), 
    .F1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_2_16 ), 
    .FCO(\AMDemodulator1/Multiplier2/mfco_2 ));
  AMDemodulator1_Multiplier2_SLICE_958 \AMDemodulator1/Multiplier2/SLICE_958 
    ( .D1(\AMDemodulator1/Multiplier2/regb_b_6 ), 
    .C1(\AMDemodulator1/Multiplier2/rega_a_2 ), 
    .B1(\AMDemodulator1/Multiplier2/regb_b_7 ), 
    .A1(\AMDemodulator1/Multiplier2/rega_a_1 ), 
    .D0(\AMDemodulator1/Multiplier2/regb_b_6 ), 
    .C0(\AMDemodulator1/Multiplier2/rega_a_1 ), 
    .B0(\AMDemodulator1/Multiplier2/regb_b_7 ), 
    .A0(\AMDemodulator1/Multiplier2/regb_b_0 ), 
    .FCI(\AMDemodulator1/Multiplier2/Multiplier_0_cin_lr_6 ), 
    .F0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_3_7 ), 
    .F1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_3_8 ), 
    .FCO(\AMDemodulator1/Multiplier2/mco_15 ));
  AMDemodulator1_Multiplier2_SLICE_959 \AMDemodulator1/Multiplier2/SLICE_959 
    ( .D1(\AMDemodulator1/Multiplier2/regb_b_6 ), 
    .C1(\AMDemodulator1/Multiplier2/rega_a_4 ), 
    .B1(\AMDemodulator1/Multiplier2/regb_b_7 ), 
    .A1(\AMDemodulator1/Multiplier2/rega_a_3 ), 
    .D0(\AMDemodulator1/Multiplier2/regb_b_6 ), 
    .C0(\AMDemodulator1/Multiplier2/rega_a_3 ), 
    .B0(\AMDemodulator1/Multiplier2/regb_b_7 ), 
    .A0(\AMDemodulator1/Multiplier2/rega_a_2 ), 
    .FCI(\AMDemodulator1/Multiplier2/mco_15 ), 
    .F0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_3_9 ), 
    .F1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_3_10 ), 
    .FCO(\AMDemodulator1/Multiplier2/mco_16 ));
  AMDemodulator1_Multiplier2_SLICE_960 \AMDemodulator1/Multiplier2/SLICE_960 
    ( .D1(\AMDemodulator1/Multiplier2/regb_b_6 ), 
    .C1(\AMDemodulator1/Multiplier2/rega_a_6 ), 
    .B1(\AMDemodulator1/Multiplier2/regb_b_7 ), 
    .A1(\AMDemodulator1/Multiplier2/rega_a_5 ), 
    .D0(\AMDemodulator1/Multiplier2/regb_b_6 ), 
    .C0(\AMDemodulator1/Multiplier2/rega_a_5 ), 
    .B0(\AMDemodulator1/Multiplier2/regb_b_7 ), 
    .A0(\AMDemodulator1/Multiplier2/rega_a_4 ), 
    .FCI(\AMDemodulator1/Multiplier2/mco_16 ), 
    .F0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_3_11 ), 
    .F1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_3_12 ), 
    .FCO(\AMDemodulator1/Multiplier2/mco_17 ));
  AMDemodulator1_Multiplier2_SLICE_961 \AMDemodulator1/Multiplier2/SLICE_961 
    ( .D1(\AMDemodulator1/Multiplier2/regb_b_6 ), 
    .C1(\AMDemodulator1/Multiplier2/rega_a_8 ), 
    .B1(\AMDemodulator1/Multiplier2/regb_b_7 ), 
    .A1(\AMDemodulator1/Multiplier2/rega_a_7 ), 
    .D0(\AMDemodulator1/Multiplier2/regb_b_6 ), 
    .C0(\AMDemodulator1/Multiplier2/rega_a_7 ), 
    .B0(\AMDemodulator1/Multiplier2/regb_b_7 ), 
    .A0(\AMDemodulator1/Multiplier2/rega_a_6 ), 
    .FCI(\AMDemodulator1/Multiplier2/mco_17 ), 
    .F0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_3_13 ), 
    .F1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_3_14 ), 
    .FCO(\AMDemodulator1/Multiplier2/mco_18 ));
  AMDemodulator1_Multiplier2_SLICE_962 \AMDemodulator1/Multiplier2/SLICE_962 
    ( .D1(\AMDemodulator1/Multiplier2/regb_b_6 ), 
    .C1(\AMDemodulator1/Multiplier2/rega_a_10 ), 
    .B1(\AMDemodulator1/Multiplier2/regb_b_7 ), 
    .A1(\AMDemodulator1/Multiplier2/rega_a_9 ), 
    .D0(\AMDemodulator1/Multiplier2/regb_b_6 ), 
    .C0(\AMDemodulator1/Multiplier2/rega_a_9 ), 
    .B0(\AMDemodulator1/Multiplier2/regb_b_7 ), 
    .A0(\AMDemodulator1/Multiplier2/rega_a_8 ), 
    .FCI(\AMDemodulator1/Multiplier2/mco_18 ), 
    .F0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_3_15 ), 
    .F1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_3_16 ), 
    .FCO(\AMDemodulator1/Multiplier2/mco_19 ));
  AMDemodulator1_Multiplier2_SLICE_963 \AMDemodulator1/Multiplier2/SLICE_963 
    ( .D1(\AMDemodulator1/Multiplier2/regb_b_6 ), .B1(VCC_net), 
    .A1(\AMDemodulator1/Multiplier2/Multiplier_0_mult_6_5_n1 ), .D0(VCC_net), 
    .C0(\AMDemodulator1/Multiplier2/Multiplier_0_mult_6_5_n2 ), 
    .B0(\AMDemodulator1/Multiplier2/regb_b_7 ), 
    .A0(\AMDemodulator1/Multiplier2/rega_a_10 ), 
    .FCI(\AMDemodulator1/Multiplier2/mco_19 ), 
    .F0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_3_17 ), 
    .F1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_3_18 ), 
    .FCO(\AMDemodulator1/Multiplier2/mfco_3 ));
  AMDemodulator1_Multiplier2_SLICE_964 \AMDemodulator1/Multiplier2/SLICE_964 
    ( .D1(\AMDemodulator1/Multiplier2/regb_b_8 ), 
    .C1(\AMDemodulator1/Multiplier2/rega_a_2 ), 
    .B1(\AMDemodulator1/Multiplier2/regb_b_9 ), 
    .A1(\AMDemodulator1/Multiplier2/rega_a_1 ), 
    .D0(\AMDemodulator1/Multiplier2/regb_b_8 ), 
    .C0(\AMDemodulator1/Multiplier2/rega_a_1 ), 
    .B0(\AMDemodulator1/Multiplier2/regb_b_9 ), 
    .A0(\AMDemodulator1/Multiplier2/regb_b_0 ), 
    .DI0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_4_9 ), 
    .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier2/Multiplier_0_cin_lr_8 ), 
    .F0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_4_9 ), 
    .Q0(\AMDemodulator1/Multiplier2/f_Multiplier_0_pp_4_9 ), 
    .F1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_4_10 ), 
    .FCO(\AMDemodulator1/Multiplier2/mco_20 ));
  AMDemodulator1_Multiplier2_SLICE_965 \AMDemodulator1/Multiplier2/SLICE_965 
    ( .D1(\AMDemodulator1/Multiplier2/regb_b_8 ), 
    .C1(\AMDemodulator1/Multiplier2/rega_a_4 ), 
    .B1(\AMDemodulator1/Multiplier2/regb_b_9 ), 
    .A1(\AMDemodulator1/Multiplier2/rega_a_3 ), 
    .D0(\AMDemodulator1/Multiplier2/regb_b_8 ), 
    .C0(\AMDemodulator1/Multiplier2/rega_a_3 ), 
    .B0(\AMDemodulator1/Multiplier2/regb_b_9 ), 
    .A0(\AMDemodulator1/Multiplier2/rega_a_2 ), 
    .FCI(\AMDemodulator1/Multiplier2/mco_20 ), 
    .F0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_4_11 ), 
    .F1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_4_12 ), 
    .FCO(\AMDemodulator1/Multiplier2/mco_21 ));
  AMDemodulator1_Multiplier2_SLICE_966 \AMDemodulator1/Multiplier2/SLICE_966 
    ( .D1(\AMDemodulator1/Multiplier2/regb_b_8 ), 
    .C1(\AMDemodulator1/Multiplier2/rega_a_6 ), 
    .B1(\AMDemodulator1/Multiplier2/regb_b_9 ), 
    .A1(\AMDemodulator1/Multiplier2/rega_a_5 ), 
    .D0(\AMDemodulator1/Multiplier2/regb_b_8 ), 
    .C0(\AMDemodulator1/Multiplier2/rega_a_5 ), 
    .B0(\AMDemodulator1/Multiplier2/regb_b_9 ), 
    .A0(\AMDemodulator1/Multiplier2/rega_a_4 ), 
    .FCI(\AMDemodulator1/Multiplier2/mco_21 ), 
    .F0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_4_13 ), 
    .F1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_4_14 ), 
    .FCO(\AMDemodulator1/Multiplier2/mco_22 ));
  AMDemodulator1_Multiplier2_SLICE_967 \AMDemodulator1/Multiplier2/SLICE_967 
    ( .D1(\AMDemodulator1/Multiplier2/regb_b_8 ), 
    .C1(\AMDemodulator1/Multiplier2/rega_a_8 ), 
    .B1(\AMDemodulator1/Multiplier2/regb_b_9 ), 
    .A1(\AMDemodulator1/Multiplier2/rega_a_7 ), 
    .D0(\AMDemodulator1/Multiplier2/regb_b_8 ), 
    .C0(\AMDemodulator1/Multiplier2/rega_a_7 ), 
    .B0(\AMDemodulator1/Multiplier2/regb_b_9 ), 
    .A0(\AMDemodulator1/Multiplier2/rega_a_6 ), 
    .FCI(\AMDemodulator1/Multiplier2/mco_22 ), 
    .F0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_4_15 ), 
    .F1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_4_16 ), 
    .FCO(\AMDemodulator1/Multiplier2/mco_23 ));
  AMDemodulator1_Multiplier2_SLICE_968 \AMDemodulator1/Multiplier2/SLICE_968 
    ( .D1(\AMDemodulator1/Multiplier2/regb_b_8 ), 
    .C1(\AMDemodulator1/Multiplier2/rega_a_10 ), 
    .B1(\AMDemodulator1/Multiplier2/regb_b_9 ), 
    .A1(\AMDemodulator1/Multiplier2/rega_a_9 ), 
    .D0(\AMDemodulator1/Multiplier2/regb_b_8 ), 
    .C0(\AMDemodulator1/Multiplier2/rega_a_9 ), 
    .B0(\AMDemodulator1/Multiplier2/regb_b_9 ), 
    .A0(\AMDemodulator1/Multiplier2/rega_a_8 ), 
    .FCI(\AMDemodulator1/Multiplier2/mco_23 ), 
    .F0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_4_17 ), 
    .F1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_4_18 ), 
    .FCO(\AMDemodulator1/Multiplier2/mco_24 ));
  AMDemodulator1_Multiplier2_SLICE_969 \AMDemodulator1/Multiplier2/SLICE_969 
    ( .D1(\AMDemodulator1/Multiplier2/regb_b_8 ), .B1(VCC_net), 
    .A1(\AMDemodulator1/Multiplier2/Multiplier_0_mult_8_5_n1 ), .D0(VCC_net), 
    .C0(\AMDemodulator1/Multiplier2/Multiplier_0_mult_8_5_n2 ), 
    .B0(\AMDemodulator1/Multiplier2/regb_b_9 ), 
    .A0(\AMDemodulator1/Multiplier2/rega_a_10 ), 
    .FCI(\AMDemodulator1/Multiplier2/mco_24 ), 
    .F0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_4_19 ), 
    .F1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_4_20 ), 
    .FCO(\AMDemodulator1/Multiplier2/mfco_4 ));
  AMDemodulator1_Multiplier2_SLICE_970 \AMDemodulator1/Multiplier2/SLICE_970 
    ( .D1(\AMDemodulator1/Multiplier2/regb_b_10 ), 
    .C1(\AMDemodulator1/Multiplier2/rega_a_2 ), .B1(VCC_net), 
    .A1(\AMDemodulator1/Multiplier2/Multiplier_0_mult_10_0_n1 ), 
    .D0(\AMDemodulator1/Multiplier2/regb_b_10 ), 
    .C0(\AMDemodulator1/Multiplier2/rega_a_1 ), .B0(VCC_net), 
    .A0(\AMDemodulator1/Multiplier2/Multiplier_0_mult_10_0_n0 ), 
    .FCI(\AMDemodulator1/Multiplier2/Multiplier_0_cin_lr_10 ), 
    .F0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_5_11 ), 
    .F1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_5_12 ), 
    .FCO(\AMDemodulator1/Multiplier2/mco_25 ));
  AMDemodulator1_Multiplier2_SLICE_971 \AMDemodulator1/Multiplier2/SLICE_971 
    ( .D1(\AMDemodulator1/Multiplier2/regb_b_10 ), 
    .C1(\AMDemodulator1/Multiplier2/rega_a_4 ), .B1(VCC_net), 
    .A1(\AMDemodulator1/Multiplier2/Multiplier_0_mult_10_1_n1 ), 
    .D0(\AMDemodulator1/Multiplier2/regb_b_10 ), 
    .C0(\AMDemodulator1/Multiplier2/rega_a_3 ), .B0(VCC_net), 
    .A0(\AMDemodulator1/Multiplier2/Multiplier_0_mult_10_1_n0 ), 
    .FCI(\AMDemodulator1/Multiplier2/mco_25 ), 
    .F0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_5_13 ), 
    .F1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_5_14 ), 
    .FCO(\AMDemodulator1/Multiplier2/mco_26 ));
  AMDemodulator1_Multiplier2_SLICE_972 \AMDemodulator1/Multiplier2/SLICE_972 
    ( .D1(\AMDemodulator1/Multiplier2/regb_b_10 ), 
    .C1(\AMDemodulator1/Multiplier2/rega_a_6 ), .B1(VCC_net), 
    .A1(\AMDemodulator1/Multiplier2/Multiplier_0_mult_10_2_n1 ), 
    .D0(\AMDemodulator1/Multiplier2/regb_b_10 ), 
    .C0(\AMDemodulator1/Multiplier2/rega_a_5 ), .B0(VCC_net), 
    .A0(\AMDemodulator1/Multiplier2/Multiplier_0_mult_10_2_n0 ), 
    .FCI(\AMDemodulator1/Multiplier2/mco_26 ), 
    .F0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_5_15 ), 
    .F1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_5_16 ), 
    .FCO(\AMDemodulator1/Multiplier2/mco_27 ));
  AMDemodulator1_Multiplier2_SLICE_973 \AMDemodulator1/Multiplier2/SLICE_973 
    ( .D1(\AMDemodulator1/Multiplier2/regb_b_10 ), 
    .C1(\AMDemodulator1/Multiplier2/rega_a_8 ), .B1(VCC_net), 
    .A1(\AMDemodulator1/Multiplier2/Multiplier_0_mult_10_3_n1 ), 
    .D0(\AMDemodulator1/Multiplier2/regb_b_10 ), 
    .C0(\AMDemodulator1/Multiplier2/rega_a_7 ), .B0(VCC_net), 
    .A0(\AMDemodulator1/Multiplier2/Multiplier_0_mult_10_3_n0 ), 
    .FCI(\AMDemodulator1/Multiplier2/mco_27 ), 
    .F0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_5_17 ), 
    .F1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_5_18 ), 
    .FCO(\AMDemodulator1/Multiplier2/mco_28 ));
  AMDemodulator1_Multiplier2_SLICE_974 \AMDemodulator1/Multiplier2/SLICE_974 
    ( .D1(\AMDemodulator1/Multiplier2/regb_b_10 ), 
    .C1(\AMDemodulator1/Multiplier2/rega_a_10 ), .B1(VCC_net), 
    .A1(\AMDemodulator1/Multiplier2/Multiplier_0_mult_10_4_n1 ), 
    .D0(\AMDemodulator1/Multiplier2/regb_b_10 ), 
    .C0(\AMDemodulator1/Multiplier2/rega_a_9 ), .B0(VCC_net), 
    .A0(\AMDemodulator1/Multiplier2/Multiplier_0_mult_10_4_n0 ), 
    .FCI(\AMDemodulator1/Multiplier2/mco_28 ), 
    .F0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_5_19 ), 
    .F1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_5_20 ), 
    .FCO(\AMDemodulator1/Multiplier2/mco_29 ));
  AMDemodulator1_Multiplier2_SLICE_975 \AMDemodulator1/Multiplier2/SLICE_975 
    ( .D1(\AMDemodulator1/Multiplier2/regb_b_10 ), 
    .B1(\AMDemodulator1/Multiplier2/regb_b_11 ), 
    .A1(\AMDemodulator1/Multiplier2/rega_a_11 ), .D0(VCC_net), 
    .C0(\AMDemodulator1/Multiplier2/Multiplier_0_mult_10_5_n2 ), .B0(VCC_net), 
    .A0(\AMDemodulator1/Multiplier2/Multiplier_0_mult_10_5_n0 ), 
    .FCI(\AMDemodulator1/Multiplier2/mco_29 ), 
    .F0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_5_21 ), 
    .F1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_5_22 ), 
    .FCO(\AMDemodulator1/Multiplier2/mfco_5 ));
  AMDemodulator1_Multiplier1_SLICE_976 \AMDemodulator1/Multiplier1/SLICE_976 
    ( .FCO(\AMDemodulator1/Multiplier1/Multiplier_0_cin_lr_0 ));
  AMDemodulator1_Multiplier1_SLICE_977 \AMDemodulator1/Multiplier1/SLICE_977 
    ( .FCI(\AMDemodulator1/Multiplier1/mfco ), 
    .F0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_0_13 ));
  AMDemodulator1_Multiplier1_SLICE_978 \AMDemodulator1/Multiplier1/SLICE_978 
    ( .FCO(\AMDemodulator1/Multiplier1/Multiplier_0_cin_lr_2 ));
  AMDemodulator1_Multiplier1_SLICE_979 \AMDemodulator1/Multiplier1/SLICE_979 
    ( .FCI(\AMDemodulator1/Multiplier1/mfco_1 ), 
    .F0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_1_15 ));
  AMDemodulator1_Multiplier1_SLICE_980 \AMDemodulator1/Multiplier1/SLICE_980 
    ( .FCO(\AMDemodulator1/Multiplier1/Multiplier_0_cin_lr_4 ));
  AMDemodulator1_Multiplier1_SLICE_981 \AMDemodulator1/Multiplier1/SLICE_981 
    ( .FCI(\AMDemodulator1/Multiplier1/mfco_2 ), 
    .F0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_2_17 ));
  AMDemodulator1_Multiplier1_SLICE_982 \AMDemodulator1/Multiplier1/SLICE_982 
    ( .FCO(\AMDemodulator1/Multiplier1/Multiplier_0_cin_lr_6 ));
  AMDemodulator1_Multiplier1_SLICE_983 \AMDemodulator1/Multiplier1/SLICE_983 
    ( .FCI(\AMDemodulator1/Multiplier1/mfco_3 ), 
    .F0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_3_19 ));
  AMDemodulator1_Multiplier1_SLICE_984 \AMDemodulator1/Multiplier1/SLICE_984 
    ( .FCO(\AMDemodulator1/Multiplier1/Multiplier_0_cin_lr_8 ));
  AMDemodulator1_Multiplier1_SLICE_985 \AMDemodulator1/Multiplier1/SLICE_985 
    ( .FCI(\AMDemodulator1/Multiplier1/mfco_4 ), 
    .F0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_4_21 ));
  AMDemodulator1_Multiplier1_SLICE_986 \AMDemodulator1/Multiplier1/SLICE_986 
    ( .FCO(\AMDemodulator1/Multiplier1/Multiplier_0_cin_lr_10 ));
  AMDemodulator1_Multiplier1_SLICE_987 \AMDemodulator1/Multiplier1/SLICE_987 
    ( .FCI(\AMDemodulator1/Multiplier1/mfco_5 ), 
    .F0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_5_23 ));
  AMDemodulator1_Multiplier1_SLICE_988 \AMDemodulator1/Multiplier1/SLICE_988 
    ( .B1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_1_2 ), 
    .A1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_0_2 ), 
    .DI1(\AMDemodulator1/Multiplier1/s_Multiplier_0_0_2 ), 
    .CLK(CIC1_out_clkSin), 
    .F1(\AMDemodulator1/Multiplier1/s_Multiplier_0_0_2 ), 
    .Q1(\AMDemodulator1/Multiplier1/rego_o_2 ), 
    .FCO(\AMDemodulator1/Multiplier1/co_Multiplier_0_0_1 ));
  AMDemodulator1_Multiplier1_SLICE_989 \AMDemodulator1/Multiplier1/SLICE_989 
    ( .B1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_1_4 ), 
    .A1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_0_4 ), 
    .B0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_1_3 ), 
    .A0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_0_3 ), 
    .DI1(\AMDemodulator1/Multiplier1/s_Multiplier_0_0_4 ), 
    .DI0(\AMDemodulator1/Multiplier1/s_Multiplier_0_0_3 ), 
    .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier1/co_Multiplier_0_0_1 ), 
    .F0(\AMDemodulator1/Multiplier1/s_Multiplier_0_0_3 ), 
    .Q0(\AMDemodulator1/Multiplier1/rego_o_3 ), 
    .F1(\AMDemodulator1/Multiplier1/s_Multiplier_0_0_4 ), 
    .Q1(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_0_4 ), 
    .FCO(\AMDemodulator1/Multiplier1/co_Multiplier_0_0_2 ));
  AMDemodulator1_Multiplier1_SLICE_990 \AMDemodulator1/Multiplier1/SLICE_990 
    ( .B1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_1_6 ), 
    .A1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_0_6 ), 
    .B0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_1_5 ), 
    .A0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_0_5 ), 
    .DI1(\AMDemodulator1/Multiplier1/s_Multiplier_0_0_6 ), 
    .DI0(\AMDemodulator1/Multiplier1/s_Multiplier_0_0_5 ), 
    .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier1/co_Multiplier_0_0_2 ), 
    .F0(\AMDemodulator1/Multiplier1/s_Multiplier_0_0_5 ), 
    .Q0(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_0_5 ), 
    .F1(\AMDemodulator1/Multiplier1/s_Multiplier_0_0_6 ), 
    .Q1(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_0_6 ), 
    .FCO(\AMDemodulator1/Multiplier1/co_Multiplier_0_0_3 ));
  AMDemodulator1_Multiplier1_SLICE_991 \AMDemodulator1/Multiplier1/SLICE_991 
    ( .B1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_1_8 ), 
    .A1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_0_8 ), 
    .B0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_1_7 ), 
    .A0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_0_7 ), 
    .DI1(\AMDemodulator1/Multiplier1/s_Multiplier_0_0_8 ), 
    .DI0(\AMDemodulator1/Multiplier1/s_Multiplier_0_0_7 ), 
    .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier1/co_Multiplier_0_0_3 ), 
    .F0(\AMDemodulator1/Multiplier1/s_Multiplier_0_0_7 ), 
    .Q0(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_0_7 ), 
    .F1(\AMDemodulator1/Multiplier1/s_Multiplier_0_0_8 ), 
    .Q1(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_0_8 ), 
    .FCO(\AMDemodulator1/Multiplier1/co_Multiplier_0_0_4 ));
  AMDemodulator1_Multiplier1_SLICE_992 \AMDemodulator1/Multiplier1/SLICE_992 
    ( .B1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_1_10 ), 
    .A1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_0_10 ), 
    .B0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_1_9 ), 
    .A0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_0_9 ), 
    .DI1(\AMDemodulator1/Multiplier1/s_Multiplier_0_0_10 ), 
    .DI0(\AMDemodulator1/Multiplier1/s_Multiplier_0_0_9 ), 
    .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier1/co_Multiplier_0_0_4 ), 
    .F0(\AMDemodulator1/Multiplier1/s_Multiplier_0_0_9 ), 
    .Q0(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_0_9 ), 
    .F1(\AMDemodulator1/Multiplier1/s_Multiplier_0_0_10 ), 
    .Q1(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_0_10 ), 
    .FCO(\AMDemodulator1/Multiplier1/co_Multiplier_0_0_5 ));
  AMDemodulator1_Multiplier1_SLICE_993 \AMDemodulator1/Multiplier1/SLICE_993 
    ( .B1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_1_12 ), 
    .A1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_0_12 ), 
    .B0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_1_11 ), 
    .A0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_0_11 ), 
    .DI1(\AMDemodulator1/Multiplier1/s_Multiplier_0_0_12 ), 
    .DI0(\AMDemodulator1/Multiplier1/s_Multiplier_0_0_11 ), 
    .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier1/co_Multiplier_0_0_5 ), 
    .F0(\AMDemodulator1/Multiplier1/s_Multiplier_0_0_11 ), 
    .Q0(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_0_11 ), 
    .F1(\AMDemodulator1/Multiplier1/s_Multiplier_0_0_12 ), 
    .Q1(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_0_12 ), 
    .FCO(\AMDemodulator1/Multiplier1/co_Multiplier_0_0_6 ));
  AMDemodulator1_Multiplier1_SLICE_994 \AMDemodulator1/Multiplier1/SLICE_994 
    ( .A1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_1_14 ), 
    .B0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_0_13 ), 
    .A0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_1_13 ), 
    .DI1(\AMDemodulator1/Multiplier1/s_Multiplier_0_0_14 ), 
    .DI0(\AMDemodulator1/Multiplier1/s_Multiplier_0_0_13 ), 
    .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier1/co_Multiplier_0_0_6 ), 
    .F0(\AMDemodulator1/Multiplier1/s_Multiplier_0_0_13 ), 
    .Q0(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_0_13 ), 
    .F1(\AMDemodulator1/Multiplier1/s_Multiplier_0_0_14 ), 
    .Q1(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_0_14 ), 
    .FCO(\AMDemodulator1/Multiplier1/co_Multiplier_0_0_7 ));
  AMDemodulator1_Multiplier1_SLICE_995 \AMDemodulator1/Multiplier1/SLICE_995 
    ( .A0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_1_15 ), 
    .DI1(\AMDemodulator1/Multiplier1/s_Multiplier_0_0_16 ), 
    .DI0(\AMDemodulator1/Multiplier1/s_Multiplier_0_0_15 ), 
    .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier1/co_Multiplier_0_0_7 ), 
    .F0(\AMDemodulator1/Multiplier1/s_Multiplier_0_0_15 ), 
    .Q0(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_0_15 ), 
    .F1(\AMDemodulator1/Multiplier1/s_Multiplier_0_0_16 ), 
    .Q1(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_0_16 ), 
    .FCO(\AMDemodulator1/Multiplier1/co_Multiplier_0_0_8 ));
  AMDemodulator1_Multiplier1_SLICE_996 \AMDemodulator1/Multiplier1/SLICE_996 
    ( .DI0(\AMDemodulator1/Multiplier1/s_Multiplier_0_0_17 ), 
    .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier1/co_Multiplier_0_0_8 ), 
    .F0(\AMDemodulator1/Multiplier1/s_Multiplier_0_0_17 ), 
    .Q0(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_0_17 ));
  AMDemodulator1_Multiplier1_SLICE_997 \AMDemodulator1/Multiplier1/SLICE_997 
    ( .B1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_3_6 ), 
    .A1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_2_6 ), 
    .DI1(\AMDemodulator1/Multiplier1/s_Multiplier_0_1_6 ), 
    .CLK(CIC1_out_clkSin), 
    .F1(\AMDemodulator1/Multiplier1/s_Multiplier_0_1_6 ), 
    .Q1(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_1_6 ), 
    .FCO(\AMDemodulator1/Multiplier1/co_Multiplier_0_1_1 ));
  AMDemodulator1_Multiplier1_SLICE_998 \AMDemodulator1/Multiplier1/SLICE_998 
    ( .B1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_3_8 ), 
    .A1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_2_8 ), 
    .B0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_3_7 ), 
    .A0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_2_7 ), 
    .DI1(\AMDemodulator1/Multiplier1/s_Multiplier_0_1_8 ), 
    .DI0(\AMDemodulator1/Multiplier1/s_Multiplier_0_1_7 ), 
    .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier1/co_Multiplier_0_1_1 ), 
    .F0(\AMDemodulator1/Multiplier1/s_Multiplier_0_1_7 ), 
    .Q0(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_1_7 ), 
    .F1(\AMDemodulator1/Multiplier1/s_Multiplier_0_1_8 ), 
    .Q1(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_1_8 ), 
    .FCO(\AMDemodulator1/Multiplier1/co_Multiplier_0_1_2 ));
  AMDemodulator1_Multiplier1_SLICE_999 \AMDemodulator1/Multiplier1/SLICE_999 
    ( .B1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_3_10 ), 
    .A1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_2_10 ), 
    .B0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_3_9 ), 
    .A0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_2_9 ), 
    .DI1(\AMDemodulator1/Multiplier1/s_Multiplier_0_1_10 ), 
    .DI0(\AMDemodulator1/Multiplier1/s_Multiplier_0_1_9 ), 
    .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier1/co_Multiplier_0_1_2 ), 
    .F0(\AMDemodulator1/Multiplier1/s_Multiplier_0_1_9 ), 
    .Q0(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_1_9 ), 
    .F1(\AMDemodulator1/Multiplier1/s_Multiplier_0_1_10 ), 
    .Q1(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_1_10 ), 
    .FCO(\AMDemodulator1/Multiplier1/co_Multiplier_0_1_3 ));
  AMDemodulator1_Multiplier1_SLICE_1000 
    \AMDemodulator1/Multiplier1/SLICE_1000 ( 
    .B1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_3_12 ), 
    .A1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_2_12 ), 
    .B0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_3_11 ), 
    .A0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_2_11 ), 
    .DI1(\AMDemodulator1/Multiplier1/s_Multiplier_0_1_12 ), 
    .DI0(\AMDemodulator1/Multiplier1/s_Multiplier_0_1_11 ), 
    .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier1/co_Multiplier_0_1_3 ), 
    .F0(\AMDemodulator1/Multiplier1/s_Multiplier_0_1_11 ), 
    .Q0(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_1_11 ), 
    .F1(\AMDemodulator1/Multiplier1/s_Multiplier_0_1_12 ), 
    .Q1(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_1_12 ), 
    .FCO(\AMDemodulator1/Multiplier1/co_Multiplier_0_1_4 ));
  AMDemodulator1_Multiplier1_SLICE_1001 
    \AMDemodulator1/Multiplier1/SLICE_1001 ( 
    .B1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_3_14 ), 
    .A1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_2_14 ), 
    .B0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_3_13 ), 
    .A0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_2_13 ), 
    .DI1(\AMDemodulator1/Multiplier1/s_Multiplier_0_1_14 ), 
    .DI0(\AMDemodulator1/Multiplier1/s_Multiplier_0_1_13 ), 
    .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier1/co_Multiplier_0_1_4 ), 
    .F0(\AMDemodulator1/Multiplier1/s_Multiplier_0_1_13 ), 
    .Q0(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_1_13 ), 
    .F1(\AMDemodulator1/Multiplier1/s_Multiplier_0_1_14 ), 
    .Q1(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_1_14 ), 
    .FCO(\AMDemodulator1/Multiplier1/co_Multiplier_0_1_5 ));
  AMDemodulator1_Multiplier1_SLICE_1002 
    \AMDemodulator1/Multiplier1/SLICE_1002 ( 
    .B1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_3_16 ), 
    .A1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_2_16 ), 
    .B0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_3_15 ), 
    .A0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_2_15 ), 
    .DI1(\AMDemodulator1/Multiplier1/s_Multiplier_0_1_16 ), 
    .DI0(\AMDemodulator1/Multiplier1/s_Multiplier_0_1_15 ), 
    .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier1/co_Multiplier_0_1_5 ), 
    .F0(\AMDemodulator1/Multiplier1/s_Multiplier_0_1_15 ), 
    .Q0(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_1_15 ), 
    .F1(\AMDemodulator1/Multiplier1/s_Multiplier_0_1_16 ), 
    .Q1(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_1_16 ), 
    .FCO(\AMDemodulator1/Multiplier1/co_Multiplier_0_1_6 ));
  AMDemodulator1_Multiplier1_SLICE_1003 
    \AMDemodulator1/Multiplier1/SLICE_1003 ( 
    .A1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_3_18 ), 
    .B0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_2_17 ), 
    .A0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_3_17 ), 
    .DI1(\AMDemodulator1/Multiplier1/s_Multiplier_0_1_18 ), 
    .DI0(\AMDemodulator1/Multiplier1/s_Multiplier_0_1_17 ), 
    .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier1/co_Multiplier_0_1_6 ), 
    .F0(\AMDemodulator1/Multiplier1/s_Multiplier_0_1_17 ), 
    .Q0(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_1_17 ), 
    .F1(\AMDemodulator1/Multiplier1/s_Multiplier_0_1_18 ), 
    .Q1(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_1_18 ), 
    .FCO(\AMDemodulator1/Multiplier1/co_Multiplier_0_1_7 ));
  AMDemodulator1_Multiplier1_SLICE_1004 
    \AMDemodulator1/Multiplier1/SLICE_1004 ( 
    .A0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_3_19 ), 
    .DI1(\AMDemodulator1/Multiplier1/s_Multiplier_0_1_20 ), 
    .DI0(\AMDemodulator1/Multiplier1/s_Multiplier_0_1_19 ), 
    .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier1/co_Multiplier_0_1_7 ), 
    .F0(\AMDemodulator1/Multiplier1/s_Multiplier_0_1_19 ), 
    .Q0(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_1_19 ), 
    .F1(\AMDemodulator1/Multiplier1/s_Multiplier_0_1_20 ), 
    .Q1(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_1_20 ), 
    .FCO(\AMDemodulator1/Multiplier1/co_Multiplier_0_1_8 ));
  AMDemodulator1_Multiplier1_SLICE_1005 
    \AMDemodulator1/Multiplier1/SLICE_1005 ( 
    .DI0(\AMDemodulator1/Multiplier1/s_Multiplier_0_1_21 ), 
    .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier1/co_Multiplier_0_1_8 ), 
    .F0(\AMDemodulator1/Multiplier1/s_Multiplier_0_1_21 ), 
    .Q0(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_1_21 ));
  AMDemodulator1_Multiplier1_SLICE_1006 
    \AMDemodulator1/Multiplier1/SLICE_1006 ( 
    .B1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_5_10 ), 
    .A1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_4_10 ), 
    .DI1(\AMDemodulator1/Multiplier1/s_Multiplier_0_2_10 ), 
    .CLK(CIC1_out_clkSin), 
    .F1(\AMDemodulator1/Multiplier1/s_Multiplier_0_2_10 ), 
    .Q1(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_2_10 ), 
    .FCO(\AMDemodulator1/Multiplier1/co_Multiplier_0_2_1 ));
  AMDemodulator1_Multiplier1_SLICE_1007 
    \AMDemodulator1/Multiplier1/SLICE_1007 ( 
    .B1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_5_12 ), 
    .A1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_4_12 ), 
    .B0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_5_11 ), 
    .A0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_4_11 ), 
    .DI1(\AMDemodulator1/Multiplier1/s_Multiplier_0_2_12 ), 
    .DI0(\AMDemodulator1/Multiplier1/s_Multiplier_0_2_11 ), 
    .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier1/co_Multiplier_0_2_1 ), 
    .F0(\AMDemodulator1/Multiplier1/s_Multiplier_0_2_11 ), 
    .Q0(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_2_11 ), 
    .F1(\AMDemodulator1/Multiplier1/s_Multiplier_0_2_12 ), 
    .Q1(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_2_12 ), 
    .FCO(\AMDemodulator1/Multiplier1/co_Multiplier_0_2_2 ));
  AMDemodulator1_Multiplier1_SLICE_1008 
    \AMDemodulator1/Multiplier1/SLICE_1008 ( 
    .B1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_5_14 ), 
    .A1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_4_14 ), 
    .B0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_5_13 ), 
    .A0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_4_13 ), 
    .DI1(\AMDemodulator1/Multiplier1/s_Multiplier_0_2_14 ), 
    .DI0(\AMDemodulator1/Multiplier1/s_Multiplier_0_2_13 ), 
    .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier1/co_Multiplier_0_2_2 ), 
    .F0(\AMDemodulator1/Multiplier1/s_Multiplier_0_2_13 ), 
    .Q0(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_2_13 ), 
    .F1(\AMDemodulator1/Multiplier1/s_Multiplier_0_2_14 ), 
    .Q1(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_2_14 ), 
    .FCO(\AMDemodulator1/Multiplier1/co_Multiplier_0_2_3 ));
  AMDemodulator1_Multiplier1_SLICE_1009 
    \AMDemodulator1/Multiplier1/SLICE_1009 ( 
    .B1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_5_16 ), 
    .A1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_4_16 ), 
    .B0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_5_15 ), 
    .A0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_4_15 ), 
    .DI1(\AMDemodulator1/Multiplier1/s_Multiplier_0_2_16 ), 
    .DI0(\AMDemodulator1/Multiplier1/s_Multiplier_0_2_15 ), 
    .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier1/co_Multiplier_0_2_3 ), 
    .F0(\AMDemodulator1/Multiplier1/s_Multiplier_0_2_15 ), 
    .Q0(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_2_15 ), 
    .F1(\AMDemodulator1/Multiplier1/s_Multiplier_0_2_16 ), 
    .Q1(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_2_16 ), 
    .FCO(\AMDemodulator1/Multiplier1/co_Multiplier_0_2_4 ));
  AMDemodulator1_Multiplier1_SLICE_1010 
    \AMDemodulator1/Multiplier1/SLICE_1010 ( 
    .B1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_5_18 ), 
    .A1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_4_18 ), 
    .B0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_5_17 ), 
    .A0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_4_17 ), 
    .DI1(\AMDemodulator1/Multiplier1/s_Multiplier_0_2_18 ), 
    .DI0(\AMDemodulator1/Multiplier1/s_Multiplier_0_2_17 ), 
    .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier1/co_Multiplier_0_2_4 ), 
    .F0(\AMDemodulator1/Multiplier1/s_Multiplier_0_2_17 ), 
    .Q0(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_2_17 ), 
    .F1(\AMDemodulator1/Multiplier1/s_Multiplier_0_2_18 ), 
    .Q1(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_2_18 ), 
    .FCO(\AMDemodulator1/Multiplier1/co_Multiplier_0_2_5 ));
  AMDemodulator1_Multiplier1_SLICE_1011 
    \AMDemodulator1/Multiplier1/SLICE_1011 ( 
    .B1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_5_20 ), 
    .A1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_4_20 ), 
    .B0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_5_19 ), 
    .A0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_4_19 ), 
    .DI1(\AMDemodulator1/Multiplier1/s_Multiplier_0_2_20 ), 
    .DI0(\AMDemodulator1/Multiplier1/s_Multiplier_0_2_19 ), 
    .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier1/co_Multiplier_0_2_5 ), 
    .F0(\AMDemodulator1/Multiplier1/s_Multiplier_0_2_19 ), 
    .Q0(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_2_19 ), 
    .F1(\AMDemodulator1/Multiplier1/s_Multiplier_0_2_20 ), 
    .Q1(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_2_20 ), 
    .FCO(\AMDemodulator1/Multiplier1/co_Multiplier_0_2_6 ));
  AMDemodulator1_Multiplier1_SLICE_1012 
    \AMDemodulator1/Multiplier1/SLICE_1012 ( 
    .A1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_5_22 ), 
    .B0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_4_21 ), 
    .A0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_5_21 ), 
    .DI1(\AMDemodulator1/Multiplier1/s_Multiplier_0_2_22 ), 
    .DI0(\AMDemodulator1/Multiplier1/s_Multiplier_0_2_21 ), 
    .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier1/co_Multiplier_0_2_6 ), 
    .F0(\AMDemodulator1/Multiplier1/s_Multiplier_0_2_21 ), 
    .Q0(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_2_21 ), 
    .F1(\AMDemodulator1/Multiplier1/s_Multiplier_0_2_22 ), 
    .Q1(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_2_22 ), 
    .FCO(\AMDemodulator1/Multiplier1/co_Multiplier_0_2_7 ));
  AMDemodulator1_Multiplier1_SLICE_1013 
    \AMDemodulator1/Multiplier1/SLICE_1013 ( 
    .A0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_5_23 ), 
    .DI0(\AMDemodulator1/Multiplier1/s_Multiplier_0_2_23 ), 
    .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier1/co_Multiplier_0_2_7 ), 
    .F0(\AMDemodulator1/Multiplier1/s_Multiplier_0_2_23 ), 
    .Q0(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_2_23 ));
  AMDemodulator1_Multiplier1_SLICE_1014 
    \AMDemodulator1/Multiplier1/SLICE_1014 ( 
    .B1(\AMDemodulator1/Multiplier1/f_Multiplier_0_pp_2_4 ), 
    .A1(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_0_4 ), 
    .DI1(\AMDemodulator1/Multiplier1/rego_o_4 ), .CLK(CIC1_out_clkSin), 
    .F1(\AMDemodulator1/Multiplier1/rego_o_4 ), 
    .Q1(\AMDemodulator1/MultResult1_4 ), 
    .FCO(\AMDemodulator1/Multiplier1/co_Multiplier_0_3_1 ));
  AMDemodulator1_Multiplier1_SLICE_1015 
    \AMDemodulator1/Multiplier1/SLICE_1015 ( 
    .B1(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_1_6 ), 
    .A1(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_0_6 ), 
    .B0(\AMDemodulator1/Multiplier1/f_Multiplier_0_pp_2_5 ), 
    .A0(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_0_5 ), 
    .DI1(\AMDemodulator1/Multiplier1/rego_o_6 ), 
    .DI0(\AMDemodulator1/Multiplier1/rego_o_5 ), .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier1/co_Multiplier_0_3_1 ), 
    .F0(\AMDemodulator1/Multiplier1/rego_o_5 ), 
    .Q0(\AMDemodulator1/MultResult1_5 ), 
    .F1(\AMDemodulator1/Multiplier1/rego_o_6 ), 
    .Q1(\AMDemodulator1/MultResult1_6 ), 
    .FCO(\AMDemodulator1/Multiplier1/co_Multiplier_0_3_2 ));
  AMDemodulator1_Multiplier1_SLICE_1016 
    \AMDemodulator1/Multiplier1/SLICE_1016 ( 
    .B1(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_1_8 ), 
    .A1(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_0_8 ), 
    .B0(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_1_7 ), 
    .A0(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_0_7 ), 
    .DI0(\AMDemodulator1/Multiplier1/rego_o_7 ), .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier1/co_Multiplier_0_3_2 ), 
    .F0(\AMDemodulator1/Multiplier1/rego_o_7 ), 
    .Q0(\AMDemodulator1/MultResult1_7 ), 
    .F1(\AMDemodulator1/Multiplier1/s_Multiplier_0_3_8 ), 
    .FCO(\AMDemodulator1/Multiplier1/co_Multiplier_0_3_3 ));
  AMDemodulator1_Multiplier1_SLICE_1017 
    \AMDemodulator1/Multiplier1/SLICE_1017 ( 
    .B1(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_1_10 ), 
    .A1(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_0_10 ), 
    .B0(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_1_9 ), 
    .A0(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_0_9 ), 
    .FCI(\AMDemodulator1/Multiplier1/co_Multiplier_0_3_3 ), 
    .F0(\AMDemodulator1/Multiplier1/s_Multiplier_0_3_9 ), 
    .F1(\AMDemodulator1/Multiplier1/s_Multiplier_0_3_10 ), 
    .FCO(\AMDemodulator1/Multiplier1/co_Multiplier_0_3_4 ));
  AMDemodulator1_Multiplier1_SLICE_1018 
    \AMDemodulator1/Multiplier1/SLICE_1018 ( 
    .B1(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_1_12 ), 
    .A1(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_0_12 ), 
    .B0(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_1_11 ), 
    .A0(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_0_11 ), 
    .FCI(\AMDemodulator1/Multiplier1/co_Multiplier_0_3_4 ), 
    .F0(\AMDemodulator1/Multiplier1/s_Multiplier_0_3_11 ), 
    .F1(\AMDemodulator1/Multiplier1/s_Multiplier_0_3_12 ), 
    .FCO(\AMDemodulator1/Multiplier1/co_Multiplier_0_3_5 ));
  AMDemodulator1_Multiplier1_SLICE_1019 
    \AMDemodulator1/Multiplier1/SLICE_1019 ( 
    .B1(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_1_14 ), 
    .A1(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_0_14 ), 
    .B0(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_1_13 ), 
    .A0(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_0_13 ), 
    .FCI(\AMDemodulator1/Multiplier1/co_Multiplier_0_3_5 ), 
    .F0(\AMDemodulator1/Multiplier1/s_Multiplier_0_3_13 ), 
    .F1(\AMDemodulator1/Multiplier1/s_Multiplier_0_3_14 ), 
    .FCO(\AMDemodulator1/Multiplier1/co_Multiplier_0_3_6 ));
  AMDemodulator1_Multiplier1_SLICE_1020 
    \AMDemodulator1/Multiplier1/SLICE_1020 ( 
    .B1(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_1_16 ), 
    .A1(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_0_16 ), 
    .B0(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_1_15 ), 
    .A0(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_0_15 ), 
    .FCI(\AMDemodulator1/Multiplier1/co_Multiplier_0_3_6 ), 
    .F0(\AMDemodulator1/Multiplier1/s_Multiplier_0_3_15 ), 
    .F1(\AMDemodulator1/Multiplier1/s_Multiplier_0_3_16 ), 
    .FCO(\AMDemodulator1/Multiplier1/co_Multiplier_0_3_7 ));
  AMDemodulator1_Multiplier1_SLICE_1021 
    \AMDemodulator1/Multiplier1/SLICE_1021 ( 
    .B1(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_1_18 ), 
    .B0(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_1_17 ), 
    .A0(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_0_17 ), 
    .FCI(\AMDemodulator1/Multiplier1/co_Multiplier_0_3_7 ), 
    .F0(\AMDemodulator1/Multiplier1/s_Multiplier_0_3_17 ), 
    .F1(\AMDemodulator1/Multiplier1/s_Multiplier_0_3_18 ), 
    .FCO(\AMDemodulator1/Multiplier1/co_Multiplier_0_3_8 ));
  AMDemodulator1_Multiplier1_SLICE_1022 
    \AMDemodulator1/Multiplier1/SLICE_1022 ( 
    .B1(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_1_20 ), 
    .B0(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_1_19 ), 
    .FCI(\AMDemodulator1/Multiplier1/co_Multiplier_0_3_8 ), 
    .F0(\AMDemodulator1/Multiplier1/s_Multiplier_0_3_19 ), 
    .F1(\AMDemodulator1/Multiplier1/s_Multiplier_0_3_20 ), 
    .FCO(\AMDemodulator1/Multiplier1/co_Multiplier_0_3_9 ));
  AMDemodulator1_Multiplier1_SLICE_1023 
    \AMDemodulator1/Multiplier1/SLICE_1023 ( 
    .B0(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_1_21 ), 
    .FCI(\AMDemodulator1/Multiplier1/co_Multiplier_0_3_9 ), 
    .F0(\AMDemodulator1/Multiplier1/s_Multiplier_0_3_21 ), 
    .F1(\AMDemodulator1/Multiplier1/s_Multiplier_0_3_22 ), 
    .FCO(\AMDemodulator1/Multiplier1/co_Multiplier_0_3_10 ));
  AMDemodulator1_Multiplier1_SLICE_1024 
    \AMDemodulator1/Multiplier1/SLICE_1024 ( 
    .FCI(\AMDemodulator1/Multiplier1/co_Multiplier_0_3_10 ), 
    .F0(\AMDemodulator1/Multiplier1/s_Multiplier_0_3_23 ));
  AMDemodulator1_Multiplier1_SLICE_1025 
    \AMDemodulator1/Multiplier1/SLICE_1025 ( 
    .B1(\AMDemodulator1/Multiplier1/f_Multiplier_0_pp_4_8 ), 
    .A1(\AMDemodulator1/Multiplier1/s_Multiplier_0_3_8 ), 
    .DI1(\AMDemodulator1/Multiplier1/rego_o_8 ), .CLK(CIC1_out_clkSin), 
    .F1(\AMDemodulator1/Multiplier1/rego_o_8 ), 
    .Q1(\AMDemodulator1/MultResult1_8 ), 
    .FCO(\AMDemodulator1/Multiplier1/co_t_Multiplier_0_4_1 ));
  AMDemodulator1_Multiplier1_SLICE_1026 
    \AMDemodulator1/Multiplier1/SLICE_1026 ( 
    .B1(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_2_10 ), 
    .A1(\AMDemodulator1/Multiplier1/s_Multiplier_0_3_10 ), 
    .B0(\AMDemodulator1/Multiplier1/f_Multiplier_0_pp_4_9 ), 
    .A0(\AMDemodulator1/Multiplier1/s_Multiplier_0_3_9 ), 
    .DI1(\AMDemodulator1/Multiplier1/rego_o_10 ), 
    .DI0(\AMDemodulator1/Multiplier1/rego_o_9 ), .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier1/co_t_Multiplier_0_4_1 ), 
    .F0(\AMDemodulator1/Multiplier1/rego_o_9 ), 
    .Q0(\AMDemodulator1/MultResult1_9 ), 
    .F1(\AMDemodulator1/Multiplier1/rego_o_10 ), 
    .Q1(\AMDemodulator1/MultResult1_10 ), 
    .FCO(\AMDemodulator1/Multiplier1/co_t_Multiplier_0_4_2 ));
  AMDemodulator1_Multiplier1_SLICE_1027 
    \AMDemodulator1/Multiplier1/SLICE_1027 ( 
    .B1(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_2_12 ), 
    .A1(\AMDemodulator1/Multiplier1/s_Multiplier_0_3_12 ), 
    .B0(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_2_11 ), 
    .A0(\AMDemodulator1/Multiplier1/s_Multiplier_0_3_11 ), 
    .DI1(\AMDemodulator1/Multiplier1/rego_o_12 ), 
    .DI0(\AMDemodulator1/Multiplier1/rego_o_11 ), .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier1/co_t_Multiplier_0_4_2 ), 
    .F0(\AMDemodulator1/Multiplier1/rego_o_11 ), 
    .Q0(\AMDemodulator1/MultResult1_11 ), 
    .F1(\AMDemodulator1/Multiplier1/rego_o_12 ), 
    .Q1(\AMDemodulator1/MultResult1_12 ), 
    .FCO(\AMDemodulator1/Multiplier1/co_t_Multiplier_0_4_3 ));
  AMDemodulator1_Multiplier1_SLICE_1028 
    \AMDemodulator1/Multiplier1/SLICE_1028 ( 
    .B1(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_2_14 ), 
    .A1(\AMDemodulator1/Multiplier1/s_Multiplier_0_3_14 ), 
    .B0(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_2_13 ), 
    .A0(\AMDemodulator1/Multiplier1/s_Multiplier_0_3_13 ), 
    .DI1(\AMDemodulator1/Multiplier1/rego_o_14 ), 
    .DI0(\AMDemodulator1/Multiplier1/rego_o_13 ), .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier1/co_t_Multiplier_0_4_3 ), 
    .F0(\AMDemodulator1/Multiplier1/rego_o_13 ), 
    .Q0(\AMDemodulator1/MultResult1_13 ), 
    .F1(\AMDemodulator1/Multiplier1/rego_o_14 ), 
    .Q1(\AMDemodulator1/MultResult1_14 ), 
    .FCO(\AMDemodulator1/Multiplier1/co_t_Multiplier_0_4_4 ));
  AMDemodulator1_Multiplier1_SLICE_1029 
    \AMDemodulator1/Multiplier1/SLICE_1029 ( 
    .B1(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_2_16 ), 
    .A1(\AMDemodulator1/Multiplier1/s_Multiplier_0_3_16 ), 
    .B0(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_2_15 ), 
    .A0(\AMDemodulator1/Multiplier1/s_Multiplier_0_3_15 ), 
    .DI1(\AMDemodulator1/Multiplier1/rego_o_16 ), 
    .DI0(\AMDemodulator1/Multiplier1/rego_o_15 ), .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier1/co_t_Multiplier_0_4_4 ), 
    .F0(\AMDemodulator1/Multiplier1/rego_o_15 ), 
    .Q0(\AMDemodulator1/MultResult1_15 ), 
    .F1(\AMDemodulator1/Multiplier1/rego_o_16 ), 
    .Q1(\AMDemodulator1/MultResult1_16 ), 
    .FCO(\AMDemodulator1/Multiplier1/co_t_Multiplier_0_4_5 ));
  AMDemodulator1_Multiplier1_SLICE_1030 
    \AMDemodulator1/Multiplier1/SLICE_1030 ( 
    .B1(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_2_18 ), 
    .A1(\AMDemodulator1/Multiplier1/s_Multiplier_0_3_18 ), 
    .B0(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_2_17 ), 
    .A0(\AMDemodulator1/Multiplier1/s_Multiplier_0_3_17 ), 
    .DI1(\AMDemodulator1/Multiplier1/rego_o_18 ), 
    .DI0(\AMDemodulator1/Multiplier1/rego_o_17 ), .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier1/co_t_Multiplier_0_4_5 ), 
    .F0(\AMDemodulator1/Multiplier1/rego_o_17 ), 
    .Q0(\AMDemodulator1/MultResult1_17 ), 
    .F1(\AMDemodulator1/Multiplier1/rego_o_18 ), 
    .Q1(\AMDemodulator1/MultResult1_18 ), 
    .FCO(\AMDemodulator1/Multiplier1/co_t_Multiplier_0_4_6 ));
  AMDemodulator1_Multiplier1_SLICE_1031 
    \AMDemodulator1/Multiplier1/SLICE_1031 ( 
    .B1(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_2_20 ), 
    .A1(\AMDemodulator1/Multiplier1/s_Multiplier_0_3_20 ), 
    .B0(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_2_19 ), 
    .A0(\AMDemodulator1/Multiplier1/s_Multiplier_0_3_19 ), 
    .DI1(\AMDemodulator1/Multiplier1/rego_o_20 ), 
    .DI0(\AMDemodulator1/Multiplier1/rego_o_19 ), .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier1/co_t_Multiplier_0_4_6 ), 
    .F0(\AMDemodulator1/Multiplier1/rego_o_19 ), 
    .Q0(\AMDemodulator1/MultResult1_19 ), 
    .F1(\AMDemodulator1/Multiplier1/rego_o_20 ), 
    .Q1(\AMDemodulator1/MultResult1_20 ), 
    .FCO(\AMDemodulator1/Multiplier1/co_t_Multiplier_0_4_7 ));
  AMDemodulator1_Multiplier1_SLICE_1032 
    \AMDemodulator1/Multiplier1/SLICE_1032 ( 
    .B1(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_2_22 ), 
    .A1(\AMDemodulator1/Multiplier1/s_Multiplier_0_3_22 ), 
    .B0(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_2_21 ), 
    .A0(\AMDemodulator1/Multiplier1/s_Multiplier_0_3_21 ), 
    .DI1(\AMDemodulator1/Multiplier1/rego_o_22 ), 
    .DI0(\AMDemodulator1/Multiplier1/rego_o_21 ), .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier1/co_t_Multiplier_0_4_7 ), 
    .F0(\AMDemodulator1/Multiplier1/rego_o_21 ), 
    .Q0(\AMDemodulator1/MultResult1_21 ), 
    .F1(\AMDemodulator1/Multiplier1/rego_o_22 ), 
    .Q1(\AMDemodulator1/MultResult1_22 ), 
    .FCO(\AMDemodulator1/Multiplier1/co_t_Multiplier_0_4_8 ));
  AMDemodulator1_Multiplier1_SLICE_1033 
    \AMDemodulator1/Multiplier1/SLICE_1033 ( 
    .B0(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_2_23 ), 
    .A0(\AMDemodulator1/Multiplier1/s_Multiplier_0_3_23 ), 
    .DI0(\AMDemodulator1/Multiplier1/rego_o_23 ), .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier1/co_t_Multiplier_0_4_8 ), 
    .F0(\AMDemodulator1/Multiplier1/rego_o_23 ), 
    .Q0(\AMDemodulator1/MultResult1_23 ));
  AMDemodulator1_Multiplier1_SLICE_1034 
    \AMDemodulator1/Multiplier1/SLICE_1034 ( 
    .D1(\AMDemodulator1/Multiplier1/regb_b_0 ), 
    .C1(\AMDemodulator1/Multiplier1/rega_a_2 ), 
    .B1(\AMDemodulator1/Multiplier1/regb_b_1 ), 
    .A1(\AMDemodulator1/Multiplier1/rega_a_1 ), 
    .D0(\AMDemodulator1/Multiplier1/regb_b_0 ), 
    .C0(\AMDemodulator1/Multiplier1/rega_a_1 ), 
    .B0(\AMDemodulator1/Multiplier1/regb_b_1 ), 
    .A0(\AMDemodulator1/Multiplier1/regb_b_0 ), 
    .DI0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_0_1 ), 
    .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier1/Multiplier_0_cin_lr_0 ), 
    .F0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_0_1 ), 
    .Q0(\AMDemodulator1/Multiplier1/rego_o_1 ), 
    .F1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_0_2 ), 
    .FCO(\AMDemodulator1/Multiplier1/mco ));
  AMDemodulator1_Multiplier1_SLICE_1035 
    \AMDemodulator1/Multiplier1/SLICE_1035 ( 
    .D1(\AMDemodulator1/Multiplier1/regb_b_0 ), 
    .C1(\AMDemodulator1/Multiplier1/rega_a_4 ), 
    .B1(\AMDemodulator1/Multiplier1/regb_b_1 ), 
    .A1(\AMDemodulator1/Multiplier1/rega_a_3 ), 
    .D0(\AMDemodulator1/Multiplier1/regb_b_0 ), 
    .C0(\AMDemodulator1/Multiplier1/rega_a_3 ), 
    .B0(\AMDemodulator1/Multiplier1/regb_b_1 ), 
    .A0(\AMDemodulator1/Multiplier1/rega_a_2 ), 
    .FCI(\AMDemodulator1/Multiplier1/mco ), 
    .F0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_0_3 ), 
    .F1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_0_4 ), 
    .FCO(\AMDemodulator1/Multiplier1/mco_1 ));
  AMDemodulator1_Multiplier1_SLICE_1036 
    \AMDemodulator1/Multiplier1/SLICE_1036 ( 
    .D1(\AMDemodulator1/Multiplier1/regb_b_0 ), 
    .C1(\AMDemodulator1/Multiplier1/rega_a_6 ), 
    .B1(\AMDemodulator1/Multiplier1/regb_b_1 ), 
    .A1(\AMDemodulator1/Multiplier1/rega_a_5 ), 
    .D0(\AMDemodulator1/Multiplier1/regb_b_0 ), 
    .C0(\AMDemodulator1/Multiplier1/rega_a_5 ), 
    .B0(\AMDemodulator1/Multiplier1/regb_b_1 ), 
    .A0(\AMDemodulator1/Multiplier1/rega_a_4 ), 
    .FCI(\AMDemodulator1/Multiplier1/mco_1 ), 
    .F0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_0_5 ), 
    .F1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_0_6 ), 
    .FCO(\AMDemodulator1/Multiplier1/mco_2 ));
  AMDemodulator1_Multiplier1_SLICE_1037 
    \AMDemodulator1/Multiplier1/SLICE_1037 ( 
    .D1(\AMDemodulator1/Multiplier1/regb_b_0 ), 
    .C1(\AMDemodulator1/Multiplier1/rega_a_8 ), 
    .B1(\AMDemodulator1/Multiplier1/regb_b_1 ), 
    .A1(\AMDemodulator1/Multiplier1/rega_a_7 ), 
    .D0(\AMDemodulator1/Multiplier1/regb_b_0 ), 
    .C0(\AMDemodulator1/Multiplier1/rega_a_7 ), 
    .B0(\AMDemodulator1/Multiplier1/regb_b_1 ), 
    .A0(\AMDemodulator1/Multiplier1/rega_a_6 ), 
    .FCI(\AMDemodulator1/Multiplier1/mco_2 ), 
    .F0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_0_7 ), 
    .F1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_0_8 ), 
    .FCO(\AMDemodulator1/Multiplier1/mco_3 ));
  AMDemodulator1_Multiplier1_SLICE_1038 
    \AMDemodulator1/Multiplier1/SLICE_1038 ( 
    .D1(\AMDemodulator1/Multiplier1/regb_b_0 ), 
    .C1(\AMDemodulator1/Multiplier1/rega_a_10 ), 
    .B1(\AMDemodulator1/Multiplier1/regb_b_1 ), 
    .A1(\AMDemodulator1/Multiplier1/rega_a_9 ), 
    .D0(\AMDemodulator1/Multiplier1/regb_b_0 ), 
    .C0(\AMDemodulator1/Multiplier1/rega_a_9 ), 
    .B0(\AMDemodulator1/Multiplier1/regb_b_1 ), 
    .A0(\AMDemodulator1/Multiplier1/rega_a_8 ), 
    .FCI(\AMDemodulator1/Multiplier1/mco_3 ), 
    .F0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_0_9 ), 
    .F1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_0_10 ), 
    .FCO(\AMDemodulator1/Multiplier1/mco_4 ));
  AMDemodulator1_Multiplier1_SLICE_1039 
    \AMDemodulator1/Multiplier1/SLICE_1039 ( .D1(VCC_net), .C1(VCC_net), 
    .B1(VCC_net), .A1(\AMDemodulator1/Multiplier1/Multiplier_0_mult_0_5_n1 ), 
    .D0(VCC_net), .C0(\AMDemodulator1/Multiplier1/Multiplier_0_mult_0_5_n2 ), 
    .B0(\AMDemodulator1/Multiplier1/regb_b_1 ), 
    .A0(\AMDemodulator1/Multiplier1/rega_a_10 ), 
    .FCI(\AMDemodulator1/Multiplier1/mco_4 ), 
    .F0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_0_11 ), 
    .F1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_0_12 ), 
    .FCO(\AMDemodulator1/Multiplier1/mfco ));
  AMDemodulator1_Multiplier1_SLICE_1040 
    \AMDemodulator1/Multiplier1/SLICE_1040 ( 
    .D1(\AMDemodulator1/Multiplier1/regb_b_2 ), 
    .C1(\AMDemodulator1/Multiplier1/rega_a_2 ), 
    .B1(\AMDemodulator1/Multiplier1/regb_b_3 ), 
    .A1(\AMDemodulator1/Multiplier1/rega_a_1 ), 
    .D0(\AMDemodulator1/Multiplier1/regb_b_2 ), 
    .C0(\AMDemodulator1/Multiplier1/rega_a_1 ), 
    .B0(\AMDemodulator1/Multiplier1/regb_b_3 ), 
    .A0(\AMDemodulator1/Multiplier1/regb_b_0 ), 
    .FCI(\AMDemodulator1/Multiplier1/Multiplier_0_cin_lr_2 ), 
    .F0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_1_3 ), 
    .F1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_1_4 ), 
    .FCO(\AMDemodulator1/Multiplier1/mco_5 ));
  AMDemodulator1_Multiplier1_SLICE_1041 
    \AMDemodulator1/Multiplier1/SLICE_1041 ( 
    .D1(\AMDemodulator1/Multiplier1/regb_b_2 ), 
    .C1(\AMDemodulator1/Multiplier1/rega_a_4 ), 
    .B1(\AMDemodulator1/Multiplier1/regb_b_3 ), 
    .A1(\AMDemodulator1/Multiplier1/rega_a_3 ), 
    .D0(\AMDemodulator1/Multiplier1/regb_b_2 ), 
    .C0(\AMDemodulator1/Multiplier1/rega_a_3 ), 
    .B0(\AMDemodulator1/Multiplier1/regb_b_3 ), 
    .A0(\AMDemodulator1/Multiplier1/rega_a_2 ), 
    .FCI(\AMDemodulator1/Multiplier1/mco_5 ), 
    .F0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_1_5 ), 
    .F1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_1_6 ), 
    .FCO(\AMDemodulator1/Multiplier1/mco_6 ));
  AMDemodulator1_Multiplier1_SLICE_1042 
    \AMDemodulator1/Multiplier1/SLICE_1042 ( 
    .D1(\AMDemodulator1/Multiplier1/regb_b_2 ), 
    .C1(\AMDemodulator1/Multiplier1/rega_a_6 ), 
    .B1(\AMDemodulator1/Multiplier1/regb_b_3 ), 
    .A1(\AMDemodulator1/Multiplier1/rega_a_5 ), 
    .D0(\AMDemodulator1/Multiplier1/regb_b_2 ), 
    .C0(\AMDemodulator1/Multiplier1/rega_a_5 ), 
    .B0(\AMDemodulator1/Multiplier1/regb_b_3 ), 
    .A0(\AMDemodulator1/Multiplier1/rega_a_4 ), 
    .FCI(\AMDemodulator1/Multiplier1/mco_6 ), 
    .F0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_1_7 ), 
    .F1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_1_8 ), 
    .FCO(\AMDemodulator1/Multiplier1/mco_7 ));
  AMDemodulator1_Multiplier1_SLICE_1043 
    \AMDemodulator1/Multiplier1/SLICE_1043 ( 
    .D1(\AMDemodulator1/Multiplier1/regb_b_2 ), 
    .C1(\AMDemodulator1/Multiplier1/rega_a_8 ), 
    .B1(\AMDemodulator1/Multiplier1/regb_b_3 ), 
    .A1(\AMDemodulator1/Multiplier1/rega_a_7 ), 
    .D0(\AMDemodulator1/Multiplier1/regb_b_2 ), 
    .C0(\AMDemodulator1/Multiplier1/rega_a_7 ), 
    .B0(\AMDemodulator1/Multiplier1/regb_b_3 ), 
    .A0(\AMDemodulator1/Multiplier1/rega_a_6 ), 
    .FCI(\AMDemodulator1/Multiplier1/mco_7 ), 
    .F0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_1_9 ), 
    .F1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_1_10 ), 
    .FCO(\AMDemodulator1/Multiplier1/mco_8 ));
  AMDemodulator1_Multiplier1_SLICE_1044 
    \AMDemodulator1/Multiplier1/SLICE_1044 ( 
    .D1(\AMDemodulator1/Multiplier1/regb_b_2 ), 
    .C1(\AMDemodulator1/Multiplier1/rega_a_10 ), 
    .B1(\AMDemodulator1/Multiplier1/regb_b_3 ), 
    .A1(\AMDemodulator1/Multiplier1/rega_a_9 ), 
    .D0(\AMDemodulator1/Multiplier1/regb_b_2 ), 
    .C0(\AMDemodulator1/Multiplier1/rega_a_9 ), 
    .B0(\AMDemodulator1/Multiplier1/regb_b_3 ), 
    .A0(\AMDemodulator1/Multiplier1/rega_a_8 ), 
    .FCI(\AMDemodulator1/Multiplier1/mco_8 ), 
    .F0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_1_11 ), 
    .F1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_1_12 ), 
    .FCO(\AMDemodulator1/Multiplier1/mco_9 ));
  AMDemodulator1_Multiplier1_SLICE_1045 
    \AMDemodulator1/Multiplier1/SLICE_1045 ( 
    .D1(\AMDemodulator1/Multiplier1/regb_b_2 ), .B1(VCC_net), 
    .A1(\AMDemodulator1/Multiplier1/Multiplier_0_mult_2_5_n1 ), .D0(VCC_net), 
    .C0(\AMDemodulator1/Multiplier1/Multiplier_0_mult_2_5_n2 ), 
    .B0(\AMDemodulator1/Multiplier1/regb_b_3 ), 
    .A0(\AMDemodulator1/Multiplier1/rega_a_10 ), 
    .FCI(\AMDemodulator1/Multiplier1/mco_9 ), 
    .F0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_1_13 ), 
    .F1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_1_14 ), 
    .FCO(\AMDemodulator1/Multiplier1/mfco_1 ));
  AMDemodulator1_Multiplier1_SLICE_1046 
    \AMDemodulator1/Multiplier1/SLICE_1046 ( 
    .D1(\AMDemodulator1/Multiplier1/regb_b_4 ), 
    .C1(\AMDemodulator1/Multiplier1/rega_a_2 ), 
    .B1(\AMDemodulator1/Multiplier1/regb_b_5 ), 
    .A1(\AMDemodulator1/Multiplier1/rega_a_1 ), 
    .D0(\AMDemodulator1/Multiplier1/regb_b_4 ), 
    .C0(\AMDemodulator1/Multiplier1/rega_a_1 ), 
    .B0(\AMDemodulator1/Multiplier1/regb_b_5 ), 
    .A0(\AMDemodulator1/Multiplier1/regb_b_0 ), 
    .DI0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_2_5 ), 
    .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier1/Multiplier_0_cin_lr_4 ), 
    .F0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_2_5 ), 
    .Q0(\AMDemodulator1/Multiplier1/f_Multiplier_0_pp_2_5 ), 
    .F1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_2_6 ), 
    .FCO(\AMDemodulator1/Multiplier1/mco_10 ));
  AMDemodulator1_Multiplier1_SLICE_1047 
    \AMDemodulator1/Multiplier1/SLICE_1047 ( 
    .D1(\AMDemodulator1/Multiplier1/regb_b_4 ), 
    .C1(\AMDemodulator1/Multiplier1/rega_a_4 ), 
    .B1(\AMDemodulator1/Multiplier1/regb_b_5 ), 
    .A1(\AMDemodulator1/Multiplier1/rega_a_3 ), 
    .D0(\AMDemodulator1/Multiplier1/regb_b_4 ), 
    .C0(\AMDemodulator1/Multiplier1/rega_a_3 ), 
    .B0(\AMDemodulator1/Multiplier1/regb_b_5 ), 
    .A0(\AMDemodulator1/Multiplier1/rega_a_2 ), 
    .FCI(\AMDemodulator1/Multiplier1/mco_10 ), 
    .F0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_2_7 ), 
    .F1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_2_8 ), 
    .FCO(\AMDemodulator1/Multiplier1/mco_11 ));
  AMDemodulator1_Multiplier1_SLICE_1048 
    \AMDemodulator1/Multiplier1/SLICE_1048 ( 
    .D1(\AMDemodulator1/Multiplier1/regb_b_4 ), 
    .C1(\AMDemodulator1/Multiplier1/rega_a_6 ), 
    .B1(\AMDemodulator1/Multiplier1/regb_b_5 ), 
    .A1(\AMDemodulator1/Multiplier1/rega_a_5 ), 
    .D0(\AMDemodulator1/Multiplier1/regb_b_4 ), 
    .C0(\AMDemodulator1/Multiplier1/rega_a_5 ), 
    .B0(\AMDemodulator1/Multiplier1/regb_b_5 ), 
    .A0(\AMDemodulator1/Multiplier1/rega_a_4 ), 
    .FCI(\AMDemodulator1/Multiplier1/mco_11 ), 
    .F0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_2_9 ), 
    .F1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_2_10 ), 
    .FCO(\AMDemodulator1/Multiplier1/mco_12 ));
  AMDemodulator1_Multiplier1_SLICE_1049 
    \AMDemodulator1/Multiplier1/SLICE_1049 ( 
    .D1(\AMDemodulator1/Multiplier1/regb_b_4 ), 
    .C1(\AMDemodulator1/Multiplier1/rega_a_8 ), 
    .B1(\AMDemodulator1/Multiplier1/regb_b_5 ), 
    .A1(\AMDemodulator1/Multiplier1/rega_a_7 ), 
    .D0(\AMDemodulator1/Multiplier1/regb_b_4 ), 
    .C0(\AMDemodulator1/Multiplier1/rega_a_7 ), 
    .B0(\AMDemodulator1/Multiplier1/regb_b_5 ), 
    .A0(\AMDemodulator1/Multiplier1/rega_a_6 ), 
    .FCI(\AMDemodulator1/Multiplier1/mco_12 ), 
    .F0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_2_11 ), 
    .F1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_2_12 ), 
    .FCO(\AMDemodulator1/Multiplier1/mco_13 ));
  AMDemodulator1_Multiplier1_SLICE_1050 
    \AMDemodulator1/Multiplier1/SLICE_1050 ( 
    .D1(\AMDemodulator1/Multiplier1/regb_b_4 ), 
    .C1(\AMDemodulator1/Multiplier1/rega_a_10 ), 
    .B1(\AMDemodulator1/Multiplier1/regb_b_5 ), 
    .A1(\AMDemodulator1/Multiplier1/rega_a_9 ), 
    .D0(\AMDemodulator1/Multiplier1/regb_b_4 ), 
    .C0(\AMDemodulator1/Multiplier1/rega_a_9 ), 
    .B0(\AMDemodulator1/Multiplier1/regb_b_5 ), 
    .A0(\AMDemodulator1/Multiplier1/rega_a_8 ), 
    .FCI(\AMDemodulator1/Multiplier1/mco_13 ), 
    .F0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_2_13 ), 
    .F1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_2_14 ), 
    .FCO(\AMDemodulator1/Multiplier1/mco_14 ));
  AMDemodulator1_Multiplier1_SLICE_1051 
    \AMDemodulator1/Multiplier1/SLICE_1051 ( 
    .D1(\AMDemodulator1/Multiplier1/regb_b_4 ), .B1(VCC_net), 
    .A1(\AMDemodulator1/Multiplier1/Multiplier_0_mult_4_5_n1 ), .D0(VCC_net), 
    .C0(\AMDemodulator1/Multiplier1/Multiplier_0_mult_4_5_n2 ), 
    .B0(\AMDemodulator1/Multiplier1/regb_b_5 ), 
    .A0(\AMDemodulator1/Multiplier1/rega_a_10 ), 
    .FCI(\AMDemodulator1/Multiplier1/mco_14 ), 
    .F0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_2_15 ), 
    .F1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_2_16 ), 
    .FCO(\AMDemodulator1/Multiplier1/mfco_2 ));
  AMDemodulator1_Multiplier1_SLICE_1052 
    \AMDemodulator1/Multiplier1/SLICE_1052 ( 
    .D1(\AMDemodulator1/Multiplier1/regb_b_6 ), 
    .C1(\AMDemodulator1/Multiplier1/rega_a_2 ), 
    .B1(\AMDemodulator1/Multiplier1/regb_b_7 ), 
    .A1(\AMDemodulator1/Multiplier1/rega_a_1 ), 
    .D0(\AMDemodulator1/Multiplier1/regb_b_6 ), 
    .C0(\AMDemodulator1/Multiplier1/rega_a_1 ), 
    .B0(\AMDemodulator1/Multiplier1/regb_b_7 ), 
    .A0(\AMDemodulator1/Multiplier1/regb_b_0 ), 
    .FCI(\AMDemodulator1/Multiplier1/Multiplier_0_cin_lr_6 ), 
    .F0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_3_7 ), 
    .F1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_3_8 ), 
    .FCO(\AMDemodulator1/Multiplier1/mco_15 ));
  AMDemodulator1_Multiplier1_SLICE_1053 
    \AMDemodulator1/Multiplier1/SLICE_1053 ( 
    .D1(\AMDemodulator1/Multiplier1/regb_b_6 ), 
    .C1(\AMDemodulator1/Multiplier1/rega_a_4 ), 
    .B1(\AMDemodulator1/Multiplier1/regb_b_7 ), 
    .A1(\AMDemodulator1/Multiplier1/rega_a_3 ), 
    .D0(\AMDemodulator1/Multiplier1/regb_b_6 ), 
    .C0(\AMDemodulator1/Multiplier1/rega_a_3 ), 
    .B0(\AMDemodulator1/Multiplier1/regb_b_7 ), 
    .A0(\AMDemodulator1/Multiplier1/rega_a_2 ), 
    .FCI(\AMDemodulator1/Multiplier1/mco_15 ), 
    .F0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_3_9 ), 
    .F1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_3_10 ), 
    .FCO(\AMDemodulator1/Multiplier1/mco_16 ));
  AMDemodulator1_Multiplier1_SLICE_1054 
    \AMDemodulator1/Multiplier1/SLICE_1054 ( 
    .D1(\AMDemodulator1/Multiplier1/regb_b_6 ), 
    .C1(\AMDemodulator1/Multiplier1/rega_a_6 ), 
    .B1(\AMDemodulator1/Multiplier1/regb_b_7 ), 
    .A1(\AMDemodulator1/Multiplier1/rega_a_5 ), 
    .D0(\AMDemodulator1/Multiplier1/regb_b_6 ), 
    .C0(\AMDemodulator1/Multiplier1/rega_a_5 ), 
    .B0(\AMDemodulator1/Multiplier1/regb_b_7 ), 
    .A0(\AMDemodulator1/Multiplier1/rega_a_4 ), 
    .FCI(\AMDemodulator1/Multiplier1/mco_16 ), 
    .F0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_3_11 ), 
    .F1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_3_12 ), 
    .FCO(\AMDemodulator1/Multiplier1/mco_17 ));
  AMDemodulator1_Multiplier1_SLICE_1055 
    \AMDemodulator1/Multiplier1/SLICE_1055 ( 
    .D1(\AMDemodulator1/Multiplier1/regb_b_6 ), 
    .C1(\AMDemodulator1/Multiplier1/rega_a_8 ), 
    .B1(\AMDemodulator1/Multiplier1/regb_b_7 ), 
    .A1(\AMDemodulator1/Multiplier1/rega_a_7 ), 
    .D0(\AMDemodulator1/Multiplier1/regb_b_6 ), 
    .C0(\AMDemodulator1/Multiplier1/rega_a_7 ), 
    .B0(\AMDemodulator1/Multiplier1/regb_b_7 ), 
    .A0(\AMDemodulator1/Multiplier1/rega_a_6 ), 
    .FCI(\AMDemodulator1/Multiplier1/mco_17 ), 
    .F0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_3_13 ), 
    .F1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_3_14 ), 
    .FCO(\AMDemodulator1/Multiplier1/mco_18 ));
  AMDemodulator1_Multiplier1_SLICE_1056 
    \AMDemodulator1/Multiplier1/SLICE_1056 ( 
    .D1(\AMDemodulator1/Multiplier1/regb_b_6 ), 
    .C1(\AMDemodulator1/Multiplier1/rega_a_10 ), 
    .B1(\AMDemodulator1/Multiplier1/regb_b_7 ), 
    .A1(\AMDemodulator1/Multiplier1/rega_a_9 ), 
    .D0(\AMDemodulator1/Multiplier1/regb_b_6 ), 
    .C0(\AMDemodulator1/Multiplier1/rega_a_9 ), 
    .B0(\AMDemodulator1/Multiplier1/regb_b_7 ), 
    .A0(\AMDemodulator1/Multiplier1/rega_a_8 ), 
    .FCI(\AMDemodulator1/Multiplier1/mco_18 ), 
    .F0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_3_15 ), 
    .F1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_3_16 ), 
    .FCO(\AMDemodulator1/Multiplier1/mco_19 ));
  AMDemodulator1_Multiplier1_SLICE_1057 
    \AMDemodulator1/Multiplier1/SLICE_1057 ( 
    .D1(\AMDemodulator1/Multiplier1/regb_b_6 ), .B1(VCC_net), 
    .A1(\AMDemodulator1/Multiplier1/Multiplier_0_mult_6_5_n1 ), .D0(VCC_net), 
    .C0(\AMDemodulator1/Multiplier1/Multiplier_0_mult_6_5_n2 ), 
    .B0(\AMDemodulator1/Multiplier1/regb_b_7 ), 
    .A0(\AMDemodulator1/Multiplier1/rega_a_10 ), 
    .FCI(\AMDemodulator1/Multiplier1/mco_19 ), 
    .F0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_3_17 ), 
    .F1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_3_18 ), 
    .FCO(\AMDemodulator1/Multiplier1/mfco_3 ));
  AMDemodulator1_Multiplier1_SLICE_1058 
    \AMDemodulator1/Multiplier1/SLICE_1058 ( 
    .D1(\AMDemodulator1/Multiplier1/regb_b_8 ), 
    .C1(\AMDemodulator1/Multiplier1/rega_a_2 ), 
    .B1(\AMDemodulator1/Multiplier1/regb_b_9 ), 
    .A1(\AMDemodulator1/Multiplier1/rega_a_1 ), 
    .D0(\AMDemodulator1/Multiplier1/regb_b_8 ), 
    .C0(\AMDemodulator1/Multiplier1/rega_a_1 ), 
    .B0(\AMDemodulator1/Multiplier1/regb_b_9 ), 
    .A0(\AMDemodulator1/Multiplier1/regb_b_0 ), 
    .DI0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_4_9 ), 
    .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier1/Multiplier_0_cin_lr_8 ), 
    .F0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_4_9 ), 
    .Q0(\AMDemodulator1/Multiplier1/f_Multiplier_0_pp_4_9 ), 
    .F1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_4_10 ), 
    .FCO(\AMDemodulator1/Multiplier1/mco_20 ));
  AMDemodulator1_Multiplier1_SLICE_1059 
    \AMDemodulator1/Multiplier1/SLICE_1059 ( 
    .D1(\AMDemodulator1/Multiplier1/regb_b_8 ), 
    .C1(\AMDemodulator1/Multiplier1/rega_a_4 ), 
    .B1(\AMDemodulator1/Multiplier1/regb_b_9 ), 
    .A1(\AMDemodulator1/Multiplier1/rega_a_3 ), 
    .D0(\AMDemodulator1/Multiplier1/regb_b_8 ), 
    .C0(\AMDemodulator1/Multiplier1/rega_a_3 ), 
    .B0(\AMDemodulator1/Multiplier1/regb_b_9 ), 
    .A0(\AMDemodulator1/Multiplier1/rega_a_2 ), 
    .FCI(\AMDemodulator1/Multiplier1/mco_20 ), 
    .F0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_4_11 ), 
    .F1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_4_12 ), 
    .FCO(\AMDemodulator1/Multiplier1/mco_21 ));
  AMDemodulator1_Multiplier1_SLICE_1060 
    \AMDemodulator1/Multiplier1/SLICE_1060 ( 
    .D1(\AMDemodulator1/Multiplier1/regb_b_8 ), 
    .C1(\AMDemodulator1/Multiplier1/rega_a_6 ), 
    .B1(\AMDemodulator1/Multiplier1/regb_b_9 ), 
    .A1(\AMDemodulator1/Multiplier1/rega_a_5 ), 
    .D0(\AMDemodulator1/Multiplier1/regb_b_8 ), 
    .C0(\AMDemodulator1/Multiplier1/rega_a_5 ), 
    .B0(\AMDemodulator1/Multiplier1/regb_b_9 ), 
    .A0(\AMDemodulator1/Multiplier1/rega_a_4 ), 
    .FCI(\AMDemodulator1/Multiplier1/mco_21 ), 
    .F0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_4_13 ), 
    .F1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_4_14 ), 
    .FCO(\AMDemodulator1/Multiplier1/mco_22 ));
  AMDemodulator1_Multiplier1_SLICE_1061 
    \AMDemodulator1/Multiplier1/SLICE_1061 ( 
    .D1(\AMDemodulator1/Multiplier1/regb_b_8 ), 
    .C1(\AMDemodulator1/Multiplier1/rega_a_8 ), 
    .B1(\AMDemodulator1/Multiplier1/regb_b_9 ), 
    .A1(\AMDemodulator1/Multiplier1/rega_a_7 ), 
    .D0(\AMDemodulator1/Multiplier1/regb_b_8 ), 
    .C0(\AMDemodulator1/Multiplier1/rega_a_7 ), 
    .B0(\AMDemodulator1/Multiplier1/regb_b_9 ), 
    .A0(\AMDemodulator1/Multiplier1/rega_a_6 ), 
    .FCI(\AMDemodulator1/Multiplier1/mco_22 ), 
    .F0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_4_15 ), 
    .F1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_4_16 ), 
    .FCO(\AMDemodulator1/Multiplier1/mco_23 ));
  AMDemodulator1_Multiplier1_SLICE_1062 
    \AMDemodulator1/Multiplier1/SLICE_1062 ( 
    .D1(\AMDemodulator1/Multiplier1/regb_b_8 ), 
    .C1(\AMDemodulator1/Multiplier1/rega_a_10 ), 
    .B1(\AMDemodulator1/Multiplier1/regb_b_9 ), 
    .A1(\AMDemodulator1/Multiplier1/rega_a_9 ), 
    .D0(\AMDemodulator1/Multiplier1/regb_b_8 ), 
    .C0(\AMDemodulator1/Multiplier1/rega_a_9 ), 
    .B0(\AMDemodulator1/Multiplier1/regb_b_9 ), 
    .A0(\AMDemodulator1/Multiplier1/rega_a_8 ), 
    .FCI(\AMDemodulator1/Multiplier1/mco_23 ), 
    .F0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_4_17 ), 
    .F1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_4_18 ), 
    .FCO(\AMDemodulator1/Multiplier1/mco_24 ));
  AMDemodulator1_Multiplier1_SLICE_1063 
    \AMDemodulator1/Multiplier1/SLICE_1063 ( 
    .D1(\AMDemodulator1/Multiplier1/regb_b_8 ), .B1(VCC_net), 
    .A1(\AMDemodulator1/Multiplier1/Multiplier_0_mult_8_5_n1 ), .D0(VCC_net), 
    .C0(\AMDemodulator1/Multiplier1/Multiplier_0_mult_8_5_n2 ), 
    .B0(\AMDemodulator1/Multiplier1/regb_b_9 ), 
    .A0(\AMDemodulator1/Multiplier1/rega_a_10 ), 
    .FCI(\AMDemodulator1/Multiplier1/mco_24 ), 
    .F0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_4_19 ), 
    .F1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_4_20 ), 
    .FCO(\AMDemodulator1/Multiplier1/mfco_4 ));
  AMDemodulator1_Multiplier1_SLICE_1064 
    \AMDemodulator1/Multiplier1/SLICE_1064 ( 
    .D1(\AMDemodulator1/Multiplier1/regb_b_10 ), 
    .C1(\AMDemodulator1/Multiplier1/rega_a_2 ), .B1(VCC_net), 
    .A1(\AMDemodulator1/Multiplier1/Multiplier_0_mult_10_0_n1 ), 
    .D0(\AMDemodulator1/Multiplier1/regb_b_10 ), 
    .C0(\AMDemodulator1/Multiplier1/rega_a_1 ), .B0(VCC_net), 
    .A0(\AMDemodulator1/Multiplier1/Multiplier_0_mult_10_0_n0 ), 
    .FCI(\AMDemodulator1/Multiplier1/Multiplier_0_cin_lr_10 ), 
    .F0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_5_11 ), 
    .F1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_5_12 ), 
    .FCO(\AMDemodulator1/Multiplier1/mco_25 ));
  AMDemodulator1_Multiplier1_SLICE_1065 
    \AMDemodulator1/Multiplier1/SLICE_1065 ( 
    .D1(\AMDemodulator1/Multiplier1/regb_b_10 ), 
    .C1(\AMDemodulator1/Multiplier1/rega_a_4 ), .B1(VCC_net), 
    .A1(\AMDemodulator1/Multiplier1/Multiplier_0_mult_10_1_n1 ), 
    .D0(\AMDemodulator1/Multiplier1/regb_b_10 ), 
    .C0(\AMDemodulator1/Multiplier1/rega_a_3 ), .B0(VCC_net), 
    .A0(\AMDemodulator1/Multiplier1/Multiplier_0_mult_10_1_n0 ), 
    .FCI(\AMDemodulator1/Multiplier1/mco_25 ), 
    .F0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_5_13 ), 
    .F1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_5_14 ), 
    .FCO(\AMDemodulator1/Multiplier1/mco_26 ));
  AMDemodulator1_Multiplier1_SLICE_1066 
    \AMDemodulator1/Multiplier1/SLICE_1066 ( 
    .D1(\AMDemodulator1/Multiplier1/regb_b_10 ), 
    .C1(\AMDemodulator1/Multiplier1/rega_a_6 ), .B1(VCC_net), 
    .A1(\AMDemodulator1/Multiplier1/Multiplier_0_mult_10_2_n1 ), 
    .D0(\AMDemodulator1/Multiplier1/regb_b_10 ), 
    .C0(\AMDemodulator1/Multiplier1/rega_a_5 ), .B0(VCC_net), 
    .A0(\AMDemodulator1/Multiplier1/Multiplier_0_mult_10_2_n0 ), 
    .FCI(\AMDemodulator1/Multiplier1/mco_26 ), 
    .F0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_5_15 ), 
    .F1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_5_16 ), 
    .FCO(\AMDemodulator1/Multiplier1/mco_27 ));
  AMDemodulator1_Multiplier1_SLICE_1067 
    \AMDemodulator1/Multiplier1/SLICE_1067 ( 
    .D1(\AMDemodulator1/Multiplier1/regb_b_10 ), 
    .C1(\AMDemodulator1/Multiplier1/rega_a_8 ), .B1(VCC_net), 
    .A1(\AMDemodulator1/Multiplier1/Multiplier_0_mult_10_3_n1 ), 
    .D0(\AMDemodulator1/Multiplier1/regb_b_10 ), 
    .C0(\AMDemodulator1/Multiplier1/rega_a_7 ), .B0(VCC_net), 
    .A0(\AMDemodulator1/Multiplier1/Multiplier_0_mult_10_3_n0 ), 
    .FCI(\AMDemodulator1/Multiplier1/mco_27 ), 
    .F0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_5_17 ), 
    .F1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_5_18 ), 
    .FCO(\AMDemodulator1/Multiplier1/mco_28 ));
  AMDemodulator1_Multiplier1_SLICE_1068 
    \AMDemodulator1/Multiplier1/SLICE_1068 ( 
    .D1(\AMDemodulator1/Multiplier1/regb_b_10 ), 
    .C1(\AMDemodulator1/Multiplier1/rega_a_10 ), .B1(VCC_net), 
    .A1(\AMDemodulator1/Multiplier1/Multiplier_0_mult_10_4_n1 ), 
    .D0(\AMDemodulator1/Multiplier1/regb_b_10 ), 
    .C0(\AMDemodulator1/Multiplier1/rega_a_9 ), .B0(VCC_net), 
    .A0(\AMDemodulator1/Multiplier1/Multiplier_0_mult_10_4_n0 ), 
    .FCI(\AMDemodulator1/Multiplier1/mco_28 ), 
    .F0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_5_19 ), 
    .F1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_5_20 ), 
    .FCO(\AMDemodulator1/Multiplier1/mco_29 ));
  AMDemodulator1_Multiplier1_SLICE_1069 
    \AMDemodulator1/Multiplier1/SLICE_1069 ( 
    .D1(\AMDemodulator1/Multiplier1/regb_b_10 ), 
    .B1(\AMDemodulator1/Multiplier1/regb_b_11 ), 
    .A1(\AMDemodulator1/Multiplier1/rega_a_11 ), .D0(VCC_net), 
    .C0(\AMDemodulator1/Multiplier1/Multiplier_0_mult_10_5_n2 ), .B0(VCC_net), 
    .A0(\AMDemodulator1/Multiplier1/Multiplier_0_mult_10_5_n0 ), 
    .FCI(\AMDemodulator1/Multiplier1/mco_29 ), 
    .F0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_5_21 ), 
    .F1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_5_22 ), 
    .FCO(\AMDemodulator1/Multiplier1/mfco_5 ));
  CIC1Cos_SLICE_1070 \CIC1Cos/SLICE_1070 ( .B1(\CIC1Cos/d2_41 ), 
    .A1(\CIC1Cos/d1_41 ), .B0(\CIC1Cos/d2_40 ), .A0(\CIC1Cos/d1_40 ), 
    .FCI(\CIC1Cos/n11735 ), .F0(\CIC1Cos/n5241 ), .F1(\CIC1Cos/n5240 ), 
    .FCO(\CIC1Cos/n11736 ));
  CIC1Cos_SLICE_1071 \CIC1Cos/SLICE_1071 ( .B1(\CIC1Cos/d2_39 ), 
    .A1(\CIC1Cos/d1_39 ), .B0(\CIC1Cos/d2_38 ), .A0(\CIC1Cos/d1_38 ), 
    .FCI(\CIC1Cos/n11734 ), .F0(\CIC1Cos/n5243 ), .F1(\CIC1Cos/n5242 ), 
    .FCO(\CIC1Cos/n11735 ));
  CIC1Cos_SLICE_1072 \CIC1Cos/SLICE_1072 ( .B1(\CIC1Cos/d2_37 ), 
    .A1(\CIC1Cos/d1_37 ), .B0(\CIC1Cos/d2_36 ), .A0(\CIC1Cos/d1_36 ), 
    .F1(\CIC1Cos/n5244 ), .FCO(\CIC1Cos/n11734 ));
  CIC1Cos_SLICE_1073 \CIC1Cos/SLICE_1073 ( .D1(\CIC1Cos/d4_49 ), 
    .C1(\CIC1Cos/n5688 ), .B1(\CIC1Cos/n5664 ), .A1(\CIC1Cos/d5_49 ), 
    .D0(\CIC1Cos/d4_48 ), .C0(\CIC1Cos/n5689 ), .B0(\CIC1Cos/n5664 ), 
    .A0(\CIC1Cos/d5_48 ), .DI1(\CIC1Cos/d5_71_N_706_49 ), 
    .DI0(\CIC1Cos/d5_71_N_706_48 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11597 ), 
    .F0(\CIC1Cos/d5_71_N_706_48 ), .Q0(\CIC1Cos/d5_48 ), 
    .F1(\CIC1Cos/d5_71_N_706_49 ), .Q1(\CIC1Cos/d5_49 ), 
    .FCO(\CIC1Cos/n11598 ));
  CIC1Cos_SLICE_1074 \CIC1Cos/SLICE_1074 ( .A1(\CIC1Cos/n5056 ), 
    .FCO(\CIC1Cos/n11755 ));
  CIC1Cos_SLICE_1075 \CIC1Cos/SLICE_1075 ( .B1(\CIC1Cos/d2_71 ), 
    .A1(\CIC1Cos/d1_71 ), .B0(\CIC1Cos/d2_70 ), .A0(\CIC1Cos/d1_70 ), 
    .FCI(\CIC1Cos/n11750 ), .F0(\CIC1Cos/n5211 ), .F1(\CIC1Cos/n5210 ));
  CIC1Cos_SLICE_1076 \CIC1Cos/SLICE_1076 ( .B1(\CIC1Cos/d2_67 ), 
    .A1(\CIC1Cos/d1_67 ), .B0(\CIC1Cos/d2_66 ), .A0(\CIC1Cos/d1_66 ), 
    .FCI(\CIC1Cos/n11748 ), .F0(\CIC1Cos/n5215 ), .F1(\CIC1Cos/n5214 ), 
    .FCO(\CIC1Cos/n11749 ));
  CIC1Cos_SLICE_1077 \CIC1Cos/SLICE_1077 ( .B1(\CIC1Cos/d2_69 ), 
    .A1(\CIC1Cos/d1_69 ), .B0(\CIC1Cos/d2_68 ), .A0(\CIC1Cos/d1_68 ), 
    .FCI(\CIC1Cos/n11749 ), .F0(\CIC1Cos/n5213 ), .F1(\CIC1Cos/n5212 ), 
    .FCO(\CIC1Cos/n11750 ));
  CIC1Cos_SLICE_1078 \CIC1Cos/SLICE_1078 ( .B1(\CIC1Cos/d2_55 ), 
    .A1(\CIC1Cos/d1_55 ), .B0(\CIC1Cos/d2_54 ), .A0(\CIC1Cos/d1_54 ), 
    .FCI(\CIC1Cos/n11742 ), .F0(\CIC1Cos/n5227 ), .F1(\CIC1Cos/n5226 ), 
    .FCO(\CIC1Cos/n11743 ));
  CIC1Cos_SLICE_1079 \CIC1Cos/SLICE_1079 ( .D1(\CIC1Cos/d4_55 ), 
    .C1(\CIC1Cos/n5682 ), .B1(\CIC1Cos/n5664 ), .A1(\CIC1Cos/d5_55 ), 
    .D0(\CIC1Cos/d4_54 ), .C0(\CIC1Cos/n5683 ), .B0(\CIC1Cos/n5664 ), 
    .A0(\CIC1Cos/d5_54 ), .DI1(\CIC1Cos/d5_71_N_706_55 ), 
    .DI0(\CIC1Cos/d5_71_N_706_54 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11600 ), 
    .F0(\CIC1Cos/d5_71_N_706_54 ), .Q0(\CIC1Cos/d5_54 ), 
    .F1(\CIC1Cos/d5_71_N_706_55 ), .Q1(\CIC1Cos/d5_55 ), 
    .FCO(\CIC1Cos/n11601 ));
  CIC1Cos_SLICE_1080 \CIC1Cos/SLICE_1080 ( .B1(\CIC1Cos/d2_53 ), 
    .A1(\CIC1Cos/d1_53 ), .B0(\CIC1Cos/d2_52 ), .A0(\CIC1Cos/d1_52 ), 
    .FCI(\CIC1Cos/n11741 ), .F0(\CIC1Cos/n5229 ), .F1(\CIC1Cos/n5228 ), 
    .FCO(\CIC1Cos/n11742 ));
  CIC1Cos_SLICE_1081 \CIC1Cos/SLICE_1081 ( .B1(\CIC1Cos/d2_51 ), 
    .A1(\CIC1Cos/d1_51 ), .B0(\CIC1Cos/d2_50 ), .A0(\CIC1Cos/d1_50 ), 
    .FCI(\CIC1Cos/n11740 ), .F0(\CIC1Cos/n5231 ), .F1(\CIC1Cos/n5230 ), 
    .FCO(\CIC1Cos/n11741 ));
  CIC1Cos_SLICE_1082 \CIC1Cos/SLICE_1082 ( .B1(\CIC1Cos/d2_49 ), 
    .A1(\CIC1Cos/d1_49 ), .B0(\CIC1Cos/d2_48 ), .A0(\CIC1Cos/d1_48 ), 
    .FCI(\CIC1Cos/n11739 ), .F0(\CIC1Cos/n5233 ), .F1(\CIC1Cos/n5232 ), 
    .FCO(\CIC1Cos/n11740 ));
  CIC1Cos_SLICE_1083 \CIC1Cos/SLICE_1083 ( .B1(\CIC1Cos/d2_47 ), 
    .A1(\CIC1Cos/d1_47 ), .B0(\CIC1Cos/d2_46 ), .A0(\CIC1Cos/d1_46 ), 
    .FCI(\CIC1Cos/n11738 ), .F0(\CIC1Cos/n5235 ), .F1(\CIC1Cos/n5234 ), 
    .FCO(\CIC1Cos/n11739 ));
  CIC1Cos_SLICE_1084 \CIC1Cos/SLICE_1084 ( .A1(\CIC1Cos/n5360 ), 
    .FCO(\CIC1Cos/n11673 ));
  CIC1Cos_SLICE_1085 \CIC1Cos/SLICE_1085 ( .B1(\CIC1Cos/d2_45 ), 
    .A1(\CIC1Cos/d1_45 ), .B0(\CIC1Cos/d2_44 ), .A0(\CIC1Cos/d1_44 ), 
    .FCI(\CIC1Cos/n11737 ), .F0(\CIC1Cos/n5237 ), .F1(\CIC1Cos/n5236 ), 
    .FCO(\CIC1Cos/n11738 ));
  CIC1Cos_SLICE_1086 \CIC1Cos/SLICE_1086 ( .B1(\CIC1Cos/d4_71 ), 
    .A1(\CIC1Cos/d3_71 ), .B0(\CIC1Cos/d4_70 ), .A0(\CIC1Cos/d3_70 ), 
    .FCI(\CIC1Cos/n11668 ), .F0(\CIC1Cos/n5515 ), .F1(\CIC1Cos/n5514 ));
  CIC1Cos_SLICE_1087 \CIC1Cos/SLICE_1087 ( .B1(\CIC1Cos/d2_43 ), 
    .A1(\CIC1Cos/d1_43 ), .B0(\CIC1Cos/d2_42 ), .A0(\CIC1Cos/d1_42 ), 
    .FCI(\CIC1Cos/n11736 ), .F0(\CIC1Cos/n5239 ), .F1(\CIC1Cos/n5238 ), 
    .FCO(\CIC1Cos/n11737 ));
  CIC1Cos_SLICE_1088 \CIC1Cos/SLICE_1088 ( .D1(\CIC1Cos/d1_65 ), 
    .C1(\CIC1Cos/n5216 ), .B1(\CIC1Cos/n5208 ), .A1(\CIC1Cos/d2_65 ), 
    .D0(\CIC1Cos/d1_64 ), .C0(\CIC1Cos/n5217 ), .B0(\CIC1Cos/n5208 ), 
    .A0(\CIC1Cos/d2_64 ), .DI1(\CIC1Cos/d2_71_N_490_65 ), 
    .DI0(\CIC1Cos/d2_71_N_490_64 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11728 ), 
    .F0(\CIC1Cos/d2_71_N_490_64 ), .Q0(\CIC1Cos/d2_64 ), 
    .F1(\CIC1Cos/d2_71_N_490_65 ), .Q1(\CIC1Cos/d2_65 ), 
    .FCO(\CIC1Cos/n11729 ));
  CIC1Cos_SLICE_1089 \CIC1Cos/SLICE_1089 ( .D1(\CIC1Cos/d4_47 ), 
    .C1(\CIC1Cos/n5690 ), .B1(\CIC1Cos/n5664 ), .A1(\CIC1Cos/d5_47 ), 
    .D0(\CIC1Cos/d4_46 ), .C0(\CIC1Cos/n5691 ), .B0(\CIC1Cos/n5664 ), 
    .A0(\CIC1Cos/d5_46 ), .DI1(\CIC1Cos/d5_71_N_706_47 ), 
    .DI0(\CIC1Cos/d5_71_N_706_46 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11596 ), 
    .F0(\CIC1Cos/d5_71_N_706_46 ), .Q0(\CIC1Cos/d5_46 ), 
    .F1(\CIC1Cos/d5_71_N_706_47 ), .Q1(\CIC1Cos/d5_47 ), 
    .FCO(\CIC1Cos/n11597 ));
  CIC1Cos_SLICE_1090 \CIC1Cos/SLICE_1090 ( .D1(\CIC1Cos/d4_45 ), 
    .C1(\CIC1Cos/n5692 ), .B1(\CIC1Cos/n5664 ), .A1(\CIC1Cos/d5_45 ), 
    .D0(\CIC1Cos/d4_44 ), .C0(\CIC1Cos/n5693 ), .B0(\CIC1Cos/n5664 ), 
    .A0(\CIC1Cos/d5_44 ), .DI1(\CIC1Cos/d5_71_N_706_45 ), 
    .DI0(\CIC1Cos/d5_71_N_706_44 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11595 ), 
    .F0(\CIC1Cos/d5_71_N_706_44 ), .Q0(\CIC1Cos/d5_44 ), 
    .F1(\CIC1Cos/d5_71_N_706_45 ), .Q1(\CIC1Cos/d5_45 ), 
    .FCO(\CIC1Cos/n11596 ));
  CIC1Cos_SLICE_1091 \CIC1Cos/SLICE_1091 ( .D1(\CIC1Cos/d4_71 ), 
    .C1(\CIC1Cos/n5666 ), .B1(\CIC1Cos/n5664 ), .A1(\CIC1Cos/d5_71 ), 
    .D0(\CIC1Cos/d4_70 ), .C0(\CIC1Cos/n5667 ), .B0(\CIC1Cos/n5664 ), 
    .A0(\CIC1Cos/d5_70 ), .DI1(\CIC1Cos/d5_71_N_706_71 ), 
    .DI0(\CIC1Cos/d5_71_N_706_70 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11608 ), 
    .F0(\CIC1Cos/d5_71_N_706_70 ), .Q0(\CIC1Cos/d5_70 ), 
    .F1(\CIC1Cos/d5_71_N_706_71 ), .Q1(\CIC1Cos/d5_71 ));
  CIC1Cos_SLICE_1092 \CIC1Cos/SLICE_1092 ( .B1(\CIC1Cos/d4_69 ), 
    .A1(\CIC1Cos/d3_69 ), .B0(\CIC1Cos/d4_68 ), .A0(\CIC1Cos/d3_68 ), 
    .FCI(\CIC1Cos/n11667 ), .F0(\CIC1Cos/n5517 ), .F1(\CIC1Cos/n5516 ), 
    .FCO(\CIC1Cos/n11668 ));
  CIC1Cos_SLICE_1093 \CIC1Cos/SLICE_1093 ( .D1(\CIC1Cos/d1_39 ), 
    .C1(\CIC1Cos/n5242 ), .B1(\CIC1Cos/n5208 ), .A1(\CIC1Cos/d2_39 ), 
    .D0(\CIC1Cos/d1_38 ), .C0(\CIC1Cos/n5243 ), .B0(\CIC1Cos/n5208 ), 
    .A0(\CIC1Cos/d2_38 ), .DI1(\CIC1Cos/d2_71_N_490_39 ), 
    .DI0(\CIC1Cos/d2_71_N_490_38 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11715 ), 
    .F0(\CIC1Cos/d2_71_N_490_38 ), .Q0(\CIC1Cos/d2_38 ), 
    .F1(\CIC1Cos/d2_71_N_490_39 ), .Q1(\CIC1Cos/d2_39 ), 
    .FCO(\CIC1Cos/n11716 ));
  CIC1Cos_SLICE_1094 \CIC1Cos/SLICE_1094 ( .D1(\CIC1Cos/d1_37 ), 
    .C1(\CIC1Cos/n5244 ), .B1(\CIC1Cos/n5208 ), .A1(\CIC1Cos/d2_37 ), 
    .D0(\CIC1Cos/d1_36 ), .C0(\CIC1Cos/n5245 ), .B0(\CIC1Cos/n5208 ), 
    .A0(\CIC1Cos/d2_36 ), .DI1(\CIC1Cos/d2_71_N_490_37 ), 
    .DI0(\CIC1Cos/d2_71_N_490_36 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11714 ), 
    .F0(\CIC1Cos/d2_71_N_490_36 ), .Q0(\CIC1Cos/d2_36 ), 
    .F1(\CIC1Cos/d2_71_N_490_37 ), .Q1(\CIC1Cos/d2_37 ), 
    .FCO(\CIC1Cos/n11715 ));
  CIC1Cos_SLICE_1095 \CIC1Cos/SLICE_1095 ( .B1(\CIC1Cos/d3_71 ), 
    .A1(\CIC1Cos/d2_71 ), .B0(\CIC1Cos/d3_70 ), .A0(\CIC1Cos/d2_70 ), 
    .FCI(\CIC1Cos/n11709 ), .F0(\CIC1Cos/n5363 ), .F1(\CIC1Cos/n5362 ));
  CIC1Cos_SLICE_1096 \CIC1Cos/SLICE_1096 ( .B1(\CIC1Cos/d3_65 ), 
    .A1(\CIC1Cos/d2_65 ), .B0(\CIC1Cos/d3_64 ), .A0(\CIC1Cos/d2_64 ), 
    .FCI(\CIC1Cos/n11706 ), .F0(\CIC1Cos/n5369 ), .F1(\CIC1Cos/n5368 ), 
    .FCO(\CIC1Cos/n11707 ));
  CIC1Cos_SLICE_1097 \CIC1Cos/SLICE_1097 ( .B1(\CIC1Cos/d3_69 ), 
    .A1(\CIC1Cos/d2_69 ), .B0(\CIC1Cos/d3_68 ), .A0(\CIC1Cos/d2_68 ), 
    .FCI(\CIC1Cos/n11708 ), .F0(\CIC1Cos/n5365 ), .F1(\CIC1Cos/n5364 ), 
    .FCO(\CIC1Cos/n11709 ));
  CIC1Cos_SLICE_1098 \CIC1Cos/SLICE_1098 ( .A1(\CIC1Cos/n5208 ), 
    .FCO(\CIC1Cos/n11714 ));
  CIC1Cos_SLICE_1099 \CIC1Cos/SLICE_1099 ( .B1(\CIC1Cos/d3_67 ), 
    .A1(\CIC1Cos/d2_67 ), .B0(\CIC1Cos/d3_66 ), .A0(\CIC1Cos/d2_66 ), 
    .FCI(\CIC1Cos/n11707 ), .F0(\CIC1Cos/n5367 ), .F1(\CIC1Cos/n5366 ), 
    .FCO(\CIC1Cos/n11708 ));
  CIC1Cos_SLICE_1100 \CIC1Cos/SLICE_1100 ( .B1(\CIC1Cos/d3_63 ), 
    .A1(\CIC1Cos/d2_63 ), .B0(\CIC1Cos/d3_62 ), .A0(\CIC1Cos/d2_62 ), 
    .FCI(\CIC1Cos/n11705 ), .F0(\CIC1Cos/n5371 ), .F1(\CIC1Cos/n5370 ), 
    .FCO(\CIC1Cos/n11706 ));
  CIC1Cos_SLICE_1101 \CIC1Cos/SLICE_1101 ( .B1(\CIC1Cos/d4_67 ), 
    .A1(\CIC1Cos/d3_67 ), .B0(\CIC1Cos/d4_66 ), .A0(\CIC1Cos/d3_66 ), 
    .FCI(\CIC1Cos/n11666 ), .F0(\CIC1Cos/n5519 ), .F1(\CIC1Cos/n5518 ), 
    .FCO(\CIC1Cos/n11667 ));
  CIC1Cos_SLICE_1102 \CIC1Cos/SLICE_1102 ( .B1(\CIC1Cos/d4_65 ), 
    .A1(\CIC1Cos/d3_65 ), .B0(\CIC1Cos/d4_64 ), .A0(\CIC1Cos/d3_64 ), 
    .FCI(\CIC1Cos/n11665 ), .F0(\CIC1Cos/n5521 ), .F1(\CIC1Cos/n5520 ), 
    .FCO(\CIC1Cos/n11666 ));
  CIC1Cos_SLICE_1103 \CIC1Cos/SLICE_1103 ( .D1(\CIC1Cos/d4_69 ), 
    .C1(\CIC1Cos/n5668 ), .B1(\CIC1Cos/n5664 ), .A1(\CIC1Cos/d5_69 ), 
    .D0(\CIC1Cos/d4_68 ), .C0(\CIC1Cos/n5669 ), .B0(\CIC1Cos/n5664 ), 
    .A0(\CIC1Cos/d5_68 ), .DI1(\CIC1Cos/d5_71_N_706_69 ), 
    .DI0(\CIC1Cos/d5_71_N_706_68 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11607 ), 
    .F0(\CIC1Cos/d5_71_N_706_68 ), .Q0(\CIC1Cos/d5_68 ), 
    .F1(\CIC1Cos/d5_71_N_706_69 ), .Q1(\CIC1Cos/d5_69 ), 
    .FCO(\CIC1Cos/n11608 ));
  CIC1Cos_SLICE_1104 \CIC1Cos/SLICE_1104 ( .B0(\CIC1Cos/d_d_tmp_71 ), 
    .A0(\CIC1Cos/d_tmp_71 ), .FCI(\CIC1Cos/n11330 ), .F0(\CIC1Cos/n6122 ));
  CIC1Cos_SLICE_1105 \CIC1Cos/SLICE_1105 ( .B1(\CIC1Cos/d4_63 ), 
    .A1(\CIC1Cos/d3_63 ), .B0(\CIC1Cos/d4_62 ), .A0(\CIC1Cos/d3_62 ), 
    .FCI(\CIC1Cos/n11664 ), .F0(\CIC1Cos/n5523 ), .F1(\CIC1Cos/n5522 ), 
    .FCO(\CIC1Cos/n11665 ));
  CIC1Cos_SLICE_1106 \CIC1Cos/SLICE_1106 ( .B1(\CIC1Cos/d4_61 ), 
    .A1(\CIC1Cos/d3_61 ), .B0(\CIC1Cos/d4_60 ), .A0(\CIC1Cos/d3_60 ), 
    .FCI(\CIC1Cos/n11663 ), .F0(\CIC1Cos/n5525 ), .F1(\CIC1Cos/n5524 ), 
    .FCO(\CIC1Cos/n11664 ));
  CIC1Cos_SLICE_1107 \CIC1Cos/SLICE_1107 ( .B1(\CIC1Cos/d4_59 ), 
    .A1(\CIC1Cos/d3_59 ), .B0(\CIC1Cos/d4_58 ), .A0(\CIC1Cos/d3_58 ), 
    .FCI(\CIC1Cos/n11662 ), .F0(\CIC1Cos/n5527 ), .F1(\CIC1Cos/n5526 ), 
    .FCO(\CIC1Cos/n11663 ));
  CIC1Cos_SLICE_1108 \CIC1Cos/SLICE_1108 ( .D1(\CIC1Cos/d4_67 ), 
    .C1(\CIC1Cos/n5670 ), .B1(\CIC1Cos/n5664 ), .A1(\CIC1Cos/d5_67 ), 
    .D0(\CIC1Cos/d4_66 ), .C0(\CIC1Cos/n5671 ), .B0(\CIC1Cos/n5664 ), 
    .A0(\CIC1Cos/d5_66 ), .DI1(\CIC1Cos/d5_71_N_706_67 ), 
    .DI0(\CIC1Cos/d5_71_N_706_66 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11606 ), 
    .F0(\CIC1Cos/d5_71_N_706_66 ), .Q0(\CIC1Cos/d5_66 ), 
    .F1(\CIC1Cos/d5_71_N_706_67 ), .Q1(\CIC1Cos/d5_67 ), 
    .FCO(\CIC1Cos/n11607 ));
  CIC1Cos_SLICE_1109 \CIC1Cos/SLICE_1109 ( .B1(\CIC1Cos/d4_57 ), 
    .A1(\CIC1Cos/d3_57 ), .B0(\CIC1Cos/d4_56 ), .A0(\CIC1Cos/d3_56 ), 
    .FCI(\CIC1Cos/n11661 ), .F0(\CIC1Cos/n5529 ), .F1(\CIC1Cos/n5528 ), 
    .FCO(\CIC1Cos/n11662 ));
  CIC1Cos_SLICE_1110 \CIC1Cos/SLICE_1110 ( .D1(\CIC1Cos/d4_65 ), 
    .C1(\CIC1Cos/n5672 ), .B1(\CIC1Cos/n5664 ), .A1(\CIC1Cos/d5_65 ), 
    .D0(\CIC1Cos/d4_64 ), .C0(\CIC1Cos/n5673 ), .B0(\CIC1Cos/n5664 ), 
    .A0(\CIC1Cos/d5_64 ), .DI1(\CIC1Cos/d5_71_N_706_65 ), 
    .DI0(\CIC1Cos/d5_71_N_706_64 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11605 ), 
    .F0(\CIC1Cos/d5_71_N_706_64 ), .Q0(\CIC1Cos/d5_64 ), 
    .F1(\CIC1Cos/d5_71_N_706_65 ), .Q1(\CIC1Cos/d5_65 ), 
    .FCO(\CIC1Cos/n11606 ));
  CIC1Cos_SLICE_1111 \CIC1Cos/SLICE_1111 ( .B1(\CIC1Cos/d3_61 ), 
    .A1(\CIC1Cos/d2_61 ), .B0(\CIC1Cos/d3_60 ), .A0(\CIC1Cos/d2_60 ), 
    .FCI(\CIC1Cos/n11704 ), .F0(\CIC1Cos/n5373 ), .F1(\CIC1Cos/n5372 ), 
    .FCO(\CIC1Cos/n11705 ));
  CIC1Cos_SLICE_1112 \CIC1Cos/SLICE_1112 ( .B1(\CIC1Cos/d3_53 ), 
    .A1(\CIC1Cos/d2_53 ), .B0(\CIC1Cos/d3_52 ), .A0(\CIC1Cos/d2_52 ), 
    .FCI(\CIC1Cos/n11700 ), .F0(\CIC1Cos/n5381 ), .F1(\CIC1Cos/n5380 ), 
    .FCO(\CIC1Cos/n11701 ));
  CIC1Cos_SLICE_1113 \CIC1Cos/SLICE_1113 ( .D1(\CIC1Cos/d4_43 ), 
    .C1(\CIC1Cos/n5694 ), .B1(\CIC1Cos/n5664 ), .A1(\CIC1Cos/d5_43 ), 
    .D0(\CIC1Cos/d4_42 ), .C0(\CIC1Cos/n5695 ), .B0(\CIC1Cos/n5664 ), 
    .A0(\CIC1Cos/d5_42 ), .DI1(\CIC1Cos/d5_71_N_706_43 ), 
    .DI0(\CIC1Cos/d5_71_N_706_42 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11594 ), 
    .F0(\CIC1Cos/d5_71_N_706_42 ), .Q0(\CIC1Cos/d5_42 ), 
    .F1(\CIC1Cos/d5_71_N_706_43 ), .Q1(\CIC1Cos/d5_43 ), 
    .FCO(\CIC1Cos/n11595 ));
  CIC1Cos_SLICE_1114 \CIC1Cos/SLICE_1114 ( .D1(\CIC1Cos/d2_71 ), 
    .C1(\CIC1Cos/n5362 ), .B1(\CIC1Cos/n5360 ), .A1(\CIC1Cos/d3_71 ), 
    .D0(\CIC1Cos/d2_70 ), .C0(\CIC1Cos/n5363 ), .B0(\CIC1Cos/n5360 ), 
    .A0(\CIC1Cos/d3_70 ), .DI1(\CIC1Cos/d3_71_N_562_71 ), 
    .DI0(\CIC1Cos/d3_71_N_562_70 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11690 ), 
    .F0(\CIC1Cos/d3_71_N_562_70 ), .Q0(\CIC1Cos/d3_70 ), 
    .F1(\CIC1Cos/d3_71_N_562_71 ), .Q1(\CIC1Cos/d3_71 ));
  CIC1Cos_SLICE_1115 \CIC1Cos/SLICE_1115 ( .D1(\CIC1Cos/d2_69 ), 
    .C1(\CIC1Cos/n5364 ), .B1(\CIC1Cos/n5360 ), .A1(\CIC1Cos/d3_69 ), 
    .D0(\CIC1Cos/d2_68 ), .C0(\CIC1Cos/n5365 ), .B0(\CIC1Cos/n5360 ), 
    .A0(\CIC1Cos/d3_68 ), .DI1(\CIC1Cos/d3_71_N_562_69 ), 
    .DI0(\CIC1Cos/d3_71_N_562_68 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11689 ), 
    .F0(\CIC1Cos/d3_71_N_562_68 ), .Q0(\CIC1Cos/d3_68 ), 
    .F1(\CIC1Cos/d3_71_N_562_69 ), .Q1(\CIC1Cos/d3_69 ), 
    .FCO(\CIC1Cos/n11690 ));
  CIC1Cos_SLICE_1116 \CIC1Cos/SLICE_1116 ( .D1(\CIC1Cos/d2_65 ), 
    .C1(\CIC1Cos/n5368 ), .B1(\CIC1Cos/n5360 ), .A1(\CIC1Cos/d3_65 ), 
    .D0(\CIC1Cos/d2_64 ), .C0(\CIC1Cos/n5369 ), .B0(\CIC1Cos/n5360 ), 
    .A0(\CIC1Cos/d3_64 ), .DI1(\CIC1Cos/d3_71_N_562_65 ), 
    .DI0(\CIC1Cos/d3_71_N_562_64 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11687 ), 
    .F0(\CIC1Cos/d3_71_N_562_64 ), .Q0(\CIC1Cos/d3_64 ), 
    .F1(\CIC1Cos/d3_71_N_562_65 ), .Q1(\CIC1Cos/d3_65 ), 
    .FCO(\CIC1Cos/n11688 ));
  CIC1Cos_SLICE_1117 \CIC1Cos/SLICE_1117 ( .D1(\CIC1Cos/d2_63 ), 
    .C1(\CIC1Cos/n5370 ), .B1(\CIC1Cos/n5360 ), .A1(\CIC1Cos/d3_63 ), 
    .D0(\CIC1Cos/d2_62 ), .C0(\CIC1Cos/n5371 ), .B0(\CIC1Cos/n5360 ), 
    .A0(\CIC1Cos/d3_62 ), .DI1(\CIC1Cos/d3_71_N_562_63 ), 
    .DI0(\CIC1Cos/d3_71_N_562_62 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11686 ), 
    .F0(\CIC1Cos/d3_71_N_562_62 ), .Q0(\CIC1Cos/d3_62 ), 
    .F1(\CIC1Cos/d3_71_N_562_63 ), .Q1(\CIC1Cos/d3_63 ), 
    .FCO(\CIC1Cos/n11687 ));
  CIC1Cos_SLICE_1118 \CIC1Cos/SLICE_1118 ( .D1(\CIC1Cos/d4_63 ), 
    .C1(\CIC1Cos/n5674 ), .B1(\CIC1Cos/n5664 ), .A1(\CIC1Cos/d5_63 ), 
    .D0(\CIC1Cos/d4_62 ), .C0(\CIC1Cos/n5675 ), .B0(\CIC1Cos/n5664 ), 
    .A0(\CIC1Cos/d5_62 ), .DI1(\CIC1Cos/d5_71_N_706_63 ), 
    .DI0(\CIC1Cos/d5_71_N_706_62 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11604 ), 
    .F0(\CIC1Cos/d5_71_N_706_62 ), .Q0(\CIC1Cos/d5_62 ), 
    .F1(\CIC1Cos/d5_71_N_706_63 ), .Q1(\CIC1Cos/d5_63 ), 
    .FCO(\CIC1Cos/n11605 ));
  CIC1Cos_SLICE_1119 \CIC1Cos/SLICE_1119 ( .D1(\CIC1Cos/d2_67 ), 
    .C1(\CIC1Cos/n5366 ), .B1(\CIC1Cos/n5360 ), .A1(\CIC1Cos/d3_67 ), 
    .D0(\CIC1Cos/d2_66 ), .C0(\CIC1Cos/n5367 ), .B0(\CIC1Cos/n5360 ), 
    .A0(\CIC1Cos/d3_66 ), .DI1(\CIC1Cos/d3_71_N_562_67 ), 
    .DI0(\CIC1Cos/d3_71_N_562_66 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11688 ), 
    .F0(\CIC1Cos/d3_71_N_562_66 ), .Q0(\CIC1Cos/d3_66 ), 
    .F1(\CIC1Cos/d3_71_N_562_67 ), .Q1(\CIC1Cos/d3_67 ), 
    .FCO(\CIC1Cos/n11689 ));
  CIC1Cos_SLICE_1120 \CIC1Cos/SLICE_1120 ( .D1(\CIC1Cos/d2_61 ), 
    .C1(\CIC1Cos/n5372 ), .B1(\CIC1Cos/n5360 ), .A1(\CIC1Cos/d3_61 ), 
    .D0(\CIC1Cos/d2_60 ), .C0(\CIC1Cos/n5373 ), .B0(\CIC1Cos/n5360 ), 
    .A0(\CIC1Cos/d3_60 ), .DI1(\CIC1Cos/d3_71_N_562_61 ), 
    .DI0(\CIC1Cos/d3_71_N_562_60 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11685 ), 
    .F0(\CIC1Cos/d3_71_N_562_60 ), .Q0(\CIC1Cos/d3_60 ), 
    .F1(\CIC1Cos/d3_71_N_562_61 ), .Q1(\CIC1Cos/d3_61 ), 
    .FCO(\CIC1Cos/n11686 ));
  CIC1Cos_SLICE_1121 \CIC1Cos/SLICE_1121 ( .D1(\CIC1Cos/d2_53 ), 
    .C1(\CIC1Cos/n5380 ), .B1(\CIC1Cos/n5360 ), .A1(\CIC1Cos/d3_53 ), 
    .D0(\CIC1Cos/d2_52 ), .C0(\CIC1Cos/n5381 ), .B0(\CIC1Cos/n5360 ), 
    .A0(\CIC1Cos/d3_52 ), .DI1(\CIC1Cos/d3_71_N_562_53 ), 
    .DI0(\CIC1Cos/d3_71_N_562_52 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11681 ), 
    .F0(\CIC1Cos/d3_71_N_562_52 ), .Q0(\CIC1Cos/d3_52 ), 
    .F1(\CIC1Cos/d3_71_N_562_53 ), .Q1(\CIC1Cos/d3_53 ), 
    .FCO(\CIC1Cos/n11682 ));
  CIC1Cos_SLICE_1122 \CIC1Cos/SLICE_1122 ( .D1(\CIC1Cos/d2_41 ), 
    .C1(\CIC1Cos/n5392 ), .B1(\CIC1Cos/n5360 ), .A1(\CIC1Cos/d3_41 ), 
    .D0(\CIC1Cos/d2_40 ), .C0(\CIC1Cos/n5393 ), .B0(\CIC1Cos/n5360 ), 
    .A0(\CIC1Cos/d3_40 ), .DI1(\CIC1Cos/d3_71_N_562_41 ), 
    .DI0(\CIC1Cos/d3_71_N_562_40 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11675 ), 
    .F0(\CIC1Cos/d3_71_N_562_40 ), .Q0(\CIC1Cos/d3_40 ), 
    .F1(\CIC1Cos/d3_71_N_562_41 ), .Q1(\CIC1Cos/d3_41 ), 
    .FCO(\CIC1Cos/n11676 ));
  CIC1Cos_SLICE_1123 \CIC1Cos/SLICE_1123 ( .B1(\CIC1Cos/d4_55 ), 
    .A1(\CIC1Cos/d3_55 ), .B0(\CIC1Cos/d4_54 ), .A0(\CIC1Cos/d3_54 ), 
    .FCI(\CIC1Cos/n11660 ), .F0(\CIC1Cos/n5531 ), .F1(\CIC1Cos/n5530 ), 
    .FCO(\CIC1Cos/n11661 ));
  CIC1Cos_SLICE_1124 \CIC1Cos/SLICE_1124 ( .D1(\CIC1Cos/d2_39 ), 
    .C1(\CIC1Cos/n5394 ), .B1(\CIC1Cos/n5360 ), .A1(\CIC1Cos/d3_39 ), 
    .D0(\CIC1Cos/d2_38 ), .C0(\CIC1Cos/n5395 ), .B0(\CIC1Cos/n5360 ), 
    .A0(\CIC1Cos/d3_38 ), .DI1(\CIC1Cos/d3_71_N_562_39 ), 
    .DI0(\CIC1Cos/d3_71_N_562_38 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11674 ), 
    .F0(\CIC1Cos/d3_71_N_562_38 ), .Q0(\CIC1Cos/d3_38 ), 
    .F1(\CIC1Cos/d3_71_N_562_39 ), .Q1(\CIC1Cos/d3_39 ), 
    .FCO(\CIC1Cos/n11675 ));
  CIC1Cos_SLICE_1125 \CIC1Cos/SLICE_1125 ( .D1(\CIC1Cos/d2_51 ), 
    .C1(\CIC1Cos/n5382 ), .B1(\CIC1Cos/n5360 ), .A1(\CIC1Cos/d3_51 ), 
    .D0(\CIC1Cos/d2_50 ), .C0(\CIC1Cos/n5383 ), .B0(\CIC1Cos/n5360 ), 
    .A0(\CIC1Cos/d3_50 ), .DI1(\CIC1Cos/d3_71_N_562_51 ), 
    .DI0(\CIC1Cos/d3_71_N_562_50 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11680 ), 
    .F0(\CIC1Cos/d3_71_N_562_50 ), .Q0(\CIC1Cos/d3_50 ), 
    .F1(\CIC1Cos/d3_71_N_562_51 ), .Q1(\CIC1Cos/d3_51 ), 
    .FCO(\CIC1Cos/n11681 ));
  CIC1Cos_SLICE_1126 \CIC1Cos/SLICE_1126 ( .D1(\CIC1Cos/d2_37 ), 
    .C1(\CIC1Cos/n5396 ), .B1(\CIC1Cos/n5360 ), .A1(\CIC1Cos/d3_37 ), 
    .D0(\CIC1Cos/d2_36 ), .C0(\CIC1Cos/n5397 ), .B0(\CIC1Cos/n5360 ), 
    .A0(\CIC1Cos/d3_36 ), .DI1(\CIC1Cos/d3_71_N_562_37 ), 
    .DI0(\CIC1Cos/d3_71_N_562_36 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11673 ), 
    .F0(\CIC1Cos/d3_71_N_562_36 ), .Q0(\CIC1Cos/d3_36 ), 
    .F1(\CIC1Cos/d3_71_N_562_37 ), .Q1(\CIC1Cos/d3_37 ), 
    .FCO(\CIC1Cos/n11674 ));
  CIC1Cos_SLICE_1127 \CIC1Cos/SLICE_1127 ( .D1(\CIC1Cos/d2_49 ), 
    .C1(\CIC1Cos/n5384 ), .B1(\CIC1Cos/n5360 ), .A1(\CIC1Cos/d3_49 ), 
    .D0(\CIC1Cos/d2_48 ), .C0(\CIC1Cos/n5385 ), .B0(\CIC1Cos/n5360 ), 
    .A0(\CIC1Cos/d3_48 ), .DI1(\CIC1Cos/d3_71_N_562_49 ), 
    .DI0(\CIC1Cos/d3_71_N_562_48 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11679 ), 
    .F0(\CIC1Cos/d3_71_N_562_48 ), .Q0(\CIC1Cos/d3_48 ), 
    .F1(\CIC1Cos/d3_71_N_562_49 ), .Q1(\CIC1Cos/d3_49 ), 
    .FCO(\CIC1Cos/n11680 ));
  CIC1Cos_SLICE_1128 \CIC1Cos/SLICE_1128 ( .D1(\CIC1Cos/d2_59 ), 
    .C1(\CIC1Cos/n5374 ), .B1(\CIC1Cos/n5360 ), .A1(\CIC1Cos/d3_59 ), 
    .D0(\CIC1Cos/d2_58 ), .C0(\CIC1Cos/n5375 ), .B0(\CIC1Cos/n5360 ), 
    .A0(\CIC1Cos/d3_58 ), .DI1(\CIC1Cos/d3_71_N_562_59 ), 
    .DI0(\CIC1Cos/d3_71_N_562_58 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11684 ), 
    .F0(\CIC1Cos/d3_71_N_562_58 ), .Q0(\CIC1Cos/d3_58 ), 
    .F1(\CIC1Cos/d3_71_N_562_59 ), .Q1(\CIC1Cos/d3_59 ), 
    .FCO(\CIC1Cos/n11685 ));
  CIC1Cos_SLICE_1129 \CIC1Cos/SLICE_1129 ( .D1(\CIC1Cos/d2_47 ), 
    .C1(\CIC1Cos/n5386 ), .B1(\CIC1Cos/n5360 ), .A1(\CIC1Cos/d3_47 ), 
    .D0(\CIC1Cos/d2_46 ), .C0(\CIC1Cos/n5387 ), .B0(\CIC1Cos/n5360 ), 
    .A0(\CIC1Cos/d3_46 ), .DI1(\CIC1Cos/d3_71_N_562_47 ), 
    .DI0(\CIC1Cos/d3_71_N_562_46 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11678 ), 
    .F0(\CIC1Cos/d3_71_N_562_46 ), .Q0(\CIC1Cos/d3_46 ), 
    .F1(\CIC1Cos/d3_71_N_562_47 ), .Q1(\CIC1Cos/d3_47 ), 
    .FCO(\CIC1Cos/n11679 ));
  CIC1Cos_SLICE_1130 \CIC1Cos/SLICE_1130 ( .D1(\CIC1Cos/d2_45 ), 
    .C1(\CIC1Cos/n5388 ), .B1(\CIC1Cos/n5360 ), .A1(\CIC1Cos/d3_45 ), 
    .D0(\CIC1Cos/d2_44 ), .C0(\CIC1Cos/n5389 ), .B0(\CIC1Cos/n5360 ), 
    .A0(\CIC1Cos/d3_44 ), .DI1(\CIC1Cos/d3_71_N_562_45 ), 
    .DI0(\CIC1Cos/d3_71_N_562_44 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11677 ), 
    .F0(\CIC1Cos/d3_71_N_562_44 ), .Q0(\CIC1Cos/d3_44 ), 
    .F1(\CIC1Cos/d3_71_N_562_45 ), .Q1(\CIC1Cos/d3_45 ), 
    .FCO(\CIC1Cos/n11678 ));
  CIC1Cos_SLICE_1131 \CIC1Cos/SLICE_1131 ( .D1(\CIC1Cos/d2_57 ), 
    .C1(\CIC1Cos/n5376 ), .B1(\CIC1Cos/n5360 ), .A1(\CIC1Cos/d3_57 ), 
    .D0(\CIC1Cos/d2_56 ), .C0(\CIC1Cos/n5377 ), .B0(\CIC1Cos/n5360 ), 
    .A0(\CIC1Cos/d3_56 ), .DI1(\CIC1Cos/d3_71_N_562_57 ), 
    .DI0(\CIC1Cos/d3_71_N_562_56 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11683 ), 
    .F0(\CIC1Cos/d3_71_N_562_56 ), .Q0(\CIC1Cos/d3_56 ), 
    .F1(\CIC1Cos/d3_71_N_562_57 ), .Q1(\CIC1Cos/d3_57 ), 
    .FCO(\CIC1Cos/n11684 ));
  CIC1Cos_SLICE_1132 \CIC1Cos/SLICE_1132 ( .D1(\CIC1Cos/d2_43 ), 
    .C1(\CIC1Cos/n5390 ), .B1(\CIC1Cos/n5360 ), .A1(\CIC1Cos/d3_43 ), 
    .D0(\CIC1Cos/d2_42 ), .C0(\CIC1Cos/n5391 ), .B0(\CIC1Cos/n5360 ), 
    .A0(\CIC1Cos/d3_42 ), .DI1(\CIC1Cos/d3_71_N_562_43 ), 
    .DI0(\CIC1Cos/d3_71_N_562_42 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11676 ), 
    .F0(\CIC1Cos/d3_71_N_562_42 ), .Q0(\CIC1Cos/d3_42 ), 
    .F1(\CIC1Cos/d3_71_N_562_43 ), .Q1(\CIC1Cos/d3_43 ), 
    .FCO(\CIC1Cos/n11677 ));
  CIC1Cos_SLICE_1133 \CIC1Cos/SLICE_1133 ( .D1(\CIC1Cos/d2_55 ), 
    .C1(\CIC1Cos/n5378 ), .B1(\CIC1Cos/n5360 ), .A1(\CIC1Cos/d3_55 ), 
    .D0(\CIC1Cos/d2_54 ), .C0(\CIC1Cos/n5379 ), .B0(\CIC1Cos/n5360 ), 
    .A0(\CIC1Cos/d3_54 ), .DI1(\CIC1Cos/d3_71_N_562_55 ), 
    .DI0(\CIC1Cos/d3_71_N_562_54 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11682 ), 
    .F0(\CIC1Cos/d3_71_N_562_54 ), .Q0(\CIC1Cos/d3_54 ), 
    .F1(\CIC1Cos/d3_71_N_562_55 ), .Q1(\CIC1Cos/d3_55 ), 
    .FCO(\CIC1Cos/n11683 ));
  CIC1Cos_SLICE_1134 \CIC1Cos/SLICE_1134 ( .D1(\CIC1Cos/d4_41 ), 
    .C1(\CIC1Cos/n5696 ), .B1(\CIC1Cos/n5664 ), .A1(\CIC1Cos/d5_41 ), 
    .D0(\CIC1Cos/d4_40 ), .C0(\CIC1Cos/n5697 ), .B0(\CIC1Cos/n5664 ), 
    .A0(\CIC1Cos/d5_40 ), .DI1(\CIC1Cos/d5_71_N_706_41 ), 
    .DI0(\CIC1Cos/d5_71_N_706_40 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11593 ), 
    .F0(\CIC1Cos/d5_71_N_706_40 ), .Q0(\CIC1Cos/d5_40 ), 
    .F1(\CIC1Cos/d5_71_N_706_41 ), .Q1(\CIC1Cos/d5_41 ), 
    .FCO(\CIC1Cos/n11594 ));
  CIC1Cos_SLICE_1135 \CIC1Cos/SLICE_1135 ( .D1(\CIC1Cos/d1_43 ), 
    .C1(\CIC1Cos/n5238 ), .B1(\CIC1Cos/n5208 ), .A1(\CIC1Cos/d2_43 ), 
    .D0(\CIC1Cos/d1_42 ), .C0(\CIC1Cos/n5239 ), .B0(\CIC1Cos/n5208 ), 
    .A0(\CIC1Cos/d2_42 ), .DI1(\CIC1Cos/d2_71_N_490_43 ), 
    .DI0(\CIC1Cos/d2_71_N_490_42 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11717 ), 
    .F0(\CIC1Cos/d2_71_N_490_42 ), .Q0(\CIC1Cos/d2_42 ), 
    .F1(\CIC1Cos/d2_71_N_490_43 ), .Q1(\CIC1Cos/d2_43 ), 
    .FCO(\CIC1Cos/n11718 ));
  CIC1Cos_SLICE_1136 \CIC1Cos/SLICE_1136 ( .D1(\CIC1Cos/d4_39 ), 
    .C1(\CIC1Cos/n5698 ), .B1(\CIC1Cos/n5664 ), .A1(\CIC1Cos/d5_39 ), 
    .D0(\CIC1Cos/d4_38 ), .C0(\CIC1Cos/n5699 ), .B0(\CIC1Cos/n5664 ), 
    .A0(\CIC1Cos/d5_38 ), .DI1(\CIC1Cos/d5_71_N_706_39 ), 
    .DI0(\CIC1Cos/d5_71_N_706_38 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11592 ), 
    .F0(\CIC1Cos/d5_71_N_706_38 ), .Q0(\CIC1Cos/d5_38 ), 
    .F1(\CIC1Cos/d5_71_N_706_39 ), .Q1(\CIC1Cos/d5_39 ), 
    .FCO(\CIC1Cos/n11593 ));
  CIC1Cos_SLICE_1137 \CIC1Cos/SLICE_1137 ( .D1(\CIC1Cos/d4_37 ), 
    .C1(\CIC1Cos/n5700 ), .B1(\CIC1Cos/n5664 ), .A1(\CIC1Cos/d5_37 ), 
    .D0(\CIC1Cos/d4_36 ), .C0(\CIC1Cos/n5701 ), .B0(\CIC1Cos/n5664 ), 
    .A0(\CIC1Cos/d5_36 ), .DI1(\CIC1Cos/d5_71_N_706_37 ), 
    .DI0(\CIC1Cos/d5_71_N_706_36 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11591 ), 
    .F0(\CIC1Cos/d5_71_N_706_36 ), .Q0(\CIC1Cos/d5_36 ), 
    .F1(\CIC1Cos/d5_71_N_706_37 ), .Q1(\CIC1Cos/d5_37 ), 
    .FCO(\CIC1Cos/n11592 ));
  CIC1Cos_SLICE_1138 \CIC1Cos/SLICE_1138 ( .A1(\CIC1Cos/n5664 ), 
    .FCO(\CIC1Cos/n11591 ));
  CIC1Cos_SLICE_1139 \CIC1Cos/SLICE_1139 ( .D1(\CIC1Cos/d1_71 ), 
    .C1(\CIC1Cos/n5210 ), .B1(\CIC1Cos/n5208 ), .A1(\CIC1Cos/d2_71 ), 
    .D0(\CIC1Cos/d1_70 ), .C0(\CIC1Cos/n5211 ), .B0(\CIC1Cos/n5208 ), 
    .A0(\CIC1Cos/d2_70 ), .DI1(\CIC1Cos/d2_71_N_490_71 ), 
    .DI0(\CIC1Cos/d2_71_N_490_70 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11731 ), 
    .F0(\CIC1Cos/d2_71_N_490_70 ), .Q0(\CIC1Cos/d2_70 ), 
    .F1(\CIC1Cos/d2_71_N_490_71 ), .Q1(\CIC1Cos/d2_71 ));
  CIC1Cos_SLICE_1140 \CIC1Cos/SLICE_1140 ( .D1(\CIC1Cos/d1_69 ), 
    .C1(\CIC1Cos/n5212 ), .B1(\CIC1Cos/n5208 ), .A1(\CIC1Cos/d2_69 ), 
    .D0(\CIC1Cos/d1_68 ), .C0(\CIC1Cos/n5213 ), .B0(\CIC1Cos/n5208 ), 
    .A0(\CIC1Cos/d2_68 ), .DI1(\CIC1Cos/d2_71_N_490_69 ), 
    .DI0(\CIC1Cos/d2_71_N_490_68 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11730 ), 
    .F0(\CIC1Cos/d2_71_N_490_68 ), .Q0(\CIC1Cos/d2_68 ), 
    .F1(\CIC1Cos/d2_71_N_490_69 ), .Q1(\CIC1Cos/d2_69 ), 
    .FCO(\CIC1Cos/n11731 ));
  CIC1Cos_SLICE_1141 \CIC1Cos/SLICE_1141 ( .D1(\CIC1Cos/d1_67 ), 
    .C1(\CIC1Cos/n5214 ), .B1(\CIC1Cos/n5208 ), .A1(\CIC1Cos/d2_67 ), 
    .D0(\CIC1Cos/d1_66 ), .C0(\CIC1Cos/n5215 ), .B0(\CIC1Cos/n5208 ), 
    .A0(\CIC1Cos/d2_66 ), .DI1(\CIC1Cos/d2_71_N_490_67 ), 
    .DI0(\CIC1Cos/d2_71_N_490_66 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11729 ), 
    .F0(\CIC1Cos/d2_71_N_490_66 ), .Q0(\CIC1Cos/d2_66 ), 
    .F1(\CIC1Cos/d2_71_N_490_67 ), .Q1(\CIC1Cos/d2_67 ), 
    .FCO(\CIC1Cos/n11730 ));
  CIC1Cos_SLICE_1142 \CIC1Cos/SLICE_1142 ( .D1(\CIC1Cos/d1_63 ), 
    .C1(\CIC1Cos/n5218 ), .B1(\CIC1Cos/n5208 ), .A1(\CIC1Cos/d2_63 ), 
    .D0(\CIC1Cos/d1_62 ), .C0(\CIC1Cos/n5219 ), .B0(\CIC1Cos/n5208 ), 
    .A0(\CIC1Cos/d2_62 ), .DI1(\CIC1Cos/d2_71_N_490_63 ), 
    .DI0(\CIC1Cos/d2_71_N_490_62 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11727 ), 
    .F0(\CIC1Cos/d2_71_N_490_62 ), .Q0(\CIC1Cos/d2_62 ), 
    .F1(\CIC1Cos/d2_71_N_490_63 ), .Q1(\CIC1Cos/d2_63 ), 
    .FCO(\CIC1Cos/n11728 ));
  CIC1Cos_SLICE_1143 \CIC1Cos/SLICE_1143 ( .D1(\CIC1Cos/d4_57 ), 
    .C1(\CIC1Cos/n5680 ), .B1(\CIC1Cos/n5664 ), .A1(\CIC1Cos/d5_57 ), 
    .D0(\CIC1Cos/d4_56 ), .C0(\CIC1Cos/n5681 ), .B0(\CIC1Cos/n5664 ), 
    .A0(\CIC1Cos/d5_56 ), .DI1(\CIC1Cos/d5_71_N_706_57 ), 
    .DI0(\CIC1Cos/d5_71_N_706_56 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11601 ), 
    .F0(\CIC1Cos/d5_71_N_706_56 ), .Q0(\CIC1Cos/d5_56 ), 
    .F1(\CIC1Cos/d5_71_N_706_57 ), .Q1(\CIC1Cos/d5_57 ), 
    .FCO(\CIC1Cos/n11602 ));
  CIC1Cos_SLICE_1144 \CIC1Cos/SLICE_1144 ( .D1(\CIC1Cos/d4_61 ), 
    .C1(\CIC1Cos/n5676 ), .B1(\CIC1Cos/n5664 ), .A1(\CIC1Cos/d5_61 ), 
    .D0(\CIC1Cos/d4_60 ), .C0(\CIC1Cos/n5677 ), .B0(\CIC1Cos/n5664 ), 
    .A0(\CIC1Cos/d5_60 ), .DI1(\CIC1Cos/d5_71_N_706_61 ), 
    .DI0(\CIC1Cos/d5_71_N_706_60 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11603 ), 
    .F0(\CIC1Cos/d5_71_N_706_60 ), .Q0(\CIC1Cos/d5_60 ), 
    .F1(\CIC1Cos/d5_71_N_706_61 ), .Q1(\CIC1Cos/d5_61 ), 
    .FCO(\CIC1Cos/n11604 ));
  CIC1Cos_SLICE_1145 \CIC1Cos/SLICE_1145 ( .D1(\CIC1Cos/d1_61 ), 
    .C1(\CIC1Cos/n5220 ), .B1(\CIC1Cos/n5208 ), .A1(\CIC1Cos/d2_61 ), 
    .D0(\CIC1Cos/d1_60 ), .C0(\CIC1Cos/n5221 ), .B0(\CIC1Cos/n5208 ), 
    .A0(\CIC1Cos/d2_60 ), .DI1(\CIC1Cos/d2_71_N_490_61 ), 
    .DI0(\CIC1Cos/d2_71_N_490_60 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11726 ), 
    .F0(\CIC1Cos/d2_71_N_490_60 ), .Q0(\CIC1Cos/d2_60 ), 
    .F1(\CIC1Cos/d2_71_N_490_61 ), .Q1(\CIC1Cos/d2_61 ), 
    .FCO(\CIC1Cos/n11727 ));
  CIC1Cos_SLICE_1146 \CIC1Cos/SLICE_1146 ( .D1(\CIC1Cos/d1_59 ), 
    .C1(\CIC1Cos/n5222 ), .B1(\CIC1Cos/n5208 ), .A1(\CIC1Cos/d2_59 ), 
    .D0(\CIC1Cos/d1_58 ), .C0(\CIC1Cos/n5223 ), .B0(\CIC1Cos/n5208 ), 
    .A0(\CIC1Cos/d2_58 ), .DI1(\CIC1Cos/d2_71_N_490_59 ), 
    .DI0(\CIC1Cos/d2_71_N_490_58 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11725 ), 
    .F0(\CIC1Cos/d2_71_N_490_58 ), .Q0(\CIC1Cos/d2_58 ), 
    .F1(\CIC1Cos/d2_71_N_490_59 ), .Q1(\CIC1Cos/d2_59 ), 
    .FCO(\CIC1Cos/n11726 ));
  CIC1Cos_SLICE_1147 \CIC1Cos/SLICE_1147 ( .D1(\CIC1Cos/d1_57 ), 
    .C1(\CIC1Cos/n5224 ), .B1(\CIC1Cos/n5208 ), .A1(\CIC1Cos/d2_57 ), 
    .D0(\CIC1Cos/d1_56 ), .C0(\CIC1Cos/n5225 ), .B0(\CIC1Cos/n5208 ), 
    .A0(\CIC1Cos/d2_56 ), .DI1(\CIC1Cos/d2_71_N_490_57 ), 
    .DI0(\CIC1Cos/d2_71_N_490_56 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11724 ), 
    .F0(\CIC1Cos/d2_71_N_490_56 ), .Q0(\CIC1Cos/d2_56 ), 
    .F1(\CIC1Cos/d2_71_N_490_57 ), .Q1(\CIC1Cos/d2_57 ), 
    .FCO(\CIC1Cos/n11725 ));
  CIC1Cos_SLICE_1148 \CIC1Cos/SLICE_1148 ( .D1(\CIC1Cos/d1_55 ), 
    .C1(\CIC1Cos/n5226 ), .B1(\CIC1Cos/n5208 ), .A1(\CIC1Cos/d2_55 ), 
    .D0(\CIC1Cos/d1_54 ), .C0(\CIC1Cos/n5227 ), .B0(\CIC1Cos/n5208 ), 
    .A0(\CIC1Cos/d2_54 ), .DI1(\CIC1Cos/d2_71_N_490_55 ), 
    .DI0(\CIC1Cos/d2_71_N_490_54 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11723 ), 
    .F0(\CIC1Cos/d2_71_N_490_54 ), .Q0(\CIC1Cos/d2_54 ), 
    .F1(\CIC1Cos/d2_71_N_490_55 ), .Q1(\CIC1Cos/d2_55 ), 
    .FCO(\CIC1Cos/n11724 ));
  CIC1Cos_SLICE_1149 \CIC1Cos/SLICE_1149 ( .D1(\CIC1Cos/d1_53 ), 
    .C1(\CIC1Cos/n5228 ), .B1(\CIC1Cos/n5208 ), .A1(\CIC1Cos/d2_53 ), 
    .D0(\CIC1Cos/d1_52 ), .C0(\CIC1Cos/n5229 ), .B0(\CIC1Cos/n5208 ), 
    .A0(\CIC1Cos/d2_52 ), .DI1(\CIC1Cos/d2_71_N_490_53 ), 
    .DI0(\CIC1Cos/d2_71_N_490_52 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11722 ), 
    .F0(\CIC1Cos/d2_71_N_490_52 ), .Q0(\CIC1Cos/d2_52 ), 
    .F1(\CIC1Cos/d2_71_N_490_53 ), .Q1(\CIC1Cos/d2_53 ), 
    .FCO(\CIC1Cos/n11723 ));
  CIC1Cos_SLICE_1150 \CIC1Cos/SLICE_1150 ( .D1(\CIC1Cos/d4_53 ), 
    .C1(\CIC1Cos/n5684 ), .B1(\CIC1Cos/n5664 ), .A1(\CIC1Cos/d5_53 ), 
    .D0(\CIC1Cos/d4_52 ), .C0(\CIC1Cos/n5685 ), .B0(\CIC1Cos/n5664 ), 
    .A0(\CIC1Cos/d5_52 ), .DI1(\CIC1Cos/d5_71_N_706_53 ), 
    .DI0(\CIC1Cos/d5_71_N_706_52 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11599 ), 
    .F0(\CIC1Cos/d5_71_N_706_52 ), .Q0(\CIC1Cos/d5_52 ), 
    .F1(\CIC1Cos/d5_71_N_706_53 ), .Q1(\CIC1Cos/d5_53 ), 
    .FCO(\CIC1Cos/n11600 ));
  CIC1Cos_SLICE_1151 \CIC1Cos/SLICE_1151 ( .B1(\CIC1Cos/d_d_tmp_70 ), 
    .A1(\CIC1Cos/d_tmp_70 ), .B0(\CIC1Cos/d_d_tmp_69 ), 
    .A0(\CIC1Cos/d_tmp_69 ), .FCI(\CIC1Cos/n11329 ), .F0(\CIC1Cos/n6124 ), 
    .F1(\CIC1Cos/n6123 ), .FCO(\CIC1Cos/n11330 ));
  CIC1Cos_SLICE_1152 \CIC1Cos/SLICE_1152 ( .B1(\CIC1Cos/d_d_tmp_68 ), 
    .A1(\CIC1Cos/d_tmp_68 ), .B0(\CIC1Cos/d_d_tmp_67 ), 
    .A0(\CIC1Cos/d_tmp_67 ), .FCI(\CIC1Cos/n11328 ), .F0(\CIC1Cos/n6126 ), 
    .F1(\CIC1Cos/n6125 ), .FCO(\CIC1Cos/n11329 ));
  CIC1Cos_SLICE_1153 \CIC1Cos/SLICE_1153 ( .B1(\CIC1Cos/d_d_tmp_66 ), 
    .A1(\CIC1Cos/d_tmp_66 ), .B0(\CIC1Cos/d_d_tmp_65 ), 
    .A0(\CIC1Cos/d_tmp_65 ), .FCI(\CIC1Cos/n11327 ), .F0(\CIC1Cos/n6128 ), 
    .F1(\CIC1Cos/n6127 ), .FCO(\CIC1Cos/n11328 ));
  CIC1Cos_SLICE_1154 \CIC1Cos/SLICE_1154 ( .B1(\CIC1Cos/d_d_tmp_64 ), 
    .A1(\CIC1Cos/d_tmp_64 ), .B0(\CIC1Cos/d_d_tmp_63 ), 
    .A0(\CIC1Cos/d_tmp_63 ), .FCI(\CIC1Cos/n11326 ), .F0(\CIC1Cos/n6130 ), 
    .F1(\CIC1Cos/n6129 ), .FCO(\CIC1Cos/n11327 ));
  CIC1Cos_SLICE_1155 \CIC1Cos/SLICE_1155 ( .B1(\CIC1Cos/d_d_tmp_62 ), 
    .A1(\CIC1Cos/d_tmp_62 ), .B0(\CIC1Cos/d_d_tmp_61 ), 
    .A0(\CIC1Cos/d_tmp_61 ), .FCI(\CIC1Cos/n11325 ), .F0(\CIC1Cos/n6132 ), 
    .F1(\CIC1Cos/n6131 ), .FCO(\CIC1Cos/n11326 ));
  CIC1Cos_SLICE_1156 \CIC1Cos/SLICE_1156 ( .B1(\CIC1Cos/d_d_tmp_60 ), 
    .A1(\CIC1Cos/d_tmp_60 ), .B0(\CIC1Cos/d_d_tmp_59 ), 
    .A0(\CIC1Cos/d_tmp_59 ), .FCI(\CIC1Cos/n11324 ), .F0(\CIC1Cos/n6134 ), 
    .F1(\CIC1Cos/n6133 ), .FCO(\CIC1Cos/n11325 ));
  CIC1Cos_SLICE_1157 \CIC1Cos/SLICE_1157 ( .B1(\CIC1Cos/d_d_tmp_58 ), 
    .A1(\CIC1Cos/d_tmp_58 ), .B0(\CIC1Cos/d_d_tmp_57 ), 
    .A0(\CIC1Cos/d_tmp_57 ), .FCI(\CIC1Cos/n11323 ), .F0(\CIC1Cos/n6136 ), 
    .F1(\CIC1Cos/n6135 ), .FCO(\CIC1Cos/n11324 ));
  CIC1Cos_SLICE_1158 \CIC1Cos/SLICE_1158 ( .B1(\CIC1Cos/d_d_tmp_56 ), 
    .A1(\CIC1Cos/d_tmp_56 ), .B0(\CIC1Cos/d_d_tmp_55 ), 
    .A0(\CIC1Cos/d_tmp_55 ), .FCI(\CIC1Cos/n11322 ), .F0(\CIC1Cos/n6138 ), 
    .F1(\CIC1Cos/n6137 ), .FCO(\CIC1Cos/n11323 ));
  CIC1Cos_SLICE_1159 \CIC1Cos/SLICE_1159 ( .B1(\CIC1Cos/d_d_tmp_54 ), 
    .A1(\CIC1Cos/d_tmp_54 ), .B0(\CIC1Cos/d_d_tmp_53 ), 
    .A0(\CIC1Cos/d_tmp_53 ), .FCI(\CIC1Cos/n11321 ), .F0(\CIC1Cos/n6140 ), 
    .F1(\CIC1Cos/n6139 ), .FCO(\CIC1Cos/n11322 ));
  CIC1Cos_SLICE_1160 \CIC1Cos/SLICE_1160 ( .B1(\CIC1Cos/d3_41 ), 
    .A1(\CIC1Cos/d2_41 ), .B0(\CIC1Cos/d3_40 ), .A0(\CIC1Cos/d2_40 ), 
    .FCI(\CIC1Cos/n11694 ), .F0(\CIC1Cos/n5393 ), .F1(\CIC1Cos/n5392 ), 
    .FCO(\CIC1Cos/n11695 ));
  CIC1Cos_SLICE_1161 \CIC1Cos/SLICE_1161 ( .B1(\CIC1Cos/d_d_tmp_52 ), 
    .A1(\CIC1Cos/d_tmp_52 ), .B0(\CIC1Cos/d_d_tmp_51 ), 
    .A0(\CIC1Cos/d_tmp_51 ), .FCI(\CIC1Cos/n11320 ), .F0(\CIC1Cos/n6142 ), 
    .F1(\CIC1Cos/n6141 ), .FCO(\CIC1Cos/n11321 ));
  CIC1Cos_SLICE_1162 \CIC1Cos/SLICE_1162 ( .B1(\CIC1Cos/d_d_tmp_50 ), 
    .A1(\CIC1Cos/d_tmp_50 ), .B0(\CIC1Cos/d_d_tmp_49 ), 
    .A0(\CIC1Cos/d_tmp_49 ), .FCI(\CIC1Cos/n11319 ), .F0(\CIC1Cos/n6144 ), 
    .F1(\CIC1Cos/n6143 ), .FCO(\CIC1Cos/n11320 ));
  CIC1Cos_SLICE_1163 \CIC1Cos/SLICE_1163 ( .B1(\CIC1Cos/d_d_tmp_48 ), 
    .A1(\CIC1Cos/d_tmp_48 ), .B0(\CIC1Cos/d_d_tmp_47 ), 
    .A0(\CIC1Cos/d_tmp_47 ), .FCI(\CIC1Cos/n11318 ), .F0(\CIC1Cos/n6146 ), 
    .F1(\CIC1Cos/n6145 ), .FCO(\CIC1Cos/n11319 ));
  CIC1Cos_SLICE_1164 \CIC1Cos/SLICE_1164 ( .B1(\CIC1Cos/d4_53 ), 
    .A1(\CIC1Cos/d3_53 ), .B0(\CIC1Cos/d4_52 ), .A0(\CIC1Cos/d3_52 ), 
    .FCI(\CIC1Cos/n11659 ), .F0(\CIC1Cos/n5533 ), .F1(\CIC1Cos/n5532 ), 
    .FCO(\CIC1Cos/n11660 ));
  CIC1Cos_SLICE_1165 \CIC1Cos/SLICE_1165 ( .B1(\CIC1Cos/d4_51 ), 
    .A1(\CIC1Cos/d3_51 ), .B0(\CIC1Cos/d4_50 ), .A0(\CIC1Cos/d3_50 ), 
    .FCI(\CIC1Cos/n11658 ), .F0(\CIC1Cos/n5535 ), .F1(\CIC1Cos/n5534 ), 
    .FCO(\CIC1Cos/n11659 ));
  CIC1Cos_SLICE_1166 \CIC1Cos/SLICE_1166 ( .B1(\CIC1Cos/d3_39 ), 
    .A1(\CIC1Cos/d2_39 ), .B0(\CIC1Cos/d3_38 ), .A0(\CIC1Cos/d2_38 ), 
    .FCI(\CIC1Cos/n11693 ), .F0(\CIC1Cos/n5395 ), .F1(\CIC1Cos/n5394 ), 
    .FCO(\CIC1Cos/n11694 ));
  CIC1Cos_SLICE_1167 \CIC1Cos/SLICE_1167 ( .D1(\CIC1Cos/d4_59 ), 
    .C1(\CIC1Cos/n5678 ), .B1(\CIC1Cos/n5664 ), .A1(\CIC1Cos/d5_59 ), 
    .D0(\CIC1Cos/d4_58 ), .C0(\CIC1Cos/n5679 ), .B0(\CIC1Cos/n5664 ), 
    .A0(\CIC1Cos/d5_58 ), .DI1(\CIC1Cos/d5_71_N_706_59 ), 
    .DI0(\CIC1Cos/d5_71_N_706_58 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11602 ), 
    .F0(\CIC1Cos/d5_71_N_706_58 ), .Q0(\CIC1Cos/d5_58 ), 
    .F1(\CIC1Cos/d5_71_N_706_59 ), .Q1(\CIC1Cos/d5_59 ), 
    .FCO(\CIC1Cos/n11603 ));
  CIC1Cos_SLICE_1168 \CIC1Cos/SLICE_1168 ( .B1(\CIC1Cos/d4_49 ), 
    .A1(\CIC1Cos/d3_49 ), .B0(\CIC1Cos/d4_48 ), .A0(\CIC1Cos/d3_48 ), 
    .FCI(\CIC1Cos/n11657 ), .F0(\CIC1Cos/n5537 ), .F1(\CIC1Cos/n5536 ), 
    .FCO(\CIC1Cos/n11658 ));
  CIC1Cos_SLICE_1169 \CIC1Cos/SLICE_1169 ( .B1(\CIC1Cos/d3_51 ), 
    .A1(\CIC1Cos/d2_51 ), .B0(\CIC1Cos/d3_50 ), .A0(\CIC1Cos/d2_50 ), 
    .FCI(\CIC1Cos/n11699 ), .F0(\CIC1Cos/n5383 ), .F1(\CIC1Cos/n5382 ), 
    .FCO(\CIC1Cos/n11700 ));
  CIC1Cos_SLICE_1170 \CIC1Cos/SLICE_1170 ( .B1(\CIC1Cos/d3_37 ), 
    .A1(\CIC1Cos/d2_37 ), .B0(\CIC1Cos/d3_36 ), .A0(\CIC1Cos/d2_36 ), 
    .F1(\CIC1Cos/n5396 ), .FCO(\CIC1Cos/n11693 ));
  CIC1Cos_SLICE_1171 \CIC1Cos/SLICE_1171 ( .B1(\CIC1Cos/d3_49 ), 
    .A1(\CIC1Cos/d2_49 ), .B0(\CIC1Cos/d3_48 ), .A0(\CIC1Cos/d2_48 ), 
    .FCI(\CIC1Cos/n11698 ), .F0(\CIC1Cos/n5385 ), .F1(\CIC1Cos/n5384 ), 
    .FCO(\CIC1Cos/n11699 ));
  CIC1Cos_SLICE_1172 \CIC1Cos/SLICE_1172 ( .B1(\CIC1Cos/d3_59 ), 
    .A1(\CIC1Cos/d2_59 ), .B0(\CIC1Cos/d3_58 ), .A0(\CIC1Cos/d2_58 ), 
    .FCI(\CIC1Cos/n11703 ), .F0(\CIC1Cos/n5375 ), .F1(\CIC1Cos/n5374 ), 
    .FCO(\CIC1Cos/n11704 ));
  CIC1Cos_SLICE_1173 \CIC1Cos/SLICE_1173 ( .B1(\CIC1Cos/d3_47 ), 
    .A1(\CIC1Cos/d2_47 ), .B0(\CIC1Cos/d3_46 ), .A0(\CIC1Cos/d2_46 ), 
    .FCI(\CIC1Cos/n11697 ), .F0(\CIC1Cos/n5387 ), .F1(\CIC1Cos/n5386 ), 
    .FCO(\CIC1Cos/n11698 ));
  CIC1Cos_SLICE_1174 \CIC1Cos/SLICE_1174 ( .B1(\CIC1Cos/d3_45 ), 
    .A1(\CIC1Cos/d2_45 ), .B0(\CIC1Cos/d3_44 ), .A0(\CIC1Cos/d2_44 ), 
    .FCI(\CIC1Cos/n11696 ), .F0(\CIC1Cos/n5389 ), .F1(\CIC1Cos/n5388 ), 
    .FCO(\CIC1Cos/n11697 ));
  CIC1Cos_SLICE_1175 \CIC1Cos/SLICE_1175 ( .B1(\CIC1Cos/d3_57 ), 
    .A1(\CIC1Cos/d2_57 ), .B0(\CIC1Cos/d3_56 ), .A0(\CIC1Cos/d2_56 ), 
    .FCI(\CIC1Cos/n11702 ), .F0(\CIC1Cos/n5377 ), .F1(\CIC1Cos/n5376 ), 
    .FCO(\CIC1Cos/n11703 ));
  CIC1Cos_SLICE_1176 \CIC1Cos/SLICE_1176 ( .B1(\CIC1Cos/d2_65 ), 
    .A1(\CIC1Cos/d1_65 ), .B0(\CIC1Cos/d2_64 ), .A0(\CIC1Cos/d1_64 ), 
    .FCI(\CIC1Cos/n11747 ), .F0(\CIC1Cos/n5217 ), .F1(\CIC1Cos/n5216 ), 
    .FCO(\CIC1Cos/n11748 ));
  CIC1Cos_SLICE_1177 \CIC1Cos/SLICE_1177 ( .B1(\CIC1Cos/d2_63 ), 
    .A1(\CIC1Cos/d1_63 ), .B0(\CIC1Cos/d2_62 ), .A0(\CIC1Cos/d1_62 ), 
    .FCI(\CIC1Cos/n11746 ), .F0(\CIC1Cos/n5219 ), .F1(\CIC1Cos/n5218 ), 
    .FCO(\CIC1Cos/n11747 ));
  CIC1Cos_SLICE_1178 \CIC1Cos/SLICE_1178 ( .D1(\CIC1Cos/d1_51 ), 
    .C1(\CIC1Cos/n5230 ), .B1(\CIC1Cos/n5208 ), .A1(\CIC1Cos/d2_51 ), 
    .D0(\CIC1Cos/d1_50 ), .C0(\CIC1Cos/n5231 ), .B0(\CIC1Cos/n5208 ), 
    .A0(\CIC1Cos/d2_50 ), .DI1(\CIC1Cos/d2_71_N_490_51 ), 
    .DI0(\CIC1Cos/d2_71_N_490_50 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11721 ), 
    .F0(\CIC1Cos/d2_71_N_490_50 ), .Q0(\CIC1Cos/d2_50 ), 
    .F1(\CIC1Cos/d2_71_N_490_51 ), .Q1(\CIC1Cos/d2_51 ), 
    .FCO(\CIC1Cos/n11722 ));
  CIC1Cos_SLICE_1179 \CIC1Cos/SLICE_1179 ( .B1(\CIC1Cos/d4_47 ), 
    .A1(\CIC1Cos/d3_47 ), .B0(\CIC1Cos/d4_46 ), .A0(\CIC1Cos/d3_46 ), 
    .FCI(\CIC1Cos/n11656 ), .F0(\CIC1Cos/n5539 ), .F1(\CIC1Cos/n5538 ), 
    .FCO(\CIC1Cos/n11657 ));
  CIC1Cos_SLICE_1180 \CIC1Cos/SLICE_1180 ( .D1(\CIC1Cos/d1_47 ), 
    .C1(\CIC1Cos/n5234 ), .B1(\CIC1Cos/n5208 ), .A1(\CIC1Cos/d2_47 ), 
    .D0(\CIC1Cos/d1_46 ), .C0(\CIC1Cos/n5235 ), .B0(\CIC1Cos/n5208 ), 
    .A0(\CIC1Cos/d2_46 ), .DI1(\CIC1Cos/d2_71_N_490_47 ), 
    .DI0(\CIC1Cos/d2_71_N_490_46 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11719 ), 
    .F0(\CIC1Cos/d2_71_N_490_46 ), .Q0(\CIC1Cos/d2_46 ), 
    .F1(\CIC1Cos/d2_71_N_490_47 ), .Q1(\CIC1Cos/d2_47 ), 
    .FCO(\CIC1Cos/n11720 ));
  CIC1Cos_SLICE_1181 \CIC1Cos/SLICE_1181 ( .D1(\CIC1Cos/d1_45 ), 
    .C1(\CIC1Cos/n5236 ), .B1(\CIC1Cos/n5208 ), .A1(\CIC1Cos/d2_45 ), 
    .D0(\CIC1Cos/d1_44 ), .C0(\CIC1Cos/n5237 ), .B0(\CIC1Cos/n5208 ), 
    .A0(\CIC1Cos/d2_44 ), .DI1(\CIC1Cos/d2_71_N_490_45 ), 
    .DI0(\CIC1Cos/d2_71_N_490_44 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11718 ), 
    .F0(\CIC1Cos/d2_71_N_490_44 ), .Q0(\CIC1Cos/d2_44 ), 
    .F1(\CIC1Cos/d2_71_N_490_45 ), .Q1(\CIC1Cos/d2_45 ), 
    .FCO(\CIC1Cos/n11719 ));
  CIC1Cos_SLICE_1182 \CIC1Cos/SLICE_1182 ( .D1(\CIC1Cos/d1_49 ), 
    .C1(\CIC1Cos/n5232 ), .B1(\CIC1Cos/n5208 ), .A1(\CIC1Cos/d2_49 ), 
    .D0(\CIC1Cos/d1_48 ), .C0(\CIC1Cos/n5233 ), .B0(\CIC1Cos/n5208 ), 
    .A0(\CIC1Cos/d2_48 ), .DI1(\CIC1Cos/d2_71_N_490_49 ), 
    .DI0(\CIC1Cos/d2_71_N_490_48 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11720 ), 
    .F0(\CIC1Cos/d2_71_N_490_48 ), .Q0(\CIC1Cos/d2_48 ), 
    .F1(\CIC1Cos/d2_71_N_490_49 ), .Q1(\CIC1Cos/d2_49 ), 
    .FCO(\CIC1Cos/n11721 ));
  CIC1Cos_SLICE_1183 \CIC1Cos/SLICE_1183 ( .B1(\CIC1Cos/d2_61 ), 
    .A1(\CIC1Cos/d1_61 ), .B0(\CIC1Cos/d2_60 ), .A0(\CIC1Cos/d1_60 ), 
    .FCI(\CIC1Cos/n11745 ), .F0(\CIC1Cos/n5221 ), .F1(\CIC1Cos/n5220 ), 
    .FCO(\CIC1Cos/n11746 ));
  CIC1Cos_SLICE_1184 \CIC1Cos/SLICE_1184 ( .B1(\CIC1Cos/d3_43 ), 
    .A1(\CIC1Cos/d2_43 ), .B0(\CIC1Cos/d3_42 ), .A0(\CIC1Cos/d2_42 ), 
    .FCI(\CIC1Cos/n11695 ), .F0(\CIC1Cos/n5391 ), .F1(\CIC1Cos/n5390 ), 
    .FCO(\CIC1Cos/n11696 ));
  CIC1Cos_SLICE_1185 \CIC1Cos/SLICE_1185 ( .B1(\CIC1Cos/d3_55 ), 
    .A1(\CIC1Cos/d2_55 ), .B0(\CIC1Cos/d3_54 ), .A0(\CIC1Cos/d2_54 ), 
    .FCI(\CIC1Cos/n11701 ), .F0(\CIC1Cos/n5379 ), .F1(\CIC1Cos/n5378 ), 
    .FCO(\CIC1Cos/n11702 ));
  CIC1Cos_SLICE_1186 \CIC1Cos/SLICE_1186 ( .B1(\CIC1Cos/d2_59 ), 
    .A1(\CIC1Cos/d1_59 ), .B0(\CIC1Cos/d2_58 ), .A0(\CIC1Cos/d1_58 ), 
    .FCI(\CIC1Cos/n11744 ), .F0(\CIC1Cos/n5223 ), .F1(\CIC1Cos/n5222 ), 
    .FCO(\CIC1Cos/n11745 ));
  CIC1Cos_SLICE_1187 \CIC1Cos/SLICE_1187 ( .B1(\CIC1Cos/d2_57 ), 
    .A1(\CIC1Cos/d1_57 ), .B0(\CIC1Cos/d2_56 ), .A0(\CIC1Cos/d1_56 ), 
    .FCI(\CIC1Cos/n11743 ), .F0(\CIC1Cos/n5225 ), .F1(\CIC1Cos/n5224 ), 
    .FCO(\CIC1Cos/n11744 ));
  CIC1Cos_SLICE_1188 \CIC1Cos/SLICE_1188 ( .B1(\CIC1Cos/d4_45 ), 
    .A1(\CIC1Cos/d3_45 ), .B0(\CIC1Cos/d4_44 ), .A0(\CIC1Cos/d3_44 ), 
    .FCI(\CIC1Cos/n11655 ), .F0(\CIC1Cos/n5541 ), .F1(\CIC1Cos/n5540 ), 
    .FCO(\CIC1Cos/n11656 ));
  CIC1Cos_SLICE_1189 \CIC1Cos/SLICE_1189 ( .B1(\CIC1Cos/d4_43 ), 
    .A1(\CIC1Cos/d3_43 ), .B0(\CIC1Cos/d4_42 ), .A0(\CIC1Cos/d3_42 ), 
    .FCI(\CIC1Cos/n11654 ), .F0(\CIC1Cos/n5543 ), .F1(\CIC1Cos/n5542 ), 
    .FCO(\CIC1Cos/n11655 ));
  CIC1Cos_SLICE_1190 \CIC1Cos/SLICE_1190 ( .B1(\CIC1Cos/d4_41 ), 
    .A1(\CIC1Cos/d3_41 ), .B0(\CIC1Cos/d4_40 ), .A0(\CIC1Cos/d3_40 ), 
    .FCI(\CIC1Cos/n11653 ), .F0(\CIC1Cos/n5545 ), .F1(\CIC1Cos/n5544 ), 
    .FCO(\CIC1Cos/n11654 ));
  CIC1Cos_SLICE_1191 \CIC1Cos/SLICE_1191 ( .B1(\CIC1Cos/d4_39 ), 
    .A1(\CIC1Cos/d3_39 ), .B0(\CIC1Cos/d4_38 ), .A0(\CIC1Cos/d3_38 ), 
    .FCI(\CIC1Cos/n11652 ), .F0(\CIC1Cos/n5547 ), .F1(\CIC1Cos/n5546 ), 
    .FCO(\CIC1Cos/n11653 ));
  CIC1Cos_SLICE_1192 \CIC1Cos/SLICE_1192 ( .B1(\CIC1Cos/d4_37 ), 
    .A1(\CIC1Cos/d3_37 ), .B0(\CIC1Cos/d4_36 ), .A0(\CIC1Cos/d3_36 ), 
    .F1(\CIC1Cos/n5548 ), .FCO(\CIC1Cos/n11652 ));
  CIC1Cos_SLICE_1193 \CIC1Cos/SLICE_1193 ( .D1(\CIC1Cos/d3_71 ), 
    .C1(\CIC1Cos/n5514 ), .B1(\CIC1Cos/n5512 ), .A1(\CIC1Cos/d4_71 ), 
    .D0(\CIC1Cos/d3_70 ), .C0(\CIC1Cos/n5515 ), .B0(\CIC1Cos/n5512 ), 
    .A0(\CIC1Cos/d4_70 ), .DI1(\CIC1Cos/d4_71_N_634_71 ), 
    .DI0(\CIC1Cos/d4_71_N_634_70 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11649 ), 
    .F0(\CIC1Cos/d4_71_N_634_70 ), .Q0(\CIC1Cos/d4_70 ), 
    .F1(\CIC1Cos/d4_71_N_634_71 ), .Q1(\CIC1Cos/d4_71 ));
  CIC1Cos_SLICE_1194 \CIC1Cos/SLICE_1194 ( .B1(\CIC1Cos/d_d_tmp_46 ), 
    .A1(\CIC1Cos/d_tmp_46 ), .B0(\CIC1Cos/d_d_tmp_45 ), 
    .A0(\CIC1Cos/d_tmp_45 ), .FCI(\CIC1Cos/n11317 ), .F0(\CIC1Cos/n6148 ), 
    .F1(\CIC1Cos/n6147 ), .FCO(\CIC1Cos/n11318 ));
  CIC1Cos_SLICE_1195 \CIC1Cos/SLICE_1195 ( .D1(\CIC1Cos/d3_69 ), 
    .C1(\CIC1Cos/n5516 ), .B1(\CIC1Cos/n5512 ), .A1(\CIC1Cos/d4_69 ), 
    .D0(\CIC1Cos/d3_68 ), .C0(\CIC1Cos/n5517 ), .B0(\CIC1Cos/n5512 ), 
    .A0(\CIC1Cos/d4_68 ), .DI1(\CIC1Cos/d4_71_N_634_69 ), 
    .DI0(\CIC1Cos/d4_71_N_634_68 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11648 ), 
    .F0(\CIC1Cos/d4_71_N_634_68 ), .Q0(\CIC1Cos/d4_68 ), 
    .F1(\CIC1Cos/d4_71_N_634_69 ), .Q1(\CIC1Cos/d4_69 ), 
    .FCO(\CIC1Cos/n11649 ));
  CIC1Cos_SLICE_1196 \CIC1Cos/SLICE_1196 ( .D1(\CIC1Cos/d3_67 ), 
    .C1(\CIC1Cos/n5518 ), .B1(\CIC1Cos/n5512 ), .A1(\CIC1Cos/d4_67 ), 
    .D0(\CIC1Cos/d3_66 ), .C0(\CIC1Cos/n5519 ), .B0(\CIC1Cos/n5512 ), 
    .A0(\CIC1Cos/d4_66 ), .DI1(\CIC1Cos/d4_71_N_634_67 ), 
    .DI0(\CIC1Cos/d4_71_N_634_66 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11647 ), 
    .F0(\CIC1Cos/d4_71_N_634_66 ), .Q0(\CIC1Cos/d4_66 ), 
    .F1(\CIC1Cos/d4_71_N_634_67 ), .Q1(\CIC1Cos/d4_67 ), 
    .FCO(\CIC1Cos/n11648 ));
  CIC1Cos_SLICE_1197 \CIC1Cos/SLICE_1197 ( .D1(\CIC1Cos/d3_65 ), 
    .C1(\CIC1Cos/n5520 ), .B1(\CIC1Cos/n5512 ), .A1(\CIC1Cos/d4_65 ), 
    .D0(\CIC1Cos/d3_64 ), .C0(\CIC1Cos/n5521 ), .B0(\CIC1Cos/n5512 ), 
    .A0(\CIC1Cos/d4_64 ), .DI1(\CIC1Cos/d4_71_N_634_65 ), 
    .DI0(\CIC1Cos/d4_71_N_634_64 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11646 ), 
    .F0(\CIC1Cos/d4_71_N_634_64 ), .Q0(\CIC1Cos/d4_64 ), 
    .F1(\CIC1Cos/d4_71_N_634_65 ), .Q1(\CIC1Cos/d4_65 ), 
    .FCO(\CIC1Cos/n11647 ));
  CIC1Cos_SLICE_1198 \CIC1Cos/SLICE_1198 ( .D1(\CIC1Cos/d3_63 ), 
    .C1(\CIC1Cos/n5522 ), .B1(\CIC1Cos/n5512 ), .A1(\CIC1Cos/d4_63 ), 
    .D0(\CIC1Cos/d3_62 ), .C0(\CIC1Cos/n5523 ), .B0(\CIC1Cos/n5512 ), 
    .A0(\CIC1Cos/d4_62 ), .DI1(\CIC1Cos/d4_71_N_634_63 ), 
    .DI0(\CIC1Cos/d4_71_N_634_62 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11645 ), 
    .F0(\CIC1Cos/d4_71_N_634_62 ), .Q0(\CIC1Cos/d4_62 ), 
    .F1(\CIC1Cos/d4_71_N_634_63 ), .Q1(\CIC1Cos/d4_63 ), 
    .FCO(\CIC1Cos/n11646 ));
  CIC1Cos_SLICE_1199 \CIC1Cos/SLICE_1199 ( .D1(\CIC1Cos/d3_61 ), 
    .C1(\CIC1Cos/n5524 ), .B1(\CIC1Cos/n5512 ), .A1(\CIC1Cos/d4_61 ), 
    .D0(\CIC1Cos/d3_60 ), .C0(\CIC1Cos/n5525 ), .B0(\CIC1Cos/n5512 ), 
    .A0(\CIC1Cos/d4_60 ), .DI1(\CIC1Cos/d4_71_N_634_61 ), 
    .DI0(\CIC1Cos/d4_71_N_634_60 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11644 ), 
    .F0(\CIC1Cos/d4_71_N_634_60 ), .Q0(\CIC1Cos/d4_60 ), 
    .F1(\CIC1Cos/d4_71_N_634_61 ), .Q1(\CIC1Cos/d4_61 ), 
    .FCO(\CIC1Cos/n11645 ));
  CIC1Cos_SLICE_1200 \CIC1Cos/SLICE_1200 ( .D1(\CIC1Cos/d3_59 ), 
    .C1(\CIC1Cos/n5526 ), .B1(\CIC1Cos/n5512 ), .A1(\CIC1Cos/d4_59 ), 
    .D0(\CIC1Cos/d3_58 ), .C0(\CIC1Cos/n5527 ), .B0(\CIC1Cos/n5512 ), 
    .A0(\CIC1Cos/d4_58 ), .DI1(\CIC1Cos/d4_71_N_634_59 ), 
    .DI0(\CIC1Cos/d4_71_N_634_58 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11643 ), 
    .F0(\CIC1Cos/d4_71_N_634_58 ), .Q0(\CIC1Cos/d4_58 ), 
    .F1(\CIC1Cos/d4_71_N_634_59 ), .Q1(\CIC1Cos/d4_59 ), 
    .FCO(\CIC1Cos/n11644 ));
  CIC1Cos_SLICE_1201 \CIC1Cos/SLICE_1201 ( .D1(\CIC1Cos/d3_57 ), 
    .C1(\CIC1Cos/n5528 ), .B1(\CIC1Cos/n5512 ), .A1(\CIC1Cos/d4_57 ), 
    .D0(\CIC1Cos/d3_56 ), .C0(\CIC1Cos/n5529 ), .B0(\CIC1Cos/n5512 ), 
    .A0(\CIC1Cos/d4_56 ), .DI1(\CIC1Cos/d4_71_N_634_57 ), 
    .DI0(\CIC1Cos/d4_71_N_634_56 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11642 ), 
    .F0(\CIC1Cos/d4_71_N_634_56 ), .Q0(\CIC1Cos/d4_56 ), 
    .F1(\CIC1Cos/d4_71_N_634_57 ), .Q1(\CIC1Cos/d4_57 ), 
    .FCO(\CIC1Cos/n11643 ));
  CIC1Cos_SLICE_1202 \CIC1Cos/SLICE_1202 ( .D1(\CIC1Cos/d3_55 ), 
    .C1(\CIC1Cos/n5530 ), .B1(\CIC1Cos/n5512 ), .A1(\CIC1Cos/d4_55 ), 
    .D0(\CIC1Cos/d3_54 ), .C0(\CIC1Cos/n5531 ), .B0(\CIC1Cos/n5512 ), 
    .A0(\CIC1Cos/d4_54 ), .DI1(\CIC1Cos/d4_71_N_634_55 ), 
    .DI0(\CIC1Cos/d4_71_N_634_54 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11641 ), 
    .F0(\CIC1Cos/d4_71_N_634_54 ), .Q0(\CIC1Cos/d4_54 ), 
    .F1(\CIC1Cos/d4_71_N_634_55 ), .Q1(\CIC1Cos/d4_55 ), 
    .FCO(\CIC1Cos/n11642 ));
  CIC1Cos_SLICE_1203 \CIC1Cos/SLICE_1203 ( .D1(\CIC1Cos/d3_53 ), 
    .C1(\CIC1Cos/n5532 ), .B1(\CIC1Cos/n5512 ), .A1(\CIC1Cos/d4_53 ), 
    .D0(\CIC1Cos/d3_52 ), .C0(\CIC1Cos/n5533 ), .B0(\CIC1Cos/n5512 ), 
    .A0(\CIC1Cos/d4_52 ), .DI1(\CIC1Cos/d4_71_N_634_53 ), 
    .DI0(\CIC1Cos/d4_71_N_634_52 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11640 ), 
    .F0(\CIC1Cos/d4_71_N_634_52 ), .Q0(\CIC1Cos/d4_52 ), 
    .F1(\CIC1Cos/d4_71_N_634_53 ), .Q1(\CIC1Cos/d4_53 ), 
    .FCO(\CIC1Cos/n11641 ));
  CIC1Cos_SLICE_1204 \CIC1Cos/SLICE_1204 ( .D1(\CIC1Cos/d3_51 ), 
    .C1(\CIC1Cos/n5534 ), .B1(\CIC1Cos/n5512 ), .A1(\CIC1Cos/d4_51 ), 
    .D0(\CIC1Cos/d3_50 ), .C0(\CIC1Cos/n5535 ), .B0(\CIC1Cos/n5512 ), 
    .A0(\CIC1Cos/d4_50 ), .DI1(\CIC1Cos/d4_71_N_634_51 ), 
    .DI0(\CIC1Cos/d4_71_N_634_50 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11639 ), 
    .F0(\CIC1Cos/d4_71_N_634_50 ), .Q0(\CIC1Cos/d4_50 ), 
    .F1(\CIC1Cos/d4_71_N_634_51 ), .Q1(\CIC1Cos/d4_51 ), 
    .FCO(\CIC1Cos/n11640 ));
  CIC1Cos_SLICE_1205 \CIC1Cos/SLICE_1205 ( .D1(\CIC1Cos/d3_49 ), 
    .C1(\CIC1Cos/n5536 ), .B1(\CIC1Cos/n5512 ), .A1(\CIC1Cos/d4_49 ), 
    .D0(\CIC1Cos/d3_48 ), .C0(\CIC1Cos/n5537 ), .B0(\CIC1Cos/n5512 ), 
    .A0(\CIC1Cos/d4_48 ), .DI1(\CIC1Cos/d4_71_N_634_49 ), 
    .DI0(\CIC1Cos/d4_71_N_634_48 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11638 ), 
    .F0(\CIC1Cos/d4_71_N_634_48 ), .Q0(\CIC1Cos/d4_48 ), 
    .F1(\CIC1Cos/d4_71_N_634_49 ), .Q1(\CIC1Cos/d4_49 ), 
    .FCO(\CIC1Cos/n11639 ));
  CIC1Cos_SLICE_1206 \CIC1Cos/SLICE_1206 ( .D1(\CIC1Cos/d3_47 ), 
    .C1(\CIC1Cos/n5538 ), .B1(\CIC1Cos/n5512 ), .A1(\CIC1Cos/d4_47 ), 
    .D0(\CIC1Cos/d3_46 ), .C0(\CIC1Cos/n5539 ), .B0(\CIC1Cos/n5512 ), 
    .A0(\CIC1Cos/d4_46 ), .DI1(\CIC1Cos/d4_71_N_634_47 ), 
    .DI0(\CIC1Cos/d4_71_N_634_46 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11637 ), 
    .F0(\CIC1Cos/d4_71_N_634_46 ), .Q0(\CIC1Cos/d4_46 ), 
    .F1(\CIC1Cos/d4_71_N_634_47 ), .Q1(\CIC1Cos/d4_47 ), 
    .FCO(\CIC1Cos/n11638 ));
  CIC1Cos_SLICE_1207 \CIC1Cos/SLICE_1207 ( .D1(\CIC1Cos/d3_45 ), 
    .C1(\CIC1Cos/n5540 ), .B1(\CIC1Cos/n5512 ), .A1(\CIC1Cos/d4_45 ), 
    .D0(\CIC1Cos/d3_44 ), .C0(\CIC1Cos/n5541 ), .B0(\CIC1Cos/n5512 ), 
    .A0(\CIC1Cos/d4_44 ), .DI1(\CIC1Cos/d4_71_N_634_45 ), 
    .DI0(\CIC1Cos/d4_71_N_634_44 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11636 ), 
    .F0(\CIC1Cos/d4_71_N_634_44 ), .Q0(\CIC1Cos/d4_44 ), 
    .F1(\CIC1Cos/d4_71_N_634_45 ), .Q1(\CIC1Cos/d4_45 ), 
    .FCO(\CIC1Cos/n11637 ));
  CIC1Cos_SLICE_1208 \CIC1Cos/SLICE_1208 ( .D1(\CIC1Cos/d3_43 ), 
    .C1(\CIC1Cos/n5542 ), .B1(\CIC1Cos/n5512 ), .A1(\CIC1Cos/d4_43 ), 
    .D0(\CIC1Cos/d3_42 ), .C0(\CIC1Cos/n5543 ), .B0(\CIC1Cos/n5512 ), 
    .A0(\CIC1Cos/d4_42 ), .DI1(\CIC1Cos/d4_71_N_634_43 ), 
    .DI0(\CIC1Cos/d4_71_N_634_42 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11635 ), 
    .F0(\CIC1Cos/d4_71_N_634_42 ), .Q0(\CIC1Cos/d4_42 ), 
    .F1(\CIC1Cos/d4_71_N_634_43 ), .Q1(\CIC1Cos/d4_43 ), 
    .FCO(\CIC1Cos/n11636 ));
  CIC1Cos_SLICE_1209 \CIC1Cos/SLICE_1209 ( .D1(\CIC1Cos/d3_41 ), 
    .C1(\CIC1Cos/n5544 ), .B1(\CIC1Cos/n5512 ), .A1(\CIC1Cos/d4_41 ), 
    .D0(\CIC1Cos/d3_40 ), .C0(\CIC1Cos/n5545 ), .B0(\CIC1Cos/n5512 ), 
    .A0(\CIC1Cos/d4_40 ), .DI1(\CIC1Cos/d4_71_N_634_41 ), 
    .DI0(\CIC1Cos/d4_71_N_634_40 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11634 ), 
    .F0(\CIC1Cos/d4_71_N_634_40 ), .Q0(\CIC1Cos/d4_40 ), 
    .F1(\CIC1Cos/d4_71_N_634_41 ), .Q1(\CIC1Cos/d4_41 ), 
    .FCO(\CIC1Cos/n11635 ));
  CIC1Cos_SLICE_1210 \CIC1Cos/SLICE_1210 ( .D1(\CIC1Cos/d3_39 ), 
    .C1(\CIC1Cos/n5546 ), .B1(\CIC1Cos/n5512 ), .A1(\CIC1Cos/d4_39 ), 
    .D0(\CIC1Cos/d3_38 ), .C0(\CIC1Cos/n5547 ), .B0(\CIC1Cos/n5512 ), 
    .A0(\CIC1Cos/d4_38 ), .DI1(\CIC1Cos/d4_71_N_634_39 ), 
    .DI0(\CIC1Cos/d4_71_N_634_38 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11633 ), 
    .F0(\CIC1Cos/d4_71_N_634_38 ), .Q0(\CIC1Cos/d4_38 ), 
    .F1(\CIC1Cos/d4_71_N_634_39 ), .Q1(\CIC1Cos/d4_39 ), 
    .FCO(\CIC1Cos/n11634 ));
  CIC1Cos_SLICE_1211 \CIC1Cos/SLICE_1211 ( .D1(\CIC1Cos/d3_37 ), 
    .C1(\CIC1Cos/n5548 ), .B1(\CIC1Cos/n5512 ), .A1(\CIC1Cos/d4_37 ), 
    .D0(\CIC1Cos/d3_36 ), .C0(\CIC1Cos/n5549 ), .B0(\CIC1Cos/n5512 ), 
    .A0(\CIC1Cos/d4_36 ), .DI1(\CIC1Cos/d4_71_N_634_37 ), 
    .DI0(\CIC1Cos/d4_71_N_634_36 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11632 ), 
    .F0(\CIC1Cos/d4_71_N_634_36 ), .Q0(\CIC1Cos/d4_36 ), 
    .F1(\CIC1Cos/d4_71_N_634_37 ), .Q1(\CIC1Cos/d4_37 ), 
    .FCO(\CIC1Cos/n11633 ));
  CIC1Cos_SLICE_1212 \CIC1Cos/SLICE_1212 ( .A1(\CIC1Cos/n5512 ), 
    .FCO(\CIC1Cos/n11632 ));
  CIC1Cos_SLICE_1213 \CIC1Cos/SLICE_1213 ( .B1(\CIC1Cos/d5_71 ), 
    .A1(\CIC1Cos/d4_71 ), .B0(\CIC1Cos/d5_70 ), .A0(\CIC1Cos/d4_70 ), 
    .FCI(\CIC1Cos/n11627 ), .F0(\CIC1Cos/n5667 ), .F1(\CIC1Cos/n5666 ));
  CIC1Cos_SLICE_1214 \CIC1Cos/SLICE_1214 ( .B1(\CIC1Cos/d5_69 ), 
    .A1(\CIC1Cos/d4_69 ), .B0(\CIC1Cos/d5_68 ), .A0(\CIC1Cos/d4_68 ), 
    .FCI(\CIC1Cos/n11626 ), .F0(\CIC1Cos/n5669 ), .F1(\CIC1Cos/n5668 ), 
    .FCO(\CIC1Cos/n11627 ));
  CIC1Cos_SLICE_1215 \CIC1Cos/SLICE_1215 ( .B1(\CIC1Cos/d5_67 ), 
    .A1(\CIC1Cos/d4_67 ), .B0(\CIC1Cos/d5_66 ), .A0(\CIC1Cos/d4_66 ), 
    .FCI(\CIC1Cos/n11625 ), .F0(\CIC1Cos/n5671 ), .F1(\CIC1Cos/n5670 ), 
    .FCO(\CIC1Cos/n11626 ));
  CIC1Cos_SLICE_1216 \CIC1Cos/SLICE_1216 ( .B1(\CIC1Cos/d5_65 ), 
    .A1(\CIC1Cos/d4_65 ), .B0(\CIC1Cos/d5_64 ), .A0(\CIC1Cos/d4_64 ), 
    .FCI(\CIC1Cos/n11624 ), .F0(\CIC1Cos/n5673 ), .F1(\CIC1Cos/n5672 ), 
    .FCO(\CIC1Cos/n11625 ));
  CIC1Cos_SLICE_1217 \CIC1Cos/SLICE_1217 ( .B1(\CIC1Cos/d5_63 ), 
    .A1(\CIC1Cos/d4_63 ), .B0(\CIC1Cos/d5_62 ), .A0(\CIC1Cos/d4_62 ), 
    .FCI(\CIC1Cos/n11623 ), .F0(\CIC1Cos/n5675 ), .F1(\CIC1Cos/n5674 ), 
    .FCO(\CIC1Cos/n11624 ));
  CIC1Cos_SLICE_1218 \CIC1Cos/SLICE_1218 ( .B1(\CIC1Cos/d5_61 ), 
    .A1(\CIC1Cos/d4_61 ), .B0(\CIC1Cos/d5_60 ), .A0(\CIC1Cos/d4_60 ), 
    .FCI(\CIC1Cos/n11622 ), .F0(\CIC1Cos/n5677 ), .F1(\CIC1Cos/n5676 ), 
    .FCO(\CIC1Cos/n11623 ));
  CIC1Cos_SLICE_1219 \CIC1Cos/SLICE_1219 ( .B1(\CIC1Cos/d5_59 ), 
    .A1(\CIC1Cos/d4_59 ), .B0(\CIC1Cos/d5_58 ), .A0(\CIC1Cos/d4_58 ), 
    .FCI(\CIC1Cos/n11621 ), .F0(\CIC1Cos/n5679 ), .F1(\CIC1Cos/n5678 ), 
    .FCO(\CIC1Cos/n11622 ));
  CIC1Cos_SLICE_1220 \CIC1Cos/SLICE_1220 ( .B1(\CIC1Cos/d5_57 ), 
    .A1(\CIC1Cos/d4_57 ), .B0(\CIC1Cos/d5_56 ), .A0(\CIC1Cos/d4_56 ), 
    .FCI(\CIC1Cos/n11620 ), .F0(\CIC1Cos/n5681 ), .F1(\CIC1Cos/n5680 ), 
    .FCO(\CIC1Cos/n11621 ));
  CIC1Cos_SLICE_1221 \CIC1Cos/SLICE_1221 ( .B1(\CIC1Cos/d5_55 ), 
    .A1(\CIC1Cos/d4_55 ), .B0(\CIC1Cos/d5_54 ), .A0(\CIC1Cos/d4_54 ), 
    .FCI(\CIC1Cos/n11619 ), .F0(\CIC1Cos/n5683 ), .F1(\CIC1Cos/n5682 ), 
    .FCO(\CIC1Cos/n11620 ));
  CIC1Cos_SLICE_1222 \CIC1Cos/SLICE_1222 ( .B1(\CIC1Cos/d5_53 ), 
    .A1(\CIC1Cos/d4_53 ), .B0(\CIC1Cos/d5_52 ), .A0(\CIC1Cos/d4_52 ), 
    .FCI(\CIC1Cos/n11618 ), .F0(\CIC1Cos/n5685 ), .F1(\CIC1Cos/n5684 ), 
    .FCO(\CIC1Cos/n11619 ));
  CIC1Cos_SLICE_1223 \CIC1Cos/SLICE_1223 ( .B1(\CIC1Cos/d5_51 ), 
    .A1(\CIC1Cos/d4_51 ), .B0(\CIC1Cos/d5_50 ), .A0(\CIC1Cos/d4_50 ), 
    .FCI(\CIC1Cos/n11617 ), .F0(\CIC1Cos/n5687 ), .F1(\CIC1Cos/n5686 ), 
    .FCO(\CIC1Cos/n11618 ));
  CIC1Cos_SLICE_1224 \CIC1Cos/SLICE_1224 ( .B1(\CIC1Cos/d5_49 ), 
    .A1(\CIC1Cos/d4_49 ), .B0(\CIC1Cos/d5_48 ), .A0(\CIC1Cos/d4_48 ), 
    .FCI(\CIC1Cos/n11616 ), .F0(\CIC1Cos/n5689 ), .F1(\CIC1Cos/n5688 ), 
    .FCO(\CIC1Cos/n11617 ));
  CIC1Cos_SLICE_1225 \CIC1Cos/SLICE_1225 ( .B1(\CIC1Cos/d5_47 ), 
    .A1(\CIC1Cos/d4_47 ), .B0(\CIC1Cos/d5_46 ), .A0(\CIC1Cos/d4_46 ), 
    .FCI(\CIC1Cos/n11615 ), .F0(\CIC1Cos/n5691 ), .F1(\CIC1Cos/n5690 ), 
    .FCO(\CIC1Cos/n11616 ));
  CIC1Cos_SLICE_1226 \CIC1Cos/SLICE_1226 ( .B1(\CIC1Cos/d5_45 ), 
    .A1(\CIC1Cos/d4_45 ), .B0(\CIC1Cos/d5_44 ), .A0(\CIC1Cos/d4_44 ), 
    .FCI(\CIC1Cos/n11614 ), .F0(\CIC1Cos/n5693 ), .F1(\CIC1Cos/n5692 ), 
    .FCO(\CIC1Cos/n11615 ));
  CIC1Cos_SLICE_1227 \CIC1Cos/SLICE_1227 ( .B1(\CIC1Cos/d5_43 ), 
    .A1(\CIC1Cos/d4_43 ), .B0(\CIC1Cos/d5_42 ), .A0(\CIC1Cos/d4_42 ), 
    .FCI(\CIC1Cos/n11613 ), .F0(\CIC1Cos/n5695 ), .F1(\CIC1Cos/n5694 ), 
    .FCO(\CIC1Cos/n11614 ));
  CIC1Cos_SLICE_1228 \CIC1Cos/SLICE_1228 ( .B1(\CIC1Cos/d5_41 ), 
    .A1(\CIC1Cos/d4_41 ), .B0(\CIC1Cos/d5_40 ), .A0(\CIC1Cos/d4_40 ), 
    .FCI(\CIC1Cos/n11612 ), .F0(\CIC1Cos/n5697 ), .F1(\CIC1Cos/n5696 ), 
    .FCO(\CIC1Cos/n11613 ));
  CIC1Cos_SLICE_1229 \CIC1Cos/SLICE_1229 ( .B1(\CIC1Cos/d5_39 ), 
    .A1(\CIC1Cos/d4_39 ), .B0(\CIC1Cos/d5_38 ), .A0(\CIC1Cos/d4_38 ), 
    .FCI(\CIC1Cos/n11611 ), .F0(\CIC1Cos/n5699 ), .F1(\CIC1Cos/n5698 ), 
    .FCO(\CIC1Cos/n11612 ));
  CIC1Cos_SLICE_1230 \CIC1Cos/SLICE_1230 ( .B1(\CIC1Cos/d5_37 ), 
    .A1(\CIC1Cos/d4_37 ), .B0(\CIC1Cos/d5_36 ), .A0(\CIC1Cos/d4_36 ), 
    .F1(\CIC1Cos/n5700 ), .FCO(\CIC1Cos/n11611 ));
  CIC1Cos_SLICE_1231 \CIC1Cos/SLICE_1231 ( .B1(\CIC1Cos/d_d_tmp_44 ), 
    .A1(\CIC1Cos/d_tmp_44 ), .B0(\CIC1Cos/d_d_tmp_43 ), 
    .A0(\CIC1Cos/d_tmp_43 ), .FCI(\CIC1Cos/n11316 ), .F0(\CIC1Cos/n6150 ), 
    .F1(\CIC1Cos/n6149 ), .FCO(\CIC1Cos/n11317 ));
  CIC1Cos_SLICE_1232 \CIC1Cos/SLICE_1232 ( .B1(\CIC1Cos/d_d_tmp_42 ), 
    .A1(\CIC1Cos/d_tmp_42 ), .B0(\CIC1Cos/d_d_tmp_41 ), 
    .A0(\CIC1Cos/d_tmp_41 ), .FCI(\CIC1Cos/n11315 ), .F0(\CIC1Cos/n6152 ), 
    .F1(\CIC1Cos/n6151 ), .FCO(\CIC1Cos/n11316 ));
  CIC1Cos_SLICE_1233 \CIC1Cos/SLICE_1233 ( .B1(\CIC1Cos/d_d_tmp_40 ), 
    .A1(\CIC1Cos/d_tmp_40 ), .B0(\CIC1Cos/d_d_tmp_39 ), 
    .A0(\CIC1Cos/d_tmp_39 ), .FCI(\CIC1Cos/n11314 ), .F0(\CIC1Cos/n6154 ), 
    .F1(\CIC1Cos/n6153 ), .FCO(\CIC1Cos/n11315 ));
  CIC1Cos_SLICE_1234 \CIC1Cos/SLICE_1234 ( .B1(\CIC1Cos/d_d_tmp_38 ), 
    .A1(\CIC1Cos/d_tmp_38 ), .B0(\CIC1Cos/d_d_tmp_37 ), 
    .A0(\CIC1Cos/d_tmp_37 ), .FCI(\CIC1Cos/n11313 ), .F0(\CIC1Cos/n6156 ), 
    .F1(\CIC1Cos/n6155 ), .FCO(\CIC1Cos/n11314 ));
  CIC1Cos_SLICE_1235 \CIC1Cos/SLICE_1235 ( .B1(\CIC1Cos/d_d_tmp_36 ), 
    .A1(\CIC1Cos/d_tmp_36 ), .F1(\CIC1Cos/n6157 ), .FCO(\CIC1Cos/n11313 ));
  CIC1Cos_SLICE_1236 \CIC1Cos/SLICE_1236 ( .D1(\CIC1Cos/d_tmp_71 ), 
    .C1(\CIC1Cos/n6122 ), .B1(\CIC1Cos/n6120 ), .A1(\CIC1Cos/d_d_tmp_71 ), 
    .D0(\CIC1Cos/d_tmp_70 ), .C0(\CIC1Cos/n6123 ), .B0(\CIC1Cos/n6120 ), 
    .A0(\CIC1Cos/d_d_tmp_70 ), .DI1(\CIC1Cos/d6_71_N_1459_71 ), 
    .DI0(\CIC1Cos/d6_71_N_1459_70 ), .CE(\CIC1Cos/osc_clk_enable_947 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11311 ), .F0(\CIC1Cos/d6_71_N_1459_70 ), 
    .Q0(\CIC1Cos/d6_70 ), .F1(\CIC1Cos/d6_71_N_1459_71 ), .Q1(\CIC1Cos/d6_71 ));
  CIC1Cos_SLICE_1237 \CIC1Cos/SLICE_1237 ( .D1(\CIC1Cos/d_tmp_69 ), 
    .C1(\CIC1Cos/n6124 ), .B1(\CIC1Cos/n6120 ), .A1(\CIC1Cos/d_d_tmp_69 ), 
    .D0(\CIC1Cos/d_tmp_68 ), .C0(\CIC1Cos/n6125 ), .B0(\CIC1Cos/n6120 ), 
    .A0(\CIC1Cos/d_d_tmp_68 ), .DI1(\CIC1Cos/d6_71_N_1459_69 ), 
    .DI0(\CIC1Cos/d6_71_N_1459_68 ), .CE(\CIC1Cos/osc_clk_enable_897 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11310 ), .F0(\CIC1Cos/d6_71_N_1459_68 ), 
    .Q0(\CIC1Cos/d6_68 ), .F1(\CIC1Cos/d6_71_N_1459_69 ), .Q1(\CIC1Cos/d6_69 ), 
    .FCO(\CIC1Cos/n11311 ));
  CIC1Cos_SLICE_1238 \CIC1Cos/SLICE_1238 ( .D1(\CIC1Cos/d_tmp_67 ), 
    .C1(\CIC1Cos/n6126 ), .B1(\CIC1Cos/n6120 ), .A1(\CIC1Cos/d_d_tmp_67 ), 
    .D0(\CIC1Cos/d_tmp_66 ), .C0(\CIC1Cos/n6127 ), .B0(\CIC1Cos/n6120 ), 
    .A0(\CIC1Cos/d_d_tmp_66 ), .DI1(\CIC1Cos/d6_71_N_1459_67 ), 
    .DI0(\CIC1Cos/d6_71_N_1459_66 ), .CE(\CIC1Cos/osc_clk_enable_897 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11309 ), .F0(\CIC1Cos/d6_71_N_1459_66 ), 
    .Q0(\CIC1Cos/d6_66 ), .F1(\CIC1Cos/d6_71_N_1459_67 ), .Q1(\CIC1Cos/d6_67 ), 
    .FCO(\CIC1Cos/n11310 ));
  CIC1Cos_SLICE_1239 \CIC1Cos/SLICE_1239 ( .D1(\CIC1Cos/d_tmp_65 ), 
    .C1(\CIC1Cos/n6128 ), .B1(\CIC1Cos/n6120 ), .A1(\CIC1Cos/d_d_tmp_65 ), 
    .D0(\CIC1Cos/d_tmp_64 ), .C0(\CIC1Cos/n6129 ), .B0(\CIC1Cos/n6120 ), 
    .A0(\CIC1Cos/d_d_tmp_64 ), .DI1(\CIC1Cos/d6_71_N_1459_65 ), 
    .DI0(\CIC1Cos/d6_71_N_1459_64 ), .CE(\CIC1Cos/osc_clk_enable_897 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11308 ), .F0(\CIC1Cos/d6_71_N_1459_64 ), 
    .Q0(\CIC1Cos/d6_64 ), .F1(\CIC1Cos/d6_71_N_1459_65 ), .Q1(\CIC1Cos/d6_65 ), 
    .FCO(\CIC1Cos/n11309 ));
  CIC1Cos_SLICE_1240 \CIC1Cos/SLICE_1240 ( .D1(\CIC1Cos/d_tmp_63 ), 
    .C1(\CIC1Cos/n6130 ), .B1(\CIC1Cos/n6120 ), .A1(\CIC1Cos/d_d_tmp_63 ), 
    .D0(\CIC1Cos/d_tmp_62 ), .C0(\CIC1Cos/n6131 ), .B0(\CIC1Cos/n6120 ), 
    .A0(\CIC1Cos/d_d_tmp_62 ), .DI1(\CIC1Cos/d6_71_N_1459_63 ), 
    .DI0(\CIC1Cos/d6_71_N_1459_62 ), .CE(\CIC1Cos/osc_clk_enable_897 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11307 ), .F0(\CIC1Cos/d6_71_N_1459_62 ), 
    .Q0(\CIC1Cos/d6_62 ), .F1(\CIC1Cos/d6_71_N_1459_63 ), .Q1(\CIC1Cos/d6_63 ), 
    .FCO(\CIC1Cos/n11308 ));
  CIC1Cos_SLICE_1241 \CIC1Cos/SLICE_1241 ( .D1(\CIC1Cos/d_tmp_61 ), 
    .C1(\CIC1Cos/n6132 ), .B1(\CIC1Cos/n6120 ), .A1(\CIC1Cos/d_d_tmp_61 ), 
    .D0(\CIC1Cos/d_tmp_60 ), .C0(\CIC1Cos/n6133 ), .B0(\CIC1Cos/n6120 ), 
    .A0(\CIC1Cos/d_d_tmp_60 ), .DI1(\CIC1Cos/d6_71_N_1459_61 ), 
    .DI0(\CIC1Cos/d6_71_N_1459_60 ), .CE(\CIC1Cos/osc_clk_enable_897 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11306 ), .F0(\CIC1Cos/d6_71_N_1459_60 ), 
    .Q0(\CIC1Cos/d6_60 ), .F1(\CIC1Cos/d6_71_N_1459_61 ), .Q1(\CIC1Cos/d6_61 ), 
    .FCO(\CIC1Cos/n11307 ));
  CIC1Cos_SLICE_1242 \CIC1Cos/SLICE_1242 ( .D1(\CIC1Cos/d_tmp_59 ), 
    .C1(\CIC1Cos/n6134 ), .B1(\CIC1Cos/n6120 ), .A1(\CIC1Cos/d_d_tmp_59 ), 
    .D0(\CIC1Cos/d_tmp_58 ), .C0(\CIC1Cos/n6135 ), .B0(\CIC1Cos/n6120 ), 
    .A0(\CIC1Cos/d_d_tmp_58 ), .DI1(\CIC1Cos/d6_71_N_1459_59 ), 
    .DI0(\CIC1Cos/d6_71_N_1459_58 ), .CE(\CIC1Cos/osc_clk_enable_897 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11305 ), .F0(\CIC1Cos/d6_71_N_1459_58 ), 
    .Q0(\CIC1Cos/d6_58 ), .F1(\CIC1Cos/d6_71_N_1459_59 ), .Q1(\CIC1Cos/d6_59 ), 
    .FCO(\CIC1Cos/n11306 ));
  CIC1Cos_SLICE_1243 \CIC1Cos/SLICE_1243 ( .D1(\CIC1Cos/d_tmp_57 ), 
    .C1(\CIC1Cos/n6136 ), .B1(\CIC1Cos/n6120 ), .A1(\CIC1Cos/d_d_tmp_57 ), 
    .D0(\CIC1Cos/d_tmp_56 ), .C0(\CIC1Cos/n6137 ), .B0(\CIC1Cos/n6120 ), 
    .A0(\CIC1Cos/d_d_tmp_56 ), .DI1(\CIC1Cos/d6_71_N_1459_57 ), 
    .DI0(\CIC1Cos/d6_71_N_1459_56 ), .CE(\CIC1Cos/osc_clk_enable_897 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11304 ), .F0(\CIC1Cos/d6_71_N_1459_56 ), 
    .Q0(\CIC1Cos/d6_56 ), .F1(\CIC1Cos/d6_71_N_1459_57 ), .Q1(\CIC1Cos/d6_57 ), 
    .FCO(\CIC1Cos/n11305 ));
  CIC1Cos_SLICE_1244 \CIC1Cos/SLICE_1244 ( .D1(\CIC1Cos/d_tmp_55 ), 
    .C1(\CIC1Cos/n6138 ), .B1(\CIC1Cos/n6120 ), .A1(\CIC1Cos/d_d_tmp_55 ), 
    .D0(\CIC1Cos/d_tmp_54 ), .C0(\CIC1Cos/n6139 ), .B0(\CIC1Cos/n6120 ), 
    .A0(\CIC1Cos/d_d_tmp_54 ), .DI1(\CIC1Cos/d6_71_N_1459_55 ), 
    .DI0(\CIC1Cos/d6_71_N_1459_54 ), .CE(\CIC1Cos/osc_clk_enable_897 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11303 ), .F0(\CIC1Cos/d6_71_N_1459_54 ), 
    .Q0(\CIC1Cos/d6_54 ), .F1(\CIC1Cos/d6_71_N_1459_55 ), .Q1(\CIC1Cos/d6_55 ), 
    .FCO(\CIC1Cos/n11304 ));
  CIC1Cos_SLICE_1245 \CIC1Cos/SLICE_1245 ( .D1(\CIC1Cos/d_tmp_53 ), 
    .C1(\CIC1Cos/n6140 ), .B1(\CIC1Cos/n6120 ), .A1(\CIC1Cos/d_d_tmp_53 ), 
    .D0(\CIC1Cos/d_tmp_52 ), .C0(\CIC1Cos/n6141 ), .B0(\CIC1Cos/n6120 ), 
    .A0(\CIC1Cos/d_d_tmp_52 ), .DI1(\CIC1Cos/d6_71_N_1459_53 ), 
    .DI0(\CIC1Cos/d6_71_N_1459_52 ), .CE(\CIC1Cos/osc_clk_enable_897 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11302 ), .F0(\CIC1Cos/d6_71_N_1459_52 ), 
    .Q0(\CIC1Cos/d6_52 ), .F1(\CIC1Cos/d6_71_N_1459_53 ), .Q1(\CIC1Cos/d6_53 ), 
    .FCO(\CIC1Cos/n11303 ));
  CIC1Cos_SLICE_1246 \CIC1Cos/SLICE_1246 ( .D1(\CIC1Cos/d_tmp_51 ), 
    .C1(\CIC1Cos/n6142 ), .B1(\CIC1Cos/n6120 ), .A1(\CIC1Cos/d_d_tmp_51 ), 
    .D0(\CIC1Cos/d_tmp_50 ), .C0(\CIC1Cos/n6143 ), .B0(\CIC1Cos/n6120 ), 
    .A0(\CIC1Cos/d_d_tmp_50 ), .DI1(\CIC1Cos/d6_71_N_1459_51 ), 
    .DI0(\CIC1Cos/d6_71_N_1459_50 ), .CE(\CIC1Cos/osc_clk_enable_897 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11301 ), .F0(\CIC1Cos/d6_71_N_1459_50 ), 
    .Q0(\CIC1Cos/d6_50 ), .F1(\CIC1Cos/d6_71_N_1459_51 ), .Q1(\CIC1Cos/d6_51 ), 
    .FCO(\CIC1Cos/n11302 ));
  CIC1Cos_SLICE_1247 \CIC1Cos/SLICE_1247 ( .D1(\CIC1Cos/d_tmp_49 ), 
    .C1(\CIC1Cos/n6144 ), .B1(\CIC1Cos/n6120 ), .A1(\CIC1Cos/d_d_tmp_49 ), 
    .D0(\CIC1Cos/d_tmp_48 ), .C0(\CIC1Cos/n6145 ), .B0(\CIC1Cos/n6120 ), 
    .A0(\CIC1Cos/d_d_tmp_48 ), .DI1(\CIC1Cos/d6_71_N_1459_49 ), 
    .DI0(\CIC1Cos/d6_71_N_1459_48 ), .CE(\CIC1Cos/osc_clk_enable_897 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11300 ), .F0(\CIC1Cos/d6_71_N_1459_48 ), 
    .Q0(\CIC1Cos/d6_48 ), .F1(\CIC1Cos/d6_71_N_1459_49 ), .Q1(\CIC1Cos/d6_49 ), 
    .FCO(\CIC1Cos/n11301 ));
  CIC1Cos_SLICE_1248 \CIC1Cos/SLICE_1248 ( .D1(\CIC1Cos/d_tmp_47 ), 
    .C1(\CIC1Cos/n6146 ), .B1(\CIC1Cos/n6120 ), .A1(\CIC1Cos/d_d_tmp_47 ), 
    .D0(\CIC1Cos/d_tmp_46 ), .C0(\CIC1Cos/n6147 ), .B0(\CIC1Cos/n6120 ), 
    .A0(\CIC1Cos/d_d_tmp_46 ), .DI1(\CIC1Cos/d6_71_N_1459_47 ), 
    .DI0(\CIC1Cos/d6_71_N_1459_46 ), .CE(\CIC1Cos/osc_clk_enable_897 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11299 ), .F0(\CIC1Cos/d6_71_N_1459_46 ), 
    .Q0(\CIC1Cos/d6_46 ), .F1(\CIC1Cos/d6_71_N_1459_47 ), .Q1(\CIC1Cos/d6_47 ), 
    .FCO(\CIC1Cos/n11300 ));
  CIC1Cos_SLICE_1249 \CIC1Cos/SLICE_1249 ( .D1(\CIC1Cos/d_tmp_45 ), 
    .C1(\CIC1Cos/n6148 ), .B1(\CIC1Cos/n6120 ), .A1(\CIC1Cos/d_d_tmp_45 ), 
    .D0(\CIC1Cos/d_tmp_44 ), .C0(\CIC1Cos/n6149 ), .B0(\CIC1Cos/n6120 ), 
    .A0(\CIC1Cos/d_d_tmp_44 ), .DI1(\CIC1Cos/d6_71_N_1459_45 ), 
    .DI0(\CIC1Cos/d6_71_N_1459_44 ), .CE(\CIC1Cos/osc_clk_enable_897 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11298 ), .F0(\CIC1Cos/d6_71_N_1459_44 ), 
    .Q0(\CIC1Cos/d6_44 ), .F1(\CIC1Cos/d6_71_N_1459_45 ), .Q1(\CIC1Cos/d6_45 ), 
    .FCO(\CIC1Cos/n11299 ));
  CIC1Cos_SLICE_1250 \CIC1Cos/SLICE_1250 ( .D1(\CIC1Cos/d_tmp_43 ), 
    .C1(\CIC1Cos/n6150 ), .B1(\CIC1Cos/n6120 ), .A1(\CIC1Cos/d_d_tmp_43 ), 
    .D0(\CIC1Cos/d_tmp_42 ), .C0(\CIC1Cos/n6151 ), .B0(\CIC1Cos/n6120 ), 
    .A0(\CIC1Cos/d_d_tmp_42 ), .DI1(\CIC1Cos/d6_71_N_1459_43 ), 
    .DI0(\CIC1Cos/d6_71_N_1459_42 ), .CE(\CIC1Cos/osc_clk_enable_897 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11297 ), .F0(\CIC1Cos/d6_71_N_1459_42 ), 
    .Q0(\CIC1Cos/d6_42 ), .F1(\CIC1Cos/d6_71_N_1459_43 ), .Q1(\CIC1Cos/d6_43 ), 
    .FCO(\CIC1Cos/n11298 ));
  CIC1Cos_SLICE_1251 \CIC1Cos/SLICE_1251 ( .D1(\CIC1Cos/d_tmp_41 ), 
    .C1(\CIC1Cos/n6152 ), .B1(\CIC1Cos/n6120 ), .A1(\CIC1Cos/d_d_tmp_41 ), 
    .D0(\CIC1Cos/d_tmp_40 ), .C0(\CIC1Cos/n6153 ), .B0(\CIC1Cos/n6120 ), 
    .A0(\CIC1Cos/d_d_tmp_40 ), .DI1(\CIC1Cos/d6_71_N_1459_41 ), 
    .DI0(\CIC1Cos/d6_71_N_1459_40 ), .CE(\CIC1Cos/osc_clk_enable_897 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11296 ), .F0(\CIC1Cos/d6_71_N_1459_40 ), 
    .Q0(\CIC1Cos/d6_40 ), .F1(\CIC1Cos/d6_71_N_1459_41 ), .Q1(\CIC1Cos/d6_41 ), 
    .FCO(\CIC1Cos/n11297 ));
  CIC1Cos_SLICE_1252 \CIC1Cos/SLICE_1252 ( .D1(\CIC1Cos/d_tmp_39 ), 
    .C1(\CIC1Cos/n6154 ), .B1(\CIC1Cos/n6120 ), .A1(\CIC1Cos/d_d_tmp_39 ), 
    .D0(\CIC1Cos/d_tmp_38 ), .C0(\CIC1Cos/n6155 ), .B0(\CIC1Cos/n6120 ), 
    .A0(\CIC1Cos/d_d_tmp_38 ), .DI1(\CIC1Cos/d6_71_N_1459_39 ), 
    .DI0(\CIC1Cos/d6_71_N_1459_38 ), .CE(\CIC1Cos/osc_clk_enable_897 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11295 ), .F0(\CIC1Cos/d6_71_N_1459_38 ), 
    .Q0(\CIC1Cos/d6_38 ), .F1(\CIC1Cos/d6_71_N_1459_39 ), .Q1(\CIC1Cos/d6_39 ), 
    .FCO(\CIC1Cos/n11296 ));
  CIC1Cos_SLICE_1253 \CIC1Cos/SLICE_1253 ( .D1(\CIC1Cos/d_tmp_37 ), 
    .C1(\CIC1Cos/n6156 ), .B1(\CIC1Cos/n6120 ), .A1(\CIC1Cos/d_d_tmp_37 ), 
    .D0(\CIC1Cos/d_tmp_36 ), .C0(\CIC1Cos/n6157 ), .B0(\CIC1Cos/n6120 ), 
    .A0(\CIC1Cos/d_d_tmp_36 ), .DI1(\CIC1Cos/d6_71_N_1459_37 ), 
    .DI0(\CIC1Cos/d6_71_N_1459_36 ), .CE(\CIC1Cos/osc_clk_enable_897 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11294 ), .F0(\CIC1Cos/d6_71_N_1459_36 ), 
    .Q0(\CIC1Cos/d6_36 ), .F1(\CIC1Cos/d6_71_N_1459_37 ), .Q1(\CIC1Cos/d6_37 ), 
    .FCO(\CIC1Cos/n11295 ));
  CIC1Cos_SLICE_1254 \CIC1Cos/SLICE_1254 ( .A1(\CIC1Cos/n6120 ), 
    .FCO(\CIC1Cos/n11294 ));
  CIC1Cos_SLICE_1255 \CIC1Cos/SLICE_1255 ( .B0(\CIC1Cos/d_d6_71 ), 
    .A0(\CIC1Cos/d6_71 ), .FCI(\CIC1Cos/n11290 ), .F0(\CIC1Cos/n6274 ));
  CIC1Cos_SLICE_1256 \CIC1Cos/SLICE_1256 ( .B1(\CIC1Cos/d_d6_70 ), 
    .A1(\CIC1Cos/d6_70 ), .B0(\CIC1Cos/d_d6_69 ), .A0(\CIC1Cos/d6_69 ), 
    .FCI(\CIC1Cos/n11289 ), .F0(\CIC1Cos/n6276 ), .F1(\CIC1Cos/n6275 ), 
    .FCO(\CIC1Cos/n11290 ));
  CIC1Cos_SLICE_1257 \CIC1Cos/SLICE_1257 ( .B1(\CIC1Cos/d_d6_68 ), 
    .A1(\CIC1Cos/d6_68 ), .B0(\CIC1Cos/d_d6_67 ), .A0(\CIC1Cos/d6_67 ), 
    .FCI(\CIC1Cos/n11288 ), .F0(\CIC1Cos/n6278 ), .F1(\CIC1Cos/n6277 ), 
    .FCO(\CIC1Cos/n11289 ));
  CIC1Cos_SLICE_1258 \CIC1Cos/SLICE_1258 ( .B1(\CIC1Cos/d_d6_66 ), 
    .A1(\CIC1Cos/d6_66 ), .B0(\CIC1Cos/d_d6_65 ), .A0(\CIC1Cos/d6_65 ), 
    .FCI(\CIC1Cos/n11287 ), .F0(\CIC1Cos/n6280 ), .F1(\CIC1Cos/n6279 ), 
    .FCO(\CIC1Cos/n11288 ));
  CIC1Cos_SLICE_1259 \CIC1Cos/SLICE_1259 ( .B1(\CIC1Cos/d_d6_64 ), 
    .A1(\CIC1Cos/d6_64 ), .B0(\CIC1Cos/d_d6_63 ), .A0(\CIC1Cos/d6_63 ), 
    .FCI(\CIC1Cos/n11286 ), .F0(\CIC1Cos/n6282 ), .F1(\CIC1Cos/n6281 ), 
    .FCO(\CIC1Cos/n11287 ));
  CIC1Cos_SLICE_1260 \CIC1Cos/SLICE_1260 ( .B1(\CIC1Cos/d_d6_62 ), 
    .A1(\CIC1Cos/d6_62 ), .B0(\CIC1Cos/d_d6_61 ), .A0(\CIC1Cos/d6_61 ), 
    .FCI(\CIC1Cos/n11285 ), .F0(\CIC1Cos/n6284 ), .F1(\CIC1Cos/n6283 ), 
    .FCO(\CIC1Cos/n11286 ));
  CIC1Cos_SLICE_1261 \CIC1Cos/SLICE_1261 ( .B1(\CIC1Cos/d_d6_60 ), 
    .A1(\CIC1Cos/d6_60 ), .B0(\CIC1Cos/d_d6_59 ), .A0(\CIC1Cos/d6_59 ), 
    .FCI(\CIC1Cos/n11284 ), .F0(\CIC1Cos/n6286 ), .F1(\CIC1Cos/n6285 ), 
    .FCO(\CIC1Cos/n11285 ));
  CIC1Cos_SLICE_1262 \CIC1Cos/SLICE_1262 ( .B1(\CIC1Cos/d_d6_58 ), 
    .A1(\CIC1Cos/d6_58 ), .B0(\CIC1Cos/d_d6_57 ), .A0(\CIC1Cos/d6_57 ), 
    .FCI(\CIC1Cos/n11283 ), .F0(\CIC1Cos/n6288 ), .F1(\CIC1Cos/n6287 ), 
    .FCO(\CIC1Cos/n11284 ));
  CIC1Cos_SLICE_1263 \CIC1Cos/SLICE_1263 ( .B1(\CIC1Cos/d_d6_56 ), 
    .A1(\CIC1Cos/d6_56 ), .B0(\CIC1Cos/d_d6_55 ), .A0(\CIC1Cos/d6_55 ), 
    .FCI(\CIC1Cos/n11282 ), .F0(\CIC1Cos/n6290 ), .F1(\CIC1Cos/n6289 ), 
    .FCO(\CIC1Cos/n11283 ));
  CIC1Cos_SLICE_1264 \CIC1Cos/SLICE_1264 ( .B1(\CIC1Cos/d_d6_54 ), 
    .A1(\CIC1Cos/d6_54 ), .B0(\CIC1Cos/d_d6_53 ), .A0(\CIC1Cos/d6_53 ), 
    .FCI(\CIC1Cos/n11281 ), .F0(\CIC1Cos/n6292 ), .F1(\CIC1Cos/n6291 ), 
    .FCO(\CIC1Cos/n11282 ));
  CIC1Cos_SLICE_1265 \CIC1Cos/SLICE_1265 ( .B1(\CIC1Cos/d_d6_52 ), 
    .A1(\CIC1Cos/d6_52 ), .B0(\CIC1Cos/d_d6_51 ), .A0(\CIC1Cos/d6_51 ), 
    .FCI(\CIC1Cos/n11280 ), .F0(\CIC1Cos/n6294 ), .F1(\CIC1Cos/n6293 ), 
    .FCO(\CIC1Cos/n11281 ));
  CIC1Cos_SLICE_1266 \CIC1Cos/SLICE_1266 ( .B1(\CIC1Cos/d_d6_50 ), 
    .A1(\CIC1Cos/d6_50 ), .B0(\CIC1Cos/d_d6_49 ), .A0(\CIC1Cos/d6_49 ), 
    .FCI(\CIC1Cos/n11279 ), .F0(\CIC1Cos/n6296 ), .F1(\CIC1Cos/n6295 ), 
    .FCO(\CIC1Cos/n11280 ));
  CIC1Cos_SLICE_1267 \CIC1Cos/SLICE_1267 ( .B1(\CIC1Cos/d_d6_48 ), 
    .A1(\CIC1Cos/d6_48 ), .B0(\CIC1Cos/d_d6_47 ), .A0(\CIC1Cos/d6_47 ), 
    .FCI(\CIC1Cos/n11278 ), .F0(\CIC1Cos/n6298 ), .F1(\CIC1Cos/n6297 ), 
    .FCO(\CIC1Cos/n11279 ));
  CIC1Cos_SLICE_1268 \CIC1Cos/SLICE_1268 ( .B1(\CIC1Cos/d_d6_46 ), 
    .A1(\CIC1Cos/d6_46 ), .B0(\CIC1Cos/d_d6_45 ), .A0(\CIC1Cos/d6_45 ), 
    .FCI(\CIC1Cos/n11277 ), .F0(\CIC1Cos/n6300 ), .F1(\CIC1Cos/n6299 ), 
    .FCO(\CIC1Cos/n11278 ));
  CIC1Cos_SLICE_1269 \CIC1Cos/SLICE_1269 ( .B1(\CIC1Cos/d_d6_44 ), 
    .A1(\CIC1Cos/d6_44 ), .B0(\CIC1Cos/d_d6_43 ), .A0(\CIC1Cos/d6_43 ), 
    .FCI(\CIC1Cos/n11276 ), .F0(\CIC1Cos/n6302 ), .F1(\CIC1Cos/n6301 ), 
    .FCO(\CIC1Cos/n11277 ));
  CIC1Cos_SLICE_1270 \CIC1Cos/SLICE_1270 ( .B1(\CIC1Cos/d_d6_42 ), 
    .A1(\CIC1Cos/d6_42 ), .B0(\CIC1Cos/d_d6_41 ), .A0(\CIC1Cos/d6_41 ), 
    .FCI(\CIC1Cos/n11275 ), .F0(\CIC1Cos/n6304 ), .F1(\CIC1Cos/n6303 ), 
    .FCO(\CIC1Cos/n11276 ));
  CIC1Cos_SLICE_1271 \CIC1Cos/SLICE_1271 ( .B1(\CIC1Cos/d_d6_40 ), 
    .A1(\CIC1Cos/d6_40 ), .B0(\CIC1Cos/d_d6_39 ), .A0(\CIC1Cos/d6_39 ), 
    .FCI(\CIC1Cos/n11274 ), .F0(\CIC1Cos/n6306 ), .F1(\CIC1Cos/n6305 ), 
    .FCO(\CIC1Cos/n11275 ));
  CIC1Cos_SLICE_1272 \CIC1Cos/SLICE_1272 ( .B1(\CIC1Cos/d_d6_38 ), 
    .A1(\CIC1Cos/d6_38 ), .B0(\CIC1Cos/d_d6_37 ), .A0(\CIC1Cos/d6_37 ), 
    .FCI(\CIC1Cos/n11273 ), .F0(\CIC1Cos/n6308 ), .F1(\CIC1Cos/n6307 ), 
    .FCO(\CIC1Cos/n11274 ));
  CIC1Cos_SLICE_1273 \CIC1Cos/SLICE_1273 ( .B1(\CIC1Cos/d_d6_36 ), 
    .A1(\CIC1Cos/d6_36 ), .F1(\CIC1Cos/n6309 ), .FCO(\CIC1Cos/n11273 ));
  CIC1Cos_SLICE_1274 \CIC1Cos/SLICE_1274 ( .D1(\CIC1Cos/d6_71 ), 
    .C1(\CIC1Cos/n6274 ), .B1(\CIC1Cos/n6272 ), .A1(\CIC1Cos/d_d6_71 ), 
    .D0(\CIC1Cos/d6_70 ), .C0(\CIC1Cos/n6275 ), .B0(\CIC1Cos/n6272 ), 
    .A0(\CIC1Cos/d_d6_70 ), .DI1(\CIC1Cos/d7_71_N_1531_71 ), 
    .DI0(\CIC1Cos/d7_71_N_1531_70 ), .CE(\CIC1Cos/osc_clk_enable_1047 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11271 ), .F0(\CIC1Cos/d7_71_N_1531_70 ), 
    .Q0(\CIC1Cos/d7_70 ), .F1(\CIC1Cos/d7_71_N_1531_71 ), .Q1(\CIC1Cos/d7_71 ));
  CIC1Cos_SLICE_1275 \CIC1Cos/SLICE_1275 ( .D1(\CIC1Cos/d6_69 ), 
    .C1(\CIC1Cos/n6276 ), .B1(\CIC1Cos/n6272 ), .A1(\CIC1Cos/d_d6_69 ), 
    .D0(\CIC1Cos/d6_68 ), .C0(\CIC1Cos/n6277 ), .B0(\CIC1Cos/n6272 ), 
    .A0(\CIC1Cos/d_d6_68 ), .DI1(\CIC1Cos/d7_71_N_1531_69 ), 
    .DI0(\CIC1Cos/d7_71_N_1531_68 ), .CE(\CIC1Cos/osc_clk_enable_1047 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11270 ), .F0(\CIC1Cos/d7_71_N_1531_68 ), 
    .Q0(\CIC1Cos/d7_68 ), .F1(\CIC1Cos/d7_71_N_1531_69 ), .Q1(\CIC1Cos/d7_69 ), 
    .FCO(\CIC1Cos/n11271 ));
  CIC1Cos_SLICE_1276 \CIC1Cos/SLICE_1276 ( .D1(\CIC1Cos/d6_67 ), 
    .C1(\CIC1Cos/n6278 ), .B1(\CIC1Cos/n6272 ), .A1(\CIC1Cos/d_d6_67 ), 
    .D0(\CIC1Cos/d6_66 ), .C0(\CIC1Cos/n6279 ), .B0(\CIC1Cos/n6272 ), 
    .A0(\CIC1Cos/d_d6_66 ), .DI1(\CIC1Cos/d7_71_N_1531_67 ), 
    .DI0(\CIC1Cos/d7_71_N_1531_66 ), .CE(\CIC1Cos/osc_clk_enable_1047 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11269 ), .F0(\CIC1Cos/d7_71_N_1531_66 ), 
    .Q0(\CIC1Cos/d7_66 ), .F1(\CIC1Cos/d7_71_N_1531_67 ), .Q1(\CIC1Cos/d7_67 ), 
    .FCO(\CIC1Cos/n11270 ));
  CIC1Cos_SLICE_1277 \CIC1Cos/SLICE_1277 ( .D1(\CIC1Cos/d6_65 ), 
    .C1(\CIC1Cos/n6280 ), .B1(\CIC1Cos/n6272 ), .A1(\CIC1Cos/d_d6_65 ), 
    .D0(\CIC1Cos/d6_64 ), .C0(\CIC1Cos/n6281 ), .B0(\CIC1Cos/n6272 ), 
    .A0(\CIC1Cos/d_d6_64 ), .DI1(\CIC1Cos/d7_71_N_1531_65 ), 
    .DI0(\CIC1Cos/d7_71_N_1531_64 ), .CE(\CIC1Cos/osc_clk_enable_1047 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11268 ), .F0(\CIC1Cos/d7_71_N_1531_64 ), 
    .Q0(\CIC1Cos/d7_64 ), .F1(\CIC1Cos/d7_71_N_1531_65 ), .Q1(\CIC1Cos/d7_65 ), 
    .FCO(\CIC1Cos/n11269 ));
  CIC1Cos_SLICE_1278 \CIC1Cos/SLICE_1278 ( .D1(\CIC1Cos/d6_63 ), 
    .C1(\CIC1Cos/n6282 ), .B1(\CIC1Cos/n6272 ), .A1(\CIC1Cos/d_d6_63 ), 
    .D0(\CIC1Cos/d6_62 ), .C0(\CIC1Cos/n6283 ), .B0(\CIC1Cos/n6272 ), 
    .A0(\CIC1Cos/d_d6_62 ), .DI1(\CIC1Cos/d7_71_N_1531_63 ), 
    .DI0(\CIC1Cos/d7_71_N_1531_62 ), .CE(\CIC1Cos/osc_clk_enable_1047 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11267 ), .F0(\CIC1Cos/d7_71_N_1531_62 ), 
    .Q0(\CIC1Cos/d7_62 ), .F1(\CIC1Cos/d7_71_N_1531_63 ), .Q1(\CIC1Cos/d7_63 ), 
    .FCO(\CIC1Cos/n11268 ));
  CIC1Cos_SLICE_1279 \CIC1Cos/SLICE_1279 ( .D1(\CIC1Cos/d6_61 ), 
    .C1(\CIC1Cos/n6284 ), .B1(\CIC1Cos/n6272 ), .A1(\CIC1Cos/d_d6_61 ), 
    .D0(\CIC1Cos/d6_60 ), .C0(\CIC1Cos/n6285 ), .B0(\CIC1Cos/n6272 ), 
    .A0(\CIC1Cos/d_d6_60 ), .DI1(\CIC1Cos/d7_71_N_1531_61 ), 
    .DI0(\CIC1Cos/d7_71_N_1531_60 ), .CE(\CIC1Cos/osc_clk_enable_1047 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11266 ), .F0(\CIC1Cos/d7_71_N_1531_60 ), 
    .Q0(\CIC1Cos/d7_60 ), .F1(\CIC1Cos/d7_71_N_1531_61 ), .Q1(\CIC1Cos/d7_61 ), 
    .FCO(\CIC1Cos/n11267 ));
  CIC1Cos_SLICE_1280 \CIC1Cos/SLICE_1280 ( .D1(\CIC1Cos/d6_59 ), 
    .C1(\CIC1Cos/n6286 ), .B1(\CIC1Cos/n6272 ), .A1(\CIC1Cos/d_d6_59 ), 
    .D0(\CIC1Cos/d6_58 ), .C0(\CIC1Cos/n6287 ), .B0(\CIC1Cos/n6272 ), 
    .A0(\CIC1Cos/d_d6_58 ), .DI1(\CIC1Cos/d7_71_N_1531_59 ), 
    .DI0(\CIC1Cos/d7_71_N_1531_58 ), .CE(\CIC1Cos/osc_clk_enable_1047 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11265 ), .F0(\CIC1Cos/d7_71_N_1531_58 ), 
    .Q0(\CIC1Cos/d7_58 ), .F1(\CIC1Cos/d7_71_N_1531_59 ), .Q1(\CIC1Cos/d7_59 ), 
    .FCO(\CIC1Cos/n11266 ));
  CIC1Cos_SLICE_1281 \CIC1Cos/SLICE_1281 ( .D1(\CIC1Cos/d6_57 ), 
    .C1(\CIC1Cos/n6288 ), .B1(\CIC1Cos/n6272 ), .A1(\CIC1Cos/d_d6_57 ), 
    .D0(\CIC1Cos/d6_56 ), .C0(\CIC1Cos/n6289 ), .B0(\CIC1Cos/n6272 ), 
    .A0(\CIC1Cos/d_d6_56 ), .DI1(\CIC1Cos/d7_71_N_1531_57 ), 
    .DI0(\CIC1Cos/d7_71_N_1531_56 ), .CE(\CIC1Cos/osc_clk_enable_1047 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11264 ), .F0(\CIC1Cos/d7_71_N_1531_56 ), 
    .Q0(\CIC1Cos/d7_56 ), .F1(\CIC1Cos/d7_71_N_1531_57 ), .Q1(\CIC1Cos/d7_57 ), 
    .FCO(\CIC1Cos/n11265 ));
  CIC1Cos_SLICE_1282 \CIC1Cos/SLICE_1282 ( .D1(\CIC1Cos/d6_55 ), 
    .C1(\CIC1Cos/n6290 ), .B1(\CIC1Cos/n6272 ), .A1(\CIC1Cos/d_d6_55 ), 
    .D0(\CIC1Cos/d6_54 ), .C0(\CIC1Cos/n6291 ), .B0(\CIC1Cos/n6272 ), 
    .A0(\CIC1Cos/d_d6_54 ), .DI1(\CIC1Cos/d7_71_N_1531_55 ), 
    .DI0(\CIC1Cos/d7_71_N_1531_54 ), .CE(\CIC1Cos/osc_clk_enable_1047 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11263 ), .F0(\CIC1Cos/d7_71_N_1531_54 ), 
    .Q0(\CIC1Cos/d7_54 ), .F1(\CIC1Cos/d7_71_N_1531_55 ), .Q1(\CIC1Cos/d7_55 ), 
    .FCO(\CIC1Cos/n11264 ));
  CIC1Cos_SLICE_1283 \CIC1Cos/SLICE_1283 ( .D1(\CIC1Cos/d6_53 ), 
    .C1(\CIC1Cos/n6292 ), .B1(\CIC1Cos/n6272 ), .A1(\CIC1Cos/d_d6_53 ), 
    .D0(\CIC1Cos/d6_52 ), .C0(\CIC1Cos/n6293 ), .B0(\CIC1Cos/n6272 ), 
    .A0(\CIC1Cos/d_d6_52 ), .DI1(\CIC1Cos/d7_71_N_1531_53 ), 
    .DI0(\CIC1Cos/d7_71_N_1531_52 ), .CE(\CIC1Cos/osc_clk_enable_1047 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11262 ), .F0(\CIC1Cos/d7_71_N_1531_52 ), 
    .Q0(\CIC1Cos/d7_52 ), .F1(\CIC1Cos/d7_71_N_1531_53 ), .Q1(\CIC1Cos/d7_53 ), 
    .FCO(\CIC1Cos/n11263 ));
  CIC1Cos_SLICE_1284 \CIC1Cos/SLICE_1284 ( .D1(\CIC1Cos/d6_51 ), 
    .C1(\CIC1Cos/n6294 ), .B1(\CIC1Cos/n6272 ), .A1(\CIC1Cos/d_d6_51 ), 
    .D0(\CIC1Cos/d6_50 ), .C0(\CIC1Cos/n6295 ), .B0(\CIC1Cos/n6272 ), 
    .A0(\CIC1Cos/d_d6_50 ), .DI1(\CIC1Cos/d7_71_N_1531_51 ), 
    .DI0(\CIC1Cos/d7_71_N_1531_50 ), .CE(\CIC1Cos/osc_clk_enable_1047 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11261 ), .F0(\CIC1Cos/d7_71_N_1531_50 ), 
    .Q0(\CIC1Cos/d7_50 ), .F1(\CIC1Cos/d7_71_N_1531_51 ), .Q1(\CIC1Cos/d7_51 ), 
    .FCO(\CIC1Cos/n11262 ));
  CIC1Cos_SLICE_1285 \CIC1Cos/SLICE_1285 ( .D1(\CIC1Cos/d6_49 ), 
    .C1(\CIC1Cos/n6296 ), .B1(\CIC1Cos/n6272 ), .A1(\CIC1Cos/d_d6_49 ), 
    .D0(\CIC1Cos/d6_48 ), .C0(\CIC1Cos/n6297 ), .B0(\CIC1Cos/n6272 ), 
    .A0(\CIC1Cos/d_d6_48 ), .DI1(\CIC1Cos/d7_71_N_1531_49 ), 
    .DI0(\CIC1Cos/d7_71_N_1531_48 ), .CE(\CIC1Cos/osc_clk_enable_1047 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11260 ), .F0(\CIC1Cos/d7_71_N_1531_48 ), 
    .Q0(\CIC1Cos/d7_48 ), .F1(\CIC1Cos/d7_71_N_1531_49 ), .Q1(\CIC1Cos/d7_49 ), 
    .FCO(\CIC1Cos/n11261 ));
  CIC1Cos_SLICE_1286 \CIC1Cos/SLICE_1286 ( .D1(\CIC1Cos/d6_47 ), 
    .C1(\CIC1Cos/n6298 ), .B1(\CIC1Cos/n6272 ), .A1(\CIC1Cos/d_d6_47 ), 
    .D0(\CIC1Cos/d6_46 ), .C0(\CIC1Cos/n6299 ), .B0(\CIC1Cos/n6272 ), 
    .A0(\CIC1Cos/d_d6_46 ), .DI1(\CIC1Cos/d7_71_N_1531_47 ), 
    .DI0(\CIC1Cos/d7_71_N_1531_46 ), .CE(\CIC1Cos/osc_clk_enable_1047 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11259 ), .F0(\CIC1Cos/d7_71_N_1531_46 ), 
    .Q0(\CIC1Cos/d7_46 ), .F1(\CIC1Cos/d7_71_N_1531_47 ), .Q1(\CIC1Cos/d7_47 ), 
    .FCO(\CIC1Cos/n11260 ));
  CIC1Cos_SLICE_1287 \CIC1Cos/SLICE_1287 ( .D1(\CIC1Cos/d6_45 ), 
    .C1(\CIC1Cos/n6300 ), .B1(\CIC1Cos/n6272 ), .A1(\CIC1Cos/d_d6_45 ), 
    .D0(\CIC1Cos/d6_44 ), .C0(\CIC1Cos/n6301 ), .B0(\CIC1Cos/n6272 ), 
    .A0(\CIC1Cos/d_d6_44 ), .DI1(\CIC1Cos/d7_71_N_1531_45 ), 
    .DI0(\CIC1Cos/d7_71_N_1531_44 ), .CE(\CIC1Cos/osc_clk_enable_1047 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11258 ), .F0(\CIC1Cos/d7_71_N_1531_44 ), 
    .Q0(\CIC1Cos/d7_44 ), .F1(\CIC1Cos/d7_71_N_1531_45 ), .Q1(\CIC1Cos/d7_45 ), 
    .FCO(\CIC1Cos/n11259 ));
  CIC1Cos_SLICE_1288 \CIC1Cos/SLICE_1288 ( .D1(\CIC1Cos/d6_43 ), 
    .C1(\CIC1Cos/n6302 ), .B1(\CIC1Cos/n6272 ), .A1(\CIC1Cos/d_d6_43 ), 
    .D0(\CIC1Cos/d6_42 ), .C0(\CIC1Cos/n6303 ), .B0(\CIC1Cos/n6272 ), 
    .A0(\CIC1Cos/d_d6_42 ), .DI1(\CIC1Cos/d7_71_N_1531_43 ), 
    .DI0(\CIC1Cos/d7_71_N_1531_42 ), .CE(\CIC1Cos/osc_clk_enable_1047 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11257 ), .F0(\CIC1Cos/d7_71_N_1531_42 ), 
    .Q0(\CIC1Cos/d7_42 ), .F1(\CIC1Cos/d7_71_N_1531_43 ), .Q1(\CIC1Cos/d7_43 ), 
    .FCO(\CIC1Cos/n11258 ));
  CIC1Cos_SLICE_1289 \CIC1Cos/SLICE_1289 ( .D1(\CIC1Cos/d6_41 ), 
    .C1(\CIC1Cos/n6304 ), .B1(\CIC1Cos/n6272 ), .A1(\CIC1Cos/d_d6_41 ), 
    .D0(\CIC1Cos/d6_40 ), .C0(\CIC1Cos/n6305 ), .B0(\CIC1Cos/n6272 ), 
    .A0(\CIC1Cos/d_d6_40 ), .DI1(\CIC1Cos/d7_71_N_1531_41 ), 
    .DI0(\CIC1Cos/d7_71_N_1531_40 ), .CE(\CIC1Cos/osc_clk_enable_1047 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11256 ), .F0(\CIC1Cos/d7_71_N_1531_40 ), 
    .Q0(\CIC1Cos/d7_40 ), .F1(\CIC1Cos/d7_71_N_1531_41 ), .Q1(\CIC1Cos/d7_41 ), 
    .FCO(\CIC1Cos/n11257 ));
  CIC1Cos_SLICE_1290 \CIC1Cos/SLICE_1290 ( .D1(\CIC1Cos/d6_39 ), 
    .C1(\CIC1Cos/n6306 ), .B1(\CIC1Cos/n6272 ), .A1(\CIC1Cos/d_d6_39 ), 
    .D0(\CIC1Cos/d6_38 ), .C0(\CIC1Cos/n6307 ), .B0(\CIC1Cos/n6272 ), 
    .A0(\CIC1Cos/d_d6_38 ), .DI1(\CIC1Cos/d7_71_N_1531_39 ), 
    .DI0(\CIC1Cos/d7_71_N_1531_38 ), .CE(\CIC1Cos/osc_clk_enable_1047 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11255 ), .F0(\CIC1Cos/d7_71_N_1531_38 ), 
    .Q0(\CIC1Cos/d7_38 ), .F1(\CIC1Cos/d7_71_N_1531_39 ), .Q1(\CIC1Cos/d7_39 ), 
    .FCO(\CIC1Cos/n11256 ));
  CIC1Cos_SLICE_1291 \CIC1Cos/SLICE_1291 ( .D1(\CIC1Cos/d6_37 ), 
    .C1(\CIC1Cos/n6308 ), .B1(\CIC1Cos/n6272 ), .A1(\CIC1Cos/d_d6_37 ), 
    .D0(\CIC1Cos/d6_36 ), .C0(\CIC1Cos/n6309 ), .B0(\CIC1Cos/n6272 ), 
    .A0(\CIC1Cos/d_d6_36 ), .DI1(\CIC1Cos/d7_71_N_1531_37 ), 
    .DI0(\CIC1Cos/d7_71_N_1531_36 ), .CE(\CIC1Cos/osc_clk_enable_1047 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11254 ), .F0(\CIC1Cos/d7_71_N_1531_36 ), 
    .Q0(\CIC1Cos/d7_36 ), .F1(\CIC1Cos/d7_71_N_1531_37 ), .Q1(\CIC1Cos/d7_37 ), 
    .FCO(\CIC1Cos/n11255 ));
  CIC1Cos_SLICE_1292 \CIC1Cos/SLICE_1292 ( .A1(\CIC1Cos/n6272 ), 
    .FCO(\CIC1Cos/n11254 ));
  CIC1Cos_SLICE_1293 \CIC1Cos/SLICE_1293 ( .B0(\CIC1Cos/d_d7_71 ), 
    .A0(\CIC1Cos/d7_71 ), .FCI(\CIC1Cos/n11250 ), .F0(\CIC1Cos/n6426 ));
  CIC1Cos_SLICE_1294 \CIC1Cos/SLICE_1294 ( .B1(\CIC1Cos/d_d7_70 ), 
    .A1(\CIC1Cos/d7_70 ), .B0(\CIC1Cos/d_d7_69 ), .A0(\CIC1Cos/d7_69 ), 
    .FCI(\CIC1Cos/n11249 ), .F0(\CIC1Cos/n6428 ), .F1(\CIC1Cos/n6427 ), 
    .FCO(\CIC1Cos/n11250 ));
  CIC1Cos_SLICE_1295 \CIC1Cos/SLICE_1295 ( .B1(\CIC1Cos/d_d7_68 ), 
    .A1(\CIC1Cos/d7_68 ), .B0(\CIC1Cos/d_d7_67 ), .A0(\CIC1Cos/d7_67 ), 
    .FCI(\CIC1Cos/n11248 ), .F0(\CIC1Cos/n6430 ), .F1(\CIC1Cos/n6429 ), 
    .FCO(\CIC1Cos/n11249 ));
  CIC1Cos_SLICE_1296 \CIC1Cos/SLICE_1296 ( .B1(\CIC1Cos/d_d7_66 ), 
    .A1(\CIC1Cos/d7_66 ), .B0(\CIC1Cos/d_d7_65 ), .A0(\CIC1Cos/d7_65 ), 
    .FCI(\CIC1Cos/n11247 ), .F0(\CIC1Cos/n6432 ), .F1(\CIC1Cos/n6431 ), 
    .FCO(\CIC1Cos/n11248 ));
  CIC1Cos_SLICE_1297 \CIC1Cos/SLICE_1297 ( .B1(\CIC1Cos/d_d7_64 ), 
    .A1(\CIC1Cos/d7_64 ), .B0(\CIC1Cos/d_d7_63 ), .A0(\CIC1Cos/d7_63 ), 
    .FCI(\CIC1Cos/n11246 ), .F0(\CIC1Cos/n6434 ), .F1(\CIC1Cos/n6433 ), 
    .FCO(\CIC1Cos/n11247 ));
  CIC1Cos_SLICE_1298 \CIC1Cos/SLICE_1298 ( .B1(\CIC1Cos/d_d7_62 ), 
    .A1(\CIC1Cos/d7_62 ), .B0(\CIC1Cos/d_d7_61 ), .A0(\CIC1Cos/d7_61 ), 
    .FCI(\CIC1Cos/n11245 ), .F0(\CIC1Cos/n6436 ), .F1(\CIC1Cos/n6435 ), 
    .FCO(\CIC1Cos/n11246 ));
  CIC1Cos_SLICE_1299 \CIC1Cos/SLICE_1299 ( .B1(\CIC1Cos/d_d7_60 ), 
    .A1(\CIC1Cos/d7_60 ), .B0(\CIC1Cos/d_d7_59 ), .A0(\CIC1Cos/d7_59 ), 
    .FCI(\CIC1Cos/n11244 ), .F0(\CIC1Cos/n6438 ), .F1(\CIC1Cos/n6437 ), 
    .FCO(\CIC1Cos/n11245 ));
  CIC1Cos_SLICE_1300 \CIC1Cos/SLICE_1300 ( .B1(\CIC1Cos/d_d7_58 ), 
    .A1(\CIC1Cos/d7_58 ), .B0(\CIC1Cos/d_d7_57 ), .A0(\CIC1Cos/d7_57 ), 
    .FCI(\CIC1Cos/n11243 ), .F0(\CIC1Cos/n6440 ), .F1(\CIC1Cos/n6439 ), 
    .FCO(\CIC1Cos/n11244 ));
  CIC1Cos_SLICE_1301 \CIC1Cos/SLICE_1301 ( .B1(\CIC1Cos/d_d7_56 ), 
    .A1(\CIC1Cos/d7_56 ), .B0(\CIC1Cos/d_d7_55 ), .A0(\CIC1Cos/d7_55 ), 
    .FCI(\CIC1Cos/n11242 ), .F0(\CIC1Cos/n6442 ), .F1(\CIC1Cos/n6441 ), 
    .FCO(\CIC1Cos/n11243 ));
  CIC1Cos_SLICE_1302 \CIC1Cos/SLICE_1302 ( .B1(\CIC1Cos/d_d7_54 ), 
    .A1(\CIC1Cos/d7_54 ), .B0(\CIC1Cos/d_d7_53 ), .A0(\CIC1Cos/d7_53 ), 
    .FCI(\CIC1Cos/n11241 ), .F0(\CIC1Cos/n6444 ), .F1(\CIC1Cos/n6443 ), 
    .FCO(\CIC1Cos/n11242 ));
  CIC1Cos_SLICE_1303 \CIC1Cos/SLICE_1303 ( .B1(\CIC1Cos/d_d7_52 ), 
    .A1(\CIC1Cos/d7_52 ), .B0(\CIC1Cos/d_d7_51 ), .A0(\CIC1Cos/d7_51 ), 
    .FCI(\CIC1Cos/n11240 ), .F0(\CIC1Cos/n6446 ), .F1(\CIC1Cos/n6445 ), 
    .FCO(\CIC1Cos/n11241 ));
  CIC1Cos_SLICE_1304 \CIC1Cos/SLICE_1304 ( .B1(\CIC1Cos/d_d7_50 ), 
    .A1(\CIC1Cos/d7_50 ), .B0(\CIC1Cos/d_d7_49 ), .A0(\CIC1Cos/d7_49 ), 
    .FCI(\CIC1Cos/n11239 ), .F0(\CIC1Cos/n6448 ), .F1(\CIC1Cos/n6447 ), 
    .FCO(\CIC1Cos/n11240 ));
  CIC1Cos_SLICE_1305 \CIC1Cos/SLICE_1305 ( .B1(\CIC1Cos/d_d7_48 ), 
    .A1(\CIC1Cos/d7_48 ), .B0(\CIC1Cos/d_d7_47 ), .A0(\CIC1Cos/d7_47 ), 
    .FCI(\CIC1Cos/n11238 ), .F0(\CIC1Cos/n6450 ), .F1(\CIC1Cos/n6449 ), 
    .FCO(\CIC1Cos/n11239 ));
  CIC1Cos_SLICE_1306 \CIC1Cos/SLICE_1306 ( .B1(\CIC1Cos/d_d7_46 ), 
    .A1(\CIC1Cos/d7_46 ), .B0(\CIC1Cos/d_d7_45 ), .A0(\CIC1Cos/d7_45 ), 
    .FCI(\CIC1Cos/n11237 ), .F0(\CIC1Cos/n6452 ), .F1(\CIC1Cos/n6451 ), 
    .FCO(\CIC1Cos/n11238 ));
  CIC1Cos_SLICE_1307 \CIC1Cos/SLICE_1307 ( .B1(\CIC1Cos/d_d7_44 ), 
    .A1(\CIC1Cos/d7_44 ), .B0(\CIC1Cos/d_d7_43 ), .A0(\CIC1Cos/d7_43 ), 
    .FCI(\CIC1Cos/n11236 ), .F0(\CIC1Cos/n6454 ), .F1(\CIC1Cos/n6453 ), 
    .FCO(\CIC1Cos/n11237 ));
  CIC1Cos_SLICE_1308 \CIC1Cos/SLICE_1308 ( .B1(\CIC1Cos/d_d7_42 ), 
    .A1(\CIC1Cos/d7_42 ), .B0(\CIC1Cos/d_d7_41 ), .A0(\CIC1Cos/d7_41 ), 
    .FCI(\CIC1Cos/n11235 ), .F0(\CIC1Cos/n6456 ), .F1(\CIC1Cos/n6455 ), 
    .FCO(\CIC1Cos/n11236 ));
  CIC1Cos_SLICE_1309 \CIC1Cos/SLICE_1309 ( .B1(\CIC1Cos/d_d7_40 ), 
    .A1(\CIC1Cos/d7_40 ), .B0(\CIC1Cos/d_d7_39 ), .A0(\CIC1Cos/d7_39 ), 
    .FCI(\CIC1Cos/n11234 ), .F0(\CIC1Cos/n6458 ), .F1(\CIC1Cos/n6457 ), 
    .FCO(\CIC1Cos/n11235 ));
  CIC1Cos_SLICE_1310 \CIC1Cos/SLICE_1310 ( .B1(\CIC1Cos/d_d7_38 ), 
    .A1(\CIC1Cos/d7_38 ), .B0(\CIC1Cos/d_d7_37 ), .A0(\CIC1Cos/d7_37 ), 
    .FCI(\CIC1Cos/n11233 ), .F0(\CIC1Cos/n6460 ), .F1(\CIC1Cos/n6459 ), 
    .FCO(\CIC1Cos/n11234 ));
  CIC1Cos_SLICE_1311 \CIC1Cos/SLICE_1311 ( .B1(\CIC1Cos/d_d7_36 ), 
    .A1(\CIC1Cos/d7_36 ), .F1(\CIC1Cos/n6461 ), .FCO(\CIC1Cos/n11233 ));
  CIC1Cos_SLICE_1312 \CIC1Cos/SLICE_1312 ( .D1(\CIC1Cos/d7_71 ), 
    .C1(\CIC1Cos/n6426 ), .B1(\CIC1Cos/n6424 ), .A1(\CIC1Cos/d_d7_71 ), 
    .D0(\CIC1Cos/d7_70 ), .C0(\CIC1Cos/n6427 ), .B0(\CIC1Cos/n6424 ), 
    .A0(\CIC1Cos/d_d7_70 ), .DI1(\CIC1Cos/d8_71_N_1603_71 ), 
    .DI0(\CIC1Cos/d8_71_N_1603_70 ), .CE(\CIC1Cos/osc_clk_enable_1197 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11231 ), .F0(\CIC1Cos/d8_71_N_1603_70 ), 
    .Q0(\CIC1Cos/d8_70 ), .F1(\CIC1Cos/d8_71_N_1603_71 ), .Q1(\CIC1Cos/d8_71 ));
  CIC1Cos_SLICE_1313 \CIC1Cos/SLICE_1313 ( .D1(\CIC1Cos/d7_69 ), 
    .C1(\CIC1Cos/n6428 ), .B1(\CIC1Cos/n6424 ), .A1(\CIC1Cos/d_d7_69 ), 
    .D0(\CIC1Cos/d7_68 ), .C0(\CIC1Cos/n6429 ), .B0(\CIC1Cos/n6424 ), 
    .A0(\CIC1Cos/d_d7_68 ), .DI1(\CIC1Cos/d8_71_N_1603_69 ), 
    .DI0(\CIC1Cos/d8_71_N_1603_68 ), .CE(\CIC1Cos/osc_clk_enable_1197 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11230 ), .F0(\CIC1Cos/d8_71_N_1603_68 ), 
    .Q0(\CIC1Cos/d8_68 ), .F1(\CIC1Cos/d8_71_N_1603_69 ), .Q1(\CIC1Cos/d8_69 ), 
    .FCO(\CIC1Cos/n11231 ));
  CIC1Cos_SLICE_1314 \CIC1Cos/SLICE_1314 ( .D1(\CIC1Cos/d7_67 ), 
    .C1(\CIC1Cos/n6430 ), .B1(\CIC1Cos/n6424 ), .A1(\CIC1Cos/d_d7_67 ), 
    .D0(\CIC1Cos/d7_66 ), .C0(\CIC1Cos/n6431 ), .B0(\CIC1Cos/n6424 ), 
    .A0(\CIC1Cos/d_d7_66 ), .DI1(\CIC1Cos/d8_71_N_1603_67 ), 
    .DI0(\CIC1Cos/d8_71_N_1603_66 ), .CE(\CIC1Cos/osc_clk_enable_1197 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11229 ), .F0(\CIC1Cos/d8_71_N_1603_66 ), 
    .Q0(\CIC1Cos/d8_66 ), .F1(\CIC1Cos/d8_71_N_1603_67 ), .Q1(\CIC1Cos/d8_67 ), 
    .FCO(\CIC1Cos/n11230 ));
  CIC1Cos_SLICE_1315 \CIC1Cos/SLICE_1315 ( .D1(\CIC1Cos/d7_65 ), 
    .C1(\CIC1Cos/n6432 ), .B1(\CIC1Cos/n6424 ), .A1(\CIC1Cos/d_d7_65 ), 
    .D0(\CIC1Cos/d7_64 ), .C0(\CIC1Cos/n6433 ), .B0(\CIC1Cos/n6424 ), 
    .A0(\CIC1Cos/d_d7_64 ), .DI1(\CIC1Cos/d8_71_N_1603_65 ), 
    .DI0(\CIC1Cos/d8_71_N_1603_64 ), .CE(\CIC1Cos/osc_clk_enable_1197 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11228 ), .F0(\CIC1Cos/d8_71_N_1603_64 ), 
    .Q0(\CIC1Cos/d8_64 ), .F1(\CIC1Cos/d8_71_N_1603_65 ), .Q1(\CIC1Cos/d8_65 ), 
    .FCO(\CIC1Cos/n11229 ));
  CIC1Cos_SLICE_1316 \CIC1Cos/SLICE_1316 ( .D1(\CIC1Cos/d7_63 ), 
    .C1(\CIC1Cos/n6434 ), .B1(\CIC1Cos/n6424 ), .A1(\CIC1Cos/d_d7_63 ), 
    .D0(\CIC1Cos/d7_62 ), .C0(\CIC1Cos/n6435 ), .B0(\CIC1Cos/n6424 ), 
    .A0(\CIC1Cos/d_d7_62 ), .DI1(\CIC1Cos/d8_71_N_1603_63 ), 
    .DI0(\CIC1Cos/d8_71_N_1603_62 ), .CE(\CIC1Cos/osc_clk_enable_1197 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11227 ), .F0(\CIC1Cos/d8_71_N_1603_62 ), 
    .Q0(\CIC1Cos/d8_62 ), .F1(\CIC1Cos/d8_71_N_1603_63 ), .Q1(\CIC1Cos/d8_63 ), 
    .FCO(\CIC1Cos/n11228 ));
  CIC1Cos_SLICE_1317 \CIC1Cos/SLICE_1317 ( .D1(\CIC1Cos/d7_61 ), 
    .C1(\CIC1Cos/n6436 ), .B1(\CIC1Cos/n6424 ), .A1(\CIC1Cos/d_d7_61 ), 
    .D0(\CIC1Cos/d7_60 ), .C0(\CIC1Cos/n6437 ), .B0(\CIC1Cos/n6424 ), 
    .A0(\CIC1Cos/d_d7_60 ), .DI1(\CIC1Cos/d8_71_N_1603_61 ), 
    .DI0(\CIC1Cos/d8_71_N_1603_60 ), .CE(\CIC1Cos/osc_clk_enable_1197 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11226 ), .F0(\CIC1Cos/d8_71_N_1603_60 ), 
    .Q0(\CIC1Cos/d8_60 ), .F1(\CIC1Cos/d8_71_N_1603_61 ), .Q1(\CIC1Cos/d8_61 ), 
    .FCO(\CIC1Cos/n11227 ));
  CIC1Cos_SLICE_1318 \CIC1Cos/SLICE_1318 ( .D1(\CIC1Cos/d7_59 ), 
    .C1(\CIC1Cos/n6438 ), .B1(\CIC1Cos/n6424 ), .A1(\CIC1Cos/d_d7_59 ), 
    .D0(\CIC1Cos/d7_58 ), .C0(\CIC1Cos/n6439 ), .B0(\CIC1Cos/n6424 ), 
    .A0(\CIC1Cos/d_d7_58 ), .DI1(\CIC1Cos/d8_71_N_1603_59 ), 
    .DI0(\CIC1Cos/d8_71_N_1603_58 ), .CE(\CIC1Cos/osc_clk_enable_1197 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11225 ), .F0(\CIC1Cos/d8_71_N_1603_58 ), 
    .Q0(\CIC1Cos/d8_58 ), .F1(\CIC1Cos/d8_71_N_1603_59 ), .Q1(\CIC1Cos/d8_59 ), 
    .FCO(\CIC1Cos/n11226 ));
  CIC1Cos_SLICE_1319 \CIC1Cos/SLICE_1319 ( .D1(\CIC1Cos/d7_57 ), 
    .C1(\CIC1Cos/n6440 ), .B1(\CIC1Cos/n6424 ), .A1(\CIC1Cos/d_d7_57 ), 
    .D0(\CIC1Cos/d7_56 ), .C0(\CIC1Cos/n6441 ), .B0(\CIC1Cos/n6424 ), 
    .A0(\CIC1Cos/d_d7_56 ), .DI1(\CIC1Cos/d8_71_N_1603_57 ), 
    .DI0(\CIC1Cos/d8_71_N_1603_56 ), .CE(\CIC1Cos/osc_clk_enable_1197 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11224 ), .F0(\CIC1Cos/d8_71_N_1603_56 ), 
    .Q0(\CIC1Cos/d8_56 ), .F1(\CIC1Cos/d8_71_N_1603_57 ), .Q1(\CIC1Cos/d8_57 ), 
    .FCO(\CIC1Cos/n11225 ));
  CIC1Cos_SLICE_1320 \CIC1Cos/SLICE_1320 ( .D1(\CIC1Cos/d7_55 ), 
    .C1(\CIC1Cos/n6442 ), .B1(\CIC1Cos/n6424 ), .A1(\CIC1Cos/d_d7_55 ), 
    .D0(\CIC1Cos/d7_54 ), .C0(\CIC1Cos/n6443 ), .B0(\CIC1Cos/n6424 ), 
    .A0(\CIC1Cos/d_d7_54 ), .DI1(\CIC1Cos/d8_71_N_1603_55 ), 
    .DI0(\CIC1Cos/d8_71_N_1603_54 ), .CE(\CIC1Cos/osc_clk_enable_1197 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11223 ), .F0(\CIC1Cos/d8_71_N_1603_54 ), 
    .Q0(\CIC1Cos/d8_54 ), .F1(\CIC1Cos/d8_71_N_1603_55 ), .Q1(\CIC1Cos/d8_55 ), 
    .FCO(\CIC1Cos/n11224 ));
  CIC1Cos_SLICE_1321 \CIC1Cos/SLICE_1321 ( .D1(\CIC1Cos/d7_53 ), 
    .C1(\CIC1Cos/n6444 ), .B1(\CIC1Cos/n6424 ), .A1(\CIC1Cos/d_d7_53 ), 
    .D0(\CIC1Cos/d7_52 ), .C0(\CIC1Cos/n6445 ), .B0(\CIC1Cos/n6424 ), 
    .A0(\CIC1Cos/d_d7_52 ), .DI1(\CIC1Cos/d8_71_N_1603_53 ), 
    .DI0(\CIC1Cos/d8_71_N_1603_52 ), .CE(\CIC1Cos/osc_clk_enable_1197 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11222 ), .F0(\CIC1Cos/d8_71_N_1603_52 ), 
    .Q0(\CIC1Cos/d8_52 ), .F1(\CIC1Cos/d8_71_N_1603_53 ), .Q1(\CIC1Cos/d8_53 ), 
    .FCO(\CIC1Cos/n11223 ));
  CIC1Cos_SLICE_1322 \CIC1Cos/SLICE_1322 ( .D1(\CIC1Cos/d7_51 ), 
    .C1(\CIC1Cos/n6446 ), .B1(\CIC1Cos/n6424 ), .A1(\CIC1Cos/d_d7_51 ), 
    .D0(\CIC1Cos/d7_50 ), .C0(\CIC1Cos/n6447 ), .B0(\CIC1Cos/n6424 ), 
    .A0(\CIC1Cos/d_d7_50 ), .DI1(\CIC1Cos/d8_71_N_1603_51 ), 
    .DI0(\CIC1Cos/d8_71_N_1603_50 ), .CE(\CIC1Cos/osc_clk_enable_1197 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11221 ), .F0(\CIC1Cos/d8_71_N_1603_50 ), 
    .Q0(\CIC1Cos/d8_50 ), .F1(\CIC1Cos/d8_71_N_1603_51 ), .Q1(\CIC1Cos/d8_51 ), 
    .FCO(\CIC1Cos/n11222 ));
  CIC1Cos_SLICE_1323 \CIC1Cos/SLICE_1323 ( .D1(\CIC1Cos/d7_49 ), 
    .C1(\CIC1Cos/n6448 ), .B1(\CIC1Cos/n6424 ), .A1(\CIC1Cos/d_d7_49 ), 
    .D0(\CIC1Cos/d7_48 ), .C0(\CIC1Cos/n6449 ), .B0(\CIC1Cos/n6424 ), 
    .A0(\CIC1Cos/d_d7_48 ), .DI1(\CIC1Cos/d8_71_N_1603_49 ), 
    .DI0(\CIC1Cos/d8_71_N_1603_48 ), .CE(\CIC1Cos/osc_clk_enable_1197 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11220 ), .F0(\CIC1Cos/d8_71_N_1603_48 ), 
    .Q0(\CIC1Cos/d8_48 ), .F1(\CIC1Cos/d8_71_N_1603_49 ), .Q1(\CIC1Cos/d8_49 ), 
    .FCO(\CIC1Cos/n11221 ));
  CIC1Cos_SLICE_1324 \CIC1Cos/SLICE_1324 ( .D1(\CIC1Cos/d7_47 ), 
    .C1(\CIC1Cos/n6450 ), .B1(\CIC1Cos/n6424 ), .A1(\CIC1Cos/d_d7_47 ), 
    .D0(\CIC1Cos/d7_46 ), .C0(\CIC1Cos/n6451 ), .B0(\CIC1Cos/n6424 ), 
    .A0(\CIC1Cos/d_d7_46 ), .DI1(\CIC1Cos/d8_71_N_1603_47 ), 
    .DI0(\CIC1Cos/d8_71_N_1603_46 ), .CE(\CIC1Cos/osc_clk_enable_1197 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11219 ), .F0(\CIC1Cos/d8_71_N_1603_46 ), 
    .Q0(\CIC1Cos/d8_46 ), .F1(\CIC1Cos/d8_71_N_1603_47 ), .Q1(\CIC1Cos/d8_47 ), 
    .FCO(\CIC1Cos/n11220 ));
  CIC1Cos_SLICE_1325 \CIC1Cos/SLICE_1325 ( .D1(\CIC1Cos/d7_45 ), 
    .C1(\CIC1Cos/n6452 ), .B1(\CIC1Cos/n6424 ), .A1(\CIC1Cos/d_d7_45 ), 
    .D0(\CIC1Cos/d7_44 ), .C0(\CIC1Cos/n6453 ), .B0(\CIC1Cos/n6424 ), 
    .A0(\CIC1Cos/d_d7_44 ), .DI1(\CIC1Cos/d8_71_N_1603_45 ), 
    .DI0(\CIC1Cos/d8_71_N_1603_44 ), .CE(\CIC1Cos/osc_clk_enable_1197 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11218 ), .F0(\CIC1Cos/d8_71_N_1603_44 ), 
    .Q0(\CIC1Cos/d8_44 ), .F1(\CIC1Cos/d8_71_N_1603_45 ), .Q1(\CIC1Cos/d8_45 ), 
    .FCO(\CIC1Cos/n11219 ));
  CIC1Cos_SLICE_1326 \CIC1Cos/SLICE_1326 ( .D1(\CIC1Cos/d7_43 ), 
    .C1(\CIC1Cos/n6454 ), .B1(\CIC1Cos/n6424 ), .A1(\CIC1Cos/d_d7_43 ), 
    .D0(\CIC1Cos/d7_42 ), .C0(\CIC1Cos/n6455 ), .B0(\CIC1Cos/n6424 ), 
    .A0(\CIC1Cos/d_d7_42 ), .DI1(\CIC1Cos/d8_71_N_1603_43 ), 
    .DI0(\CIC1Cos/d8_71_N_1603_42 ), .CE(\CIC1Cos/osc_clk_enable_1197 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11217 ), .F0(\CIC1Cos/d8_71_N_1603_42 ), 
    .Q0(\CIC1Cos/d8_42 ), .F1(\CIC1Cos/d8_71_N_1603_43 ), .Q1(\CIC1Cos/d8_43 ), 
    .FCO(\CIC1Cos/n11218 ));
  CIC1Cos_SLICE_1327 \CIC1Cos/SLICE_1327 ( .D1(\CIC1Cos/d7_41 ), 
    .C1(\CIC1Cos/n6456 ), .B1(\CIC1Cos/n6424 ), .A1(\CIC1Cos/d_d7_41 ), 
    .D0(\CIC1Cos/d7_40 ), .C0(\CIC1Cos/n6457 ), .B0(\CIC1Cos/n6424 ), 
    .A0(\CIC1Cos/d_d7_40 ), .DI1(\CIC1Cos/d8_71_N_1603_41 ), 
    .DI0(\CIC1Cos/d8_71_N_1603_40 ), .CE(\CIC1Cos/osc_clk_enable_1197 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11216 ), .F0(\CIC1Cos/d8_71_N_1603_40 ), 
    .Q0(\CIC1Cos/d8_40 ), .F1(\CIC1Cos/d8_71_N_1603_41 ), .Q1(\CIC1Cos/d8_41 ), 
    .FCO(\CIC1Cos/n11217 ));
  CIC1Cos_SLICE_1328 \CIC1Cos/SLICE_1328 ( .D1(\CIC1Cos/d7_39 ), 
    .C1(\CIC1Cos/n6458 ), .B1(\CIC1Cos/n6424 ), .A1(\CIC1Cos/d_d7_39 ), 
    .D0(\CIC1Cos/d7_38 ), .C0(\CIC1Cos/n6459 ), .B0(\CIC1Cos/n6424 ), 
    .A0(\CIC1Cos/d_d7_38 ), .DI1(\CIC1Cos/d8_71_N_1603_39 ), 
    .DI0(\CIC1Cos/d8_71_N_1603_38 ), .CE(\CIC1Cos/osc_clk_enable_1197 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11215 ), .F0(\CIC1Cos/d8_71_N_1603_38 ), 
    .Q0(\CIC1Cos/d8_38 ), .F1(\CIC1Cos/d8_71_N_1603_39 ), .Q1(\CIC1Cos/d8_39 ), 
    .FCO(\CIC1Cos/n11216 ));
  CIC1Cos_SLICE_1329 \CIC1Cos/SLICE_1329 ( .D1(\CIC1Cos/d7_37 ), 
    .C1(\CIC1Cos/n6460 ), .B1(\CIC1Cos/n6424 ), .A1(\CIC1Cos/d_d7_37 ), 
    .D0(\CIC1Cos/d7_36 ), .C0(\CIC1Cos/n6461 ), .B0(\CIC1Cos/n6424 ), 
    .A0(\CIC1Cos/d_d7_36 ), .DI1(\CIC1Cos/d8_71_N_1603_37 ), 
    .DI0(\CIC1Cos/d8_71_N_1603_36 ), .CE(\CIC1Cos/osc_clk_enable_1197 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11214 ), .F0(\CIC1Cos/d8_71_N_1603_36 ), 
    .Q0(\CIC1Cos/d8_36 ), .F1(\CIC1Cos/d8_71_N_1603_37 ), .Q1(\CIC1Cos/d8_37 ), 
    .FCO(\CIC1Cos/n11215 ));
  CIC1Cos_SLICE_1330 \CIC1Cos/SLICE_1330 ( .A1(\CIC1Cos/n6424 ), 
    .FCO(\CIC1Cos/n11214 ));
  CIC1Cos_SLICE_1331 \CIC1Cos/SLICE_1331 ( .B0(\CIC1Cos/d_d8_71 ), 
    .A0(\CIC1Cos/d8_71 ), .FCI(\CIC1Cos/n11210 ), .F0(\CIC1Cos/n6578 ));
  CIC1Cos_SLICE_1332 \CIC1Cos/SLICE_1332 ( .B1(\CIC1Cos/d_d8_70 ), 
    .A1(\CIC1Cos/d8_70 ), .B0(\CIC1Cos/d_d8_69 ), .A0(\CIC1Cos/d8_69 ), 
    .FCI(\CIC1Cos/n11209 ), .F0(\CIC1Cos/n6580 ), .F1(\CIC1Cos/n6579 ), 
    .FCO(\CIC1Cos/n11210 ));
  CIC1Cos_SLICE_1333 \CIC1Cos/SLICE_1333 ( .B1(\CIC1Cos/d_d8_68 ), 
    .A1(\CIC1Cos/d8_68 ), .B0(\CIC1Cos/d_d8_67 ), .A0(\CIC1Cos/d8_67 ), 
    .FCI(\CIC1Cos/n11208 ), .F0(\CIC1Cos/n6582 ), .F1(\CIC1Cos/n6581 ), 
    .FCO(\CIC1Cos/n11209 ));
  CIC1Cos_SLICE_1334 \CIC1Cos/SLICE_1334 ( .B1(\CIC1Cos/d_d8_66 ), 
    .A1(\CIC1Cos/d8_66 ), .B0(\CIC1Cos/d_d8_65 ), .A0(\CIC1Cos/d8_65 ), 
    .FCI(\CIC1Cos/n11207 ), .F0(\CIC1Cos/n6584 ), .F1(\CIC1Cos/n6583 ), 
    .FCO(\CIC1Cos/n11208 ));
  CIC1Cos_SLICE_1335 \CIC1Cos/SLICE_1335 ( .B1(\CIC1Cos/d_d8_64 ), 
    .A1(\CIC1Cos/d8_64 ), .B0(\CIC1Cos/d_d8_63 ), .A0(\CIC1Cos/d8_63 ), 
    .FCI(\CIC1Cos/n11206 ), .F0(\CIC1Cos/n6586 ), .F1(\CIC1Cos/n6585 ), 
    .FCO(\CIC1Cos/n11207 ));
  CIC1Cos_SLICE_1336 \CIC1Cos/SLICE_1336 ( .B1(\CIC1Cos/d_d8_62 ), 
    .A1(\CIC1Cos/d8_62 ), .B0(\CIC1Cos/d_d8_61 ), .A0(\CIC1Cos/d8_61 ), 
    .FCI(\CIC1Cos/n11205 ), .F0(\CIC1Cos/n6588 ), .F1(\CIC1Cos/n6587 ), 
    .FCO(\CIC1Cos/n11206 ));
  CIC1Cos_SLICE_1337 \CIC1Cos/SLICE_1337 ( .B1(\CIC1Cos/d_d8_60 ), 
    .A1(\CIC1Cos/d8_60 ), .B0(\CIC1Cos/d_d8_59 ), .A0(\CIC1Cos/d8_59 ), 
    .FCI(\CIC1Cos/n11204 ), .F0(\CIC1Cos/n6590 ), .F1(\CIC1Cos/n6589 ), 
    .FCO(\CIC1Cos/n11205 ));
  CIC1Cos_SLICE_1338 \CIC1Cos/SLICE_1338 ( .B1(\CIC1Cos/d_d8_58 ), 
    .A1(\CIC1Cos/d8_58 ), .B0(\CIC1Cos/d_d8_57 ), .A0(\CIC1Cos/d8_57 ), 
    .FCI(\CIC1Cos/n11203 ), .F0(\CIC1Cos/n6592 ), .F1(\CIC1Cos/n6591 ), 
    .FCO(\CIC1Cos/n11204 ));
  CIC1Cos_SLICE_1339 \CIC1Cos/SLICE_1339 ( .B1(\CIC1Cos/d_d8_56 ), 
    .A1(\CIC1Cos/d8_56 ), .B0(\CIC1Cos/d_d8_55 ), .A0(\CIC1Cos/d8_55 ), 
    .FCI(\CIC1Cos/n11202 ), .F0(\CIC1Cos/n6594 ), .F1(\CIC1Cos/n6593 ), 
    .FCO(\CIC1Cos/n11203 ));
  CIC1Cos_SLICE_1340 \CIC1Cos/SLICE_1340 ( .B1(\CIC1Cos/d_d8_54 ), 
    .A1(\CIC1Cos/d8_54 ), .B0(\CIC1Cos/d_d8_53 ), .A0(\CIC1Cos/d8_53 ), 
    .FCI(\CIC1Cos/n11201 ), .F0(\CIC1Cos/n6596 ), .F1(\CIC1Cos/n6595 ), 
    .FCO(\CIC1Cos/n11202 ));
  CIC1Cos_SLICE_1341 \CIC1Cos/SLICE_1341 ( .B1(\CIC1Cos/d_d8_52 ), 
    .A1(\CIC1Cos/d8_52 ), .B0(\CIC1Cos/d_d8_51 ), .A0(\CIC1Cos/d8_51 ), 
    .FCI(\CIC1Cos/n11200 ), .F0(\CIC1Cos/n6598 ), .F1(\CIC1Cos/n6597 ), 
    .FCO(\CIC1Cos/n11201 ));
  CIC1Cos_SLICE_1342 \CIC1Cos/SLICE_1342 ( .B1(\CIC1Cos/d_d8_50 ), 
    .A1(\CIC1Cos/d8_50 ), .B0(\CIC1Cos/d_d8_49 ), .A0(\CIC1Cos/d8_49 ), 
    .FCI(\CIC1Cos/n11199 ), .F0(\CIC1Cos/n6600 ), .F1(\CIC1Cos/n6599 ), 
    .FCO(\CIC1Cos/n11200 ));
  CIC1Cos_SLICE_1343 \CIC1Cos/SLICE_1343 ( .B1(\CIC1Cos/d_d8_48 ), 
    .A1(\CIC1Cos/d8_48 ), .B0(\CIC1Cos/d_d8_47 ), .A0(\CIC1Cos/d8_47 ), 
    .FCI(\CIC1Cos/n11198 ), .F0(\CIC1Cos/n6602 ), .F1(\CIC1Cos/n6601 ), 
    .FCO(\CIC1Cos/n11199 ));
  CIC1Cos_SLICE_1344 \CIC1Cos/SLICE_1344 ( .B1(\CIC1Cos/d_d8_46 ), 
    .A1(\CIC1Cos/d8_46 ), .B0(\CIC1Cos/d_d8_45 ), .A0(\CIC1Cos/d8_45 ), 
    .FCI(\CIC1Cos/n11197 ), .F0(\CIC1Cos/n6604 ), .F1(\CIC1Cos/n6603 ), 
    .FCO(\CIC1Cos/n11198 ));
  CIC1Cos_SLICE_1345 \CIC1Cos/SLICE_1345 ( .B1(\CIC1Cos/d_d8_44 ), 
    .A1(\CIC1Cos/d8_44 ), .B0(\CIC1Cos/d_d8_43 ), .A0(\CIC1Cos/d8_43 ), 
    .FCI(\CIC1Cos/n11196 ), .F0(\CIC1Cos/n6606 ), .F1(\CIC1Cos/n6605 ), 
    .FCO(\CIC1Cos/n11197 ));
  CIC1Cos_SLICE_1346 \CIC1Cos/SLICE_1346 ( .B1(\CIC1Cos/d_d8_42 ), 
    .A1(\CIC1Cos/d8_42 ), .B0(\CIC1Cos/d_d8_41 ), .A0(\CIC1Cos/d8_41 ), 
    .FCI(\CIC1Cos/n11195 ), .F0(\CIC1Cos/n6608 ), .F1(\CIC1Cos/n6607 ), 
    .FCO(\CIC1Cos/n11196 ));
  CIC1Cos_SLICE_1347 \CIC1Cos/SLICE_1347 ( .B1(\CIC1Cos/d_d8_40 ), 
    .A1(\CIC1Cos/d8_40 ), .B0(\CIC1Cos/d_d8_39 ), .A0(\CIC1Cos/d8_39 ), 
    .FCI(\CIC1Cos/n11194 ), .F0(\CIC1Cos/n6610 ), .F1(\CIC1Cos/n6609 ), 
    .FCO(\CIC1Cos/n11195 ));
  CIC1Cos_SLICE_1348 \CIC1Cos/SLICE_1348 ( .B1(\CIC1Cos/d_d8_38 ), 
    .A1(\CIC1Cos/d8_38 ), .B0(\CIC1Cos/d_d8_37 ), .A0(\CIC1Cos/d8_37 ), 
    .FCI(\CIC1Cos/n11193 ), .F0(\CIC1Cos/n6612 ), .F1(\CIC1Cos/n6611 ), 
    .FCO(\CIC1Cos/n11194 ));
  CIC1Cos_SLICE_1349 \CIC1Cos/SLICE_1349 ( .B1(\CIC1Cos/d_d8_36 ), 
    .A1(\CIC1Cos/d8_36 ), .F1(\CIC1Cos/n6613 ), .FCO(\CIC1Cos/n11193 ));
  CIC1Cos_SLICE_1350 \CIC1Cos/SLICE_1350 ( .D1(\CIC1Cos/d8_71 ), 
    .C1(\CIC1Cos/n6578 ), .B1(\CIC1Cos/n6576 ), .A1(\CIC1Cos/d_d8_71 ), 
    .D0(\CIC1Cos/d8_70 ), .C0(\CIC1Cos/n6579 ), .B0(\CIC1Cos/n6576 ), 
    .A0(\CIC1Cos/d_d8_70 ), .DI1(\CIC1Cos/d9_71_N_1675_71 ), 
    .DI0(\CIC1Cos/d9_71_N_1675_70 ), .CE(\CIC1Cos/osc_clk_enable_1347 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11191 ), .F0(\CIC1Cos/d9_71_N_1675_70 ), 
    .Q0(\CIC1Cos/d9_70 ), .F1(\CIC1Cos/d9_71_N_1675_71 ), .Q1(\CIC1Cos/d9_71 ));
  CIC1Cos_SLICE_1351 \CIC1Cos/SLICE_1351 ( .D1(\CIC1Cos/d8_69 ), 
    .C1(\CIC1Cos/n6580 ), .B1(\CIC1Cos/n6576 ), .A1(\CIC1Cos/d_d8_69 ), 
    .D0(\CIC1Cos/d8_68 ), .C0(\CIC1Cos/n6581 ), .B0(\CIC1Cos/n6576 ), 
    .A0(\CIC1Cos/d_d8_68 ), .DI1(\CIC1Cos/d9_71_N_1675_69 ), 
    .DI0(\CIC1Cos/d9_71_N_1675_68 ), .CE(\CIC1Cos/osc_clk_enable_1347 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11190 ), .F0(\CIC1Cos/d9_71_N_1675_68 ), 
    .Q0(\CIC1Cos/d9_68 ), .F1(\CIC1Cos/d9_71_N_1675_69 ), .Q1(\CIC1Cos/d9_69 ), 
    .FCO(\CIC1Cos/n11191 ));
  CIC1Cos_SLICE_1352 \CIC1Cos/SLICE_1352 ( .D1(\CIC1Cos/d8_67 ), 
    .C1(\CIC1Cos/n6582 ), .B1(\CIC1Cos/n6576 ), .A1(\CIC1Cos/d_d8_67 ), 
    .D0(\CIC1Cos/d8_66 ), .C0(\CIC1Cos/n6583 ), .B0(\CIC1Cos/n6576 ), 
    .A0(\CIC1Cos/d_d8_66 ), .DI1(\CIC1Cos/d9_71_N_1675_67 ), 
    .DI0(\CIC1Cos/d9_71_N_1675_66 ), .CE(\CIC1Cos/osc_clk_enable_1347 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11189 ), .F0(\CIC1Cos/d9_71_N_1675_66 ), 
    .Q0(\CIC1Cos/d9_66 ), .F1(\CIC1Cos/d9_71_N_1675_67 ), .Q1(\CIC1Cos/d9_67 ), 
    .FCO(\CIC1Cos/n11190 ));
  CIC1Cos_SLICE_1353 \CIC1Cos/SLICE_1353 ( .D1(\CIC1Cos/d8_65 ), 
    .C1(\CIC1Cos/n6584 ), .B1(\CIC1Cos/n6576 ), .A1(\CIC1Cos/d_d8_65 ), 
    .D0(\CIC1Cos/d8_64 ), .C0(\CIC1Cos/n6585 ), .B0(\CIC1Cos/n6576 ), 
    .A0(\CIC1Cos/d_d8_64 ), .DI1(\CIC1Cos/d9_71_N_1675_65 ), 
    .DI0(\CIC1Cos/d9_71_N_1675_64 ), .CE(\CIC1Cos/osc_clk_enable_1347 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11188 ), .F0(\CIC1Cos/d9_71_N_1675_64 ), 
    .Q0(\CIC1Cos/d9_64 ), .F1(\CIC1Cos/d9_71_N_1675_65 ), .Q1(\CIC1Cos/d9_65 ), 
    .FCO(\CIC1Cos/n11189 ));
  CIC1Cos_SLICE_1354 \CIC1Cos/SLICE_1354 ( .D1(\CIC1Cos/d8_63 ), 
    .C1(\CIC1Cos/n6586 ), .B1(\CIC1Cos/n6576 ), .A1(\CIC1Cos/d_d8_63 ), 
    .D0(\CIC1Cos/d8_62 ), .C0(\CIC1Cos/n6587 ), .B0(\CIC1Cos/n6576 ), 
    .A0(\CIC1Cos/d_d8_62 ), .DI1(\CIC1Cos/d9_71_N_1675_63 ), 
    .DI0(\CIC1Cos/d9_71_N_1675_62 ), .CE(\CIC1Cos/osc_clk_enable_1347 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11187 ), .F0(\CIC1Cos/d9_71_N_1675_62 ), 
    .Q0(\CIC1Cos/d9_62 ), .F1(\CIC1Cos/d9_71_N_1675_63 ), .Q1(\CIC1Cos/d9_63 ), 
    .FCO(\CIC1Cos/n11188 ));
  CIC1Cos_SLICE_1355 \CIC1Cos/SLICE_1355 ( .D1(\CIC1Cos/d8_61 ), 
    .C1(\CIC1Cos/n6588 ), .B1(\CIC1Cos/n6576 ), .A1(\CIC1Cos/d_d8_61 ), 
    .D0(\CIC1Cos/d8_60 ), .C0(\CIC1Cos/n6589 ), .B0(\CIC1Cos/n6576 ), 
    .A0(\CIC1Cos/d_d8_60 ), .DI1(\CIC1Cos/d9_71_N_1675_61 ), 
    .DI0(\CIC1Cos/d9_71_N_1675_60 ), .CE(\CIC1Cos/osc_clk_enable_1347 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11186 ), .F0(\CIC1Cos/d9_71_N_1675_60 ), 
    .Q0(\CIC1Cos/d9_60 ), .F1(\CIC1Cos/d9_71_N_1675_61 ), .Q1(\CIC1Cos/d9_61 ), 
    .FCO(\CIC1Cos/n11187 ));
  CIC1Cos_SLICE_1356 \CIC1Cos/SLICE_1356 ( .D1(\CIC1Cos/d8_59 ), 
    .C1(\CIC1Cos/n6590 ), .B1(\CIC1Cos/n6576 ), .A1(\CIC1Cos/d_d8_59 ), 
    .D0(\CIC1Cos/d8_58 ), .C0(\CIC1Cos/n6591 ), .B0(\CIC1Cos/n6576 ), 
    .A0(\CIC1Cos/d_d8_58 ), .DI1(\CIC1Cos/d9_71_N_1675_59 ), 
    .DI0(\CIC1Cos/d9_71_N_1675_58 ), .CE(\CIC1Cos/osc_clk_enable_1347 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11185 ), .F0(\CIC1Cos/d9_71_N_1675_58 ), 
    .Q0(\CIC1Cos/d9_58 ), .F1(\CIC1Cos/d9_71_N_1675_59 ), .Q1(\CIC1Cos/d9_59 ), 
    .FCO(\CIC1Cos/n11186 ));
  CIC1Cos_SLICE_1357 \CIC1Cos/SLICE_1357 ( .D1(\CIC1Cos/d8_57 ), 
    .C1(\CIC1Cos/n6592 ), .B1(\CIC1Cos/n6576 ), .A1(\CIC1Cos/d_d8_57 ), 
    .D0(\CIC1Cos/d8_56 ), .C0(\CIC1Cos/n6593 ), .B0(\CIC1Cos/n6576 ), 
    .A0(\CIC1Cos/d_d8_56 ), .DI1(\CIC1Cos/d9_71_N_1675_57 ), 
    .DI0(\CIC1Cos/d9_71_N_1675_56 ), .CE(\CIC1Cos/osc_clk_enable_1347 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11184 ), .F0(\CIC1Cos/d9_71_N_1675_56 ), 
    .Q0(\CIC1Cos/d9_56 ), .F1(\CIC1Cos/d9_71_N_1675_57 ), .Q1(\CIC1Cos/d9_57 ), 
    .FCO(\CIC1Cos/n11185 ));
  CIC1Cos_SLICE_1358 \CIC1Cos/SLICE_1358 ( .D1(\CIC1Cos/d8_55 ), 
    .C1(\CIC1Cos/n6594 ), .B1(\CIC1Cos/n6576 ), .A1(\CIC1Cos/d_d8_55 ), 
    .D0(\CIC1Cos/d8_54 ), .C0(\CIC1Cos/n6595 ), .B0(\CIC1Cos/n6576 ), 
    .A0(\CIC1Cos/d_d8_54 ), .DI1(\CIC1Cos/d9_71_N_1675_55 ), 
    .DI0(\CIC1Cos/d9_71_N_1675_54 ), .CE(\CIC1Cos/osc_clk_enable_1347 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11183 ), .F0(\CIC1Cos/d9_71_N_1675_54 ), 
    .Q0(\CIC1Cos/d9_54 ), .F1(\CIC1Cos/d9_71_N_1675_55 ), .Q1(\CIC1Cos/d9_55 ), 
    .FCO(\CIC1Cos/n11184 ));
  CIC1Cos_SLICE_1359 \CIC1Cos/SLICE_1359 ( .D1(\CIC1Cos/d8_53 ), 
    .C1(\CIC1Cos/n6596 ), .B1(\CIC1Cos/n6576 ), .A1(\CIC1Cos/d_d8_53 ), 
    .D0(\CIC1Cos/d8_52 ), .C0(\CIC1Cos/n6597 ), .B0(\CIC1Cos/n6576 ), 
    .A0(\CIC1Cos/d_d8_52 ), .DI1(\CIC1Cos/d9_71_N_1675_53 ), 
    .DI0(\CIC1Cos/d9_71_N_1675_52 ), .CE(\CIC1Cos/osc_clk_enable_1347 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11182 ), .F0(\CIC1Cos/d9_71_N_1675_52 ), 
    .Q0(\CIC1Cos/d9_52 ), .F1(\CIC1Cos/d9_71_N_1675_53 ), .Q1(\CIC1Cos/d9_53 ), 
    .FCO(\CIC1Cos/n11183 ));
  CIC1Cos_SLICE_1360 \CIC1Cos/SLICE_1360 ( .D1(\CIC1Cos/d8_51 ), 
    .C1(\CIC1Cos/n6598 ), .B1(\CIC1Cos/n6576 ), .A1(\CIC1Cos/d_d8_51 ), 
    .D0(\CIC1Cos/d8_50 ), .C0(\CIC1Cos/n6599 ), .B0(\CIC1Cos/n6576 ), 
    .A0(\CIC1Cos/d_d8_50 ), .DI1(\CIC1Cos/d9_71_N_1675_51 ), 
    .DI0(\CIC1Cos/d9_71_N_1675_50 ), .CE(\CIC1Cos/osc_clk_enable_1347 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11181 ), .F0(\CIC1Cos/d9_71_N_1675_50 ), 
    .Q0(\CIC1Cos/d9_50 ), .F1(\CIC1Cos/d9_71_N_1675_51 ), .Q1(\CIC1Cos/d9_51 ), 
    .FCO(\CIC1Cos/n11182 ));
  CIC1Cos_SLICE_1361 \CIC1Cos/SLICE_1361 ( .D1(\CIC1Cos/d8_49 ), 
    .C1(\CIC1Cos/n6600 ), .B1(\CIC1Cos/n6576 ), .A1(\CIC1Cos/d_d8_49 ), 
    .D0(\CIC1Cos/d8_48 ), .C0(\CIC1Cos/n6601 ), .B0(\CIC1Cos/n6576 ), 
    .A0(\CIC1Cos/d_d8_48 ), .DI1(\CIC1Cos/d9_71_N_1675_49 ), 
    .DI0(\CIC1Cos/d9_71_N_1675_48 ), .CE(\CIC1Cos/osc_clk_enable_1347 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11180 ), .F0(\CIC1Cos/d9_71_N_1675_48 ), 
    .Q0(\CIC1Cos/d9_48 ), .F1(\CIC1Cos/d9_71_N_1675_49 ), .Q1(\CIC1Cos/d9_49 ), 
    .FCO(\CIC1Cos/n11181 ));
  CIC1Cos_SLICE_1362 \CIC1Cos/SLICE_1362 ( .D1(\CIC1Cos/d8_47 ), 
    .C1(\CIC1Cos/n6602 ), .B1(\CIC1Cos/n6576 ), .A1(\CIC1Cos/d_d8_47 ), 
    .D0(\CIC1Cos/d8_46 ), .C0(\CIC1Cos/n6603 ), .B0(\CIC1Cos/n6576 ), 
    .A0(\CIC1Cos/d_d8_46 ), .DI1(\CIC1Cos/d9_71_N_1675_47 ), 
    .DI0(\CIC1Cos/d9_71_N_1675_46 ), .CE(\CIC1Cos/osc_clk_enable_1347 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11179 ), .F0(\CIC1Cos/d9_71_N_1675_46 ), 
    .Q0(\CIC1Cos/d9_46 ), .F1(\CIC1Cos/d9_71_N_1675_47 ), .Q1(\CIC1Cos/d9_47 ), 
    .FCO(\CIC1Cos/n11180 ));
  CIC1Cos_SLICE_1363 \CIC1Cos/SLICE_1363 ( .D1(\CIC1Cos/d8_45 ), 
    .C1(\CIC1Cos/n6604 ), .B1(\CIC1Cos/n6576 ), .A1(\CIC1Cos/d_d8_45 ), 
    .D0(\CIC1Cos/d8_44 ), .C0(\CIC1Cos/n6605 ), .B0(\CIC1Cos/n6576 ), 
    .A0(\CIC1Cos/d_d8_44 ), .DI1(\CIC1Cos/d9_71_N_1675_45 ), 
    .DI0(\CIC1Cos/d9_71_N_1675_44 ), .CE(\CIC1Cos/osc_clk_enable_1347 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11178 ), .F0(\CIC1Cos/d9_71_N_1675_44 ), 
    .Q0(\CIC1Cos/d9_44 ), .F1(\CIC1Cos/d9_71_N_1675_45 ), .Q1(\CIC1Cos/d9_45 ), 
    .FCO(\CIC1Cos/n11179 ));
  CIC1Cos_SLICE_1364 \CIC1Cos/SLICE_1364 ( .D1(\CIC1Cos/d8_43 ), 
    .C1(\CIC1Cos/n6606 ), .B1(\CIC1Cos/n6576 ), .A1(\CIC1Cos/d_d8_43 ), 
    .D0(\CIC1Cos/d8_42 ), .C0(\CIC1Cos/n6607 ), .B0(\CIC1Cos/n6576 ), 
    .A0(\CIC1Cos/d_d8_42 ), .DI1(\CIC1Cos/d9_71_N_1675_43 ), 
    .DI0(\CIC1Cos/d9_71_N_1675_42 ), .CE(\CIC1Cos/osc_clk_enable_1297 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11177 ), .F0(\CIC1Cos/d9_71_N_1675_42 ), 
    .Q0(\CIC1Cos/d9_42 ), .F1(\CIC1Cos/d9_71_N_1675_43 ), .Q1(\CIC1Cos/d9_43 ), 
    .FCO(\CIC1Cos/n11178 ));
  CIC1Cos_SLICE_1365 \CIC1Cos/SLICE_1365 ( .D1(\CIC1Cos/d8_41 ), 
    .C1(\CIC1Cos/n6608 ), .B1(\CIC1Cos/n6576 ), .A1(\CIC1Cos/d_d8_41 ), 
    .D0(\CIC1Cos/d8_40 ), .C0(\CIC1Cos/n6609 ), .B0(\CIC1Cos/n6576 ), 
    .A0(\CIC1Cos/d_d8_40 ), .DI1(\CIC1Cos/d9_71_N_1675_41 ), 
    .DI0(\CIC1Cos/d9_71_N_1675_40 ), .CE(\CIC1Cos/osc_clk_enable_1297 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11176 ), .F0(\CIC1Cos/d9_71_N_1675_40 ), 
    .Q0(\CIC1Cos/d9_40 ), .F1(\CIC1Cos/d9_71_N_1675_41 ), .Q1(\CIC1Cos/d9_41 ), 
    .FCO(\CIC1Cos/n11177 ));
  CIC1Cos_SLICE_1366 \CIC1Cos/SLICE_1366 ( .D1(\CIC1Cos/d8_39 ), 
    .C1(\CIC1Cos/n6610 ), .B1(\CIC1Cos/n6576 ), .A1(\CIC1Cos/d_d8_39 ), 
    .D0(\CIC1Cos/d8_38 ), .C0(\CIC1Cos/n6611 ), .B0(\CIC1Cos/n6576 ), 
    .A0(\CIC1Cos/d_d8_38 ), .DI1(\CIC1Cos/d9_71_N_1675_39 ), 
    .DI0(\CIC1Cos/d9_71_N_1675_38 ), .CE(\CIC1Cos/osc_clk_enable_1297 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11175 ), .F0(\CIC1Cos/d9_71_N_1675_38 ), 
    .Q0(\CIC1Cos/d9_38 ), .F1(\CIC1Cos/d9_71_N_1675_39 ), .Q1(\CIC1Cos/d9_39 ), 
    .FCO(\CIC1Cos/n11176 ));
  CIC1Cos_SLICE_1367 \CIC1Cos/SLICE_1367 ( .D1(\CIC1Cos/d8_37 ), 
    .C1(\CIC1Cos/n6612 ), .B1(\CIC1Cos/n6576 ), .A1(\CIC1Cos/d_d8_37 ), 
    .D0(\CIC1Cos/d8_36 ), .C0(\CIC1Cos/n6613 ), .B0(\CIC1Cos/n6576 ), 
    .A0(\CIC1Cos/d_d8_36 ), .DI1(\CIC1Cos/d9_71_N_1675_37 ), 
    .DI0(\CIC1Cos/d9_71_N_1675_36 ), .CE(\CIC1Cos/osc_clk_enable_1297 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11174 ), .F0(\CIC1Cos/d9_71_N_1675_36 ), 
    .Q0(\CIC1Cos/d9_36 ), .F1(\CIC1Cos/d9_71_N_1675_37 ), .Q1(\CIC1Cos/d9_37 ), 
    .FCO(\CIC1Cos/n11175 ));
  CIC1Cos_SLICE_1368 \CIC1Cos/SLICE_1368 ( .A1(\CIC1Cos/n6576 ), 
    .FCO(\CIC1Cos/n11174 ));
  CIC1Cos_SLICE_1369 \CIC1Cos/SLICE_1369 ( .B0(\CIC1Cos/d_d9_71 ), 
    .A0(\CIC1Cos/d9_71 ), .FCI(\CIC1Cos/n11170 ), .F0(\CIC1Cos/n6730 ));
  CIC1Cos_SLICE_1370 \CIC1Cos/SLICE_1370 ( .B1(\CIC1Cos/d_d9_70 ), 
    .A1(\CIC1Cos/d9_70 ), .B0(\CIC1Cos/d_d9_69 ), .A0(\CIC1Cos/d9_69 ), 
    .FCI(\CIC1Cos/n11169 ), .F0(\CIC1Cos/n6732 ), .F1(\CIC1Cos/n6731 ), 
    .FCO(\CIC1Cos/n11170 ));
  CIC1Cos_SLICE_1371 \CIC1Cos/SLICE_1371 ( .B1(\CIC1Cos/d_d9_68 ), 
    .A1(\CIC1Cos/d9_68 ), .B0(\CIC1Cos/d_d9_67 ), .A0(\CIC1Cos/d9_67 ), 
    .FCI(\CIC1Cos/n11168 ), .F0(\CIC1Cos/n6734 ), .F1(\CIC1Cos/n6733 ), 
    .FCO(\CIC1Cos/n11169 ));
  CIC1Cos_SLICE_1372 \CIC1Cos/SLICE_1372 ( .B1(\CIC1Cos/d_d9_66 ), 
    .A1(\CIC1Cos/d9_66 ), .B0(\CIC1Cos/d_d9_65 ), .A0(\CIC1Cos/d9_65 ), 
    .FCI(\CIC1Cos/n11167 ), .F0(\CIC1Cos/n6736 ), .F1(\CIC1Cos/n6735 ), 
    .FCO(\CIC1Cos/n11168 ));
  CIC1Cos_SLICE_1373 \CIC1Cos/SLICE_1373 ( .B1(\CIC1Cos/d_d9_64 ), 
    .A1(\CIC1Cos/d9_64 ), .B0(\CIC1Cos/d_d9_63 ), .A0(\CIC1Cos/d9_63 ), 
    .FCI(\CIC1Cos/n11166 ), .F0(\CIC1Cos/n6738 ), .F1(\CIC1Cos/n6737 ), 
    .FCO(\CIC1Cos/n11167 ));
  CIC1Cos_SLICE_1374 \CIC1Cos/SLICE_1374 ( .B1(\CIC1Cos/d_d9_62 ), 
    .A1(\CIC1Cos/d9_62 ), .B0(\CIC1Cos/d_d9_61 ), .A0(\CIC1Cos/d9_61 ), 
    .FCI(\CIC1Cos/n11165 ), .F0(\CIC1Cos/n6740 ), .F1(\CIC1Cos/n6739 ), 
    .FCO(\CIC1Cos/n11166 ));
  CIC1Cos_SLICE_1375 \CIC1Cos/SLICE_1375 ( .B1(\CIC1Cos/d_d9_60 ), 
    .A1(\CIC1Cos/d9_60 ), .B0(\CIC1Cos/d_d9_59 ), .A0(\CIC1Cos/d9_59 ), 
    .FCI(\CIC1Cos/n11164 ), .F0(\CIC1Cos/n6742 ), .F1(\CIC1Cos/n6741 ), 
    .FCO(\CIC1Cos/n11165 ));
  CIC1Cos_SLICE_1376 \CIC1Cos/SLICE_1376 ( .B1(\CIC1Cos/d_d9_58 ), 
    .A1(\CIC1Cos/d9_58 ), .B0(\CIC1Cos/d_d9_57 ), .A0(\CIC1Cos/d9_57 ), 
    .FCI(\CIC1Cos/n11163 ), .F0(\CIC1Cos/n6744 ), .F1(\CIC1Cos/n6743 ), 
    .FCO(\CIC1Cos/n11164 ));
  CIC1Cos_SLICE_1377 \CIC1Cos/SLICE_1377 ( .B1(\CIC1Cos/d_d9_56 ), 
    .A1(\CIC1Cos/d9_56 ), .B0(\CIC1Cos/d_d9_55 ), .A0(\CIC1Cos/d9_55 ), 
    .FCI(\CIC1Cos/n11162 ), .FCO(\CIC1Cos/n11163 ));
  CIC1Cos_SLICE_1378 \CIC1Cos/SLICE_1378 ( .B1(\CIC1Cos/d_d9_54 ), 
    .A1(\CIC1Cos/d9_54 ), .B0(\CIC1Cos/d_d9_53 ), .A0(\CIC1Cos/d9_53 ), 
    .FCI(\CIC1Cos/n11161 ), .FCO(\CIC1Cos/n11162 ));
  CIC1Cos_SLICE_1379 \CIC1Cos/SLICE_1379 ( .B1(\CIC1Cos/d_d9_52 ), 
    .A1(\CIC1Cos/d9_52 ), .B0(\CIC1Cos/d_d9_51 ), .A0(\CIC1Cos/d9_51 ), 
    .FCI(\CIC1Cos/n11160 ), .FCO(\CIC1Cos/n11161 ));
  CIC1Cos_SLICE_1380 \CIC1Cos/SLICE_1380 ( .B1(\CIC1Cos/d_d9_50 ), 
    .A1(\CIC1Cos/d9_50 ), .B0(\CIC1Cos/d_d9_49 ), .A0(\CIC1Cos/d9_49 ), 
    .FCI(\CIC1Cos/n11159 ), .FCO(\CIC1Cos/n11160 ));
  CIC1Cos_SLICE_1381 \CIC1Cos/SLICE_1381 ( .B1(\CIC1Cos/d_d9_48 ), 
    .A1(\CIC1Cos/d9_48 ), .B0(\CIC1Cos/d_d9_47 ), .A0(\CIC1Cos/d9_47 ), 
    .FCI(\CIC1Cos/n11158 ), .FCO(\CIC1Cos/n11159 ));
  CIC1Cos_SLICE_1382 \CIC1Cos/SLICE_1382 ( .B1(\CIC1Cos/d_d9_46 ), 
    .A1(\CIC1Cos/d9_46 ), .B0(\CIC1Cos/d_d9_45 ), .A0(\CIC1Cos/d9_45 ), 
    .FCI(\CIC1Cos/n11157 ), .FCO(\CIC1Cos/n11158 ));
  CIC1Cos_SLICE_1383 \CIC1Cos/SLICE_1383 ( .B1(\CIC1Cos/d_d9_44 ), 
    .A1(\CIC1Cos/d9_44 ), .B0(\CIC1Cos/d_d9_43 ), .A0(\CIC1Cos/d9_43 ), 
    .FCI(\CIC1Cos/n11156 ), .FCO(\CIC1Cos/n11157 ));
  CIC1Cos_SLICE_1384 \CIC1Cos/SLICE_1384 ( .B1(\CIC1Cos/d_d9_42 ), 
    .A1(\CIC1Cos/d9_42 ), .B0(\CIC1Cos/d_d9_41 ), .A0(\CIC1Cos/d9_41 ), 
    .FCI(\CIC1Cos/n11155 ), .FCO(\CIC1Cos/n11156 ));
  CIC1Cos_SLICE_1385 \CIC1Cos/SLICE_1385 ( .B1(\CIC1Cos/d_d9_40 ), 
    .A1(\CIC1Cos/d9_40 ), .B0(\CIC1Cos/d_d9_39 ), .A0(\CIC1Cos/d9_39 ), 
    .FCI(\CIC1Cos/n11154 ), .FCO(\CIC1Cos/n11155 ));
  CIC1Cos_SLICE_1386 \CIC1Cos/SLICE_1386 ( .B1(\CIC1Cos/d_d9_38 ), 
    .A1(\CIC1Cos/d9_38 ), .B0(\CIC1Cos/d_d9_37 ), .A0(\CIC1Cos/d9_37 ), 
    .FCI(\CIC1Cos/n11153 ), .FCO(\CIC1Cos/n11154 ));
  CIC1Cos_SLICE_1387 \CIC1Cos/SLICE_1387 ( .B1(\CIC1Cos/d_d9_36 ), 
    .A1(\CIC1Cos/d9_36 ), .FCO(\CIC1Cos/n11153 ));
  CIC1Cos_SLICE_1388 \CIC1Cos/SLICE_1388 ( .B0(\CIC1Cos/d_d9_71 ), 
    .A0(\CIC1Cos/d9_71 ), .FCI(\CIC1Cos/n11152 ), .F0(\CIC1Cos/n6768 ));
  CIC1Cos_SLICE_1389 \CIC1Cos/SLICE_1389 ( .B1(\CIC1Cos/d_d9_70 ), 
    .A1(\CIC1Cos/d9_70 ), .B0(\CIC1Cos/d_d9_69 ), .A0(\CIC1Cos/d9_69 ), 
    .FCI(\CIC1Cos/n11151 ), .F0(\CIC1Cos/n6770 ), .F1(\CIC1Cos/n6769 ), 
    .FCO(\CIC1Cos/n11152 ));
  CIC1Cos_SLICE_1390 \CIC1Cos/SLICE_1390 ( .B1(\CIC1Cos/d_d9_68 ), 
    .A1(\CIC1Cos/d9_68 ), .B0(\CIC1Cos/d_d9_67 ), .A0(\CIC1Cos/d9_67 ), 
    .FCI(\CIC1Cos/n11150 ), .F0(\CIC1Cos/n6772 ), .F1(\CIC1Cos/n6771 ), 
    .FCO(\CIC1Cos/n11151 ));
  CIC1Cos_SLICE_1391 \CIC1Cos/SLICE_1391 ( .B1(\CIC1Cos/d_d9_66 ), 
    .A1(\CIC1Cos/d9_66 ), .B0(\CIC1Cos/d_d9_65 ), .A0(\CIC1Cos/d9_65 ), 
    .FCI(\CIC1Cos/n11149 ), .F0(\CIC1Cos/n6774 ), .F1(\CIC1Cos/n6773 ), 
    .FCO(\CIC1Cos/n11150 ));
  CIC1Cos_SLICE_1392 \CIC1Cos/SLICE_1392 ( .B1(\CIC1Cos/d_d9_64 ), 
    .A1(\CIC1Cos/d9_64 ), .B0(\CIC1Cos/d_d9_63 ), .A0(\CIC1Cos/d9_63 ), 
    .FCI(\CIC1Cos/n11148 ), .F0(\CIC1Cos/n6776 ), .F1(\CIC1Cos/n6775 ), 
    .FCO(\CIC1Cos/n11149 ));
  CIC1Cos_SLICE_1393 \CIC1Cos/SLICE_1393 ( .B1(\CIC1Cos/d_d9_62 ), 
    .A1(\CIC1Cos/d9_62 ), .B0(\CIC1Cos/d_d9_61 ), .A0(\CIC1Cos/d9_61 ), 
    .FCI(\CIC1Cos/n11147 ), .F0(\CIC1Cos/n6778 ), .F1(\CIC1Cos/n6777 ), 
    .FCO(\CIC1Cos/n11148 ));
  CIC1Cos_SLICE_1394 \CIC1Cos/SLICE_1394 ( .B1(\CIC1Cos/d_d9_60 ), 
    .A1(\CIC1Cos/d9_60 ), .B0(\CIC1Cos/d_d9_59 ), .A0(\CIC1Cos/d9_59 ), 
    .FCI(\CIC1Cos/n11146 ), .F0(\CIC1Cos/n6780 ), .F1(\CIC1Cos/n6779 ), 
    .FCO(\CIC1Cos/n11147 ));
  CIC1Cos_SLICE_1395 \CIC1Cos/SLICE_1395 ( .B1(\CIC1Cos/d_d9_58 ), 
    .A1(\CIC1Cos/d9_58 ), .B0(\CIC1Cos/d_d9_57 ), .A0(\CIC1Cos/d9_57 ), 
    .FCI(\CIC1Cos/n11145 ), .F0(\CIC1Cos/n6782 ), .F1(\CIC1Cos/n6781 ), 
    .FCO(\CIC1Cos/n11146 ));
  CIC1Cos_SLICE_1396 \CIC1Cos/SLICE_1396 ( .B1(\CIC1Cos/d_d9_56 ), 
    .A1(\CIC1Cos/d9_56 ), .B0(\CIC1Cos/d_d9_55 ), .A0(\CIC1Cos/d9_55 ), 
    .FCI(\CIC1Cos/n11144 ), .FCO(\CIC1Cos/n11145 ));
  CIC1Cos_SLICE_1397 \CIC1Cos/SLICE_1397 ( .B1(\CIC1Cos/d_d9_54 ), 
    .A1(\CIC1Cos/d9_54 ), .B0(\CIC1Cos/d_d9_53 ), .A0(\CIC1Cos/d9_53 ), 
    .FCI(\CIC1Cos/n11143 ), .FCO(\CIC1Cos/n11144 ));
  CIC1Cos_SLICE_1398 \CIC1Cos/SLICE_1398 ( .B1(\CIC1Cos/d_d9_52 ), 
    .A1(\CIC1Cos/d9_52 ), .B0(\CIC1Cos/d_d9_51 ), .A0(\CIC1Cos/d9_51 ), 
    .FCI(\CIC1Cos/n11142 ), .FCO(\CIC1Cos/n11143 ));
  CIC1Cos_SLICE_1399 \CIC1Cos/SLICE_1399 ( .B1(\CIC1Cos/d_d9_50 ), 
    .A1(\CIC1Cos/d9_50 ), .B0(\CIC1Cos/d_d9_49 ), .A0(\CIC1Cos/d9_49 ), 
    .FCI(\CIC1Cos/n11141 ), .FCO(\CIC1Cos/n11142 ));
  CIC1Cos_SLICE_1400 \CIC1Cos/SLICE_1400 ( .B1(\CIC1Cos/d_d9_48 ), 
    .A1(\CIC1Cos/d9_48 ), .B0(\CIC1Cos/d_d9_47 ), .A0(\CIC1Cos/d9_47 ), 
    .FCI(\CIC1Cos/n11140 ), .FCO(\CIC1Cos/n11141 ));
  CIC1Cos_SLICE_1401 \CIC1Cos/SLICE_1401 ( .B1(\CIC1Cos/d_d9_46 ), 
    .A1(\CIC1Cos/d9_46 ), .B0(\CIC1Cos/d_d9_45 ), .A0(\CIC1Cos/d9_45 ), 
    .FCI(\CIC1Cos/n11139 ), .FCO(\CIC1Cos/n11140 ));
  CIC1Cos_SLICE_1402 \CIC1Cos/SLICE_1402 ( .B1(\CIC1Cos/d_d9_44 ), 
    .A1(\CIC1Cos/d9_44 ), .B0(\CIC1Cos/d_d9_43 ), .A0(\CIC1Cos/d9_43 ), 
    .FCI(\CIC1Cos/n11138 ), .FCO(\CIC1Cos/n11139 ));
  CIC1Cos_SLICE_1403 \CIC1Cos/SLICE_1403 ( .B1(\CIC1Cos/d_d9_42 ), 
    .A1(\CIC1Cos/d9_42 ), .B0(\CIC1Cos/d_d9_41 ), .A0(\CIC1Cos/d9_41 ), 
    .FCI(\CIC1Cos/n11137 ), .FCO(\CIC1Cos/n11138 ));
  CIC1Cos_SLICE_1404 \CIC1Cos/SLICE_1404 ( .B1(\CIC1Cos/d_d9_40 ), 
    .A1(\CIC1Cos/d9_40 ), .B0(\CIC1Cos/d_d9_39 ), .A0(\CIC1Cos/d9_39 ), 
    .FCI(\CIC1Cos/n11136 ), .FCO(\CIC1Cos/n11137 ));
  CIC1Cos_SLICE_1405 \CIC1Cos/SLICE_1405 ( .B1(\CIC1Cos/d_d9_38 ), 
    .A1(\CIC1Cos/d9_38 ), .B0(\CIC1Cos/d_d9_37 ), .A0(\CIC1Cos/d9_37 ), 
    .FCI(\CIC1Cos/n11135 ), .FCO(\CIC1Cos/n11136 ));
  CIC1Cos_SLICE_1406 \CIC1Cos/SLICE_1406 ( .B1(\CIC1Cos/d_d9_36 ), 
    .A1(\CIC1Cos/d9_36 ), .FCO(\CIC1Cos/n11135 ));
  CIC1Cos_SLICE_1407 \CIC1Cos/SLICE_1407 ( .A0(\CIC1Cos/count_15 ), 
    .DI0(\CIC1Cos/n376 ), .LSR(\CIC1Cos/n8429 ), .CLK(osc_clk), 
    .FCI(\CIC1Cos/n10938 ), .F0(\CIC1Cos/n376 ), .Q0(\CIC1Cos/count_15 ));
  CIC1Cos_SLICE_1408 \CIC1Cos/SLICE_1408 ( .A1(\CIC1Cos/count_14 ), 
    .A0(\CIC1Cos/count_13 ), .DI1(\CIC1Cos/n377 ), .DI0(\CIC1Cos/n378 ), 
    .LSR(\CIC1Cos/n8429 ), .CLK(osc_clk), .FCI(\CIC1Cos/n10937 ), 
    .F0(\CIC1Cos/n378 ), .Q0(\CIC1Cos/count_13 ), .F1(\CIC1Cos/n377 ), 
    .Q1(\CIC1Cos/count_14 ), .FCO(\CIC1Cos/n10938 ));
  CIC1Cos_SLICE_1409 \CIC1Cos/SLICE_1409 ( .A1(\CIC1Cos/count_12 ), 
    .A0(\CIC1Cos/count_11 ), .DI1(\CIC1Cos/n379 ), .LSR(\CIC1Cos/n8429 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n10936 ), .F0(\CIC1Cos/n380 ), 
    .F1(\CIC1Cos/n379 ), .Q1(\CIC1Cos/count_12 ), .FCO(\CIC1Cos/n10937 ));
  CIC1Cos_SLICE_1410 \CIC1Cos/SLICE_1410 ( .A1(\CIC1Cos/count_10 ), 
    .A0(\CIC1Cos/count_9 ), .DI1(\CIC1Cos/n381 ), .DI0(\CIC1Cos/n382 ), 
    .LSR(\CIC1Cos/n8429 ), .CLK(osc_clk), .FCI(\CIC1Cos/n10935 ), 
    .F0(\CIC1Cos/n382 ), .Q0(\CIC1Cos/count_9 ), .F1(\CIC1Cos/n381 ), 
    .Q1(\CIC1Cos/count_10 ), .FCO(\CIC1Cos/n10936 ));
  CIC1Cos_SLICE_1411 \CIC1Cos/SLICE_1411 ( .A1(\CIC1Cos/count_8 ), 
    .A0(\CIC1Cos/count_7 ), .DI1(\CIC1Cos/n383 ), .DI0(\CIC1Cos/n384 ), 
    .LSR(\CIC1Cos/n8429 ), .CLK(osc_clk), .FCI(\CIC1Cos/n10934 ), 
    .F0(\CIC1Cos/n384 ), .Q0(\CIC1Cos/count_7 ), .F1(\CIC1Cos/n383 ), 
    .Q1(\CIC1Cos/count_8 ), .FCO(\CIC1Cos/n10935 ));
  CIC1Cos_SLICE_1412 \CIC1Cos/SLICE_1412 ( .A1(\CIC1Cos/count_6 ), 
    .A0(\CIC1Cos/count_5 ), .DI1(\CIC1Cos/n385 ), .DI0(\CIC1Cos/n386 ), 
    .LSR(\CIC1Cos/n8429 ), .CLK(osc_clk), .FCI(\CIC1Cos/n10933 ), 
    .F0(\CIC1Cos/n386 ), .Q0(\CIC1Cos/count_5 ), .F1(\CIC1Cos/n385 ), 
    .Q1(\CIC1Cos/count_6 ), .FCO(\CIC1Cos/n10934 ));
  CIC1Cos_SLICE_1413 \CIC1Cos/SLICE_1413 ( .A1(\CIC1Cos/count_4 ), 
    .A0(\CIC1Cos/count_3 ), .DI1(\CIC1Cos/n387 ), .DI0(\CIC1Cos/n388 ), 
    .LSR(\CIC1Cos/n8429 ), .CLK(osc_clk), .FCI(\CIC1Cos/n10932 ), 
    .F0(\CIC1Cos/n388 ), .Q0(\CIC1Cos/count_3 ), .F1(\CIC1Cos/n387 ), 
    .Q1(\CIC1Cos/count_4 ), .FCO(\CIC1Cos/n10933 ));
  CIC1Cos_SLICE_1414 \CIC1Cos/SLICE_1414 ( .A1(\CIC1Cos/count_2 ), 
    .A0(\CIC1Cos/count_1 ), .DI1(\CIC1Cos/n389 ), .DI0(\CIC1Cos/n390 ), 
    .LSR(\CIC1Cos/n8429 ), .CLK(osc_clk), .FCI(\CIC1Cos/n10931 ), 
    .F0(\CIC1Cos/n390 ), .Q0(\CIC1Cos/count_1 ), .F1(\CIC1Cos/n389 ), 
    .Q1(\CIC1Cos/count_2 ), .FCO(\CIC1Cos/n10932 ));
  CIC1Cos_SLICE_1415 \CIC1Cos/SLICE_1415 ( .A1(\CIC1Cos/count_0 ), 
    .F1(\CIC1Cos/n391 ), .FCO(\CIC1Cos/n10931 ));
  CIC1Cos_SLICE_1416 \CIC1Cos/SLICE_1416 ( .FCI(\CIC1Cos/n10912 ), 
    .F0(\CIC1Cos/n5664 ));
  CIC1Cos_SLICE_1417 \CIC1Cos/SLICE_1417 ( .B1(\CIC1Cos/d5_35 ), 
    .A1(\CIC1Cos/d4_35 ), .B0(\CIC1Cos/d5_34 ), .A0(\CIC1Cos/d4_34 ), 
    .DI1(\CIC1Cos/d5_71_N_706_35 ), .DI0(\CIC1Cos/d5_71_N_706_34 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n10911 ), .F0(\CIC1Cos/d5_71_N_706_34 ), 
    .Q0(\CIC1Cos/d5_34 ), .F1(\CIC1Cos/d5_71_N_706_35 ), .Q1(\CIC1Cos/d5_35 ), 
    .FCO(\CIC1Cos/n10912 ));
  CIC1Cos_SLICE_1418 \CIC1Cos/SLICE_1418 ( .B1(\CIC1Cos/d5_33 ), 
    .A1(\CIC1Cos/d4_33 ), .B0(\CIC1Cos/d5_32 ), .A0(\CIC1Cos/d4_32 ), 
    .DI1(\CIC1Cos/d5_71_N_706_33 ), .DI0(\CIC1Cos/d5_71_N_706_32 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n10910 ), .F0(\CIC1Cos/d5_71_N_706_32 ), 
    .Q0(\CIC1Cos/d5_32 ), .F1(\CIC1Cos/d5_71_N_706_33 ), .Q1(\CIC1Cos/d5_33 ), 
    .FCO(\CIC1Cos/n10911 ));
  CIC1Cos_SLICE_1419 \CIC1Cos/SLICE_1419 ( .B1(\CIC1Cos/d5_31 ), 
    .A1(\CIC1Cos/d4_31 ), .B0(\CIC1Cos/d5_30 ), .A0(\CIC1Cos/d4_30 ), 
    .DI1(\CIC1Cos/d5_71_N_706_31 ), .DI0(\CIC1Cos/d5_71_N_706_30 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n10909 ), .F0(\CIC1Cos/d5_71_N_706_30 ), 
    .Q0(\CIC1Cos/d5_30 ), .F1(\CIC1Cos/d5_71_N_706_31 ), .Q1(\CIC1Cos/d5_31 ), 
    .FCO(\CIC1Cos/n10910 ));
  CIC1Cos_SLICE_1420 \CIC1Cos/SLICE_1420 ( .B1(\CIC1Cos/d5_29 ), 
    .A1(\CIC1Cos/d4_29 ), .B0(\CIC1Cos/d5_28 ), .A0(\CIC1Cos/d4_28 ), 
    .DI1(\CIC1Cos/d5_71_N_706_29 ), .DI0(\CIC1Cos/d5_71_N_706_28 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n10908 ), .F0(\CIC1Cos/d5_71_N_706_28 ), 
    .Q0(\CIC1Cos/d5_28 ), .F1(\CIC1Cos/d5_71_N_706_29 ), .Q1(\CIC1Cos/d5_29 ), 
    .FCO(\CIC1Cos/n10909 ));
  CIC1Cos_SLICE_1421 \CIC1Cos/SLICE_1421 ( .B1(\CIC1Cos/d5_27 ), 
    .A1(\CIC1Cos/d4_27 ), .B0(\CIC1Cos/d5_26 ), .A0(\CIC1Cos/d4_26 ), 
    .DI1(\CIC1Cos/d5_71_N_706_27 ), .DI0(\CIC1Cos/d5_71_N_706_26 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n10907 ), .F0(\CIC1Cos/d5_71_N_706_26 ), 
    .Q0(\CIC1Cos/d5_26 ), .F1(\CIC1Cos/d5_71_N_706_27 ), .Q1(\CIC1Cos/d5_27 ), 
    .FCO(\CIC1Cos/n10908 ));
  CIC1Cos_SLICE_1422 \CIC1Cos/SLICE_1422 ( .B1(\CIC1Cos/d5_25 ), 
    .A1(\CIC1Cos/d4_25 ), .B0(\CIC1Cos/d5_24 ), .A0(\CIC1Cos/d4_24 ), 
    .DI1(\CIC1Cos/d5_71_N_706_25 ), .DI0(\CIC1Cos/d5_71_N_706_24 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n10906 ), .F0(\CIC1Cos/d5_71_N_706_24 ), 
    .Q0(\CIC1Cos/d5_24 ), .F1(\CIC1Cos/d5_71_N_706_25 ), .Q1(\CIC1Cos/d5_25 ), 
    .FCO(\CIC1Cos/n10907 ));
  CIC1Cos_SLICE_1423 \CIC1Cos/SLICE_1423 ( .B1(\CIC1Cos/d5_23 ), 
    .A1(\CIC1Cos/d4_23 ), .B0(\CIC1Cos/d5_22 ), .A0(\CIC1Cos/d4_22 ), 
    .DI1(\CIC1Cos/d5_71_N_706_23 ), .DI0(\CIC1Cos/d5_71_N_706_22 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n10905 ), .F0(\CIC1Cos/d5_71_N_706_22 ), 
    .Q0(\CIC1Cos/d5_22 ), .F1(\CIC1Cos/d5_71_N_706_23 ), .Q1(\CIC1Cos/d5_23 ), 
    .FCO(\CIC1Cos/n10906 ));
  CIC1Cos_SLICE_1424 \CIC1Cos/SLICE_1424 ( .B1(\CIC1Cos/d5_21 ), 
    .A1(\CIC1Cos/d4_21 ), .B0(\CIC1Cos/d5_20 ), .A0(\CIC1Cos/d4_20 ), 
    .DI1(\CIC1Cos/d5_71_N_706_21 ), .DI0(\CIC1Cos/d5_71_N_706_20 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n10904 ), .F0(\CIC1Cos/d5_71_N_706_20 ), 
    .Q0(\CIC1Cos/d5_20 ), .F1(\CIC1Cos/d5_71_N_706_21 ), .Q1(\CIC1Cos/d5_21 ), 
    .FCO(\CIC1Cos/n10905 ));
  CIC1Cos_SLICE_1425 \CIC1Cos/SLICE_1425 ( .B1(\CIC1Cos/d5_19 ), 
    .A1(\CIC1Cos/d4_19 ), .B0(\CIC1Cos/d5_18 ), .A0(\CIC1Cos/d4_18 ), 
    .DI1(\CIC1Cos/d5_71_N_706_19 ), .DI0(\CIC1Cos/d5_71_N_706_18 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n10903 ), .F0(\CIC1Cos/d5_71_N_706_18 ), 
    .Q0(\CIC1Cos/d5_18 ), .F1(\CIC1Cos/d5_71_N_706_19 ), .Q1(\CIC1Cos/d5_19 ), 
    .FCO(\CIC1Cos/n10904 ));
  CIC1Cos_SLICE_1426 \CIC1Cos/SLICE_1426 ( .B1(\CIC1Cos/d5_17 ), 
    .A1(\CIC1Cos/d4_17 ), .B0(\CIC1Cos/d5_16 ), .A0(\CIC1Cos/d4_16 ), 
    .DI1(\CIC1Cos/d5_71_N_706_17 ), .DI0(\CIC1Cos/d5_71_N_706_16 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n10902 ), .F0(\CIC1Cos/d5_71_N_706_16 ), 
    .Q0(\CIC1Cos/d5_16 ), .F1(\CIC1Cos/d5_71_N_706_17 ), .Q1(\CIC1Cos/d5_17 ), 
    .FCO(\CIC1Cos/n10903 ));
  CIC1Cos_SLICE_1427 \CIC1Cos/SLICE_1427 ( .B1(\CIC1Cos/d5_15 ), 
    .A1(\CIC1Cos/d4_15 ), .B0(\CIC1Cos/d5_14 ), .A0(\CIC1Cos/d4_14 ), 
    .DI1(\CIC1Cos/d5_71_N_706_15 ), .DI0(\CIC1Cos/d5_71_N_706_14 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n10901 ), .F0(\CIC1Cos/d5_71_N_706_14 ), 
    .Q0(\CIC1Cos/d5_14 ), .F1(\CIC1Cos/d5_71_N_706_15 ), .Q1(\CIC1Cos/d5_15 ), 
    .FCO(\CIC1Cos/n10902 ));
  CIC1Cos_SLICE_1428 \CIC1Cos/SLICE_1428 ( .B1(\CIC1Cos/d5_13 ), 
    .A1(\CIC1Cos/d4_13 ), .B0(\CIC1Cos/d5_12 ), .A0(\CIC1Cos/d4_12 ), 
    .DI1(\CIC1Cos/d5_71_N_706_13 ), .DI0(\CIC1Cos/d5_71_N_706_12 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n10900 ), .F0(\CIC1Cos/d5_71_N_706_12 ), 
    .Q0(\CIC1Cos/d5_12 ), .F1(\CIC1Cos/d5_71_N_706_13 ), .Q1(\CIC1Cos/d5_13 ), 
    .FCO(\CIC1Cos/n10901 ));
  CIC1Cos_SLICE_1429 \CIC1Cos/SLICE_1429 ( .B1(\CIC1Cos/d5_11 ), 
    .A1(\CIC1Cos/d4_11 ), .B0(\CIC1Cos/d5_10 ), .A0(\CIC1Cos/d4_10 ), 
    .DI1(\CIC1Cos/d5_71_N_706_11 ), .DI0(\CIC1Cos/d5_71_N_706_10 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n10899 ), .F0(\CIC1Cos/d5_71_N_706_10 ), 
    .Q0(\CIC1Cos/d5_10 ), .F1(\CIC1Cos/d5_71_N_706_11 ), .Q1(\CIC1Cos/d5_11 ), 
    .FCO(\CIC1Cos/n10900 ));
  CIC1Cos_SLICE_1430 \CIC1Cos/SLICE_1430 ( .B1(\CIC1Cos/d5_9 ), 
    .A1(\CIC1Cos/d4_9 ), .B0(\CIC1Cos/d5_8 ), .A0(\CIC1Cos/d4_8 ), 
    .DI1(\CIC1Cos/d5_71_N_706_9 ), .DI0(\CIC1Cos/d5_71_N_706_8 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n10898 ), .F0(\CIC1Cos/d5_71_N_706_8 ), 
    .Q0(\CIC1Cos/d5_8 ), .F1(\CIC1Cos/d5_71_N_706_9 ), .Q1(\CIC1Cos/d5_9 ), 
    .FCO(\CIC1Cos/n10899 ));
  CIC1Cos_SLICE_1431 \CIC1Cos/SLICE_1431 ( .B1(\CIC1Cos/d5_7 ), 
    .A1(\CIC1Cos/d4_7 ), .B0(\CIC1Cos/d5_6 ), .A0(\CIC1Cos/d4_6 ), 
    .DI1(\CIC1Cos/d5_71_N_706_7 ), .DI0(\CIC1Cos/d5_71_N_706_6 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n10897 ), .F0(\CIC1Cos/d5_71_N_706_6 ), 
    .Q0(\CIC1Cos/d5_6 ), .F1(\CIC1Cos/d5_71_N_706_7 ), .Q1(\CIC1Cos/d5_7 ), 
    .FCO(\CIC1Cos/n10898 ));
  CIC1Cos_SLICE_1432 \CIC1Cos/SLICE_1432 ( .B1(\CIC1Cos/d5_5 ), 
    .A1(\CIC1Cos/d4_5 ), .B0(\CIC1Cos/d5_4 ), .A0(\CIC1Cos/d4_4 ), 
    .DI1(\CIC1Cos/d5_71_N_706_5 ), .DI0(\CIC1Cos/d5_71_N_706_4 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n10896 ), .F0(\CIC1Cos/d5_71_N_706_4 ), 
    .Q0(\CIC1Cos/d5_4 ), .F1(\CIC1Cos/d5_71_N_706_5 ), .Q1(\CIC1Cos/d5_5 ), 
    .FCO(\CIC1Cos/n10897 ));
  CIC1Cos_SLICE_1433 \CIC1Cos/SLICE_1433 ( .B1(\CIC1Cos/d5_3 ), 
    .A1(\CIC1Cos/d4_3 ), .B0(\CIC1Cos/d5_2 ), .A0(\CIC1Cos/d4_2 ), 
    .DI1(\CIC1Cos/d5_71_N_706_3 ), .DI0(\CIC1Cos/d5_71_N_706_2 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n10895 ), .F0(\CIC1Cos/d5_71_N_706_2 ), 
    .Q0(\CIC1Cos/d5_2 ), .F1(\CIC1Cos/d5_71_N_706_3 ), .Q1(\CIC1Cos/d5_3 ), 
    .FCO(\CIC1Cos/n10896 ));
  CIC1Cos_SLICE_1434 \CIC1Cos/SLICE_1434 ( .B1(\CIC1Cos/d5_1 ), 
    .A1(\CIC1Cos/d4_1 ), .B0(\CIC1Cos/d5_0 ), .A0(\CIC1Cos/d4_0 ), 
    .DI1(\CIC1Cos/d5_71_N_706_1 ), .CLK(osc_clk), .F1(\CIC1Cos/d5_71_N_706_1 ), 
    .Q1(\CIC1Cos/d5_1 ), .FCO(\CIC1Cos/n10895 ));
  CIC1Cos_SLICE_1435 \CIC1Cos/SLICE_1435 ( .FCI(\CIC1Cos/n10893 ), 
    .F0(\CIC1Cos/n5512 ));
  CIC1Cos_SLICE_1436 \CIC1Cos/SLICE_1436 ( .B1(\CIC1Cos/d4_35 ), 
    .A1(\CIC1Cos/d3_35 ), .B0(\CIC1Cos/d4_34 ), .A0(\CIC1Cos/d3_34 ), 
    .DI1(\CIC1Cos/d4_71_N_634_35 ), .DI0(\CIC1Cos/d4_71_N_634_34 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n10892 ), .F0(\CIC1Cos/d4_71_N_634_34 ), 
    .Q0(\CIC1Cos/d4_34 ), .F1(\CIC1Cos/d4_71_N_634_35 ), .Q1(\CIC1Cos/d4_35 ), 
    .FCO(\CIC1Cos/n10893 ));
  CIC1Cos_SLICE_1437 \CIC1Cos/SLICE_1437 ( .B1(\CIC1Cos/d4_33 ), 
    .A1(\CIC1Cos/d3_33 ), .B0(\CIC1Cos/d4_32 ), .A0(\CIC1Cos/d3_32 ), 
    .DI1(\CIC1Cos/d4_71_N_634_33 ), .DI0(\CIC1Cos/d4_71_N_634_32 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n10891 ), .F0(\CIC1Cos/d4_71_N_634_32 ), 
    .Q0(\CIC1Cos/d4_32 ), .F1(\CIC1Cos/d4_71_N_634_33 ), .Q1(\CIC1Cos/d4_33 ), 
    .FCO(\CIC1Cos/n10892 ));
  CIC1Cos_SLICE_1438 \CIC1Cos/SLICE_1438 ( .B1(\CIC1Cos/d4_31 ), 
    .A1(\CIC1Cos/d3_31 ), .B0(\CIC1Cos/d4_30 ), .A0(\CIC1Cos/d3_30 ), 
    .DI1(\CIC1Cos/d4_71_N_634_31 ), .DI0(\CIC1Cos/d4_71_N_634_30 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n10890 ), .F0(\CIC1Cos/d4_71_N_634_30 ), 
    .Q0(\CIC1Cos/d4_30 ), .F1(\CIC1Cos/d4_71_N_634_31 ), .Q1(\CIC1Cos/d4_31 ), 
    .FCO(\CIC1Cos/n10891 ));
  CIC1Cos_SLICE_1439 \CIC1Cos/SLICE_1439 ( .B1(\CIC1Cos/d4_29 ), 
    .A1(\CIC1Cos/d3_29 ), .B0(\CIC1Cos/d4_28 ), .A0(\CIC1Cos/d3_28 ), 
    .DI1(\CIC1Cos/d4_71_N_634_29 ), .DI0(\CIC1Cos/d4_71_N_634_28 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n10889 ), .F0(\CIC1Cos/d4_71_N_634_28 ), 
    .Q0(\CIC1Cos/d4_28 ), .F1(\CIC1Cos/d4_71_N_634_29 ), .Q1(\CIC1Cos/d4_29 ), 
    .FCO(\CIC1Cos/n10890 ));
  CIC1Cos_SLICE_1440 \CIC1Cos/SLICE_1440 ( .B1(\CIC1Cos/d4_27 ), 
    .A1(\CIC1Cos/d3_27 ), .B0(\CIC1Cos/d4_26 ), .A0(\CIC1Cos/d3_26 ), 
    .DI1(\CIC1Cos/d4_71_N_634_27 ), .DI0(\CIC1Cos/d4_71_N_634_26 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n10888 ), .F0(\CIC1Cos/d4_71_N_634_26 ), 
    .Q0(\CIC1Cos/d4_26 ), .F1(\CIC1Cos/d4_71_N_634_27 ), .Q1(\CIC1Cos/d4_27 ), 
    .FCO(\CIC1Cos/n10889 ));
  CIC1Cos_SLICE_1441 \CIC1Cos/SLICE_1441 ( .B1(\CIC1Cos/d4_25 ), 
    .A1(\CIC1Cos/d3_25 ), .B0(\CIC1Cos/d4_24 ), .A0(\CIC1Cos/d3_24 ), 
    .DI1(\CIC1Cos/d4_71_N_634_25 ), .DI0(\CIC1Cos/d4_71_N_634_24 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n10887 ), .F0(\CIC1Cos/d4_71_N_634_24 ), 
    .Q0(\CIC1Cos/d4_24 ), .F1(\CIC1Cos/d4_71_N_634_25 ), .Q1(\CIC1Cos/d4_25 ), 
    .FCO(\CIC1Cos/n10888 ));
  CIC1Cos_SLICE_1442 \CIC1Cos/SLICE_1442 ( .B1(\CIC1Cos/d4_23 ), 
    .A1(\CIC1Cos/d3_23 ), .B0(\CIC1Cos/d4_22 ), .A0(\CIC1Cos/d3_22 ), 
    .DI1(\CIC1Cos/d4_71_N_634_23 ), .DI0(\CIC1Cos/d4_71_N_634_22 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n10886 ), .F0(\CIC1Cos/d4_71_N_634_22 ), 
    .Q0(\CIC1Cos/d4_22 ), .F1(\CIC1Cos/d4_71_N_634_23 ), .Q1(\CIC1Cos/d4_23 ), 
    .FCO(\CIC1Cos/n10887 ));
  CIC1Cos_SLICE_1443 \CIC1Cos/SLICE_1443 ( .B1(\CIC1Cos/d4_21 ), 
    .A1(\CIC1Cos/d3_21 ), .B0(\CIC1Cos/d4_20 ), .A0(\CIC1Cos/d3_20 ), 
    .DI1(\CIC1Cos/d4_71_N_634_21 ), .DI0(\CIC1Cos/d4_71_N_634_20 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n10885 ), .F0(\CIC1Cos/d4_71_N_634_20 ), 
    .Q0(\CIC1Cos/d4_20 ), .F1(\CIC1Cos/d4_71_N_634_21 ), .Q1(\CIC1Cos/d4_21 ), 
    .FCO(\CIC1Cos/n10886 ));
  CIC1Cos_SLICE_1444 \CIC1Cos/SLICE_1444 ( .B1(\CIC1Cos/d4_19 ), 
    .A1(\CIC1Cos/d3_19 ), .B0(\CIC1Cos/d4_18 ), .A0(\CIC1Cos/d3_18 ), 
    .DI1(\CIC1Cos/d4_71_N_634_19 ), .DI0(\CIC1Cos/d4_71_N_634_18 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n10884 ), .F0(\CIC1Cos/d4_71_N_634_18 ), 
    .Q0(\CIC1Cos/d4_18 ), .F1(\CIC1Cos/d4_71_N_634_19 ), .Q1(\CIC1Cos/d4_19 ), 
    .FCO(\CIC1Cos/n10885 ));
  CIC1Cos_SLICE_1445 \CIC1Cos/SLICE_1445 ( .B1(\CIC1Cos/d4_17 ), 
    .A1(\CIC1Cos/d3_17 ), .B0(\CIC1Cos/d4_16 ), .A0(\CIC1Cos/d3_16 ), 
    .DI1(\CIC1Cos/d4_71_N_634_17 ), .DI0(\CIC1Cos/d4_71_N_634_16 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n10883 ), .F0(\CIC1Cos/d4_71_N_634_16 ), 
    .Q0(\CIC1Cos/d4_16 ), .F1(\CIC1Cos/d4_71_N_634_17 ), .Q1(\CIC1Cos/d4_17 ), 
    .FCO(\CIC1Cos/n10884 ));
  CIC1Cos_SLICE_1446 \CIC1Cos/SLICE_1446 ( .B1(\CIC1Cos/d4_15 ), 
    .A1(\CIC1Cos/d3_15 ), .B0(\CIC1Cos/d4_14 ), .A0(\CIC1Cos/d3_14 ), 
    .DI1(\CIC1Cos/d4_71_N_634_15 ), .DI0(\CIC1Cos/d4_71_N_634_14 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n10882 ), .F0(\CIC1Cos/d4_71_N_634_14 ), 
    .Q0(\CIC1Cos/d4_14 ), .F1(\CIC1Cos/d4_71_N_634_15 ), .Q1(\CIC1Cos/d4_15 ), 
    .FCO(\CIC1Cos/n10883 ));
  CIC1Cos_SLICE_1447 \CIC1Cos/SLICE_1447 ( .B1(\CIC1Cos/d4_13 ), 
    .A1(\CIC1Cos/d3_13 ), .B0(\CIC1Cos/d4_12 ), .A0(\CIC1Cos/d3_12 ), 
    .DI1(\CIC1Cos/d4_71_N_634_13 ), .DI0(\CIC1Cos/d4_71_N_634_12 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n10881 ), .F0(\CIC1Cos/d4_71_N_634_12 ), 
    .Q0(\CIC1Cos/d4_12 ), .F1(\CIC1Cos/d4_71_N_634_13 ), .Q1(\CIC1Cos/d4_13 ), 
    .FCO(\CIC1Cos/n10882 ));
  CIC1Cos_SLICE_1448 \CIC1Cos/SLICE_1448 ( .B1(\CIC1Cos/d4_11 ), 
    .A1(\CIC1Cos/d3_11 ), .B0(\CIC1Cos/d4_10 ), .A0(\CIC1Cos/d3_10 ), 
    .DI1(\CIC1Cos/d4_71_N_634_11 ), .DI0(\CIC1Cos/d4_71_N_634_10 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n10880 ), .F0(\CIC1Cos/d4_71_N_634_10 ), 
    .Q0(\CIC1Cos/d4_10 ), .F1(\CIC1Cos/d4_71_N_634_11 ), .Q1(\CIC1Cos/d4_11 ), 
    .FCO(\CIC1Cos/n10881 ));
  CIC1Cos_SLICE_1449 \CIC1Cos/SLICE_1449 ( .B1(\CIC1Cos/d4_9 ), 
    .A1(\CIC1Cos/d3_9 ), .B0(\CIC1Cos/d4_8 ), .A0(\CIC1Cos/d3_8 ), 
    .DI1(\CIC1Cos/d4_71_N_634_9 ), .DI0(\CIC1Cos/d4_71_N_634_8 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n10879 ), .F0(\CIC1Cos/d4_71_N_634_8 ), 
    .Q0(\CIC1Cos/d4_8 ), .F1(\CIC1Cos/d4_71_N_634_9 ), .Q1(\CIC1Cos/d4_9 ), 
    .FCO(\CIC1Cos/n10880 ));
  CIC1Cos_SLICE_1450 \CIC1Cos/SLICE_1450 ( .B1(\CIC1Cos/d4_7 ), 
    .A1(\CIC1Cos/d3_7 ), .B0(\CIC1Cos/d4_6 ), .A0(\CIC1Cos/d3_6 ), 
    .DI1(\CIC1Cos/d4_71_N_634_7 ), .DI0(\CIC1Cos/d4_71_N_634_6 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n10878 ), .F0(\CIC1Cos/d4_71_N_634_6 ), 
    .Q0(\CIC1Cos/d4_6 ), .F1(\CIC1Cos/d4_71_N_634_7 ), .Q1(\CIC1Cos/d4_7 ), 
    .FCO(\CIC1Cos/n10879 ));
  CIC1Cos_SLICE_1451 \CIC1Cos/SLICE_1451 ( .B1(\CIC1Cos/d4_5 ), 
    .A1(\CIC1Cos/d3_5 ), .B0(\CIC1Cos/d4_4 ), .A0(\CIC1Cos/d3_4 ), 
    .DI1(\CIC1Cos/d4_71_N_634_5 ), .DI0(\CIC1Cos/d4_71_N_634_4 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n10877 ), .F0(\CIC1Cos/d4_71_N_634_4 ), 
    .Q0(\CIC1Cos/d4_4 ), .F1(\CIC1Cos/d4_71_N_634_5 ), .Q1(\CIC1Cos/d4_5 ), 
    .FCO(\CIC1Cos/n10878 ));
  CIC1Cos_SLICE_1452 \CIC1Cos/SLICE_1452 ( .B1(\CIC1Cos/d4_3 ), 
    .A1(\CIC1Cos/d3_3 ), .B0(\CIC1Cos/d4_2 ), .A0(\CIC1Cos/d3_2 ), 
    .DI1(\CIC1Cos/d4_71_N_634_3 ), .DI0(\CIC1Cos/d4_71_N_634_2 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n10876 ), .F0(\CIC1Cos/d4_71_N_634_2 ), 
    .Q0(\CIC1Cos/d4_2 ), .F1(\CIC1Cos/d4_71_N_634_3 ), .Q1(\CIC1Cos/d4_3 ), 
    .FCO(\CIC1Cos/n10877 ));
  CIC1Cos_SLICE_1453 \CIC1Cos/SLICE_1453 ( .B1(\CIC1Cos/d4_1 ), 
    .A1(\CIC1Cos/d3_1 ), .B0(\CIC1Cos/d4_0 ), .A0(\CIC1Cos/d3_0 ), 
    .DI1(\CIC1Cos/d4_71_N_634_1 ), .CLK(osc_clk), .F1(\CIC1Cos/d4_71_N_634_1 ), 
    .Q1(\CIC1Cos/d4_1 ), .FCO(\CIC1Cos/n10876 ));
  CIC1Cos_SLICE_1454 \CIC1Cos/SLICE_1454 ( .FCI(\CIC1Cos/n10874 ), 
    .F0(\CIC1Cos/n5360 ));
  CIC1Cos_SLICE_1455 \CIC1Cos/SLICE_1455 ( .B1(\CIC1Cos/d3_35 ), 
    .A1(\CIC1Cos/d2_35 ), .B0(\CIC1Cos/d3_34 ), .A0(\CIC1Cos/d2_34 ), 
    .DI1(\CIC1Cos/d3_71_N_562_35 ), .DI0(\CIC1Cos/d3_71_N_562_34 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n10873 ), .F0(\CIC1Cos/d3_71_N_562_34 ), 
    .Q0(\CIC1Cos/d3_34 ), .F1(\CIC1Cos/d3_71_N_562_35 ), .Q1(\CIC1Cos/d3_35 ), 
    .FCO(\CIC1Cos/n10874 ));
  CIC1Cos_SLICE_1456 \CIC1Cos/SLICE_1456 ( .B1(\CIC1Cos/d3_33 ), 
    .A1(\CIC1Cos/d2_33 ), .B0(\CIC1Cos/d3_32 ), .A0(\CIC1Cos/d2_32 ), 
    .DI1(\CIC1Cos/d3_71_N_562_33 ), .DI0(\CIC1Cos/d3_71_N_562_32 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n10872 ), .F0(\CIC1Cos/d3_71_N_562_32 ), 
    .Q0(\CIC1Cos/d3_32 ), .F1(\CIC1Cos/d3_71_N_562_33 ), .Q1(\CIC1Cos/d3_33 ), 
    .FCO(\CIC1Cos/n10873 ));
  CIC1Cos_SLICE_1457 \CIC1Cos/SLICE_1457 ( .B1(\CIC1Cos/d3_31 ), 
    .A1(\CIC1Cos/d2_31 ), .B0(\CIC1Cos/d3_30 ), .A0(\CIC1Cos/d2_30 ), 
    .DI1(\CIC1Cos/d3_71_N_562_31 ), .DI0(\CIC1Cos/d3_71_N_562_30 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n10871 ), .F0(\CIC1Cos/d3_71_N_562_30 ), 
    .Q0(\CIC1Cos/d3_30 ), .F1(\CIC1Cos/d3_71_N_562_31 ), .Q1(\CIC1Cos/d3_31 ), 
    .FCO(\CIC1Cos/n10872 ));
  CIC1Cos_SLICE_1458 \CIC1Cos/SLICE_1458 ( .B1(\CIC1Cos/d3_29 ), 
    .A1(\CIC1Cos/d2_29 ), .B0(\CIC1Cos/d3_28 ), .A0(\CIC1Cos/d2_28 ), 
    .DI1(\CIC1Cos/d3_71_N_562_29 ), .DI0(\CIC1Cos/d3_71_N_562_28 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n10870 ), .F0(\CIC1Cos/d3_71_N_562_28 ), 
    .Q0(\CIC1Cos/d3_28 ), .F1(\CIC1Cos/d3_71_N_562_29 ), .Q1(\CIC1Cos/d3_29 ), 
    .FCO(\CIC1Cos/n10871 ));
  CIC1Cos_SLICE_1459 \CIC1Cos/SLICE_1459 ( .B1(\CIC1Cos/d3_27 ), 
    .A1(\CIC1Cos/d2_27 ), .B0(\CIC1Cos/d3_26 ), .A0(\CIC1Cos/d2_26 ), 
    .DI1(\CIC1Cos/d3_71_N_562_27 ), .DI0(\CIC1Cos/d3_71_N_562_26 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n10869 ), .F0(\CIC1Cos/d3_71_N_562_26 ), 
    .Q0(\CIC1Cos/d3_26 ), .F1(\CIC1Cos/d3_71_N_562_27 ), .Q1(\CIC1Cos/d3_27 ), 
    .FCO(\CIC1Cos/n10870 ));
  CIC1Cos_SLICE_1460 \CIC1Cos/SLICE_1460 ( .B1(\CIC1Cos/d3_25 ), 
    .A1(\CIC1Cos/d2_25 ), .B0(\CIC1Cos/d3_24 ), .A0(\CIC1Cos/d2_24 ), 
    .DI1(\CIC1Cos/d3_71_N_562_25 ), .DI0(\CIC1Cos/d3_71_N_562_24 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n10868 ), .F0(\CIC1Cos/d3_71_N_562_24 ), 
    .Q0(\CIC1Cos/d3_24 ), .F1(\CIC1Cos/d3_71_N_562_25 ), .Q1(\CIC1Cos/d3_25 ), 
    .FCO(\CIC1Cos/n10869 ));
  CIC1Cos_SLICE_1461 \CIC1Cos/SLICE_1461 ( .B1(\CIC1Cos/d3_23 ), 
    .A1(\CIC1Cos/d2_23 ), .B0(\CIC1Cos/d3_22 ), .A0(\CIC1Cos/d2_22 ), 
    .DI1(\CIC1Cos/d3_71_N_562_23 ), .DI0(\CIC1Cos/d3_71_N_562_22 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n10867 ), .F0(\CIC1Cos/d3_71_N_562_22 ), 
    .Q0(\CIC1Cos/d3_22 ), .F1(\CIC1Cos/d3_71_N_562_23 ), .Q1(\CIC1Cos/d3_23 ), 
    .FCO(\CIC1Cos/n10868 ));
  CIC1Cos_SLICE_1462 \CIC1Cos/SLICE_1462 ( .B1(\CIC1Cos/d3_21 ), 
    .A1(\CIC1Cos/d2_21 ), .B0(\CIC1Cos/d3_20 ), .A0(\CIC1Cos/d2_20 ), 
    .DI1(\CIC1Cos/d3_71_N_562_21 ), .DI0(\CIC1Cos/d3_71_N_562_20 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n10866 ), .F0(\CIC1Cos/d3_71_N_562_20 ), 
    .Q0(\CIC1Cos/d3_20 ), .F1(\CIC1Cos/d3_71_N_562_21 ), .Q1(\CIC1Cos/d3_21 ), 
    .FCO(\CIC1Cos/n10867 ));
  CIC1Cos_SLICE_1463 \CIC1Cos/SLICE_1463 ( .B1(\CIC1Cos/d3_19 ), 
    .A1(\CIC1Cos/d2_19 ), .B0(\CIC1Cos/d3_18 ), .A0(\CIC1Cos/d2_18 ), 
    .DI1(\CIC1Cos/d3_71_N_562_19 ), .DI0(\CIC1Cos/d3_71_N_562_18 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n10865 ), .F0(\CIC1Cos/d3_71_N_562_18 ), 
    .Q0(\CIC1Cos/d3_18 ), .F1(\CIC1Cos/d3_71_N_562_19 ), .Q1(\CIC1Cos/d3_19 ), 
    .FCO(\CIC1Cos/n10866 ));
  CIC1Cos_SLICE_1464 \CIC1Cos/SLICE_1464 ( .B1(\CIC1Cos/d3_17 ), 
    .A1(\CIC1Cos/d2_17 ), .B0(\CIC1Cos/d3_16 ), .A0(\CIC1Cos/d2_16 ), 
    .DI1(\CIC1Cos/d3_71_N_562_17 ), .DI0(\CIC1Cos/d3_71_N_562_16 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n10864 ), .F0(\CIC1Cos/d3_71_N_562_16 ), 
    .Q0(\CIC1Cos/d3_16 ), .F1(\CIC1Cos/d3_71_N_562_17 ), .Q1(\CIC1Cos/d3_17 ), 
    .FCO(\CIC1Cos/n10865 ));
  CIC1Cos_SLICE_1465 \CIC1Cos/SLICE_1465 ( .B1(\CIC1Cos/d3_15 ), 
    .A1(\CIC1Cos/d2_15 ), .B0(\CIC1Cos/d3_14 ), .A0(\CIC1Cos/d2_14 ), 
    .DI1(\CIC1Cos/d3_71_N_562_15 ), .DI0(\CIC1Cos/d3_71_N_562_14 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n10863 ), .F0(\CIC1Cos/d3_71_N_562_14 ), 
    .Q0(\CIC1Cos/d3_14 ), .F1(\CIC1Cos/d3_71_N_562_15 ), .Q1(\CIC1Cos/d3_15 ), 
    .FCO(\CIC1Cos/n10864 ));
  CIC1Cos_SLICE_1466 \CIC1Cos/SLICE_1466 ( .B1(\CIC1Cos/d3_13 ), 
    .A1(\CIC1Cos/d2_13 ), .B0(\CIC1Cos/d3_12 ), .A0(\CIC1Cos/d2_12 ), 
    .DI1(\CIC1Cos/d3_71_N_562_13 ), .DI0(\CIC1Cos/d3_71_N_562_12 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n10862 ), .F0(\CIC1Cos/d3_71_N_562_12 ), 
    .Q0(\CIC1Cos/d3_12 ), .F1(\CIC1Cos/d3_71_N_562_13 ), .Q1(\CIC1Cos/d3_13 ), 
    .FCO(\CIC1Cos/n10863 ));
  CIC1Cos_SLICE_1467 \CIC1Cos/SLICE_1467 ( .B1(\CIC1Cos/d3_11 ), 
    .A1(\CIC1Cos/d2_11 ), .B0(\CIC1Cos/d3_10 ), .A0(\CIC1Cos/d2_10 ), 
    .DI1(\CIC1Cos/d3_71_N_562_11 ), .DI0(\CIC1Cos/d3_71_N_562_10 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n10861 ), .F0(\CIC1Cos/d3_71_N_562_10 ), 
    .Q0(\CIC1Cos/d3_10 ), .F1(\CIC1Cos/d3_71_N_562_11 ), .Q1(\CIC1Cos/d3_11 ), 
    .FCO(\CIC1Cos/n10862 ));
  CIC1Cos_SLICE_1468 \CIC1Cos/SLICE_1468 ( .B1(\CIC1Cos/d3_9 ), 
    .A1(\CIC1Cos/d2_9 ), .B0(\CIC1Cos/d3_8 ), .A0(\CIC1Cos/d2_8 ), 
    .DI1(\CIC1Cos/d3_71_N_562_9 ), .DI0(\CIC1Cos/d3_71_N_562_8 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n10860 ), .F0(\CIC1Cos/d3_71_N_562_8 ), 
    .Q0(\CIC1Cos/d3_8 ), .F1(\CIC1Cos/d3_71_N_562_9 ), .Q1(\CIC1Cos/d3_9 ), 
    .FCO(\CIC1Cos/n10861 ));
  CIC1Cos_SLICE_1469 \CIC1Cos/SLICE_1469 ( .B1(\CIC1Cos/d3_7 ), 
    .A1(\CIC1Cos/d2_7 ), .B0(\CIC1Cos/d3_6 ), .A0(\CIC1Cos/d2_6 ), 
    .DI1(\CIC1Cos/d3_71_N_562_7 ), .DI0(\CIC1Cos/d3_71_N_562_6 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n10859 ), .F0(\CIC1Cos/d3_71_N_562_6 ), 
    .Q0(\CIC1Cos/d3_6 ), .F1(\CIC1Cos/d3_71_N_562_7 ), .Q1(\CIC1Cos/d3_7 ), 
    .FCO(\CIC1Cos/n10860 ));
  CIC1Cos_SLICE_1470 \CIC1Cos/SLICE_1470 ( .B1(\CIC1Cos/d3_5 ), 
    .A1(\CIC1Cos/d2_5 ), .B0(\CIC1Cos/d3_4 ), .A0(\CIC1Cos/d2_4 ), 
    .DI1(\CIC1Cos/d3_71_N_562_5 ), .DI0(\CIC1Cos/d3_71_N_562_4 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n10858 ), .F0(\CIC1Cos/d3_71_N_562_4 ), 
    .Q0(\CIC1Cos/d3_4 ), .F1(\CIC1Cos/d3_71_N_562_5 ), .Q1(\CIC1Cos/d3_5 ), 
    .FCO(\CIC1Cos/n10859 ));
  CIC1Cos_SLICE_1471 \CIC1Cos/SLICE_1471 ( .B1(\CIC1Cos/d3_3 ), 
    .A1(\CIC1Cos/d2_3 ), .B0(\CIC1Cos/d3_2 ), .A0(\CIC1Cos/d2_2 ), 
    .DI1(\CIC1Cos/d3_71_N_562_3 ), .DI0(\CIC1Cos/d3_71_N_562_2 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n10857 ), .F0(\CIC1Cos/d3_71_N_562_2 ), 
    .Q0(\CIC1Cos/d3_2 ), .F1(\CIC1Cos/d3_71_N_562_3 ), .Q1(\CIC1Cos/d3_3 ), 
    .FCO(\CIC1Cos/n10858 ));
  CIC1Cos_SLICE_1472 \CIC1Cos/SLICE_1472 ( .B1(\CIC1Cos/d3_1 ), 
    .A1(\CIC1Cos/d2_1 ), .B0(\CIC1Cos/d3_0 ), .A0(\CIC1Cos/d2_0 ), 
    .DI1(\CIC1Cos/d3_71_N_562_1 ), .CLK(osc_clk), .F1(\CIC1Cos/d3_71_N_562_1 ), 
    .Q1(\CIC1Cos/d3_1 ), .FCO(\CIC1Cos/n10857 ));
  CIC1Cos_SLICE_1473 \CIC1Cos/SLICE_1473 ( .FCI(\CIC1Cos/n10855 ), 
    .F0(\CIC1Cos/n5208 ));
  CIC1Cos_SLICE_1474 \CIC1Cos/SLICE_1474 ( .B1(\CIC1Cos/d2_35 ), 
    .A1(\CIC1Cos/d1_35 ), .B0(\CIC1Cos/d2_34 ), .A0(\CIC1Cos/d1_34 ), 
    .DI1(\CIC1Cos/d2_71_N_490_35 ), .DI0(\CIC1Cos/d2_71_N_490_34 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n10854 ), .F0(\CIC1Cos/d2_71_N_490_34 ), 
    .Q0(\CIC1Cos/d2_34 ), .F1(\CIC1Cos/d2_71_N_490_35 ), .Q1(\CIC1Cos/d2_35 ), 
    .FCO(\CIC1Cos/n10855 ));
  CIC1Cos_SLICE_1475 \CIC1Cos/SLICE_1475 ( .B1(\CIC1Cos/d2_33 ), 
    .A1(\CIC1Cos/d1_33 ), .B0(\CIC1Cos/d2_32 ), .A0(\CIC1Cos/d1_32 ), 
    .DI1(\CIC1Cos/d2_71_N_490_33 ), .DI0(\CIC1Cos/d2_71_N_490_32 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n10853 ), .F0(\CIC1Cos/d2_71_N_490_32 ), 
    .Q0(\CIC1Cos/d2_32 ), .F1(\CIC1Cos/d2_71_N_490_33 ), .Q1(\CIC1Cos/d2_33 ), 
    .FCO(\CIC1Cos/n10854 ));
  CIC1Cos_SLICE_1476 \CIC1Cos/SLICE_1476 ( .B1(\CIC1Cos/d2_31 ), 
    .A1(\CIC1Cos/d1_31 ), .B0(\CIC1Cos/d2_30 ), .A0(\CIC1Cos/d1_30 ), 
    .DI1(\CIC1Cos/d2_71_N_490_31 ), .DI0(\CIC1Cos/d2_71_N_490_30 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n10852 ), .F0(\CIC1Cos/d2_71_N_490_30 ), 
    .Q0(\CIC1Cos/d2_30 ), .F1(\CIC1Cos/d2_71_N_490_31 ), .Q1(\CIC1Cos/d2_31 ), 
    .FCO(\CIC1Cos/n10853 ));
  CIC1Cos_SLICE_1477 \CIC1Cos/SLICE_1477 ( .B1(\CIC1Cos/d2_29 ), 
    .A1(\CIC1Cos/d1_29 ), .B0(\CIC1Cos/d2_28 ), .A0(\CIC1Cos/d1_28 ), 
    .DI1(\CIC1Cos/d2_71_N_490_29 ), .DI0(\CIC1Cos/d2_71_N_490_28 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n10851 ), .F0(\CIC1Cos/d2_71_N_490_28 ), 
    .Q0(\CIC1Cos/d2_28 ), .F1(\CIC1Cos/d2_71_N_490_29 ), .Q1(\CIC1Cos/d2_29 ), 
    .FCO(\CIC1Cos/n10852 ));
  CIC1Cos_SLICE_1478 \CIC1Cos/SLICE_1478 ( .B1(\CIC1Cos/d2_27 ), 
    .A1(\CIC1Cos/d1_27 ), .B0(\CIC1Cos/d2_26 ), .A0(\CIC1Cos/d1_26 ), 
    .DI1(\CIC1Cos/d2_71_N_490_27 ), .DI0(\CIC1Cos/d2_71_N_490_26 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n10850 ), .F0(\CIC1Cos/d2_71_N_490_26 ), 
    .Q0(\CIC1Cos/d2_26 ), .F1(\CIC1Cos/d2_71_N_490_27 ), .Q1(\CIC1Cos/d2_27 ), 
    .FCO(\CIC1Cos/n10851 ));
  CIC1Cos_SLICE_1479 \CIC1Cos/SLICE_1479 ( .B1(\CIC1Cos/d2_25 ), 
    .A1(\CIC1Cos/d1_25 ), .B0(\CIC1Cos/d2_24 ), .A0(\CIC1Cos/d1_24 ), 
    .DI1(\CIC1Cos/d2_71_N_490_25 ), .DI0(\CIC1Cos/d2_71_N_490_24 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n10849 ), .F0(\CIC1Cos/d2_71_N_490_24 ), 
    .Q0(\CIC1Cos/d2_24 ), .F1(\CIC1Cos/d2_71_N_490_25 ), .Q1(\CIC1Cos/d2_25 ), 
    .FCO(\CIC1Cos/n10850 ));
  CIC1Cos_SLICE_1480 \CIC1Cos/SLICE_1480 ( .B1(\CIC1Cos/d2_23 ), 
    .A1(\CIC1Cos/d1_23 ), .B0(\CIC1Cos/d2_22 ), .A0(\CIC1Cos/d1_22 ), 
    .DI1(\CIC1Cos/d2_71_N_490_23 ), .DI0(\CIC1Cos/d2_71_N_490_22 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n10848 ), .F0(\CIC1Cos/d2_71_N_490_22 ), 
    .Q0(\CIC1Cos/d2_22 ), .F1(\CIC1Cos/d2_71_N_490_23 ), .Q1(\CIC1Cos/d2_23 ), 
    .FCO(\CIC1Cos/n10849 ));
  CIC1Cos_SLICE_1481 \CIC1Cos/SLICE_1481 ( .B1(\CIC1Cos/d2_21 ), 
    .A1(\CIC1Cos/d1_21 ), .B0(\CIC1Cos/d2_20 ), .A0(\CIC1Cos/d1_20 ), 
    .DI1(\CIC1Cos/d2_71_N_490_21 ), .DI0(\CIC1Cos/d2_71_N_490_20 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n10847 ), .F0(\CIC1Cos/d2_71_N_490_20 ), 
    .Q0(\CIC1Cos/d2_20 ), .F1(\CIC1Cos/d2_71_N_490_21 ), .Q1(\CIC1Cos/d2_21 ), 
    .FCO(\CIC1Cos/n10848 ));
  CIC1Cos_SLICE_1482 \CIC1Cos/SLICE_1482 ( .B1(\CIC1Cos/d2_19 ), 
    .A1(\CIC1Cos/d1_19 ), .B0(\CIC1Cos/d2_18 ), .A0(\CIC1Cos/d1_18 ), 
    .DI1(\CIC1Cos/d2_71_N_490_19 ), .DI0(\CIC1Cos/d2_71_N_490_18 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n10846 ), .F0(\CIC1Cos/d2_71_N_490_18 ), 
    .Q0(\CIC1Cos/d2_18 ), .F1(\CIC1Cos/d2_71_N_490_19 ), .Q1(\CIC1Cos/d2_19 ), 
    .FCO(\CIC1Cos/n10847 ));
  CIC1Cos_SLICE_1483 \CIC1Cos/SLICE_1483 ( .B1(\CIC1Cos/d2_17 ), 
    .A1(\CIC1Cos/d1_17 ), .B0(\CIC1Cos/d2_16 ), .A0(\CIC1Cos/d1_16 ), 
    .DI1(\CIC1Cos/d2_71_N_490_17 ), .DI0(\CIC1Cos/d2_71_N_490_16 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n10845 ), .F0(\CIC1Cos/d2_71_N_490_16 ), 
    .Q0(\CIC1Cos/d2_16 ), .F1(\CIC1Cos/d2_71_N_490_17 ), .Q1(\CIC1Cos/d2_17 ), 
    .FCO(\CIC1Cos/n10846 ));
  CIC1Cos_SLICE_1484 \CIC1Cos/SLICE_1484 ( .B1(\CIC1Cos/d2_15 ), 
    .A1(\CIC1Cos/d1_15 ), .B0(\CIC1Cos/d2_14 ), .A0(\CIC1Cos/d1_14 ), 
    .DI1(\CIC1Cos/d2_71_N_490_15 ), .DI0(\CIC1Cos/d2_71_N_490_14 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n10844 ), .F0(\CIC1Cos/d2_71_N_490_14 ), 
    .Q0(\CIC1Cos/d2_14 ), .F1(\CIC1Cos/d2_71_N_490_15 ), .Q1(\CIC1Cos/d2_15 ), 
    .FCO(\CIC1Cos/n10845 ));
  CIC1Cos_SLICE_1485 \CIC1Cos/SLICE_1485 ( .B1(\CIC1Cos/d2_13 ), 
    .A1(\CIC1Cos/d1_13 ), .B0(\CIC1Cos/d2_12 ), .A0(\CIC1Cos/d1_12 ), 
    .DI1(\CIC1Cos/d2_71_N_490_13 ), .DI0(\CIC1Cos/d2_71_N_490_12 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n10843 ), .F0(\CIC1Cos/d2_71_N_490_12 ), 
    .Q0(\CIC1Cos/d2_12 ), .F1(\CIC1Cos/d2_71_N_490_13 ), .Q1(\CIC1Cos/d2_13 ), 
    .FCO(\CIC1Cos/n10844 ));
  CIC1Cos_SLICE_1486 \CIC1Cos/SLICE_1486 ( .B1(\CIC1Cos/d2_11 ), 
    .A1(\CIC1Cos/d1_11 ), .B0(\CIC1Cos/d2_10 ), .A0(\CIC1Cos/d1_10 ), 
    .DI1(\CIC1Cos/d2_71_N_490_11 ), .DI0(\CIC1Cos/d2_71_N_490_10 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n10842 ), .F0(\CIC1Cos/d2_71_N_490_10 ), 
    .Q0(\CIC1Cos/d2_10 ), .F1(\CIC1Cos/d2_71_N_490_11 ), .Q1(\CIC1Cos/d2_11 ), 
    .FCO(\CIC1Cos/n10843 ));
  CIC1Cos_SLICE_1487 \CIC1Cos/SLICE_1487 ( .B1(\CIC1Cos/d2_9 ), 
    .A1(\CIC1Cos/d1_9 ), .B0(\CIC1Cos/d2_8 ), .A0(\CIC1Cos/d1_8 ), 
    .DI1(\CIC1Cos/d2_71_N_490_9 ), .DI0(\CIC1Cos/d2_71_N_490_8 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n10841 ), .F0(\CIC1Cos/d2_71_N_490_8 ), 
    .Q0(\CIC1Cos/d2_8 ), .F1(\CIC1Cos/d2_71_N_490_9 ), .Q1(\CIC1Cos/d2_9 ), 
    .FCO(\CIC1Cos/n10842 ));
  CIC1Cos_SLICE_1488 \CIC1Cos/SLICE_1488 ( .B1(\CIC1Cos/d2_7 ), 
    .A1(\CIC1Cos/d1_7 ), .B0(\CIC1Cos/d2_6 ), .A0(\CIC1Cos/d1_6 ), 
    .DI1(\CIC1Cos/d2_71_N_490_7 ), .DI0(\CIC1Cos/d2_71_N_490_6 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n10840 ), .F0(\CIC1Cos/d2_71_N_490_6 ), 
    .Q0(\CIC1Cos/d2_6 ), .F1(\CIC1Cos/d2_71_N_490_7 ), .Q1(\CIC1Cos/d2_7 ), 
    .FCO(\CIC1Cos/n10841 ));
  CIC1Cos_SLICE_1489 \CIC1Cos/SLICE_1489 ( .B1(\CIC1Cos/d2_5 ), 
    .A1(\CIC1Cos/d1_5 ), .B0(\CIC1Cos/d2_4 ), .A0(\CIC1Cos/d1_4 ), 
    .DI1(\CIC1Cos/d2_71_N_490_5 ), .DI0(\CIC1Cos/d2_71_N_490_4 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n10839 ), .F0(\CIC1Cos/d2_71_N_490_4 ), 
    .Q0(\CIC1Cos/d2_4 ), .F1(\CIC1Cos/d2_71_N_490_5 ), .Q1(\CIC1Cos/d2_5 ), 
    .FCO(\CIC1Cos/n10840 ));
  CIC1Cos_SLICE_1490 \CIC1Cos/SLICE_1490 ( .B1(\CIC1Cos/d2_3 ), 
    .A1(\CIC1Cos/d1_3 ), .B0(\CIC1Cos/d2_2 ), .A0(\CIC1Cos/d1_2 ), 
    .DI1(\CIC1Cos/d2_71_N_490_3 ), .DI0(\CIC1Cos/d2_71_N_490_2 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n10838 ), .F0(\CIC1Cos/d2_71_N_490_2 ), 
    .Q0(\CIC1Cos/d2_2 ), .F1(\CIC1Cos/d2_71_N_490_3 ), .Q1(\CIC1Cos/d2_3 ), 
    .FCO(\CIC1Cos/n10839 ));
  CIC1Cos_SLICE_1491 \CIC1Cos/SLICE_1491 ( .B1(\CIC1Cos/d2_1 ), 
    .A1(\CIC1Cos/d1_1 ), .B0(\CIC1Cos/d2_0 ), .A0(\CIC1Cos/d1_0 ), 
    .DI1(\CIC1Cos/d2_71_N_490_1 ), .CLK(osc_clk), .F1(\CIC1Cos/d2_71_N_490_1 ), 
    .Q1(\CIC1Cos/d2_1 ), .FCO(\CIC1Cos/n10838 ));
  CIC1Cos_SLICE_1492 \CIC1Cos/SLICE_1492 ( .FCI(\CIC1Cos/n10798 ), 
    .F0(\CIC1Cos/n5056 ));
  CIC1Cos_SLICE_1493 \CIC1Cos/SLICE_1493 ( .B1(\CIC1Cos/d1_35 ), 
    .A1(MixerOutCos_11), .B0(\CIC1Cos/d1_34 ), .A0(MixerOutCos_11), 
    .DI1(\CIC1Cos/d1_71_N_418_35 ), .DI0(\CIC1Cos/d1_71_N_418_34 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n10797 ), .F0(\CIC1Cos/d1_71_N_418_34 ), 
    .Q0(\CIC1Cos/d1_34 ), .F1(\CIC1Cos/d1_71_N_418_35 ), .Q1(\CIC1Cos/d1_35 ), 
    .FCO(\CIC1Cos/n10798 ));
  CIC1Cos_SLICE_1494 \CIC1Cos/SLICE_1494 ( .B1(\CIC1Cos/d1_33 ), 
    .A1(MixerOutCos_11), .B0(\CIC1Cos/d1_32 ), .A0(MixerOutCos_11), 
    .DI1(\CIC1Cos/d1_71_N_418_33 ), .DI0(\CIC1Cos/d1_71_N_418_32 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n10796 ), .F0(\CIC1Cos/d1_71_N_418_32 ), 
    .Q0(\CIC1Cos/d1_32 ), .F1(\CIC1Cos/d1_71_N_418_33 ), .Q1(\CIC1Cos/d1_33 ), 
    .FCO(\CIC1Cos/n10797 ));
  CIC1Cos_SLICE_1495 \CIC1Cos/SLICE_1495 ( .B1(\CIC1Cos/d1_31 ), 
    .A1(MixerOutCos_11), .B0(\CIC1Cos/d1_30 ), .A0(MixerOutCos_11), 
    .DI1(\CIC1Cos/d1_71_N_418_31 ), .DI0(\CIC1Cos/d1_71_N_418_30 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n10795 ), .F0(\CIC1Cos/d1_71_N_418_30 ), 
    .Q0(\CIC1Cos/d1_30 ), .F1(\CIC1Cos/d1_71_N_418_31 ), .Q1(\CIC1Cos/d1_31 ), 
    .FCO(\CIC1Cos/n10796 ));
  CIC1Cos_SLICE_1496 \CIC1Cos/SLICE_1496 ( .B1(\CIC1Cos/d1_29 ), 
    .A1(MixerOutCos_11), .B0(\CIC1Cos/d1_28 ), .A0(MixerOutCos_11), 
    .DI1(\CIC1Cos/d1_71_N_418_29 ), .DI0(\CIC1Cos/d1_71_N_418_28 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n10794 ), .F0(\CIC1Cos/d1_71_N_418_28 ), 
    .Q0(\CIC1Cos/d1_28 ), .F1(\CIC1Cos/d1_71_N_418_29 ), .Q1(\CIC1Cos/d1_29 ), 
    .FCO(\CIC1Cos/n10795 ));
  CIC1Cos_SLICE_1497 \CIC1Cos/SLICE_1497 ( .B1(\CIC1Cos/d1_27 ), 
    .A1(MixerOutCos_11), .B0(\CIC1Cos/d1_26 ), .A0(MixerOutCos_11), 
    .DI1(\CIC1Cos/d1_71_N_418_27 ), .DI0(\CIC1Cos/d1_71_N_418_26 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n10793 ), .F0(\CIC1Cos/d1_71_N_418_26 ), 
    .Q0(\CIC1Cos/d1_26 ), .F1(\CIC1Cos/d1_71_N_418_27 ), .Q1(\CIC1Cos/d1_27 ), 
    .FCO(\CIC1Cos/n10794 ));
  CIC1Cos_SLICE_1498 \CIC1Cos/SLICE_1498 ( .B1(\CIC1Cos/d1_25 ), 
    .A1(MixerOutCos_11), .B0(\CIC1Cos/d1_24 ), .A0(MixerOutCos_11), 
    .DI1(\CIC1Cos/d1_71_N_418_25 ), .DI0(\CIC1Cos/d1_71_N_418_24 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n10792 ), .F0(\CIC1Cos/d1_71_N_418_24 ), 
    .Q0(\CIC1Cos/d1_24 ), .F1(\CIC1Cos/d1_71_N_418_25 ), .Q1(\CIC1Cos/d1_25 ), 
    .FCO(\CIC1Cos/n10793 ));
  CIC1Cos_SLICE_1499 \CIC1Cos/SLICE_1499 ( .B1(\CIC1Cos/d1_23 ), 
    .A1(MixerOutCos_11), .B0(\CIC1Cos/d1_22 ), .A0(MixerOutCos_11), 
    .DI1(\CIC1Cos/d1_71_N_418_23 ), .DI0(\CIC1Cos/d1_71_N_418_22 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n10791 ), .F0(\CIC1Cos/d1_71_N_418_22 ), 
    .Q0(\CIC1Cos/d1_22 ), .F1(\CIC1Cos/d1_71_N_418_23 ), .Q1(\CIC1Cos/d1_23 ), 
    .FCO(\CIC1Cos/n10792 ));
  CIC1Cos_SLICE_1500 \CIC1Cos/SLICE_1500 ( .B1(\CIC1Cos/d1_21 ), 
    .A1(MixerOutCos_11), .B0(\CIC1Cos/d1_20 ), .A0(MixerOutCos_11), 
    .DI1(\CIC1Cos/d1_71_N_418_21 ), .DI0(\CIC1Cos/d1_71_N_418_20 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n10790 ), .F0(\CIC1Cos/d1_71_N_418_20 ), 
    .Q0(\CIC1Cos/d1_20 ), .F1(\CIC1Cos/d1_71_N_418_21 ), .Q1(\CIC1Cos/d1_21 ), 
    .FCO(\CIC1Cos/n10791 ));
  CIC1Cos_SLICE_1501 \CIC1Cos/SLICE_1501 ( .B1(\CIC1Cos/d1_19 ), 
    .A1(MixerOutCos_11), .B0(\CIC1Cos/d1_18 ), .A0(MixerOutCos_11), 
    .DI1(\CIC1Cos/d1_71_N_418_19 ), .DI0(\CIC1Cos/d1_71_N_418_18 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n10789 ), .F0(\CIC1Cos/d1_71_N_418_18 ), 
    .Q0(\CIC1Cos/d1_18 ), .F1(\CIC1Cos/d1_71_N_418_19 ), .Q1(\CIC1Cos/d1_19 ), 
    .FCO(\CIC1Cos/n10790 ));
  CIC1Cos_SLICE_1502 \CIC1Cos/SLICE_1502 ( .B1(\CIC1Cos/d1_17 ), 
    .A1(MixerOutCos_11), .B0(\CIC1Cos/d1_16 ), .A0(MixerOutCos_11), 
    .DI1(\CIC1Cos/d1_71_N_418_17 ), .DI0(\CIC1Cos/d1_71_N_418_16 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n10788 ), .F0(\CIC1Cos/d1_71_N_418_16 ), 
    .Q0(\CIC1Cos/d1_16 ), .F1(\CIC1Cos/d1_71_N_418_17 ), .Q1(\CIC1Cos/d1_17 ), 
    .FCO(\CIC1Cos/n10789 ));
  CIC1Cos_SLICE_1503 \CIC1Cos/SLICE_1503 ( .B1(\CIC1Cos/d1_15 ), 
    .A1(MixerOutCos_11), .B0(\CIC1Cos/d1_14 ), .A0(MixerOutCos_11), 
    .DI1(\CIC1Cos/d1_71_N_418_15 ), .DI0(\CIC1Cos/d1_71_N_418_14 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n10787 ), .F0(\CIC1Cos/d1_71_N_418_14 ), 
    .Q0(\CIC1Cos/d1_14 ), .F1(\CIC1Cos/d1_71_N_418_15 ), .Q1(\CIC1Cos/d1_15 ), 
    .FCO(\CIC1Cos/n10788 ));
  CIC1Cos_SLICE_1504 \CIC1Cos/SLICE_1504 ( .B1(\CIC1Cos/d1_13 ), 
    .A1(MixerOutCos_11), .B0(\CIC1Cos/d1_12 ), .A0(MixerOutCos_11), 
    .DI1(\CIC1Cos/d1_71_N_418_13 ), .DI0(\CIC1Cos/d1_71_N_418_12 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n10786 ), .F0(\CIC1Cos/d1_71_N_418_12 ), 
    .Q0(\CIC1Cos/d1_12 ), .F1(\CIC1Cos/d1_71_N_418_13 ), .Q1(\CIC1Cos/d1_13 ), 
    .FCO(\CIC1Cos/n10787 ));
  CIC1Cos_SLICE_1505 \CIC1Cos/SLICE_1505 ( .B1(\CIC1Cos/d1_11 ), 
    .A1(MixerOutCos_11), .B0(\CIC1Cos/d1_10 ), .A0(MixerOutCos_10), 
    .DI1(\CIC1Cos/d1_71_N_418_11 ), .DI0(\CIC1Cos/d1_71_N_418_10 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n10785 ), .F0(\CIC1Cos/d1_71_N_418_10 ), 
    .Q0(\CIC1Cos/d1_10 ), .F1(\CIC1Cos/d1_71_N_418_11 ), .Q1(\CIC1Cos/d1_11 ), 
    .FCO(\CIC1Cos/n10786 ));
  CIC1Cos_SLICE_1506 \CIC1Cos/SLICE_1506 ( .B1(\CIC1Cos/d1_9 ), 
    .A1(MixerOutCos_9), .B0(\CIC1Cos/d1_8 ), .A0(MixerOutCos_8), 
    .DI1(\CIC1Cos/d1_71_N_418_9 ), .DI0(\CIC1Cos/d1_71_N_418_8 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n10784 ), .F0(\CIC1Cos/d1_71_N_418_8 ), 
    .Q0(\CIC1Cos/d1_8 ), .F1(\CIC1Cos/d1_71_N_418_9 ), .Q1(\CIC1Cos/d1_9 ), 
    .FCO(\CIC1Cos/n10785 ));
  CIC1Cos_SLICE_1507 \CIC1Cos/SLICE_1507 ( .B1(\CIC1Cos/d1_7 ), 
    .A1(MixerOutCos_7), .B0(\CIC1Cos/d1_6 ), .A0(MixerOutCos_6), 
    .DI1(\CIC1Cos/d1_71_N_418_7 ), .DI0(\CIC1Cos/d1_71_N_418_6 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n10783 ), .F0(\CIC1Cos/d1_71_N_418_6 ), 
    .Q0(\CIC1Cos/d1_6 ), .F1(\CIC1Cos/d1_71_N_418_7 ), .Q1(\CIC1Cos/d1_7 ), 
    .FCO(\CIC1Cos/n10784 ));
  CIC1Cos_SLICE_1508 \CIC1Cos/SLICE_1508 ( .B1(\CIC1Cos/d1_5 ), 
    .A1(MixerOutCos_5), .B0(\CIC1Cos/d1_4 ), .A0(MixerOutCos_4), 
    .DI1(\CIC1Cos/d1_71_N_418_5 ), .DI0(\CIC1Cos/d1_71_N_418_4 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n10782 ), .F0(\CIC1Cos/d1_71_N_418_4 ), 
    .Q0(\CIC1Cos/d1_4 ), .F1(\CIC1Cos/d1_71_N_418_5 ), .Q1(\CIC1Cos/d1_5 ), 
    .FCO(\CIC1Cos/n10783 ));
  CIC1Cos_SLICE_1509 \CIC1Cos/SLICE_1509 ( .B1(\CIC1Cos/d1_3 ), 
    .A1(MixerOutCos_3), .B0(\CIC1Cos/d1_2 ), .A0(MixerOutCos_2), 
    .DI1(\CIC1Cos/d1_71_N_418_3 ), .DI0(\CIC1Cos/d1_71_N_418_2 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n10781 ), .F0(\CIC1Cos/d1_71_N_418_2 ), 
    .Q0(\CIC1Cos/d1_2 ), .F1(\CIC1Cos/d1_71_N_418_3 ), .Q1(\CIC1Cos/d1_3 ), 
    .FCO(\CIC1Cos/n10782 ));
  CIC1Cos_SLICE_1510 \CIC1Cos/SLICE_1510 ( .B1(\CIC1Cos/d1_1 ), 
    .A1(MixerOutCos_1), .B0(\CIC1Cos/d1_0 ), .A0(MixerOutCos_0), 
    .DI1(\CIC1Cos/d1_71_N_418_1 ), .CLK(osc_clk), .F1(\CIC1Cos/d1_71_N_418_1 ), 
    .Q1(\CIC1Cos/d1_1 ), .FCO(\CIC1Cos/n10781 ));
  CIC1Cos_SLICE_1511 \CIC1Cos/SLICE_1511 ( .B0(\CIC1Cos/d_d9_35 ), 
    .A0(\CIC1Cos/d9_35 ), .FCI(\CIC1Cos/n11452 ), .F1(\CIC1Cos/n6728 ));
  CIC1Cos_SLICE_1512 \CIC1Cos/SLICE_1512 ( .B1(\CIC1Cos/d_d9_34 ), 
    .A1(\CIC1Cos/d9_34 ), .B0(\CIC1Cos/d_d9_33 ), .A0(\CIC1Cos/d9_33 ), 
    .FCI(\CIC1Cos/n11451 ), .FCO(\CIC1Cos/n11452 ));
  CIC1Cos_SLICE_1513 \CIC1Cos/SLICE_1513 ( .B1(\CIC1Cos/d_d9_32 ), 
    .A1(\CIC1Cos/d9_32 ), .B0(\CIC1Cos/d_d9_31 ), .A0(\CIC1Cos/d9_31 ), 
    .FCI(\CIC1Cos/n11450 ), .FCO(\CIC1Cos/n11451 ));
  CIC1Cos_SLICE_1514 \CIC1Cos/SLICE_1514 ( .B1(\CIC1Cos/d_d9_30 ), 
    .A1(\CIC1Cos/d9_30 ), .B0(\CIC1Cos/d_d9_29 ), .A0(\CIC1Cos/d9_29 ), 
    .FCI(\CIC1Cos/n11449 ), .FCO(\CIC1Cos/n11450 ));
  CIC1Cos_SLICE_1515 \CIC1Cos/SLICE_1515 ( .B1(\CIC1Cos/d_d9_28 ), 
    .A1(\CIC1Cos/d9_28 ), .B0(\CIC1Cos/d_d9_27 ), .A0(\CIC1Cos/d9_27 ), 
    .FCI(\CIC1Cos/n11448 ), .FCO(\CIC1Cos/n11449 ));
  CIC1Cos_SLICE_1516 \CIC1Cos/SLICE_1516 ( .B1(\CIC1Cos/d_d9_26 ), 
    .A1(\CIC1Cos/d9_26 ), .B0(\CIC1Cos/d_d9_25 ), .A0(\CIC1Cos/d9_25 ), 
    .FCI(\CIC1Cos/n11447 ), .FCO(\CIC1Cos/n11448 ));
  CIC1Cos_SLICE_1517 \CIC1Cos/SLICE_1517 ( .B1(\CIC1Cos/d_d9_24 ), 
    .A1(\CIC1Cos/d9_24 ), .B0(\CIC1Cos/d_d9_23 ), .A0(\CIC1Cos/d9_23 ), 
    .FCI(\CIC1Cos/n11446 ), .FCO(\CIC1Cos/n11447 ));
  CIC1Cos_SLICE_1518 \CIC1Cos/SLICE_1518 ( .B1(\CIC1Cos/d_d9_22 ), 
    .A1(\CIC1Cos/d9_22 ), .B0(\CIC1Cos/d_d9_21 ), .A0(\CIC1Cos/d9_21 ), 
    .FCI(\CIC1Cos/n11445 ), .FCO(\CIC1Cos/n11446 ));
  CIC1Cos_SLICE_1519 \CIC1Cos/SLICE_1519 ( .B1(\CIC1Cos/d_d9_20 ), 
    .A1(\CIC1Cos/d9_20 ), .B0(\CIC1Cos/d_d9_19 ), .A0(\CIC1Cos/d9_19 ), 
    .FCI(\CIC1Cos/n11444 ), .FCO(\CIC1Cos/n11445 ));
  CIC1Cos_SLICE_1520 \CIC1Cos/SLICE_1520 ( .B1(\CIC1Cos/d_d9_18 ), 
    .A1(\CIC1Cos/d9_18 ), .B0(\CIC1Cos/d_d9_17 ), .A0(\CIC1Cos/d9_17 ), 
    .FCI(\CIC1Cos/n11443 ), .FCO(\CIC1Cos/n11444 ));
  CIC1Cos_SLICE_1521 \CIC1Cos/SLICE_1521 ( .B1(\CIC1Cos/d_d9_16 ), 
    .A1(\CIC1Cos/d9_16 ), .B0(\CIC1Cos/d_d9_15 ), .A0(\CIC1Cos/d9_15 ), 
    .FCI(\CIC1Cos/n11442 ), .FCO(\CIC1Cos/n11443 ));
  CIC1Cos_SLICE_1522 \CIC1Cos/SLICE_1522 ( .B1(\CIC1Cos/d_d9_14 ), 
    .A1(\CIC1Cos/d9_14 ), .B0(\CIC1Cos/d_d9_13 ), .A0(\CIC1Cos/d9_13 ), 
    .FCI(\CIC1Cos/n11441 ), .FCO(\CIC1Cos/n11442 ));
  CIC1Cos_SLICE_1523 \CIC1Cos/SLICE_1523 ( .B1(\CIC1Cos/d_d9_12 ), 
    .A1(\CIC1Cos/d9_12 ), .B0(\CIC1Cos/d_d9_11 ), .A0(\CIC1Cos/d9_11 ), 
    .FCI(\CIC1Cos/n11440 ), .FCO(\CIC1Cos/n11441 ));
  CIC1Cos_SLICE_1524 \CIC1Cos/SLICE_1524 ( .B1(\CIC1Cos/d_d9_10 ), 
    .A1(\CIC1Cos/d9_10 ), .B0(\CIC1Cos/d_d9_9 ), .A0(\CIC1Cos/d9_9 ), 
    .FCI(\CIC1Cos/n11439 ), .FCO(\CIC1Cos/n11440 ));
  CIC1Cos_SLICE_1525 \CIC1Cos/SLICE_1525 ( .B1(\CIC1Cos/d_d9_8 ), 
    .A1(\CIC1Cos/d9_8 ), .B0(\CIC1Cos/d_d9_7 ), .A0(\CIC1Cos/d9_7 ), 
    .FCI(\CIC1Cos/n11438 ), .FCO(\CIC1Cos/n11439 ));
  CIC1Cos_SLICE_1526 \CIC1Cos/SLICE_1526 ( .B1(\CIC1Cos/d_d9_6 ), 
    .A1(\CIC1Cos/d9_6 ), .B0(\CIC1Cos/d_d9_5 ), .A0(\CIC1Cos/d9_5 ), 
    .FCI(\CIC1Cos/n11437 ), .FCO(\CIC1Cos/n11438 ));
  CIC1Cos_SLICE_1527 \CIC1Cos/SLICE_1527 ( .B1(\CIC1Cos/d_d9_4 ), 
    .A1(\CIC1Cos/d9_4 ), .B0(\CIC1Cos/d_d9_3 ), .A0(\CIC1Cos/d9_3 ), 
    .FCI(\CIC1Cos/n11436 ), .FCO(\CIC1Cos/n11437 ));
  CIC1Cos_SLICE_1528 \CIC1Cos/SLICE_1528 ( .B1(\CIC1Cos/d_d9_2 ), 
    .A1(\CIC1Cos/d9_2 ), .B0(\CIC1Cos/d_d9_1 ), .A0(\CIC1Cos/d9_1 ), 
    .FCI(\CIC1Cos/n11435 ), .FCO(\CIC1Cos/n11436 ));
  CIC1Cos_SLICE_1529 \CIC1Cos/SLICE_1529 ( .B1(\CIC1Cos/d_d9_0 ), 
    .A1(\CIC1Cos/d9_0 ), .FCO(\CIC1Cos/n11435 ));
  CIC1Cos_SLICE_1530 \CIC1Cos/SLICE_1530 ( .B0(\CIC1Cos/d_d8_35 ), 
    .A0(\CIC1Cos/d8_35 ), .DI0(\CIC1Cos/d9_71_N_1675_35 ), 
    .CE(\CIC1Cos/osc_clk_enable_1297 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11434 ), 
    .F0(\CIC1Cos/d9_71_N_1675_35 ), .Q0(\CIC1Cos/d9_35 ), .F1(\CIC1Cos/n6576 ));
  CIC1Cos_SLICE_1531 \CIC1Cos/SLICE_1531 ( .B1(\CIC1Cos/d_d8_34 ), 
    .A1(\CIC1Cos/d8_34 ), .B0(\CIC1Cos/d_d8_33 ), .A0(\CIC1Cos/d8_33 ), 
    .DI1(\CIC1Cos/d9_71_N_1675_34 ), .DI0(\CIC1Cos/d9_71_N_1675_33 ), 
    .CE(\CIC1Cos/osc_clk_enable_1297 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11433 ), 
    .F0(\CIC1Cos/d9_71_N_1675_33 ), .Q0(\CIC1Cos/d9_33 ), 
    .F1(\CIC1Cos/d9_71_N_1675_34 ), .Q1(\CIC1Cos/d9_34 ), 
    .FCO(\CIC1Cos/n11434 ));
  CIC1Cos_SLICE_1532 \CIC1Cos/SLICE_1532 ( .B1(\CIC1Cos/d_d8_32 ), 
    .A1(\CIC1Cos/d8_32 ), .B0(\CIC1Cos/d_d8_31 ), .A0(\CIC1Cos/d8_31 ), 
    .DI1(\CIC1Cos/d9_71_N_1675_32 ), .DI0(\CIC1Cos/d9_71_N_1675_31 ), 
    .CE(\CIC1Cos/osc_clk_enable_1297 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11432 ), 
    .F0(\CIC1Cos/d9_71_N_1675_31 ), .Q0(\CIC1Cos/d9_31 ), 
    .F1(\CIC1Cos/d9_71_N_1675_32 ), .Q1(\CIC1Cos/d9_32 ), 
    .FCO(\CIC1Cos/n11433 ));
  CIC1Cos_SLICE_1533 \CIC1Cos/SLICE_1533 ( .B1(\CIC1Cos/d_d8_30 ), 
    .A1(\CIC1Cos/d8_30 ), .B0(\CIC1Cos/d_d8_29 ), .A0(\CIC1Cos/d8_29 ), 
    .DI1(\CIC1Cos/d9_71_N_1675_30 ), .DI0(\CIC1Cos/d9_71_N_1675_29 ), 
    .CE(\CIC1Cos/osc_clk_enable_1297 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11431 ), 
    .F0(\CIC1Cos/d9_71_N_1675_29 ), .Q0(\CIC1Cos/d9_29 ), 
    .F1(\CIC1Cos/d9_71_N_1675_30 ), .Q1(\CIC1Cos/d9_30 ), 
    .FCO(\CIC1Cos/n11432 ));
  CIC1Cos_SLICE_1534 \CIC1Cos/SLICE_1534 ( .B1(\CIC1Cos/d_d8_28 ), 
    .A1(\CIC1Cos/d8_28 ), .B0(\CIC1Cos/d_d8_27 ), .A0(\CIC1Cos/d8_27 ), 
    .DI1(\CIC1Cos/d9_71_N_1675_28 ), .DI0(\CIC1Cos/d9_71_N_1675_27 ), 
    .CE(\CIC1Cos/osc_clk_enable_1297 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11430 ), 
    .F0(\CIC1Cos/d9_71_N_1675_27 ), .Q0(\CIC1Cos/d9_27 ), 
    .F1(\CIC1Cos/d9_71_N_1675_28 ), .Q1(\CIC1Cos/d9_28 ), 
    .FCO(\CIC1Cos/n11431 ));
  CIC1Cos_SLICE_1535 \CIC1Cos/SLICE_1535 ( .B1(\CIC1Cos/d_d8_26 ), 
    .A1(\CIC1Cos/d8_26 ), .B0(\CIC1Cos/d_d8_25 ), .A0(\CIC1Cos/d8_25 ), 
    .DI1(\CIC1Cos/d9_71_N_1675_26 ), .DI0(\CIC1Cos/d9_71_N_1675_25 ), 
    .CE(\CIC1Cos/osc_clk_enable_1297 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11429 ), 
    .F0(\CIC1Cos/d9_71_N_1675_25 ), .Q0(\CIC1Cos/d9_25 ), 
    .F1(\CIC1Cos/d9_71_N_1675_26 ), .Q1(\CIC1Cos/d9_26 ), 
    .FCO(\CIC1Cos/n11430 ));
  CIC1Cos_SLICE_1536 \CIC1Cos/SLICE_1536 ( .B1(\CIC1Cos/d_d8_24 ), 
    .A1(\CIC1Cos/d8_24 ), .B0(\CIC1Cos/d_d8_23 ), .A0(\CIC1Cos/d8_23 ), 
    .DI1(\CIC1Cos/d9_71_N_1675_24 ), .DI0(\CIC1Cos/d9_71_N_1675_23 ), 
    .CE(\CIC1Cos/osc_clk_enable_1297 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11428 ), 
    .F0(\CIC1Cos/d9_71_N_1675_23 ), .Q0(\CIC1Cos/d9_23 ), 
    .F1(\CIC1Cos/d9_71_N_1675_24 ), .Q1(\CIC1Cos/d9_24 ), 
    .FCO(\CIC1Cos/n11429 ));
  CIC1Cos_SLICE_1537 \CIC1Cos/SLICE_1537 ( .B1(\CIC1Cos/d_d8_22 ), 
    .A1(\CIC1Cos/d8_22 ), .B0(\CIC1Cos/d_d8_21 ), .A0(\CIC1Cos/d8_21 ), 
    .DI1(\CIC1Cos/d9_71_N_1675_22 ), .DI0(\CIC1Cos/d9_71_N_1675_21 ), 
    .CE(\CIC1Cos/osc_clk_enable_1297 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11427 ), 
    .F0(\CIC1Cos/d9_71_N_1675_21 ), .Q0(\CIC1Cos/d9_21 ), 
    .F1(\CIC1Cos/d9_71_N_1675_22 ), .Q1(\CIC1Cos/d9_22 ), 
    .FCO(\CIC1Cos/n11428 ));
  CIC1Cos_SLICE_1538 \CIC1Cos/SLICE_1538 ( .B1(\CIC1Cos/d_d8_20 ), 
    .A1(\CIC1Cos/d8_20 ), .B0(\CIC1Cos/d_d8_19 ), .A0(\CIC1Cos/d8_19 ), 
    .DI1(\CIC1Cos/d9_71_N_1675_20 ), .DI0(\CIC1Cos/d9_71_N_1675_19 ), 
    .CE(\CIC1Cos/osc_clk_enable_1297 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11426 ), 
    .F0(\CIC1Cos/d9_71_N_1675_19 ), .Q0(\CIC1Cos/d9_19 ), 
    .F1(\CIC1Cos/d9_71_N_1675_20 ), .Q1(\CIC1Cos/d9_20 ), 
    .FCO(\CIC1Cos/n11427 ));
  CIC1Cos_SLICE_1539 \CIC1Cos/SLICE_1539 ( .B1(\CIC1Cos/d_d8_18 ), 
    .A1(\CIC1Cos/d8_18 ), .B0(\CIC1Cos/d_d8_17 ), .A0(\CIC1Cos/d8_17 ), 
    .DI1(\CIC1Cos/d9_71_N_1675_18 ), .DI0(\CIC1Cos/d9_71_N_1675_17 ), 
    .CE(\CIC1Cos/osc_clk_enable_1297 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11425 ), 
    .F0(\CIC1Cos/d9_71_N_1675_17 ), .Q0(\CIC1Cos/d9_17 ), 
    .F1(\CIC1Cos/d9_71_N_1675_18 ), .Q1(\CIC1Cos/d9_18 ), 
    .FCO(\CIC1Cos/n11426 ));
  CIC1Cos_SLICE_1540 \CIC1Cos/SLICE_1540 ( .B1(\CIC1Cos/d_d8_16 ), 
    .A1(\CIC1Cos/d8_16 ), .B0(\CIC1Cos/d_d8_15 ), .A0(\CIC1Cos/d8_15 ), 
    .DI1(\CIC1Cos/d9_71_N_1675_16 ), .DI0(\CIC1Cos/d9_71_N_1675_15 ), 
    .CE(\CIC1Cos/osc_clk_enable_1297 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11424 ), 
    .F0(\CIC1Cos/d9_71_N_1675_15 ), .Q0(\CIC1Cos/d9_15 ), 
    .F1(\CIC1Cos/d9_71_N_1675_16 ), .Q1(\CIC1Cos/d9_16 ), 
    .FCO(\CIC1Cos/n11425 ));
  CIC1Cos_SLICE_1541 \CIC1Cos/SLICE_1541 ( .B1(\CIC1Cos/d_d8_14 ), 
    .A1(\CIC1Cos/d8_14 ), .B0(\CIC1Cos/d_d8_13 ), .A0(\CIC1Cos/d8_13 ), 
    .DI1(\CIC1Cos/d9_71_N_1675_14 ), .DI0(\CIC1Cos/d9_71_N_1675_13 ), 
    .CE(\CIC1Cos/osc_clk_enable_1297 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11423 ), 
    .F0(\CIC1Cos/d9_71_N_1675_13 ), .Q0(\CIC1Cos/d9_13 ), 
    .F1(\CIC1Cos/d9_71_N_1675_14 ), .Q1(\CIC1Cos/d9_14 ), 
    .FCO(\CIC1Cos/n11424 ));
  CIC1Cos_SLICE_1542 \CIC1Cos/SLICE_1542 ( .B1(\CIC1Cos/d_d8_12 ), 
    .A1(\CIC1Cos/d8_12 ), .B0(\CIC1Cos/d_d8_11 ), .A0(\CIC1Cos/d8_11 ), 
    .DI1(\CIC1Cos/d9_71_N_1675_12 ), .DI0(\CIC1Cos/d9_71_N_1675_11 ), 
    .CE(\CIC1Cos/osc_clk_enable_1297 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11422 ), 
    .F0(\CIC1Cos/d9_71_N_1675_11 ), .Q0(\CIC1Cos/d9_11 ), 
    .F1(\CIC1Cos/d9_71_N_1675_12 ), .Q1(\CIC1Cos/d9_12 ), 
    .FCO(\CIC1Cos/n11423 ));
  CIC1Cos_SLICE_1543 \CIC1Cos/SLICE_1543 ( .B1(\CIC1Cos/d_d8_10 ), 
    .A1(\CIC1Cos/d8_10 ), .B0(\CIC1Cos/d_d8_9 ), .A0(\CIC1Cos/d8_9 ), 
    .DI1(\CIC1Cos/d9_71_N_1675_10 ), .DI0(\CIC1Cos/d9_71_N_1675_9 ), 
    .CE(\CIC1Cos/osc_clk_enable_1297 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11421 ), 
    .F0(\CIC1Cos/d9_71_N_1675_9 ), .Q0(\CIC1Cos/d9_9 ), 
    .F1(\CIC1Cos/d9_71_N_1675_10 ), .Q1(\CIC1Cos/d9_10 ), 
    .FCO(\CIC1Cos/n11422 ));
  CIC1Cos_SLICE_1544 \CIC1Cos/SLICE_1544 ( .B1(\CIC1Cos/d_d8_8 ), 
    .A1(\CIC1Cos/d8_8 ), .B0(\CIC1Cos/d_d8_7 ), .A0(\CIC1Cos/d8_7 ), 
    .DI1(\CIC1Cos/d9_71_N_1675_8 ), .DI0(\CIC1Cos/d9_71_N_1675_7 ), 
    .CE(\CIC1Cos/osc_clk_enable_1297 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11420 ), 
    .F0(\CIC1Cos/d9_71_N_1675_7 ), .Q0(\CIC1Cos/d9_7 ), 
    .F1(\CIC1Cos/d9_71_N_1675_8 ), .Q1(\CIC1Cos/d9_8 ), .FCO(\CIC1Cos/n11421 ));
  CIC1Cos_SLICE_1545 \CIC1Cos/SLICE_1545 ( .B1(\CIC1Cos/d_d8_6 ), 
    .A1(\CIC1Cos/d8_6 ), .B0(\CIC1Cos/d_d8_5 ), .A0(\CIC1Cos/d8_5 ), 
    .DI1(\CIC1Cos/d9_71_N_1675_6 ), .DI0(\CIC1Cos/d9_71_N_1675_5 ), 
    .CE(\CIC1Cos/osc_clk_enable_1297 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11419 ), 
    .F0(\CIC1Cos/d9_71_N_1675_5 ), .Q0(\CIC1Cos/d9_5 ), 
    .F1(\CIC1Cos/d9_71_N_1675_6 ), .Q1(\CIC1Cos/d9_6 ), .FCO(\CIC1Cos/n11420 ));
  CIC1Cos_SLICE_1546 \CIC1Cos/SLICE_1546 ( .B1(\CIC1Cos/d_d8_4 ), 
    .A1(\CIC1Cos/d8_4 ), .B0(\CIC1Cos/d_d8_3 ), .A0(\CIC1Cos/d8_3 ), 
    .DI1(\CIC1Cos/d9_71_N_1675_4 ), .DI0(\CIC1Cos/d9_71_N_1675_3 ), 
    .CE(\CIC1Cos/osc_clk_enable_1297 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11418 ), 
    .F0(\CIC1Cos/d9_71_N_1675_3 ), .Q0(\CIC1Cos/d9_3 ), 
    .F1(\CIC1Cos/d9_71_N_1675_4 ), .Q1(\CIC1Cos/d9_4 ), .FCO(\CIC1Cos/n11419 ));
  CIC1Cos_SLICE_1547 \CIC1Cos/SLICE_1547 ( .B1(\CIC1Cos/d_d8_2 ), 
    .A1(\CIC1Cos/d8_2 ), .B0(\CIC1Cos/d_d8_1 ), .A0(\CIC1Cos/d8_1 ), 
    .DI1(\CIC1Cos/d9_71_N_1675_2 ), .DI0(\CIC1Cos/d9_71_N_1675_1 ), 
    .CE(\CIC1Cos/osc_clk_enable_1297 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11417 ), 
    .F0(\CIC1Cos/d9_71_N_1675_1 ), .Q0(\CIC1Cos/d9_1 ), 
    .F1(\CIC1Cos/d9_71_N_1675_2 ), .Q1(\CIC1Cos/d9_2 ), .FCO(\CIC1Cos/n11418 ));
  CIC1Cos_SLICE_1548 \CIC1Cos/SLICE_1548 ( .B1(\CIC1Cos/d_d8_0 ), 
    .A1(\CIC1Cos/d8_0 ), .DI1(\CIC1Cos/d9_71_N_1675_0 ), 
    .CE(\CIC1Cos/osc_clk_enable_797 ), .CLK(osc_clk), 
    .F1(\CIC1Cos/d9_71_N_1675_0 ), .Q1(\CIC1Cos/d9_0 ), .FCO(\CIC1Cos/n11417 ));
  CIC1Cos_SLICE_1549 \CIC1Cos/SLICE_1549 ( .B0(\CIC1Cos/d_d7_35 ), 
    .A0(\CIC1Cos/d7_35 ), .DI0(\CIC1Cos/d8_71_N_1603_35 ), 
    .CE(\CIC1Cos/osc_clk_enable_1147 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11416 ), 
    .F0(\CIC1Cos/d8_71_N_1603_35 ), .Q0(\CIC1Cos/d8_35 ), .F1(\CIC1Cos/n6424 ));
  CIC1Cos_SLICE_1550 \CIC1Cos/SLICE_1550 ( .B1(\CIC1Cos/d_d7_34 ), 
    .A1(\CIC1Cos/d7_34 ), .B0(\CIC1Cos/d_d7_33 ), .A0(\CIC1Cos/d7_33 ), 
    .DI1(\CIC1Cos/d8_71_N_1603_34 ), .DI0(\CIC1Cos/d8_71_N_1603_33 ), 
    .CE(\CIC1Cos/osc_clk_enable_1147 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11415 ), 
    .F0(\CIC1Cos/d8_71_N_1603_33 ), .Q0(\CIC1Cos/d8_33 ), 
    .F1(\CIC1Cos/d8_71_N_1603_34 ), .Q1(\CIC1Cos/d8_34 ), 
    .FCO(\CIC1Cos/n11416 ));
  CIC1Cos_SLICE_1551 \CIC1Cos/SLICE_1551 ( .B1(\CIC1Cos/d_d7_32 ), 
    .A1(\CIC1Cos/d7_32 ), .B0(\CIC1Cos/d_d7_31 ), .A0(\CIC1Cos/d7_31 ), 
    .DI1(\CIC1Cos/d8_71_N_1603_32 ), .DI0(\CIC1Cos/d8_71_N_1603_31 ), 
    .CE(\CIC1Cos/osc_clk_enable_1147 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11414 ), 
    .F0(\CIC1Cos/d8_71_N_1603_31 ), .Q0(\CIC1Cos/d8_31 ), 
    .F1(\CIC1Cos/d8_71_N_1603_32 ), .Q1(\CIC1Cos/d8_32 ), 
    .FCO(\CIC1Cos/n11415 ));
  CIC1Cos_SLICE_1552 \CIC1Cos/SLICE_1552 ( .B1(\CIC1Cos/d_d7_30 ), 
    .A1(\CIC1Cos/d7_30 ), .B0(\CIC1Cos/d_d7_29 ), .A0(\CIC1Cos/d7_29 ), 
    .DI1(\CIC1Cos/d8_71_N_1603_30 ), .DI0(\CIC1Cos/d8_71_N_1603_29 ), 
    .CE(\CIC1Cos/osc_clk_enable_1147 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11413 ), 
    .F0(\CIC1Cos/d8_71_N_1603_29 ), .Q0(\CIC1Cos/d8_29 ), 
    .F1(\CIC1Cos/d8_71_N_1603_30 ), .Q1(\CIC1Cos/d8_30 ), 
    .FCO(\CIC1Cos/n11414 ));
  CIC1Cos_SLICE_1553 \CIC1Cos/SLICE_1553 ( .B1(\CIC1Cos/d_d7_28 ), 
    .A1(\CIC1Cos/d7_28 ), .B0(\CIC1Cos/d_d7_27 ), .A0(\CIC1Cos/d7_27 ), 
    .DI1(\CIC1Cos/d8_71_N_1603_28 ), .DI0(\CIC1Cos/d8_71_N_1603_27 ), 
    .CE(\CIC1Cos/osc_clk_enable_1147 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11412 ), 
    .F0(\CIC1Cos/d8_71_N_1603_27 ), .Q0(\CIC1Cos/d8_27 ), 
    .F1(\CIC1Cos/d8_71_N_1603_28 ), .Q1(\CIC1Cos/d8_28 ), 
    .FCO(\CIC1Cos/n11413 ));
  CIC1Cos_SLICE_1554 \CIC1Cos/SLICE_1554 ( .B1(\CIC1Cos/d_d7_26 ), 
    .A1(\CIC1Cos/d7_26 ), .B0(\CIC1Cos/d_d7_25 ), .A0(\CIC1Cos/d7_25 ), 
    .DI1(\CIC1Cos/d8_71_N_1603_26 ), .DI0(\CIC1Cos/d8_71_N_1603_25 ), 
    .CE(\CIC1Cos/osc_clk_enable_1147 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11411 ), 
    .F0(\CIC1Cos/d8_71_N_1603_25 ), .Q0(\CIC1Cos/d8_25 ), 
    .F1(\CIC1Cos/d8_71_N_1603_26 ), .Q1(\CIC1Cos/d8_26 ), 
    .FCO(\CIC1Cos/n11412 ));
  CIC1Cos_SLICE_1555 \CIC1Cos/SLICE_1555 ( .B1(\CIC1Cos/d_d7_24 ), 
    .A1(\CIC1Cos/d7_24 ), .B0(\CIC1Cos/d_d7_23 ), .A0(\CIC1Cos/d7_23 ), 
    .DI1(\CIC1Cos/d8_71_N_1603_24 ), .DI0(\CIC1Cos/d8_71_N_1603_23 ), 
    .CE(\CIC1Cos/osc_clk_enable_1147 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11410 ), 
    .F0(\CIC1Cos/d8_71_N_1603_23 ), .Q0(\CIC1Cos/d8_23 ), 
    .F1(\CIC1Cos/d8_71_N_1603_24 ), .Q1(\CIC1Cos/d8_24 ), 
    .FCO(\CIC1Cos/n11411 ));
  CIC1Cos_SLICE_1556 \CIC1Cos/SLICE_1556 ( .B1(\CIC1Cos/d_d7_22 ), 
    .A1(\CIC1Cos/d7_22 ), .B0(\CIC1Cos/d_d7_21 ), .A0(\CIC1Cos/d7_21 ), 
    .DI1(\CIC1Cos/d8_71_N_1603_22 ), .DI0(\CIC1Cos/d8_71_N_1603_21 ), 
    .CE(\CIC1Cos/osc_clk_enable_1147 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11409 ), 
    .F0(\CIC1Cos/d8_71_N_1603_21 ), .Q0(\CIC1Cos/d8_21 ), 
    .F1(\CIC1Cos/d8_71_N_1603_22 ), .Q1(\CIC1Cos/d8_22 ), 
    .FCO(\CIC1Cos/n11410 ));
  CIC1Cos_SLICE_1557 \CIC1Cos/SLICE_1557 ( .B1(\CIC1Cos/d_d7_20 ), 
    .A1(\CIC1Cos/d7_20 ), .B0(\CIC1Cos/d_d7_19 ), .A0(\CIC1Cos/d7_19 ), 
    .DI1(\CIC1Cos/d8_71_N_1603_20 ), .DI0(\CIC1Cos/d8_71_N_1603_19 ), 
    .CE(\CIC1Cos/osc_clk_enable_1147 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11408 ), 
    .F0(\CIC1Cos/d8_71_N_1603_19 ), .Q0(\CIC1Cos/d8_19 ), 
    .F1(\CIC1Cos/d8_71_N_1603_20 ), .Q1(\CIC1Cos/d8_20 ), 
    .FCO(\CIC1Cos/n11409 ));
  CIC1Cos_SLICE_1558 \CIC1Cos/SLICE_1558 ( .B1(\CIC1Cos/d_d7_18 ), 
    .A1(\CIC1Cos/d7_18 ), .B0(\CIC1Cos/d_d7_17 ), .A0(\CIC1Cos/d7_17 ), 
    .DI1(\CIC1Cos/d8_71_N_1603_18 ), .DI0(\CIC1Cos/d8_71_N_1603_17 ), 
    .CE(\CIC1Cos/osc_clk_enable_1147 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11407 ), 
    .F0(\CIC1Cos/d8_71_N_1603_17 ), .Q0(\CIC1Cos/d8_17 ), 
    .F1(\CIC1Cos/d8_71_N_1603_18 ), .Q1(\CIC1Cos/d8_18 ), 
    .FCO(\CIC1Cos/n11408 ));
  CIC1Cos_SLICE_1559 \CIC1Cos/SLICE_1559 ( .B1(\CIC1Cos/d_d7_16 ), 
    .A1(\CIC1Cos/d7_16 ), .B0(\CIC1Cos/d_d7_15 ), .A0(\CIC1Cos/d7_15 ), 
    .DI1(\CIC1Cos/d8_71_N_1603_16 ), .DI0(\CIC1Cos/d8_71_N_1603_15 ), 
    .CE(\CIC1Cos/osc_clk_enable_1147 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11406 ), 
    .F0(\CIC1Cos/d8_71_N_1603_15 ), .Q0(\CIC1Cos/d8_15 ), 
    .F1(\CIC1Cos/d8_71_N_1603_16 ), .Q1(\CIC1Cos/d8_16 ), 
    .FCO(\CIC1Cos/n11407 ));
  CIC1Cos_SLICE_1560 \CIC1Cos/SLICE_1560 ( .B1(\CIC1Cos/d_d7_14 ), 
    .A1(\CIC1Cos/d7_14 ), .B0(\CIC1Cos/d_d7_13 ), .A0(\CIC1Cos/d7_13 ), 
    .DI1(\CIC1Cos/d8_71_N_1603_14 ), .DI0(\CIC1Cos/d8_71_N_1603_13 ), 
    .CE(\CIC1Cos/osc_clk_enable_1147 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11405 ), 
    .F0(\CIC1Cos/d8_71_N_1603_13 ), .Q0(\CIC1Cos/d8_13 ), 
    .F1(\CIC1Cos/d8_71_N_1603_14 ), .Q1(\CIC1Cos/d8_14 ), 
    .FCO(\CIC1Cos/n11406 ));
  CIC1Cos_SLICE_1561 \CIC1Cos/SLICE_1561 ( .B1(\CIC1Cos/d_d7_12 ), 
    .A1(\CIC1Cos/d7_12 ), .B0(\CIC1Cos/d_d7_11 ), .A0(\CIC1Cos/d7_11 ), 
    .DI1(\CIC1Cos/d8_71_N_1603_12 ), .DI0(\CIC1Cos/d8_71_N_1603_11 ), 
    .CE(\CIC1Cos/osc_clk_enable_1147 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11404 ), 
    .F0(\CIC1Cos/d8_71_N_1603_11 ), .Q0(\CIC1Cos/d8_11 ), 
    .F1(\CIC1Cos/d8_71_N_1603_12 ), .Q1(\CIC1Cos/d8_12 ), 
    .FCO(\CIC1Cos/n11405 ));
  CIC1Cos_SLICE_1562 \CIC1Cos/SLICE_1562 ( .B1(\CIC1Cos/d_d7_10 ), 
    .A1(\CIC1Cos/d7_10 ), .B0(\CIC1Cos/d_d7_9 ), .A0(\CIC1Cos/d7_9 ), 
    .DI1(\CIC1Cos/d8_71_N_1603_10 ), .DI0(\CIC1Cos/d8_71_N_1603_9 ), 
    .CE(\CIC1Cos/osc_clk_enable_1147 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11403 ), 
    .F0(\CIC1Cos/d8_71_N_1603_9 ), .Q0(\CIC1Cos/d8_9 ), 
    .F1(\CIC1Cos/d8_71_N_1603_10 ), .Q1(\CIC1Cos/d8_10 ), 
    .FCO(\CIC1Cos/n11404 ));
  CIC1Cos_SLICE_1563 \CIC1Cos/SLICE_1563 ( .B1(\CIC1Cos/d_d7_8 ), 
    .A1(\CIC1Cos/d7_8 ), .B0(\CIC1Cos/d_d7_7 ), .A0(\CIC1Cos/d7_7 ), 
    .DI1(\CIC1Cos/d8_71_N_1603_8 ), .DI0(\CIC1Cos/d8_71_N_1603_7 ), 
    .CE(\CIC1Cos/osc_clk_enable_1147 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11402 ), 
    .F0(\CIC1Cos/d8_71_N_1603_7 ), .Q0(\CIC1Cos/d8_7 ), 
    .F1(\CIC1Cos/d8_71_N_1603_8 ), .Q1(\CIC1Cos/d8_8 ), .FCO(\CIC1Cos/n11403 ));
  CIC1Cos_SLICE_1564 \CIC1Cos/SLICE_1564 ( .B1(\CIC1Cos/d_d7_6 ), 
    .A1(\CIC1Cos/d7_6 ), .B0(\CIC1Cos/d_d7_5 ), .A0(\CIC1Cos/d7_5 ), 
    .DI1(\CIC1Cos/d8_71_N_1603_6 ), .DI0(\CIC1Cos/d8_71_N_1603_5 ), 
    .CE(\CIC1Cos/osc_clk_enable_1147 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11401 ), 
    .F0(\CIC1Cos/d8_71_N_1603_5 ), .Q0(\CIC1Cos/d8_5 ), 
    .F1(\CIC1Cos/d8_71_N_1603_6 ), .Q1(\CIC1Cos/d8_6 ), .FCO(\CIC1Cos/n11402 ));
  CIC1Cos_SLICE_1565 \CIC1Cos/SLICE_1565 ( .B1(\CIC1Cos/d_d7_4 ), 
    .A1(\CIC1Cos/d7_4 ), .B0(\CIC1Cos/d_d7_3 ), .A0(\CIC1Cos/d7_3 ), 
    .DI1(\CIC1Cos/d8_71_N_1603_4 ), .DI0(\CIC1Cos/d8_71_N_1603_3 ), 
    .CE(\CIC1Cos/osc_clk_enable_1147 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11400 ), 
    .F0(\CIC1Cos/d8_71_N_1603_3 ), .Q0(\CIC1Cos/d8_3 ), 
    .F1(\CIC1Cos/d8_71_N_1603_4 ), .Q1(\CIC1Cos/d8_4 ), .FCO(\CIC1Cos/n11401 ));
  CIC1Cos_SLICE_1566 \CIC1Cos/SLICE_1566 ( .B1(\CIC1Cos/d_d7_2 ), 
    .A1(\CIC1Cos/d7_2 ), .B0(\CIC1Cos/d_d7_1 ), .A0(\CIC1Cos/d7_1 ), 
    .DI1(\CIC1Cos/d8_71_N_1603_2 ), .DI0(\CIC1Cos/d8_71_N_1603_1 ), 
    .CE(\CIC1Cos/osc_clk_enable_1147 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11399 ), 
    .F0(\CIC1Cos/d8_71_N_1603_1 ), .Q0(\CIC1Cos/d8_1 ), 
    .F1(\CIC1Cos/d8_71_N_1603_2 ), .Q1(\CIC1Cos/d8_2 ), .FCO(\CIC1Cos/n11400 ));
  CIC1Cos_SLICE_1567 \CIC1Cos/SLICE_1567 ( .B1(\CIC1Cos/d_d7_0 ), 
    .A1(\CIC1Cos/d7_0 ), .DI1(\CIC1Cos/d8_71_N_1603_0 ), 
    .CE(\CIC1Cos/osc_clk_enable_797 ), .CLK(osc_clk), 
    .F1(\CIC1Cos/d8_71_N_1603_0 ), .Q1(\CIC1Cos/d8_0 ), .FCO(\CIC1Cos/n11399 ));
  CIC1Cos_SLICE_1568 \CIC1Cos/SLICE_1568 ( .B0(\CIC1Cos/d_d6_35 ), 
    .A0(\CIC1Cos/d6_35 ), .DI0(\CIC1Cos/d7_71_N_1531_35 ), 
    .CE(\CIC1Cos/osc_clk_enable_1047 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11398 ), 
    .F0(\CIC1Cos/d7_71_N_1531_35 ), .Q0(\CIC1Cos/d7_35 ), .F1(\CIC1Cos/n6272 ));
  CIC1Cos_SLICE_1569 \CIC1Cos/SLICE_1569 ( .B1(\CIC1Cos/d_d6_34 ), 
    .A1(\CIC1Cos/d6_34 ), .B0(\CIC1Cos/d_d6_33 ), .A0(\CIC1Cos/d6_33 ), 
    .DI1(\CIC1Cos/d7_71_N_1531_34 ), .DI0(\CIC1Cos/d7_71_N_1531_33 ), 
    .CE(\CIC1Cos/osc_clk_enable_1047 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11397 ), 
    .F0(\CIC1Cos/d7_71_N_1531_33 ), .Q0(\CIC1Cos/d7_33 ), 
    .F1(\CIC1Cos/d7_71_N_1531_34 ), .Q1(\CIC1Cos/d7_34 ), 
    .FCO(\CIC1Cos/n11398 ));
  CIC1Cos_SLICE_1570 \CIC1Cos/SLICE_1570 ( .B1(\CIC1Cos/d_d6_32 ), 
    .A1(\CIC1Cos/d6_32 ), .B0(\CIC1Cos/d_d6_31 ), .A0(\CIC1Cos/d6_31 ), 
    .DI1(\CIC1Cos/d7_71_N_1531_32 ), .DI0(\CIC1Cos/d7_71_N_1531_31 ), 
    .CE(\CIC1Cos/osc_clk_enable_1047 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11396 ), 
    .F0(\CIC1Cos/d7_71_N_1531_31 ), .Q0(\CIC1Cos/d7_31 ), 
    .F1(\CIC1Cos/d7_71_N_1531_32 ), .Q1(\CIC1Cos/d7_32 ), 
    .FCO(\CIC1Cos/n11397 ));
  CIC1Cos_SLICE_1571 \CIC1Cos/SLICE_1571 ( .B1(\CIC1Cos/d_d6_30 ), 
    .A1(\CIC1Cos/d6_30 ), .B0(\CIC1Cos/d_d6_29 ), .A0(\CIC1Cos/d6_29 ), 
    .DI1(\CIC1Cos/d7_71_N_1531_30 ), .DI0(\CIC1Cos/d7_71_N_1531_29 ), 
    .CE(\CIC1Cos/osc_clk_enable_1047 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11395 ), 
    .F0(\CIC1Cos/d7_71_N_1531_29 ), .Q0(\CIC1Cos/d7_29 ), 
    .F1(\CIC1Cos/d7_71_N_1531_30 ), .Q1(\CIC1Cos/d7_30 ), 
    .FCO(\CIC1Cos/n11396 ));
  CIC1Cos_SLICE_1572 \CIC1Cos/SLICE_1572 ( .B1(\CIC1Cos/d_d6_28 ), 
    .A1(\CIC1Cos/d6_28 ), .B0(\CIC1Cos/d_d6_27 ), .A0(\CIC1Cos/d6_27 ), 
    .DI0(\CIC1Cos/d7_71_N_1531_27 ), .CE(\CIC1Cos/osc_clk_enable_997 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11394 ), .F0(\CIC1Cos/d7_71_N_1531_27 ), 
    .Q0(\CIC1Cos/d7_27 ), .F1(\CIC1Cos/d7_71_N_1531_28 ), 
    .FCO(\CIC1Cos/n11395 ));
  CIC1Cos_SLICE_1573 \CIC1Cos/SLICE_1573 ( .B1(\CIC1Cos/d_d6_26 ), 
    .A1(\CIC1Cos/d6_26 ), .B0(\CIC1Cos/d_d6_25 ), .A0(\CIC1Cos/d6_25 ), 
    .DI1(\CIC1Cos/d7_71_N_1531_26 ), .DI0(\CIC1Cos/d7_71_N_1531_25 ), 
    .CE(\CIC1Cos/osc_clk_enable_997 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11393 ), 
    .F0(\CIC1Cos/d7_71_N_1531_25 ), .Q0(\CIC1Cos/d7_25 ), 
    .F1(\CIC1Cos/d7_71_N_1531_26 ), .Q1(\CIC1Cos/d7_26 ), 
    .FCO(\CIC1Cos/n11394 ));
  CIC1Cos_SLICE_1574 \CIC1Cos/SLICE_1574 ( .B1(\CIC1Cos/d_d6_24 ), 
    .A1(\CIC1Cos/d6_24 ), .B0(\CIC1Cos/d_d6_23 ), .A0(\CIC1Cos/d6_23 ), 
    .DI1(\CIC1Cos/d7_71_N_1531_24 ), .DI0(\CIC1Cos/d7_71_N_1531_23 ), 
    .CE(\CIC1Cos/osc_clk_enable_997 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11392 ), 
    .F0(\CIC1Cos/d7_71_N_1531_23 ), .Q0(\CIC1Cos/d7_23 ), 
    .F1(\CIC1Cos/d7_71_N_1531_24 ), .Q1(\CIC1Cos/d7_24 ), 
    .FCO(\CIC1Cos/n11393 ));
  CIC1Cos_SLICE_1575 \CIC1Cos/SLICE_1575 ( .B1(\CIC1Cos/d_d6_22 ), 
    .A1(\CIC1Cos/d6_22 ), .B0(\CIC1Cos/d_d6_21 ), .A0(\CIC1Cos/d6_21 ), 
    .DI1(\CIC1Cos/d7_71_N_1531_22 ), .DI0(\CIC1Cos/d7_71_N_1531_21 ), 
    .CE(\CIC1Cos/osc_clk_enable_997 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11391 ), 
    .F0(\CIC1Cos/d7_71_N_1531_21 ), .Q0(\CIC1Cos/d7_21 ), 
    .F1(\CIC1Cos/d7_71_N_1531_22 ), .Q1(\CIC1Cos/d7_22 ), 
    .FCO(\CIC1Cos/n11392 ));
  CIC1Cos_SLICE_1576 \CIC1Cos/SLICE_1576 ( .B1(\CIC1Cos/d_d6_20 ), 
    .A1(\CIC1Cos/d6_20 ), .B0(\CIC1Cos/d_d6_19 ), .A0(\CIC1Cos/d6_19 ), 
    .DI1(\CIC1Cos/d7_71_N_1531_20 ), .DI0(\CIC1Cos/d7_71_N_1531_19 ), 
    .CE(\CIC1Cos/osc_clk_enable_997 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11390 ), 
    .F0(\CIC1Cos/d7_71_N_1531_19 ), .Q0(\CIC1Cos/d7_19 ), 
    .F1(\CIC1Cos/d7_71_N_1531_20 ), .Q1(\CIC1Cos/d7_20 ), 
    .FCO(\CIC1Cos/n11391 ));
  CIC1Cos_SLICE_1577 \CIC1Cos/SLICE_1577 ( .B1(\CIC1Cos/d_d6_18 ), 
    .A1(\CIC1Cos/d6_18 ), .B0(\CIC1Cos/d_d6_17 ), .A0(\CIC1Cos/d6_17 ), 
    .DI1(\CIC1Cos/d7_71_N_1531_18 ), .DI0(\CIC1Cos/d7_71_N_1531_17 ), 
    .CE(\CIC1Cos/osc_clk_enable_997 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11389 ), 
    .F0(\CIC1Cos/d7_71_N_1531_17 ), .Q0(\CIC1Cos/d7_17 ), 
    .F1(\CIC1Cos/d7_71_N_1531_18 ), .Q1(\CIC1Cos/d7_18 ), 
    .FCO(\CIC1Cos/n11390 ));
  CIC1Cos_SLICE_1578 \CIC1Cos/SLICE_1578 ( .B1(\CIC1Cos/d_d6_16 ), 
    .A1(\CIC1Cos/d6_16 ), .B0(\CIC1Cos/d_d6_15 ), .A0(\CIC1Cos/d6_15 ), 
    .DI1(\CIC1Cos/d7_71_N_1531_16 ), .DI0(\CIC1Cos/d7_71_N_1531_15 ), 
    .CE(\CIC1Cos/osc_clk_enable_997 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11388 ), 
    .F0(\CIC1Cos/d7_71_N_1531_15 ), .Q0(\CIC1Cos/d7_15 ), 
    .F1(\CIC1Cos/d7_71_N_1531_16 ), .Q1(\CIC1Cos/d7_16 ), 
    .FCO(\CIC1Cos/n11389 ));
  CIC1Cos_SLICE_1579 \CIC1Cos/SLICE_1579 ( .B1(\CIC1Cos/d_d6_14 ), 
    .A1(\CIC1Cos/d6_14 ), .B0(\CIC1Cos/d_d6_13 ), .A0(\CIC1Cos/d6_13 ), 
    .DI1(\CIC1Cos/d7_71_N_1531_14 ), .DI0(\CIC1Cos/d7_71_N_1531_13 ), 
    .CE(\CIC1Cos/osc_clk_enable_997 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11387 ), 
    .F0(\CIC1Cos/d7_71_N_1531_13 ), .Q0(\CIC1Cos/d7_13 ), 
    .F1(\CIC1Cos/d7_71_N_1531_14 ), .Q1(\CIC1Cos/d7_14 ), 
    .FCO(\CIC1Cos/n11388 ));
  CIC1Cos_SLICE_1580 \CIC1Cos/SLICE_1580 ( .B1(\CIC1Cos/d_d6_12 ), 
    .A1(\CIC1Cos/d6_12 ), .B0(\CIC1Cos/d_d6_11 ), .A0(\CIC1Cos/d6_11 ), 
    .DI1(\CIC1Cos/d7_71_N_1531_12 ), .DI0(\CIC1Cos/d7_71_N_1531_11 ), 
    .CE(\CIC1Cos/osc_clk_enable_997 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11386 ), 
    .F0(\CIC1Cos/d7_71_N_1531_11 ), .Q0(\CIC1Cos/d7_11 ), 
    .F1(\CIC1Cos/d7_71_N_1531_12 ), .Q1(\CIC1Cos/d7_12 ), 
    .FCO(\CIC1Cos/n11387 ));
  CIC1Cos_SLICE_1581 \CIC1Cos/SLICE_1581 ( .B1(\CIC1Cos/d_d6_10 ), 
    .A1(\CIC1Cos/d6_10 ), .B0(\CIC1Cos/d_d6_9 ), .A0(\CIC1Cos/d6_9 ), 
    .DI1(\CIC1Cos/d7_71_N_1531_10 ), .DI0(\CIC1Cos/d7_71_N_1531_9 ), 
    .CE(\CIC1Cos/osc_clk_enable_997 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11385 ), 
    .F0(\CIC1Cos/d7_71_N_1531_9 ), .Q0(\CIC1Cos/d7_9 ), 
    .F1(\CIC1Cos/d7_71_N_1531_10 ), .Q1(\CIC1Cos/d7_10 ), 
    .FCO(\CIC1Cos/n11386 ));
  CIC1Cos_SLICE_1582 \CIC1Cos/SLICE_1582 ( .B1(\CIC1Cos/d_d6_8 ), 
    .A1(\CIC1Cos/d6_8 ), .B0(\CIC1Cos/d_d6_7 ), .A0(\CIC1Cos/d6_7 ), 
    .DI1(\CIC1Cos/d7_71_N_1531_8 ), .DI0(\CIC1Cos/d7_71_N_1531_7 ), 
    .CE(\CIC1Cos/osc_clk_enable_997 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11384 ), 
    .F0(\CIC1Cos/d7_71_N_1531_7 ), .Q0(\CIC1Cos/d7_7 ), 
    .F1(\CIC1Cos/d7_71_N_1531_8 ), .Q1(\CIC1Cos/d7_8 ), .FCO(\CIC1Cos/n11385 ));
  CIC1Cos_SLICE_1583 \CIC1Cos/SLICE_1583 ( .B1(\CIC1Cos/d_d6_6 ), 
    .A1(\CIC1Cos/d6_6 ), .B0(\CIC1Cos/d_d6_5 ), .A0(\CIC1Cos/d6_5 ), 
    .DI1(\CIC1Cos/d7_71_N_1531_6 ), .DI0(\CIC1Cos/d7_71_N_1531_5 ), 
    .CE(\CIC1Cos/osc_clk_enable_997 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11383 ), 
    .F0(\CIC1Cos/d7_71_N_1531_5 ), .Q0(\CIC1Cos/d7_5 ), 
    .F1(\CIC1Cos/d7_71_N_1531_6 ), .Q1(\CIC1Cos/d7_6 ), .FCO(\CIC1Cos/n11384 ));
  CIC1Cos_SLICE_1584 \CIC1Cos/SLICE_1584 ( .B1(\CIC1Cos/d_d6_4 ), 
    .A1(\CIC1Cos/d6_4 ), .B0(\CIC1Cos/d_d6_3 ), .A0(\CIC1Cos/d6_3 ), 
    .DI1(\CIC1Cos/d7_71_N_1531_4 ), .DI0(\CIC1Cos/d7_71_N_1531_3 ), 
    .CE(\CIC1Cos/osc_clk_enable_997 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11382 ), 
    .F0(\CIC1Cos/d7_71_N_1531_3 ), .Q0(\CIC1Cos/d7_3 ), 
    .F1(\CIC1Cos/d7_71_N_1531_4 ), .Q1(\CIC1Cos/d7_4 ), .FCO(\CIC1Cos/n11383 ));
  CIC1Cos_SLICE_1585 \CIC1Cos/SLICE_1585 ( .B1(\CIC1Cos/d_d6_2 ), 
    .A1(\CIC1Cos/d6_2 ), .B0(\CIC1Cos/d_d6_1 ), .A0(\CIC1Cos/d6_1 ), 
    .DI1(\CIC1Cos/d7_71_N_1531_2 ), .DI0(\CIC1Cos/d7_71_N_1531_1 ), 
    .CE(\CIC1Cos/osc_clk_enable_997 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11381 ), 
    .F0(\CIC1Cos/d7_71_N_1531_1 ), .Q0(\CIC1Cos/d7_1 ), 
    .F1(\CIC1Cos/d7_71_N_1531_2 ), .Q1(\CIC1Cos/d7_2 ), .FCO(\CIC1Cos/n11382 ));
  CIC1Cos_SLICE_1586 \CIC1Cos/SLICE_1586 ( .B1(\CIC1Cos/d_d6_0 ), 
    .A1(\CIC1Cos/d6_0 ), .DI1(\CIC1Cos/d7_71_N_1531_0 ), 
    .CE(\CIC1Cos/osc_clk_enable_797 ), .CLK(osc_clk), 
    .F1(\CIC1Cos/d7_71_N_1531_0 ), .Q1(\CIC1Cos/d7_0 ), .FCO(\CIC1Cos/n11381 ));
  CIC1Cos_SLICE_1587 \CIC1Cos/SLICE_1587 ( .B0(\CIC1Cos/d_d_tmp_35 ), 
    .A0(\CIC1Cos/d_tmp_35 ), .DI0(\CIC1Cos/d6_71_N_1459_35 ), 
    .CE(\CIC1Cos/osc_clk_enable_897 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11380 ), 
    .F0(\CIC1Cos/d6_71_N_1459_35 ), .Q0(\CIC1Cos/d6_35 ), .F1(\CIC1Cos/n6120 ));
  CIC1Cos_SLICE_1588 \CIC1Cos/SLICE_1588 ( .B1(\CIC1Cos/d_d_tmp_34 ), 
    .A1(\CIC1Cos/d_tmp_34 ), .B0(\CIC1Cos/d_d_tmp_33 ), 
    .A0(\CIC1Cos/d_tmp_33 ), .DI1(\CIC1Cos/d6_71_N_1459_34 ), 
    .DI0(\CIC1Cos/d6_71_N_1459_33 ), .CE(\CIC1Cos/osc_clk_enable_897 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11379 ), .F0(\CIC1Cos/d6_71_N_1459_33 ), 
    .Q0(\CIC1Cos/d6_33 ), .F1(\CIC1Cos/d6_71_N_1459_34 ), .Q1(\CIC1Cos/d6_34 ), 
    .FCO(\CIC1Cos/n11380 ));
  CIC1Cos_SLICE_1589 \CIC1Cos/SLICE_1589 ( .B1(\CIC1Cos/d_d_tmp_32 ), 
    .A1(\CIC1Cos/d_tmp_32 ), .B0(\CIC1Cos/d_d_tmp_31 ), 
    .A0(\CIC1Cos/d_tmp_31 ), .DI1(\CIC1Cos/d6_71_N_1459_32 ), 
    .DI0(\CIC1Cos/d6_71_N_1459_31 ), .CE(\CIC1Cos/osc_clk_enable_897 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11378 ), .F0(\CIC1Cos/d6_71_N_1459_31 ), 
    .Q0(\CIC1Cos/d6_31 ), .F1(\CIC1Cos/d6_71_N_1459_32 ), .Q1(\CIC1Cos/d6_32 ), 
    .FCO(\CIC1Cos/n11379 ));
  CIC1Cos_SLICE_1590 \CIC1Cos/SLICE_1590 ( .B1(\CIC1Cos/d_d_tmp_30 ), 
    .A1(\CIC1Cos/d_tmp_30 ), .B0(\CIC1Cos/d_d_tmp_29 ), 
    .A0(\CIC1Cos/d_tmp_29 ), .DI1(\CIC1Cos/d6_71_N_1459_30 ), 
    .DI0(\CIC1Cos/d6_71_N_1459_29 ), .CE(\CIC1Cos/osc_clk_enable_897 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11377 ), .F0(\CIC1Cos/d6_71_N_1459_29 ), 
    .Q0(\CIC1Cos/d6_29 ), .F1(\CIC1Cos/d6_71_N_1459_30 ), .Q1(\CIC1Cos/d6_30 ), 
    .FCO(\CIC1Cos/n11378 ));
  CIC1Cos_SLICE_1591 \CIC1Cos/SLICE_1591 ( .B1(\CIC1Cos/d_d_tmp_28 ), 
    .A1(\CIC1Cos/d_tmp_28 ), .B0(\CIC1Cos/d_d_tmp_27 ), 
    .A0(\CIC1Cos/d_tmp_27 ), .DI1(\CIC1Cos/d6_71_N_1459_28 ), 
    .DI0(\CIC1Cos/d6_71_N_1459_27 ), .CE(\CIC1Cos/osc_clk_enable_897 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11376 ), .F0(\CIC1Cos/d6_71_N_1459_27 ), 
    .Q0(\CIC1Cos/d6_27 ), .F1(\CIC1Cos/d6_71_N_1459_28 ), .Q1(\CIC1Cos/d6_28 ), 
    .FCO(\CIC1Cos/n11377 ));
  CIC1Cos_SLICE_1592 \CIC1Cos/SLICE_1592 ( .B1(\CIC1Cos/d_d_tmp_26 ), 
    .A1(\CIC1Cos/d_tmp_26 ), .B0(\CIC1Cos/d_d_tmp_25 ), 
    .A0(\CIC1Cos/d_tmp_25 ), .DI1(\CIC1Cos/d6_71_N_1459_26 ), 
    .DI0(\CIC1Cos/d6_71_N_1459_25 ), .CE(\CIC1Cos/osc_clk_enable_897 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11375 ), .F0(\CIC1Cos/d6_71_N_1459_25 ), 
    .Q0(\CIC1Cos/d6_25 ), .F1(\CIC1Cos/d6_71_N_1459_26 ), .Q1(\CIC1Cos/d6_26 ), 
    .FCO(\CIC1Cos/n11376 ));
  CIC1Cos_SLICE_1593 \CIC1Cos/SLICE_1593 ( .B1(\CIC1Cos/d_d_tmp_24 ), 
    .A1(\CIC1Cos/d_tmp_24 ), .B0(\CIC1Cos/d_d_tmp_23 ), 
    .A0(\CIC1Cos/d_tmp_23 ), .DI1(\CIC1Cos/d6_71_N_1459_24 ), 
    .DI0(\CIC1Cos/d6_71_N_1459_23 ), .CE(\CIC1Cos/osc_clk_enable_897 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11374 ), .F0(\CIC1Cos/d6_71_N_1459_23 ), 
    .Q0(\CIC1Cos/d6_23 ), .F1(\CIC1Cos/d6_71_N_1459_24 ), .Q1(\CIC1Cos/d6_24 ), 
    .FCO(\CIC1Cos/n11375 ));
  CIC1Cos_SLICE_1594 \CIC1Cos/SLICE_1594 ( .B1(\CIC1Cos/d_d_tmp_22 ), 
    .A1(\CIC1Cos/d_tmp_22 ), .B0(\CIC1Cos/d_d_tmp_21 ), 
    .A0(\CIC1Cos/d_tmp_21 ), .DI1(\CIC1Cos/d6_71_N_1459_22 ), 
    .DI0(\CIC1Cos/d6_71_N_1459_21 ), .CE(\CIC1Cos/osc_clk_enable_897 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11373 ), .F0(\CIC1Cos/d6_71_N_1459_21 ), 
    .Q0(\CIC1Cos/d6_21 ), .F1(\CIC1Cos/d6_71_N_1459_22 ), .Q1(\CIC1Cos/d6_22 ), 
    .FCO(\CIC1Cos/n11374 ));
  CIC1Cos_SLICE_1595 \CIC1Cos/SLICE_1595 ( .B1(\CIC1Cos/d_d_tmp_20 ), 
    .A1(\CIC1Cos/d_tmp_20 ), .B0(\CIC1Cos/d_d_tmp_19 ), 
    .A0(\CIC1Cos/d_tmp_19 ), .DI0(\CIC1Cos/d6_71_N_1459_19 ), 
    .CE(\CIC1Cos/osc_clk_enable_847 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11372 ), 
    .F0(\CIC1Cos/d6_71_N_1459_19 ), .Q0(\CIC1Cos/d6_19 ), 
    .F1(\CIC1Cos/d6_71_N_1459_20 ), .FCO(\CIC1Cos/n11373 ));
  CIC1Cos_SLICE_1596 \CIC1Cos/SLICE_1596 ( .B1(\CIC1Cos/d_d_tmp_18 ), 
    .A1(\CIC1Cos/d_tmp_18 ), .B0(\CIC1Cos/d_d_tmp_17 ), 
    .A0(\CIC1Cos/d_tmp_17 ), .DI1(\CIC1Cos/d6_71_N_1459_18 ), 
    .DI0(\CIC1Cos/d6_71_N_1459_17 ), .CE(\CIC1Cos/osc_clk_enable_847 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11371 ), .F0(\CIC1Cos/d6_71_N_1459_17 ), 
    .Q0(\CIC1Cos/d6_17 ), .F1(\CIC1Cos/d6_71_N_1459_18 ), .Q1(\CIC1Cos/d6_18 ), 
    .FCO(\CIC1Cos/n11372 ));
  CIC1Cos_SLICE_1597 \CIC1Cos/SLICE_1597 ( .B1(\CIC1Cos/d_d_tmp_16 ), 
    .A1(\CIC1Cos/d_tmp_16 ), .B0(\CIC1Cos/d_d_tmp_15 ), 
    .A0(\CIC1Cos/d_tmp_15 ), .DI1(\CIC1Cos/d6_71_N_1459_16 ), 
    .DI0(\CIC1Cos/d6_71_N_1459_15 ), .CE(\CIC1Cos/osc_clk_enable_847 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11370 ), .F0(\CIC1Cos/d6_71_N_1459_15 ), 
    .Q0(\CIC1Cos/d6_15 ), .F1(\CIC1Cos/d6_71_N_1459_16 ), .Q1(\CIC1Cos/d6_16 ), 
    .FCO(\CIC1Cos/n11371 ));
  CIC1Cos_SLICE_1598 \CIC1Cos/SLICE_1598 ( .B1(\CIC1Cos/d_d_tmp_14 ), 
    .A1(\CIC1Cos/d_tmp_14 ), .B0(\CIC1Cos/d_d_tmp_13 ), 
    .A0(\CIC1Cos/d_tmp_13 ), .DI1(\CIC1Cos/d6_71_N_1459_14 ), 
    .DI0(\CIC1Cos/d6_71_N_1459_13 ), .CE(\CIC1Cos/osc_clk_enable_847 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11369 ), .F0(\CIC1Cos/d6_71_N_1459_13 ), 
    .Q0(\CIC1Cos/d6_13 ), .F1(\CIC1Cos/d6_71_N_1459_14 ), .Q1(\CIC1Cos/d6_14 ), 
    .FCO(\CIC1Cos/n11370 ));
  CIC1Cos_SLICE_1599 \CIC1Cos/SLICE_1599 ( .B1(\CIC1Cos/d_d_tmp_12 ), 
    .A1(\CIC1Cos/d_tmp_12 ), .B0(\CIC1Cos/d_d_tmp_11 ), 
    .A0(\CIC1Cos/d_tmp_11 ), .DI1(\CIC1Cos/d6_71_N_1459_12 ), 
    .DI0(\CIC1Cos/d6_71_N_1459_11 ), .CE(\CIC1Cos/osc_clk_enable_847 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11368 ), .F0(\CIC1Cos/d6_71_N_1459_11 ), 
    .Q0(\CIC1Cos/d6_11 ), .F1(\CIC1Cos/d6_71_N_1459_12 ), .Q1(\CIC1Cos/d6_12 ), 
    .FCO(\CIC1Cos/n11369 ));
  CIC1Cos_SLICE_1600 \CIC1Cos/SLICE_1600 ( .B1(\CIC1Cos/d_d_tmp_10 ), 
    .A1(\CIC1Cos/d_tmp_10 ), .B0(\CIC1Cos/d_d_tmp_9 ), .A0(\CIC1Cos/d_tmp_9 ), 
    .DI1(\CIC1Cos/d6_71_N_1459_10 ), .DI0(\CIC1Cos/d6_71_N_1459_9 ), 
    .CE(\CIC1Cos/osc_clk_enable_847 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11367 ), 
    .F0(\CIC1Cos/d6_71_N_1459_9 ), .Q0(\CIC1Cos/d6_9 ), 
    .F1(\CIC1Cos/d6_71_N_1459_10 ), .Q1(\CIC1Cos/d6_10 ), 
    .FCO(\CIC1Cos/n11368 ));
  CIC1Cos_SLICE_1601 \CIC1Cos/SLICE_1601 ( .B1(\CIC1Cos/d_d_tmp_8 ), 
    .A1(\CIC1Cos/d_tmp_8 ), .B0(\CIC1Cos/d_d_tmp_7 ), .A0(\CIC1Cos/d_tmp_7 ), 
    .DI1(\CIC1Cos/d6_71_N_1459_8 ), .DI0(\CIC1Cos/d6_71_N_1459_7 ), 
    .CE(\CIC1Cos/osc_clk_enable_847 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11366 ), 
    .F0(\CIC1Cos/d6_71_N_1459_7 ), .Q0(\CIC1Cos/d6_7 ), 
    .F1(\CIC1Cos/d6_71_N_1459_8 ), .Q1(\CIC1Cos/d6_8 ), .FCO(\CIC1Cos/n11367 ));
  CIC1Cos_SLICE_1602 \CIC1Cos/SLICE_1602 ( .B1(\CIC1Cos/d_d_tmp_6 ), 
    .A1(\CIC1Cos/d_tmp_6 ), .B0(\CIC1Cos/d_d_tmp_5 ), .A0(\CIC1Cos/d_tmp_5 ), 
    .DI1(\CIC1Cos/d6_71_N_1459_6 ), .DI0(\CIC1Cos/d6_71_N_1459_5 ), 
    .CE(\CIC1Cos/osc_clk_enable_847 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11365 ), 
    .F0(\CIC1Cos/d6_71_N_1459_5 ), .Q0(\CIC1Cos/d6_5 ), 
    .F1(\CIC1Cos/d6_71_N_1459_6 ), .Q1(\CIC1Cos/d6_6 ), .FCO(\CIC1Cos/n11366 ));
  CIC1Cos_SLICE_1603 \CIC1Cos/SLICE_1603 ( .B1(\CIC1Cos/d_d_tmp_4 ), 
    .A1(\CIC1Cos/d_tmp_4 ), .B0(\CIC1Cos/d_d_tmp_3 ), .A0(\CIC1Cos/d_tmp_3 ), 
    .DI1(\CIC1Cos/d6_71_N_1459_4 ), .DI0(\CIC1Cos/d6_71_N_1459_3 ), 
    .CE(\CIC1Cos/osc_clk_enable_847 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11364 ), 
    .F0(\CIC1Cos/d6_71_N_1459_3 ), .Q0(\CIC1Cos/d6_3 ), 
    .F1(\CIC1Cos/d6_71_N_1459_4 ), .Q1(\CIC1Cos/d6_4 ), .FCO(\CIC1Cos/n11365 ));
  CIC1Cos_SLICE_1604 \CIC1Cos/SLICE_1604 ( .B1(\CIC1Cos/d_d_tmp_2 ), 
    .A1(\CIC1Cos/d_tmp_2 ), .B0(\CIC1Cos/d_d_tmp_1 ), .A0(\CIC1Cos/d_tmp_1 ), 
    .DI1(\CIC1Cos/d6_71_N_1459_2 ), .DI0(\CIC1Cos/d6_71_N_1459_1 ), 
    .CE(\CIC1Cos/osc_clk_enable_847 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11363 ), 
    .F0(\CIC1Cos/d6_71_N_1459_1 ), .Q0(\CIC1Cos/d6_1 ), 
    .F1(\CIC1Cos/d6_71_N_1459_2 ), .Q1(\CIC1Cos/d6_2 ), .FCO(\CIC1Cos/n11364 ));
  CIC1Cos_SLICE_1605 \CIC1Cos/SLICE_1605 ( .B1(\CIC1Cos/d_d_tmp_0 ), 
    .A1(\CIC1Cos/d_tmp_0 ), .DI1(\CIC1Cos/d6_71_N_1459_0 ), 
    .CE(\CIC1Cos/osc_clk_enable_797 ), .CLK(osc_clk), 
    .F1(\CIC1Cos/d6_71_N_1459_0 ), .Q1(\CIC1Cos/d6_0 ), .FCO(\CIC1Cos/n11363 ));
  CIC1Cos_SLICE_1606 \CIC1Cos/SLICE_1606 ( .D1(MixerOutCos_11), 
    .C1(\CIC1Cos/n5092 ), .B1(\CIC1Cos/n5056 ), .A1(\CIC1Cos/d1_37 ), 
    .D0(MixerOutCos_11), .C0(\CIC1Cos/n5093 ), .B0(\CIC1Cos/n5056 ), 
    .A0(\CIC1Cos/d1_36 ), .DI1(\CIC1Cos/d1_71_N_418_37 ), 
    .DI0(\CIC1Cos/d1_71_N_418_36 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11755 ), 
    .F0(\CIC1Cos/d1_71_N_418_36 ), .Q0(\CIC1Cos/d1_36 ), 
    .F1(\CIC1Cos/d1_71_N_418_37 ), .Q1(\CIC1Cos/d1_37 ), 
    .FCO(\CIC1Cos/n11756 ));
  CIC1Cos_SLICE_1607 \CIC1Cos/SLICE_1607 ( .D1(\CIC1Cos/d4_51 ), 
    .C1(\CIC1Cos/n5686 ), .B1(\CIC1Cos/n5664 ), .A1(\CIC1Cos/d5_51 ), 
    .D0(\CIC1Cos/d4_50 ), .C0(\CIC1Cos/n5687 ), .B0(\CIC1Cos/n5664 ), 
    .A0(\CIC1Cos/d5_50 ), .DI1(\CIC1Cos/d5_71_N_706_51 ), 
    .DI0(\CIC1Cos/d5_71_N_706_50 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11598 ), 
    .F0(\CIC1Cos/d5_71_N_706_50 ), .Q0(\CIC1Cos/d5_50 ), 
    .F1(\CIC1Cos/d5_71_N_706_51 ), .Q1(\CIC1Cos/d5_51 ), 
    .FCO(\CIC1Cos/n11599 ));
  CIC1Cos_SLICE_1608 \CIC1Cos/SLICE_1608 ( .D1(MixerOutCos_11), 
    .C1(\CIC1Cos/n5084 ), .B1(\CIC1Cos/n5056 ), .A1(\CIC1Cos/d1_45 ), 
    .D0(MixerOutCos_11), .C0(\CIC1Cos/n5085 ), .B0(\CIC1Cos/n5056 ), 
    .A0(\CIC1Cos/d1_44 ), .DI1(\CIC1Cos/d1_71_N_418_45 ), 
    .DI0(\CIC1Cos/d1_71_N_418_44 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11759 ), 
    .F0(\CIC1Cos/d1_71_N_418_44 ), .Q0(\CIC1Cos/d1_44 ), 
    .F1(\CIC1Cos/d1_71_N_418_45 ), .Q1(\CIC1Cos/d1_45 ), 
    .FCO(\CIC1Cos/n11760 ));
  CIC1Cos_SLICE_1609 \CIC1Cos/SLICE_1609 ( .D1(MixerOutCos_11), 
    .C1(\CIC1Cos/n5058 ), .B1(\CIC1Cos/n5056 ), .A1(\CIC1Cos/d1_71 ), 
    .D0(MixerOutCos_11), .C0(\CIC1Cos/n5059 ), .B0(\CIC1Cos/n5056 ), 
    .A0(\CIC1Cos/d1_70 ), .DI1(\CIC1Cos/d1_71_N_418_71 ), 
    .DI0(\CIC1Cos/d1_71_N_418_70 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11772 ), 
    .F0(\CIC1Cos/d1_71_N_418_70 ), .Q0(\CIC1Cos/d1_70 ), 
    .F1(\CIC1Cos/d1_71_N_418_71 ), .Q1(\CIC1Cos/d1_71 ));
  CIC1Cos_SLICE_1610 \CIC1Cos/SLICE_1610 ( .D1(MixerOutCos_11), 
    .C1(\CIC1Cos/n5060 ), .B1(\CIC1Cos/n5056 ), .A1(\CIC1Cos/d1_69 ), 
    .D0(MixerOutCos_11), .C0(\CIC1Cos/n5061 ), .B0(\CIC1Cos/n5056 ), 
    .A0(\CIC1Cos/d1_68 ), .DI1(\CIC1Cos/d1_71_N_418_69 ), 
    .DI0(\CIC1Cos/d1_71_N_418_68 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11771 ), 
    .F0(\CIC1Cos/d1_71_N_418_68 ), .Q0(\CIC1Cos/d1_68 ), 
    .F1(\CIC1Cos/d1_71_N_418_69 ), .Q1(\CIC1Cos/d1_69 ), 
    .FCO(\CIC1Cos/n11772 ));
  CIC1Cos_SLICE_1611 \CIC1Cos/SLICE_1611 ( .D1(MixerOutCos_11), 
    .C1(\CIC1Cos/n5062 ), .B1(\CIC1Cos/n5056 ), .A1(\CIC1Cos/d1_67 ), 
    .D0(MixerOutCos_11), .C0(\CIC1Cos/n5063 ), .B0(\CIC1Cos/n5056 ), 
    .A0(\CIC1Cos/d1_66 ), .DI1(\CIC1Cos/d1_71_N_418_67 ), 
    .DI0(\CIC1Cos/d1_71_N_418_66 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11770 ), 
    .F0(\CIC1Cos/d1_71_N_418_66 ), .Q0(\CIC1Cos/d1_66 ), 
    .F1(\CIC1Cos/d1_71_N_418_67 ), .Q1(\CIC1Cos/d1_67 ), 
    .FCO(\CIC1Cos/n11771 ));
  CIC1Cos_SLICE_1612 \CIC1Cos/SLICE_1612 ( .D1(MixerOutCos_11), 
    .C1(\CIC1Cos/n5064 ), .B1(\CIC1Cos/n5056 ), .A1(\CIC1Cos/d1_65 ), 
    .D0(MixerOutCos_11), .C0(\CIC1Cos/n5065 ), .B0(\CIC1Cos/n5056 ), 
    .A0(\CIC1Cos/d1_64 ), .DI1(\CIC1Cos/d1_71_N_418_65 ), 
    .DI0(\CIC1Cos/d1_71_N_418_64 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11769 ), 
    .F0(\CIC1Cos/d1_71_N_418_64 ), .Q0(\CIC1Cos/d1_64 ), 
    .F1(\CIC1Cos/d1_71_N_418_65 ), .Q1(\CIC1Cos/d1_65 ), 
    .FCO(\CIC1Cos/n11770 ));
  CIC1Cos_SLICE_1613 \CIC1Cos/SLICE_1613 ( .D1(MixerOutCos_11), 
    .C1(\CIC1Cos/n5066 ), .B1(\CIC1Cos/n5056 ), .A1(\CIC1Cos/d1_63 ), 
    .D0(MixerOutCos_11), .C0(\CIC1Cos/n5067 ), .B0(\CIC1Cos/n5056 ), 
    .A0(\CIC1Cos/d1_62 ), .DI1(\CIC1Cos/d1_71_N_418_63 ), 
    .DI0(\CIC1Cos/d1_71_N_418_62 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11768 ), 
    .F0(\CIC1Cos/d1_71_N_418_62 ), .Q0(\CIC1Cos/d1_62 ), 
    .F1(\CIC1Cos/d1_71_N_418_63 ), .Q1(\CIC1Cos/d1_63 ), 
    .FCO(\CIC1Cos/n11769 ));
  CIC1Cos_SLICE_1614 \CIC1Cos/SLICE_1614 ( .D1(MixerOutCos_11), 
    .C1(\CIC1Cos/n5068 ), .B1(\CIC1Cos/n5056 ), .A1(\CIC1Cos/d1_61 ), 
    .D0(MixerOutCos_11), .C0(\CIC1Cos/n5069 ), .B0(\CIC1Cos/n5056 ), 
    .A0(\CIC1Cos/d1_60 ), .DI1(\CIC1Cos/d1_71_N_418_61 ), 
    .DI0(\CIC1Cos/d1_71_N_418_60 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11767 ), 
    .F0(\CIC1Cos/d1_71_N_418_60 ), .Q0(\CIC1Cos/d1_60 ), 
    .F1(\CIC1Cos/d1_71_N_418_61 ), .Q1(\CIC1Cos/d1_61 ), 
    .FCO(\CIC1Cos/n11768 ));
  CIC1Cos_SLICE_1615 \CIC1Cos/SLICE_1615 ( .D1(MixerOutCos_11), 
    .C1(\CIC1Cos/n5070 ), .B1(\CIC1Cos/n5056 ), .A1(\CIC1Cos/d1_59 ), 
    .D0(MixerOutCos_11), .C0(\CIC1Cos/n5071 ), .B0(\CIC1Cos/n5056 ), 
    .A0(\CIC1Cos/d1_58 ), .DI1(\CIC1Cos/d1_71_N_418_59 ), 
    .DI0(\CIC1Cos/d1_71_N_418_58 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11766 ), 
    .F0(\CIC1Cos/d1_71_N_418_58 ), .Q0(\CIC1Cos/d1_58 ), 
    .F1(\CIC1Cos/d1_71_N_418_59 ), .Q1(\CIC1Cos/d1_59 ), 
    .FCO(\CIC1Cos/n11767 ));
  CIC1Cos_SLICE_1616 \CIC1Cos/SLICE_1616 ( .D1(MixerOutCos_11), 
    .C1(\CIC1Cos/n5072 ), .B1(\CIC1Cos/n5056 ), .A1(\CIC1Cos/d1_57 ), 
    .D0(MixerOutCos_11), .C0(\CIC1Cos/n5073 ), .B0(\CIC1Cos/n5056 ), 
    .A0(\CIC1Cos/d1_56 ), .DI1(\CIC1Cos/d1_71_N_418_57 ), 
    .DI0(\CIC1Cos/d1_71_N_418_56 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11765 ), 
    .F0(\CIC1Cos/d1_71_N_418_56 ), .Q0(\CIC1Cos/d1_56 ), 
    .F1(\CIC1Cos/d1_71_N_418_57 ), .Q1(\CIC1Cos/d1_57 ), 
    .FCO(\CIC1Cos/n11766 ));
  CIC1Cos_SLICE_1617 \CIC1Cos/SLICE_1617 ( .D1(MixerOutCos_11), 
    .C1(\CIC1Cos/n5074 ), .B1(\CIC1Cos/n5056 ), .A1(\CIC1Cos/d1_55 ), 
    .D0(MixerOutCos_11), .C0(\CIC1Cos/n5075 ), .B0(\CIC1Cos/n5056 ), 
    .A0(\CIC1Cos/d1_54 ), .DI1(\CIC1Cos/d1_71_N_418_55 ), 
    .DI0(\CIC1Cos/d1_71_N_418_54 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11764 ), 
    .F0(\CIC1Cos/d1_71_N_418_54 ), .Q0(\CIC1Cos/d1_54 ), 
    .F1(\CIC1Cos/d1_71_N_418_55 ), .Q1(\CIC1Cos/d1_55 ), 
    .FCO(\CIC1Cos/n11765 ));
  CIC1Cos_SLICE_1618 \CIC1Cos/SLICE_1618 ( .D1(MixerOutCos_11), 
    .C1(\CIC1Cos/n5076 ), .B1(\CIC1Cos/n5056 ), .A1(\CIC1Cos/d1_53 ), 
    .D0(MixerOutCos_11), .C0(\CIC1Cos/n5077 ), .B0(\CIC1Cos/n5056 ), 
    .A0(\CIC1Cos/d1_52 ), .DI1(\CIC1Cos/d1_71_N_418_53 ), 
    .DI0(\CIC1Cos/d1_71_N_418_52 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11763 ), 
    .F0(\CIC1Cos/d1_71_N_418_52 ), .Q0(\CIC1Cos/d1_52 ), 
    .F1(\CIC1Cos/d1_71_N_418_53 ), .Q1(\CIC1Cos/d1_53 ), 
    .FCO(\CIC1Cos/n11764 ));
  CIC1Cos_SLICE_1619 \CIC1Cos/SLICE_1619 ( .D1(MixerOutCos_11), 
    .C1(\CIC1Cos/n5078 ), .B1(\CIC1Cos/n5056 ), .A1(\CIC1Cos/d1_51 ), 
    .D0(MixerOutCos_11), .C0(\CIC1Cos/n5079 ), .B0(\CIC1Cos/n5056 ), 
    .A0(\CIC1Cos/d1_50 ), .DI1(\CIC1Cos/d1_71_N_418_51 ), 
    .DI0(\CIC1Cos/d1_71_N_418_50 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11762 ), 
    .F0(\CIC1Cos/d1_71_N_418_50 ), .Q0(\CIC1Cos/d1_50 ), 
    .F1(\CIC1Cos/d1_71_N_418_51 ), .Q1(\CIC1Cos/d1_51 ), 
    .FCO(\CIC1Cos/n11763 ));
  CIC1Cos_SLICE_1620 \CIC1Cos/SLICE_1620 ( .D1(MixerOutCos_11), 
    .C1(\CIC1Cos/n5086 ), .B1(\CIC1Cos/n5056 ), .A1(\CIC1Cos/d1_43 ), 
    .D0(MixerOutCos_11), .C0(\CIC1Cos/n5087 ), .B0(\CIC1Cos/n5056 ), 
    .A0(\CIC1Cos/d1_42 ), .DI1(\CIC1Cos/d1_71_N_418_43 ), 
    .DI0(\CIC1Cos/d1_71_N_418_42 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11758 ), 
    .F0(\CIC1Cos/d1_71_N_418_42 ), .Q0(\CIC1Cos/d1_42 ), 
    .F1(\CIC1Cos/d1_71_N_418_43 ), .Q1(\CIC1Cos/d1_43 ), 
    .FCO(\CIC1Cos/n11759 ));
  CIC1Cos_SLICE_1621 \CIC1Cos/SLICE_1621 ( .D1(MixerOutCos_11), 
    .C1(\CIC1Cos/n5088 ), .B1(\CIC1Cos/n5056 ), .A1(\CIC1Cos/d1_41 ), 
    .D0(MixerOutCos_11), .C0(\CIC1Cos/n5089 ), .B0(\CIC1Cos/n5056 ), 
    .A0(\CIC1Cos/d1_40 ), .DI1(\CIC1Cos/d1_71_N_418_41 ), 
    .DI0(\CIC1Cos/d1_71_N_418_40 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11757 ), 
    .F0(\CIC1Cos/d1_71_N_418_40 ), .Q0(\CIC1Cos/d1_40 ), 
    .F1(\CIC1Cos/d1_71_N_418_41 ), .Q1(\CIC1Cos/d1_41 ), 
    .FCO(\CIC1Cos/n11758 ));
  CIC1Cos_SLICE_1622 \CIC1Cos/SLICE_1622 ( .D1(MixerOutCos_11), 
    .C1(\CIC1Cos/n5090 ), .B1(\CIC1Cos/n5056 ), .A1(\CIC1Cos/d1_39 ), 
    .D0(MixerOutCos_11), .C0(\CIC1Cos/n5091 ), .B0(\CIC1Cos/n5056 ), 
    .A0(\CIC1Cos/d1_38 ), .DI1(\CIC1Cos/d1_71_N_418_39 ), 
    .DI0(\CIC1Cos/d1_71_N_418_38 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11756 ), 
    .F0(\CIC1Cos/d1_71_N_418_38 ), .Q0(\CIC1Cos/d1_38 ), 
    .F1(\CIC1Cos/d1_71_N_418_39 ), .Q1(\CIC1Cos/d1_39 ), 
    .FCO(\CIC1Cos/n11757 ));
  CIC1Cos_SLICE_1623 \CIC1Cos/SLICE_1623 ( .D1(MixerOutCos_11), 
    .C1(\CIC1Cos/n5080 ), .B1(\CIC1Cos/n5056 ), .A1(\CIC1Cos/d1_49 ), 
    .D0(MixerOutCos_11), .C0(\CIC1Cos/n5081 ), .B0(\CIC1Cos/n5056 ), 
    .A0(\CIC1Cos/d1_48 ), .DI1(\CIC1Cos/d1_71_N_418_49 ), 
    .DI0(\CIC1Cos/d1_71_N_418_48 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11761 ), 
    .F0(\CIC1Cos/d1_71_N_418_48 ), .Q0(\CIC1Cos/d1_48 ), 
    .F1(\CIC1Cos/d1_71_N_418_49 ), .Q1(\CIC1Cos/d1_49 ), 
    .FCO(\CIC1Cos/n11762 ));
  CIC1Cos_SLICE_1624 \CIC1Cos/SLICE_1624 ( .B1(\CIC1Cos/d1_71 ), 
    .A1(MixerOutCos_11), .B0(\CIC1Cos/d1_70 ), .A0(MixerOutCos_11), 
    .FCI(\CIC1Cos/n11791 ), .F0(\CIC1Cos/n5059 ), .F1(\CIC1Cos/n5058 ));
  CIC1Cos_SLICE_1625 \CIC1Cos/SLICE_1625 ( .D1(MixerOutCos_11), 
    .C1(\CIC1Cos/n5082 ), .B1(\CIC1Cos/n5056 ), .A1(\CIC1Cos/d1_47 ), 
    .D0(MixerOutCos_11), .C0(\CIC1Cos/n5083 ), .B0(\CIC1Cos/n5056 ), 
    .A0(\CIC1Cos/d1_46 ), .DI1(\CIC1Cos/d1_71_N_418_47 ), 
    .DI0(\CIC1Cos/d1_71_N_418_46 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11760 ), 
    .F0(\CIC1Cos/d1_71_N_418_46 ), .Q0(\CIC1Cos/d1_46 ), 
    .F1(\CIC1Cos/d1_71_N_418_47 ), .Q1(\CIC1Cos/d1_47 ), 
    .FCO(\CIC1Cos/n11761 ));
  CIC1Cos_SLICE_1626 \CIC1Cos/SLICE_1626 ( .B1(\CIC1Cos/d1_69 ), 
    .A1(MixerOutCos_11), .B0(\CIC1Cos/d1_68 ), .A0(MixerOutCos_11), 
    .FCI(\CIC1Cos/n11790 ), .F0(\CIC1Cos/n5061 ), .F1(\CIC1Cos/n5060 ), 
    .FCO(\CIC1Cos/n11791 ));
  CIC1Cos_SLICE_1627 \CIC1Cos/SLICE_1627 ( .D1(\CIC1Cos/d1_41 ), 
    .C1(\CIC1Cos/n5240 ), .B1(\CIC1Cos/n5208 ), .A1(\CIC1Cos/d2_41 ), 
    .D0(\CIC1Cos/d1_40 ), .C0(\CIC1Cos/n5241 ), .B0(\CIC1Cos/n5208 ), 
    .A0(\CIC1Cos/d2_40 ), .DI1(\CIC1Cos/d2_71_N_490_41 ), 
    .DI0(\CIC1Cos/d2_71_N_490_40 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11716 ), 
    .F0(\CIC1Cos/d2_71_N_490_40 ), .Q0(\CIC1Cos/d2_40 ), 
    .F1(\CIC1Cos/d2_71_N_490_41 ), .Q1(\CIC1Cos/d2_41 ), 
    .FCO(\CIC1Cos/n11717 ));
  CIC1Cos_SLICE_1628 \CIC1Cos/SLICE_1628 ( .B1(\CIC1Cos/d1_67 ), 
    .A1(MixerOutCos_11), .B0(\CIC1Cos/d1_66 ), .A0(MixerOutCos_11), 
    .FCI(\CIC1Cos/n11789 ), .F0(\CIC1Cos/n5063 ), .F1(\CIC1Cos/n5062 ), 
    .FCO(\CIC1Cos/n11790 ));
  CIC1Cos_SLICE_1629 \CIC1Cos/SLICE_1629 ( .B1(\CIC1Cos/d1_65 ), 
    .A1(MixerOutCos_11), .B0(\CIC1Cos/d1_64 ), .A0(MixerOutCos_11), 
    .FCI(\CIC1Cos/n11788 ), .F0(\CIC1Cos/n5065 ), .F1(\CIC1Cos/n5064 ), 
    .FCO(\CIC1Cos/n11789 ));
  CIC1Cos_SLICE_1630 \CIC1Cos/SLICE_1630 ( .B1(\CIC1Cos/d1_63 ), 
    .A1(MixerOutCos_11), .B0(\CIC1Cos/d1_62 ), .A0(MixerOutCos_11), 
    .FCI(\CIC1Cos/n11787 ), .F0(\CIC1Cos/n5067 ), .F1(\CIC1Cos/n5066 ), 
    .FCO(\CIC1Cos/n11788 ));
  CIC1Cos_SLICE_1631 \CIC1Cos/SLICE_1631 ( .B1(\CIC1Cos/d1_61 ), 
    .A1(MixerOutCos_11), .B0(\CIC1Cos/d1_60 ), .A0(MixerOutCos_11), 
    .FCI(\CIC1Cos/n11786 ), .F0(\CIC1Cos/n5069 ), .F1(\CIC1Cos/n5068 ), 
    .FCO(\CIC1Cos/n11787 ));
  CIC1Cos_SLICE_1632 \CIC1Cos/SLICE_1632 ( .B1(\CIC1Cos/d1_59 ), 
    .A1(MixerOutCos_11), .B0(\CIC1Cos/d1_58 ), .A0(MixerOutCos_11), 
    .FCI(\CIC1Cos/n11785 ), .F0(\CIC1Cos/n5071 ), .F1(\CIC1Cos/n5070 ), 
    .FCO(\CIC1Cos/n11786 ));
  CIC1Cos_SLICE_1633 \CIC1Cos/SLICE_1633 ( .B1(\CIC1Cos/d1_57 ), 
    .A1(MixerOutCos_11), .B0(\CIC1Cos/d1_56 ), .A0(MixerOutCos_11), 
    .FCI(\CIC1Cos/n11784 ), .F0(\CIC1Cos/n5073 ), .F1(\CIC1Cos/n5072 ), 
    .FCO(\CIC1Cos/n11785 ));
  CIC1Cos_SLICE_1634 \CIC1Cos/SLICE_1634 ( .B1(\CIC1Cos/d1_55 ), 
    .A1(MixerOutCos_11), .B0(\CIC1Cos/d1_54 ), .A0(MixerOutCos_11), 
    .FCI(\CIC1Cos/n11783 ), .F0(\CIC1Cos/n5075 ), .F1(\CIC1Cos/n5074 ), 
    .FCO(\CIC1Cos/n11784 ));
  CIC1Cos_SLICE_1635 \CIC1Cos/SLICE_1635 ( .B1(\CIC1Cos/d1_53 ), 
    .A1(MixerOutCos_11), .B0(\CIC1Cos/d1_52 ), .A0(MixerOutCos_11), 
    .FCI(\CIC1Cos/n11782 ), .F0(\CIC1Cos/n5077 ), .F1(\CIC1Cos/n5076 ), 
    .FCO(\CIC1Cos/n11783 ));
  CIC1Cos_SLICE_1636 \CIC1Cos/SLICE_1636 ( .B1(\CIC1Cos/d1_51 ), 
    .A1(MixerOutCos_11), .B0(\CIC1Cos/d1_50 ), .A0(MixerOutCos_11), 
    .FCI(\CIC1Cos/n11781 ), .F0(\CIC1Cos/n5079 ), .F1(\CIC1Cos/n5078 ), 
    .FCO(\CIC1Cos/n11782 ));
  CIC1Cos_SLICE_1637 \CIC1Cos/SLICE_1637 ( .B1(\CIC1Cos/d1_49 ), 
    .A1(MixerOutCos_11), .B0(\CIC1Cos/d1_48 ), .A0(MixerOutCos_11), 
    .FCI(\CIC1Cos/n11780 ), .F0(\CIC1Cos/n5081 ), .F1(\CIC1Cos/n5080 ), 
    .FCO(\CIC1Cos/n11781 ));
  CIC1Cos_SLICE_1638 \CIC1Cos/SLICE_1638 ( .B1(\CIC1Cos/d1_47 ), 
    .A1(MixerOutCos_11), .B0(\CIC1Cos/d1_46 ), .A0(MixerOutCos_11), 
    .FCI(\CIC1Cos/n11779 ), .F0(\CIC1Cos/n5083 ), .F1(\CIC1Cos/n5082 ), 
    .FCO(\CIC1Cos/n11780 ));
  CIC1Cos_SLICE_1639 \CIC1Cos/SLICE_1639 ( .B1(\CIC1Cos/d1_45 ), 
    .A1(MixerOutCos_11), .B0(\CIC1Cos/d1_44 ), .A0(MixerOutCos_11), 
    .FCI(\CIC1Cos/n11778 ), .F0(\CIC1Cos/n5085 ), .F1(\CIC1Cos/n5084 ), 
    .FCO(\CIC1Cos/n11779 ));
  CIC1Cos_SLICE_1640 \CIC1Cos/SLICE_1640 ( .B1(\CIC1Cos/d1_43 ), 
    .A1(MixerOutCos_11), .B0(\CIC1Cos/d1_42 ), .A0(MixerOutCos_11), 
    .FCI(\CIC1Cos/n11777 ), .F0(\CIC1Cos/n5087 ), .F1(\CIC1Cos/n5086 ), 
    .FCO(\CIC1Cos/n11778 ));
  CIC1Cos_SLICE_1641 \CIC1Cos/SLICE_1641 ( .B1(\CIC1Cos/d1_41 ), 
    .A1(MixerOutCos_11), .B0(\CIC1Cos/d1_40 ), .A0(MixerOutCos_11), 
    .FCI(\CIC1Cos/n11776 ), .F0(\CIC1Cos/n5089 ), .F1(\CIC1Cos/n5088 ), 
    .FCO(\CIC1Cos/n11777 ));
  CIC1Cos_SLICE_1642 \CIC1Cos/SLICE_1642 ( .B1(\CIC1Cos/d1_39 ), 
    .A1(MixerOutCos_11), .B0(\CIC1Cos/d1_38 ), .A0(MixerOutCos_11), 
    .FCI(\CIC1Cos/n11775 ), .F0(\CIC1Cos/n5091 ), .F1(\CIC1Cos/n5090 ), 
    .FCO(\CIC1Cos/n11776 ));
  CIC1Cos_SLICE_1643 \CIC1Cos/SLICE_1643 ( .B1(\CIC1Cos/d1_37 ), 
    .A1(MixerOutCos_11), .B0(\CIC1Cos/d1_36 ), .A0(MixerOutCos_11), 
    .F1(\CIC1Cos/n5092 ), .FCO(\CIC1Cos/n11775 ));
  AMDemodulator1_SLICE_1644 \AMDemodulator1/SLICE_1644 ( 
    .B0(\AMDemodulator1/MultResult2_0 ), .A0(\AMDemodulator1/MultResult1_0 ), 
    .DI0(\AMDemodulator1/ISquare_31_N_1895_0 ), .CLK(CIC1_out_clkSin), 
    .F0(\AMDemodulator1/ISquare_31_N_1895_0 ), .Q0(\AMDemodulator1/ISquare_0 ));
  AMDemodulator1_SLICE_1645 \AMDemodulator1/SLICE_1645 ( .M1(CIC1_outSin_1), 
    .M0(CIC1_outSin_0), .CLK(CIC1_out_clkSin), 
    .Q0(\AMDemodulator1/MultDataB_0 ), .Q1(\AMDemodulator1/MultDataB_1 ));
  AMDemodulator1_SLICE_1646 \AMDemodulator1/SLICE_1646 ( .M1(CIC1_outSin_3), 
    .M0(CIC1_outSin_2), .CLK(CIC1_out_clkSin), 
    .Q0(\AMDemodulator1/MultDataB_2 ), .Q1(\AMDemodulator1/MultDataB_3 ));
  AMDemodulator1_SLICE_1647 \AMDemodulator1/SLICE_1647 ( .M1(CIC1_outSin_5), 
    .M0(CIC1_outSin_4), .CLK(CIC1_out_clkSin), 
    .Q0(\AMDemodulator1/MultDataB_4 ), .Q1(\AMDemodulator1/MultDataB_5 ));
  AMDemodulator1_SLICE_1648 \AMDemodulator1/SLICE_1648 ( .M1(MYLED_c_1), 
    .M0(MYLED_c_0), .CLK(CIC1_out_clkSin), .Q0(\AMDemodulator1/MultDataB_6 ), 
    .Q1(\AMDemodulator1/MultDataB_7 ));
  AMDemodulator1_SLICE_1649 \AMDemodulator1/SLICE_1649 ( .M1(MYLED_c_3), 
    .M0(MYLED_c_2), .CLK(CIC1_out_clkSin), .Q0(\AMDemodulator1/MultDataB_8 ), 
    .Q1(\AMDemodulator1/MultDataB_9 ));
  AMDemodulator1_SLICE_1650 \AMDemodulator1/SLICE_1650 ( .M1(MYLED_c_5), 
    .M0(MYLED_c_4), .CLK(CIC1_out_clkSin), .Q0(\AMDemodulator1/MultDataB_10 ), 
    .Q1(\AMDemodulator1/MultDataB_11 ));
  AMDemodulator1_SLICE_1651 \AMDemodulator1/SLICE_1651 ( .M1(CIC1_outCos_1), 
    .M0(CIC1_outCos_0), .CLK(CIC1_out_clkSin), 
    .Q0(\AMDemodulator1/MultDataC_0 ), .Q1(\AMDemodulator1/MultDataC_1 ));
  AMDemodulator1_SLICE_1652 \AMDemodulator1/SLICE_1652 ( .M1(CIC1_outCos_3), 
    .M0(CIC1_outCos_2), .CLK(CIC1_out_clkSin), 
    .Q0(\AMDemodulator1/MultDataC_2 ), .Q1(\AMDemodulator1/MultDataC_3 ));
  AMDemodulator1_SLICE_1653 \AMDemodulator1/SLICE_1653 ( .M1(CIC1_outCos_5), 
    .M0(CIC1_outCos_4), .CLK(CIC1_out_clkSin), 
    .Q0(\AMDemodulator1/MultDataC_4 ), .Q1(\AMDemodulator1/MultDataC_5 ));
  AMDemodulator1_SLICE_1654 \AMDemodulator1/SLICE_1654 ( .M1(CIC1_outCos_7), 
    .M0(CIC1_outCos_6), .CLK(CIC1_out_clkSin), 
    .Q0(\AMDemodulator1/MultDataC_6 ), .Q1(\AMDemodulator1/MultDataC_7 ));
  AMDemodulator1_SLICE_1655 \AMDemodulator1/SLICE_1655 ( .M1(CIC1_outCos_9), 
    .M0(CIC1_outCos_8), .CLK(CIC1_out_clkSin), 
    .Q0(\AMDemodulator1/MultDataC_8 ), .Q1(\AMDemodulator1/MultDataC_9 ));
  AMDemodulator1_SLICE_1656 \AMDemodulator1/SLICE_1656 ( .M1(CIC1_outCos_11), 
    .M0(CIC1_outCos_10), .CLK(CIC1_out_clkSin), 
    .Q0(\AMDemodulator1/MultDataC_10 ), .Q1(\AMDemodulator1/MultDataC_11 ));
  AMDemodulator1_Multiplier1_SLICE_1657 
    \AMDemodulator1/Multiplier1/SLICE_1657 ( 
    .M1(\AMDemodulator1/Multiplier1/rego_o_1 ), 
    .M0(\AMDemodulator1/Multiplier1/rego_o_0 ), .CLK(CIC1_out_clkSin), 
    .Q0(\AMDemodulator1/MultResult1_0 ), .Q1(\AMDemodulator1/MultResult1_1 ));
  AMDemodulator1_Multiplier1_SLICE_1658 
    \AMDemodulator1/Multiplier1/SLICE_1658 ( 
    .M1(\AMDemodulator1/Multiplier1/rego_o_3 ), 
    .M0(\AMDemodulator1/Multiplier1/rego_o_2 ), .CLK(CIC1_out_clkSin), 
    .Q0(\AMDemodulator1/MultResult1_2 ), .Q1(\AMDemodulator1/MultResult1_3 ));
  AMDemodulator1_Multiplier2_SLICE_1659 
    \AMDemodulator1/Multiplier2/SLICE_1659 ( 
    .M1(\AMDemodulator1/Multiplier2/rego_o_1 ), 
    .M0(\AMDemodulator1/Multiplier2/rego_o_0 ), .CLK(CIC1_out_clkSin), 
    .Q0(\AMDemodulator1/MultResult2_0 ), .Q1(\AMDemodulator1/MultResult2_1 ));
  AMDemodulator1_Multiplier2_SLICE_1660 
    \AMDemodulator1/Multiplier2/SLICE_1660 ( 
    .M1(\AMDemodulator1/Multiplier2/rego_o_3 ), 
    .M0(\AMDemodulator1/Multiplier2/rego_o_2 ), .CLK(CIC1_out_clkSin), 
    .Q0(\AMDemodulator1/MultResult2_2 ), .Q1(\AMDemodulator1/MultResult2_3 ));
  AMDemodulator1_Multiplier1_SLICE_1661 
    \AMDemodulator1/Multiplier1/SLICE_1661 ( 
    .B0(\AMDemodulator1/Multiplier1/regb_b_4 ), 
    .A0(\AMDemodulator1/Multiplier1/regb_b_0 ), 
    .DI0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_2_4 ), 
    .CLK(CIC1_out_clkSin), 
    .F0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_2_4 ), 
    .Q0(\AMDemodulator1/Multiplier1/f_Multiplier_0_pp_2_4 ));
  AMDemodulator1_Multiplier1_SLICE_1662 
    \AMDemodulator1/Multiplier1/SLICE_1662 ( 
    .B0(\AMDemodulator1/Multiplier1/regb_b_8 ), 
    .A0(\AMDemodulator1/Multiplier1/regb_b_0 ), 
    .DI0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_4_8 ), 
    .CLK(CIC1_out_clkSin), 
    .F0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_4_8 ), 
    .Q0(\AMDemodulator1/Multiplier1/f_Multiplier_0_pp_4_8 ));
  AMDemodulator1_Multiplier1_SLICE_1663 
    \AMDemodulator1/Multiplier1/SLICE_1663 ( .M1(\AMDemodulator1/MultDataB_2 ), 
    .M0(\AMDemodulator1/MultDataB_1 ), .CLK(CIC1_out_clkSin), 
    .Q0(\AMDemodulator1/Multiplier1/rega_a_1 ), 
    .Q1(\AMDemodulator1/Multiplier1/rega_a_2 ));
  AMDemodulator1_Multiplier1_SLICE_1664 
    \AMDemodulator1/Multiplier1/SLICE_1664 ( .M1(\AMDemodulator1/MultDataB_4 ), 
    .M0(\AMDemodulator1/MultDataB_3 ), .CLK(CIC1_out_clkSin), 
    .Q0(\AMDemodulator1/Multiplier1/rega_a_3 ), 
    .Q1(\AMDemodulator1/Multiplier1/rega_a_4 ));
  AMDemodulator1_Multiplier1_SLICE_1665 
    \AMDemodulator1/Multiplier1/SLICE_1665 ( .M1(\AMDemodulator1/MultDataB_6 ), 
    .M0(\AMDemodulator1/MultDataB_5 ), .CLK(CIC1_out_clkSin), 
    .Q0(\AMDemodulator1/Multiplier1/rega_a_5 ), 
    .Q1(\AMDemodulator1/Multiplier1/rega_a_6 ));
  AMDemodulator1_Multiplier1_SLICE_1666 
    \AMDemodulator1/Multiplier1/SLICE_1666 ( .M1(\AMDemodulator1/MultDataB_8 ), 
    .M0(\AMDemodulator1/MultDataB_7 ), .CLK(CIC1_out_clkSin), 
    .Q0(\AMDemodulator1/Multiplier1/rega_a_7 ), 
    .Q1(\AMDemodulator1/Multiplier1/rega_a_8 ));
  AMDemodulator1_Multiplier1_SLICE_1667 
    \AMDemodulator1/Multiplier1/SLICE_1667 ( 
    .M1(\AMDemodulator1/MultDataB_10 ), .M0(\AMDemodulator1/MultDataB_9 ), 
    .CLK(CIC1_out_clkSin), .Q0(\AMDemodulator1/Multiplier1/rega_a_9 ), 
    .Q1(\AMDemodulator1/Multiplier1/rega_a_10 ));
  AMDemodulator1_Multiplier1_SLICE_1669 
    \AMDemodulator1/Multiplier1/SLICE_1669 ( .M1(\AMDemodulator1/MultDataB_1 ), 
    .M0(\AMDemodulator1/MultDataB_0 ), .CLK(CIC1_out_clkSin), 
    .Q0(\AMDemodulator1/Multiplier1/regb_b_0 ), 
    .Q1(\AMDemodulator1/Multiplier1/regb_b_1 ));
  AMDemodulator1_Multiplier1_SLICE_1670 
    \AMDemodulator1/Multiplier1/SLICE_1670 ( .M1(\AMDemodulator1/MultDataB_3 ), 
    .M0(\AMDemodulator1/MultDataB_2 ), .CLK(CIC1_out_clkSin), 
    .Q0(\AMDemodulator1/Multiplier1/regb_b_2 ), 
    .Q1(\AMDemodulator1/Multiplier1/regb_b_3 ));
  AMDemodulator1_Multiplier1_SLICE_1671 
    \AMDemodulator1/Multiplier1/SLICE_1671 ( .M1(\AMDemodulator1/MultDataB_5 ), 
    .M0(\AMDemodulator1/MultDataB_4 ), .CLK(CIC1_out_clkSin), 
    .Q0(\AMDemodulator1/Multiplier1/regb_b_4 ), 
    .Q1(\AMDemodulator1/Multiplier1/regb_b_5 ));
  AMDemodulator1_Multiplier1_SLICE_1672 
    \AMDemodulator1/Multiplier1/SLICE_1672 ( .M1(\AMDemodulator1/MultDataB_7 ), 
    .M0(\AMDemodulator1/MultDataB_6 ), .CLK(CIC1_out_clkSin), 
    .Q0(\AMDemodulator1/Multiplier1/regb_b_6 ), 
    .Q1(\AMDemodulator1/Multiplier1/regb_b_7 ));
  AMDemodulator1_Multiplier1_SLICE_1673 
    \AMDemodulator1/Multiplier1/SLICE_1673 ( .M1(\AMDemodulator1/MultDataB_9 ), 
    .M0(\AMDemodulator1/MultDataB_8 ), .CLK(CIC1_out_clkSin), 
    .Q0(\AMDemodulator1/Multiplier1/regb_b_8 ), 
    .Q1(\AMDemodulator1/Multiplier1/regb_b_9 ));
  AMDemodulator1_Multiplier1_SLICE_1674 
    \AMDemodulator1/Multiplier1/SLICE_1674 ( 
    .M1(\AMDemodulator1/MultDataB_11 ), .M0(\AMDemodulator1/MultDataB_10 ), 
    .CLK(CIC1_out_clkSin), .Q0(\AMDemodulator1/Multiplier1/regb_b_10 ), 
    .Q1(\AMDemodulator1/Multiplier1/regb_b_11 ));
  AMDemodulator1_Multiplier1_SLICE_1675 
    \AMDemodulator1/Multiplier1/SLICE_1675 ( 
    .M0(\AMDemodulator1/Multiplier1/regb_b_0 ), .CLK(CIC1_out_clkSin), 
    .Q0(\AMDemodulator1/Multiplier1/rego_o_0 ));
  AMDemodulator1_Multiplier2_SLICE_1676 
    \AMDemodulator1/Multiplier2/SLICE_1676 ( 
    .B0(\AMDemodulator1/Multiplier2/regb_b_4 ), 
    .A0(\AMDemodulator1/Multiplier2/regb_b_0 ), 
    .DI0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_2_4 ), 
    .CLK(CIC1_out_clkSin), 
    .F0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_2_4 ), 
    .Q0(\AMDemodulator1/Multiplier2/f_Multiplier_0_pp_2_4 ));
  AMDemodulator1_Multiplier2_SLICE_1677 
    \AMDemodulator1/Multiplier2/SLICE_1677 ( 
    .B0(\AMDemodulator1/Multiplier2/regb_b_8 ), 
    .A0(\AMDemodulator1/Multiplier2/regb_b_0 ), 
    .DI0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_4_8 ), 
    .CLK(CIC1_out_clkSin), 
    .F0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_4_8 ), 
    .Q0(\AMDemodulator1/Multiplier2/f_Multiplier_0_pp_4_8 ));
  AMDemodulator1_Multiplier2_SLICE_1678 
    \AMDemodulator1/Multiplier2/SLICE_1678 ( .M1(\AMDemodulator1/MultDataC_2 ), 
    .M0(\AMDemodulator1/MultDataC_1 ), .CLK(CIC1_out_clkSin), 
    .Q0(\AMDemodulator1/Multiplier2/rega_a_1 ), 
    .Q1(\AMDemodulator1/Multiplier2/rega_a_2 ));
  AMDemodulator1_Multiplier2_SLICE_1679 
    \AMDemodulator1/Multiplier2/SLICE_1679 ( .M1(\AMDemodulator1/MultDataC_4 ), 
    .M0(\AMDemodulator1/MultDataC_3 ), .CLK(CIC1_out_clkSin), 
    .Q0(\AMDemodulator1/Multiplier2/rega_a_3 ), 
    .Q1(\AMDemodulator1/Multiplier2/rega_a_4 ));
  AMDemodulator1_Multiplier2_SLICE_1680 
    \AMDemodulator1/Multiplier2/SLICE_1680 ( .M1(\AMDemodulator1/MultDataC_6 ), 
    .M0(\AMDemodulator1/MultDataC_5 ), .CLK(CIC1_out_clkSin), 
    .Q0(\AMDemodulator1/Multiplier2/rega_a_5 ), 
    .Q1(\AMDemodulator1/Multiplier2/rega_a_6 ));
  AMDemodulator1_Multiplier2_SLICE_1681 
    \AMDemodulator1/Multiplier2/SLICE_1681 ( .M1(\AMDemodulator1/MultDataC_8 ), 
    .M0(\AMDemodulator1/MultDataC_7 ), .CLK(CIC1_out_clkSin), 
    .Q0(\AMDemodulator1/Multiplier2/rega_a_7 ), 
    .Q1(\AMDemodulator1/Multiplier2/rega_a_8 ));
  AMDemodulator1_Multiplier2_SLICE_1682 
    \AMDemodulator1/Multiplier2/SLICE_1682 ( 
    .M1(\AMDemodulator1/MultDataC_10 ), .M0(\AMDemodulator1/MultDataC_9 ), 
    .CLK(CIC1_out_clkSin), .Q0(\AMDemodulator1/Multiplier2/rega_a_9 ), 
    .Q1(\AMDemodulator1/Multiplier2/rega_a_10 ));
  AMDemodulator1_Multiplier2_SLICE_1684 
    \AMDemodulator1/Multiplier2/SLICE_1684 ( .M1(\AMDemodulator1/MultDataC_1 ), 
    .M0(\AMDemodulator1/MultDataC_0 ), .CLK(CIC1_out_clkSin), 
    .Q0(\AMDemodulator1/Multiplier2/regb_b_0 ), 
    .Q1(\AMDemodulator1/Multiplier2/regb_b_1 ));
  AMDemodulator1_Multiplier2_SLICE_1685 
    \AMDemodulator1/Multiplier2/SLICE_1685 ( .M1(\AMDemodulator1/MultDataC_3 ), 
    .M0(\AMDemodulator1/MultDataC_2 ), .CLK(CIC1_out_clkSin), 
    .Q0(\AMDemodulator1/Multiplier2/regb_b_2 ), 
    .Q1(\AMDemodulator1/Multiplier2/regb_b_3 ));
  AMDemodulator1_Multiplier2_SLICE_1686 
    \AMDemodulator1/Multiplier2/SLICE_1686 ( .M1(\AMDemodulator1/MultDataC_5 ), 
    .M0(\AMDemodulator1/MultDataC_4 ), .CLK(CIC1_out_clkSin), 
    .Q0(\AMDemodulator1/Multiplier2/regb_b_4 ), 
    .Q1(\AMDemodulator1/Multiplier2/regb_b_5 ));
  AMDemodulator1_Multiplier2_SLICE_1687 
    \AMDemodulator1/Multiplier2/SLICE_1687 ( .M1(\AMDemodulator1/MultDataC_7 ), 
    .M0(\AMDemodulator1/MultDataC_6 ), .CLK(CIC1_out_clkSin), 
    .Q0(\AMDemodulator1/Multiplier2/regb_b_6 ), 
    .Q1(\AMDemodulator1/Multiplier2/regb_b_7 ));
  AMDemodulator1_Multiplier2_SLICE_1688 
    \AMDemodulator1/Multiplier2/SLICE_1688 ( .M1(\AMDemodulator1/MultDataC_9 ), 
    .M0(\AMDemodulator1/MultDataC_8 ), .CLK(CIC1_out_clkSin), 
    .Q0(\AMDemodulator1/Multiplier2/regb_b_8 ), 
    .Q1(\AMDemodulator1/Multiplier2/regb_b_9 ));
  AMDemodulator1_Multiplier2_SLICE_1689 
    \AMDemodulator1/Multiplier2/SLICE_1689 ( 
    .M1(\AMDemodulator1/MultDataC_11 ), .M0(\AMDemodulator1/MultDataC_10 ), 
    .CLK(CIC1_out_clkSin), .Q0(\AMDemodulator1/Multiplier2/regb_b_10 ), 
    .Q1(\AMDemodulator1/Multiplier2/regb_b_11 ));
  AMDemodulator1_Multiplier2_SLICE_1690 
    \AMDemodulator1/Multiplier2/SLICE_1690 ( 
    .M0(\AMDemodulator1/Multiplier2/regb_b_0 ), .CLK(CIC1_out_clkSin), 
    .Q0(\AMDemodulator1/Multiplier2/rego_o_0 ));
  AMDemodulator1_SLICE_1691 \AMDemodulator1/SLICE_1691 ( 
    .A1(\AMDemodulator1/d_out_d_11_N_1892_17 ), 
    .C0(\AMDemodulator1/d_out_d_11_N_1892_17 ), 
    .B0(\AMDemodulator1/d_out_d_11_N_2353_17 ), 
    .A0(\AMDemodulator1/d_out_d_11_N_2335_17 ), 
    .DI1(\AMDemodulator1/d_out_d_11__N_1891 ), 
    .DI0(\AMDemodulator1/d_out_d_11_N_1894_17 ), .CLK(CIC1_out_clkSin), 
    .F0(\AMDemodulator1/d_out_d_11_N_1894_17 ), 
    .Q0(\AMDemodulator1/d_out_d_0 ), .F1(\AMDemodulator1/d_out_d_11__N_1891 ), 
    .Q1(\AMDemodulator1/d_out_d_1 ));
  AMDemodulator1_SLICE_1692 \AMDemodulator1/SLICE_1692 ( 
    .A1(\AMDemodulator1/d_out_d_11_N_1888_17 ), 
    .A0(\AMDemodulator1/d_out_d_11_N_1890_17 ), 
    .DI1(\AMDemodulator1/d_out_d_11__N_1887 ), 
    .DI0(\AMDemodulator1/d_out_d_11__N_1889 ), .CLK(CIC1_out_clkSin), 
    .F0(\AMDemodulator1/d_out_d_11__N_1889 ), .Q0(\AMDemodulator1/d_out_d_2 ), 
    .F1(\AMDemodulator1/d_out_d_11__N_1887 ), .Q1(\AMDemodulator1/d_out_d_3 ));
  AMDemodulator1_SLICE_1693 \AMDemodulator1/SLICE_1693 ( 
    .A1(\AMDemodulator1/d_out_d_11_N_1884_17 ), 
    .A0(\AMDemodulator1/d_out_d_11_N_1886_17 ), 
    .DI1(\AMDemodulator1/d_out_d_11__N_1883 ), 
    .DI0(\AMDemodulator1/d_out_d_11__N_1885 ), .CLK(CIC1_out_clkSin), 
    .F0(\AMDemodulator1/d_out_d_11__N_1885 ), .Q0(\AMDemodulator1/d_out_d_4 ), 
    .F1(\AMDemodulator1/d_out_d_11__N_1883 ), .Q1(\AMDemodulator1/d_out_d_5 ));
  AMDemodulator1_SLICE_1694 \AMDemodulator1/SLICE_1694 ( 
    .A1(\AMDemodulator1/d_out_d_11_N_1880_17 ), 
    .A0(\AMDemodulator1/d_out_d_11_N_1882_17 ), 
    .DI1(\AMDemodulator1/d_out_d_11__N_1879 ), 
    .DI0(\AMDemodulator1/d_out_d_11__N_1881 ), .CLK(CIC1_out_clkSin), 
    .F0(\AMDemodulator1/d_out_d_11__N_1881 ), .Q0(\AMDemodulator1/d_out_d_6 ), 
    .F1(\AMDemodulator1/d_out_d_11__N_1879 ), .Q1(\AMDemodulator1/d_out_d_7 ));
  AMDemodulator1_SLICE_1695 \AMDemodulator1/SLICE_1695 ( 
    .A1(\AMDemodulator1/d_out_d_11_N_1876_17 ), 
    .A0(\AMDemodulator1/d_out_d_11_N_1878_17 ), 
    .DI1(\AMDemodulator1/d_out_d_11__N_1875 ), 
    .DI0(\AMDemodulator1/d_out_d_11__N_1877 ), .CLK(CIC1_out_clkSin), 
    .F0(\AMDemodulator1/d_out_d_11__N_1877 ), .Q0(\AMDemodulator1/d_out_d_8 ), 
    .F1(\AMDemodulator1/d_out_d_11__N_1875 ), .Q1(\AMDemodulator1/d_out_d_9 ));
  CIC1Cos_SLICE_1696 \CIC1Cos/SLICE_1696 ( .D1(\CIC1Cos/count_8 ), 
    .C1(\CIC1Cos/count_2 ), .B1(\CIC1Cos/count_1 ), .A1(\CIC1Cos/count_0 ), 
    .B0(\CIC1Cos/n31 ), .A0(\CIC1Cos/n391 ), .DI0(\CIC1Cos/count_15_N_1442_0 ), 
    .LSR(\CIC1Cos/osc_clk_enable_757 ), .CLK(osc_clk), 
    .F0(\CIC1Cos/count_15_N_1442_0 ), .Q0(\CIC1Cos/count_0 ), 
    .F1(\CIC1Cos/n12788 ));
  CIC1Cos_SLICE_1697 \CIC1Cos/SLICE_1697 ( .D1(\CIC1Cos/n6 ), 
    .C1(\CIC1Cos/n12503 ), .B1(\CIC1Cos/count_2 ), .A1(\CIC1Cos/count_6 ), 
    .B0(\CIC1Cos/n31 ), .A0(\CIC1Cos/n380 ), 
    .DI0(\CIC1Cos/count_15_N_1442_11 ), .LSR(\CIC1Cos/count_15__N_1458 ), 
    .CLK(osc_clk), .F0(\CIC1Cos/count_15_N_1442_11 ), .Q0(\CIC1Cos/count_11 ), 
    .F1(\CIC1Cos/n31 ));
  CIC1Cos_SLICE_1698 \CIC1Cos/SLICE_1698 ( .C0(\CIC1Cos/n6728 ), 
    .B0(\CIC1Cos/n6782 ), .A0(\CIC1Cos/n6744 ), 
    .DI0(\CIC1Cos/d10_71_N_1747_57 ), .CE(\CIC1Cos/osc_clk_enable_1397 ), 
    .CLK(osc_clk), .F0(\CIC1Cos/d10_71_N_1747_57 ), .Q0(\CIC1Cos/d10_57 ));
  CIC1Cos_SLICE_1699 \CIC1Cos/SLICE_1699 ( .C0(\CIC1Cos/n6728 ), 
    .B0(\CIC1Cos/n6781 ), .A0(\CIC1Cos/n6743 ), 
    .DI0(\CIC1Cos/d10_71_N_1747_58 ), .CE(\CIC1Cos/v_comb ), .CLK(osc_clk), 
    .F0(\CIC1Cos/d10_71_N_1747_58 ), .Q0(\CIC1Cos/d10_58 ));
  CIC1Cos_SLICE_1700 \CIC1Cos/SLICE_1700 ( .B0(\CIC1Cos/d1_0 ), 
    .A0(MixerOutCos_0), .DI0(\CIC1Cos/d1_71_N_418_0 ), .CLK(osc_clk), 
    .F0(\CIC1Cos/d1_71_N_418_0 ), .Q0(\CIC1Cos/d1_0 ));
  CIC1Cos_SLICE_1701 \CIC1Cos/SLICE_1701 ( .B0(\CIC1Cos/d2_0 ), 
    .A0(\CIC1Cos/d1_0 ), .DI0(\CIC1Cos/d2_71_N_490_0 ), .CLK(osc_clk), 
    .F0(\CIC1Cos/d2_71_N_490_0 ), .Q0(\CIC1Cos/d2_0 ));
  CIC1Cos_SLICE_1702 \CIC1Cos/SLICE_1702 ( .B0(\CIC1Cos/d3_0 ), 
    .A0(\CIC1Cos/d2_0 ), .DI0(\CIC1Cos/d3_71_N_562_0 ), .CLK(osc_clk), 
    .F0(\CIC1Cos/d3_71_N_562_0 ), .Q0(\CIC1Cos/d3_0 ));
  CIC1Cos_SLICE_1703 \CIC1Cos/SLICE_1703 ( .B0(\CIC1Cos/d4_0 ), 
    .A0(\CIC1Cos/d3_0 ), .DI0(\CIC1Cos/d4_71_N_634_0 ), .CLK(osc_clk), 
    .F0(\CIC1Cos/d4_71_N_634_0 ), .Q0(\CIC1Cos/d4_0 ));
  CIC1Cos_SLICE_1704 \CIC1Cos/SLICE_1704 ( .B0(\CIC1Cos/d5_0 ), 
    .A0(\CIC1Cos/d4_0 ), .DI0(\CIC1Cos/d5_71_N_706_0 ), .CLK(osc_clk), 
    .F0(\CIC1Cos/d5_71_N_706_0 ), .Q0(\CIC1Cos/d5_0 ));
  CIC1Cos_SLICE_1705 \CIC1Cos/SLICE_1705 ( .M0(\CIC1Cos/d6_71_N_1459_20 ), 
    .CE(\CIC1Cos/osc_clk_enable_897 ), .CLK(osc_clk), .Q0(\CIC1Cos/d6_20 ));
  CIC1Cos_SLICE_1706 \CIC1Cos/SLICE_1706 ( .M0(\CIC1Cos/d7_71_N_1531_28 ), 
    .CE(\CIC1Cos/osc_clk_enable_1047 ), .CLK(osc_clk), .Q0(\CIC1Cos/d7_28 ));
  CIC1Cos_SLICE_1707 \CIC1Cos/SLICE_1707 ( .M0(\CIC1Cos/d6_0 ), 
    .CE(\CIC1Cos/osc_clk_enable_797 ), .CLK(osc_clk), .Q0(\CIC1Cos/d_d6_0 ));
  CIC1Cos_SLICE_1708 \CIC1Cos/SLICE_1708 ( .M1(\CIC1Cos/d6_2 ), 
    .M0(\CIC1Cos/d6_1 ), .CE(\CIC1Cos/osc_clk_enable_947 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d6_1 ), .Q1(\CIC1Cos/d_d6_2 ));
  CIC1Cos_SLICE_1709 \CIC1Cos/SLICE_1709 ( .M1(\CIC1Cos/d6_4 ), 
    .M0(\CIC1Cos/d6_3 ), .CE(\CIC1Cos/osc_clk_enable_947 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d6_3 ), .Q1(\CIC1Cos/d_d6_4 ));
  CIC1Cos_SLICE_1710 \CIC1Cos/SLICE_1710 ( .M1(\CIC1Cos/d6_6 ), 
    .M0(\CIC1Cos/d6_5 ), .CE(\CIC1Cos/osc_clk_enable_947 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d6_5 ), .Q1(\CIC1Cos/d_d6_6 ));
  CIC1Cos_SLICE_1711 \CIC1Cos/SLICE_1711 ( .M1(\CIC1Cos/d6_8 ), 
    .M0(\CIC1Cos/d6_7 ), .CE(\CIC1Cos/osc_clk_enable_947 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d6_7 ), .Q1(\CIC1Cos/d_d6_8 ));
  CIC1Cos_SLICE_1712 \CIC1Cos/SLICE_1712 ( .M1(\CIC1Cos/d6_10 ), 
    .M0(\CIC1Cos/d6_9 ), .CE(\CIC1Cos/osc_clk_enable_947 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d6_9 ), .Q1(\CIC1Cos/d_d6_10 ));
  CIC1Cos_SLICE_1713 \CIC1Cos/SLICE_1713 ( .M1(\CIC1Cos/d6_12 ), 
    .M0(\CIC1Cos/d6_11 ), .CE(\CIC1Cos/osc_clk_enable_947 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d6_11 ), .Q1(\CIC1Cos/d_d6_12 ));
  CIC1Cos_SLICE_1714 \CIC1Cos/SLICE_1714 ( .M1(\CIC1Cos/d6_14 ), 
    .M0(\CIC1Cos/d6_13 ), .CE(\CIC1Cos/osc_clk_enable_947 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d6_13 ), .Q1(\CIC1Cos/d_d6_14 ));
  CIC1Cos_SLICE_1715 \CIC1Cos/SLICE_1715 ( .M1(\CIC1Cos/d6_16 ), 
    .M0(\CIC1Cos/d6_15 ), .CE(\CIC1Cos/osc_clk_enable_947 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d6_15 ), .Q1(\CIC1Cos/d_d6_16 ));
  CIC1Cos_SLICE_1716 \CIC1Cos/SLICE_1716 ( .M1(\CIC1Cos/d6_18 ), 
    .M0(\CIC1Cos/d6_17 ), .CE(\CIC1Cos/osc_clk_enable_947 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d6_17 ), .Q1(\CIC1Cos/d_d6_18 ));
  CIC1Cos_SLICE_1717 \CIC1Cos/SLICE_1717 ( .M1(\CIC1Cos/d6_20 ), 
    .M0(\CIC1Cos/d6_19 ), .CE(\CIC1Cos/osc_clk_enable_947 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d6_19 ), .Q1(\CIC1Cos/d_d6_20 ));
  CIC1Cos_SLICE_1718 \CIC1Cos/SLICE_1718 ( .M1(\CIC1Cos/d6_22 ), 
    .M0(\CIC1Cos/d6_21 ), .CE(\CIC1Cos/osc_clk_enable_947 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d6_21 ), .Q1(\CIC1Cos/d_d6_22 ));
  CIC1Cos_SLICE_1719 \CIC1Cos/SLICE_1719 ( .M1(\CIC1Cos/d6_24 ), 
    .M0(\CIC1Cos/d6_23 ), .CE(\CIC1Cos/osc_clk_enable_947 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d6_23 ), .Q1(\CIC1Cos/d_d6_24 ));
  CIC1Cos_SLICE_1720 \CIC1Cos/SLICE_1720 ( .M1(\CIC1Cos/d6_26 ), 
    .M0(\CIC1Cos/d6_25 ), .CE(\CIC1Cos/osc_clk_enable_947 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d6_25 ), .Q1(\CIC1Cos/d_d6_26 ));
  CIC1Cos_SLICE_1721 \CIC1Cos/SLICE_1721 ( .M1(\CIC1Cos/d6_28 ), 
    .M0(\CIC1Cos/d6_27 ), .CE(\CIC1Cos/osc_clk_enable_947 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d6_27 ), .Q1(\CIC1Cos/d_d6_28 ));
  CIC1Cos_SLICE_1722 \CIC1Cos/SLICE_1722 ( .M1(\CIC1Cos/d6_30 ), 
    .M0(\CIC1Cos/d6_29 ), .CE(\CIC1Cos/osc_clk_enable_947 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d6_29 ), .Q1(\CIC1Cos/d_d6_30 ));
  CIC1Cos_SLICE_1723 \CIC1Cos/SLICE_1723 ( .M1(\CIC1Cos/d6_32 ), 
    .M0(\CIC1Cos/d6_31 ), .CE(\CIC1Cos/osc_clk_enable_947 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d6_31 ), .Q1(\CIC1Cos/d_d6_32 ));
  CIC1Cos_SLICE_1724 \CIC1Cos/SLICE_1724 ( .M1(\CIC1Cos/d6_34 ), 
    .M0(\CIC1Cos/d6_33 ), .CE(\CIC1Cos/osc_clk_enable_947 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d6_33 ), .Q1(\CIC1Cos/d_d6_34 ));
  CIC1Cos_SLICE_1725 \CIC1Cos/SLICE_1725 ( .M1(\CIC1Cos/d6_36 ), 
    .M0(\CIC1Cos/d6_35 ), .CE(\CIC1Cos/osc_clk_enable_947 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d6_35 ), .Q1(\CIC1Cos/d_d6_36 ));
  CIC1Cos_SLICE_1726 \CIC1Cos/SLICE_1726 ( .M1(\CIC1Cos/d6_38 ), 
    .M0(\CIC1Cos/d6_37 ), .CE(\CIC1Cos/osc_clk_enable_947 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d6_37 ), .Q1(\CIC1Cos/d_d6_38 ));
  CIC1Cos_SLICE_1727 \CIC1Cos/SLICE_1727 ( .M1(\CIC1Cos/d6_40 ), 
    .M0(\CIC1Cos/d6_39 ), .CE(\CIC1Cos/osc_clk_enable_947 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d6_39 ), .Q1(\CIC1Cos/d_d6_40 ));
  CIC1Cos_SLICE_1728 \CIC1Cos/SLICE_1728 ( .M1(\CIC1Cos/d6_42 ), 
    .M0(\CIC1Cos/d6_41 ), .CE(\CIC1Cos/osc_clk_enable_947 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d6_41 ), .Q1(\CIC1Cos/d_d6_42 ));
  CIC1Cos_SLICE_1729 \CIC1Cos/SLICE_1729 ( .M1(\CIC1Cos/d6_44 ), 
    .M0(\CIC1Cos/d6_43 ), .CE(\CIC1Cos/osc_clk_enable_947 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d6_43 ), .Q1(\CIC1Cos/d_d6_44 ));
  CIC1Cos_SLICE_1730 \CIC1Cos/SLICE_1730 ( .M1(\CIC1Cos/d6_46 ), 
    .M0(\CIC1Cos/d6_45 ), .CE(\CIC1Cos/osc_clk_enable_947 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d6_45 ), .Q1(\CIC1Cos/d_d6_46 ));
  CIC1Cos_SLICE_1731 \CIC1Cos/SLICE_1731 ( .M1(\CIC1Cos/d6_48 ), 
    .M0(\CIC1Cos/d6_47 ), .CE(\CIC1Cos/osc_clk_enable_947 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d6_47 ), .Q1(\CIC1Cos/d_d6_48 ));
  CIC1Cos_SLICE_1732 \CIC1Cos/SLICE_1732 ( .M1(\CIC1Cos/d6_50 ), 
    .M0(\CIC1Cos/d6_49 ), .CE(\CIC1Cos/osc_clk_enable_997 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d6_49 ), .Q1(\CIC1Cos/d_d6_50 ));
  CIC1Cos_SLICE_1733 \CIC1Cos/SLICE_1733 ( .M1(\CIC1Cos/d6_52 ), 
    .M0(\CIC1Cos/d6_51 ), .CE(\CIC1Cos/osc_clk_enable_997 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d6_51 ), .Q1(\CIC1Cos/d_d6_52 ));
  CIC1Cos_SLICE_1734 \CIC1Cos/SLICE_1734 ( .M1(\CIC1Cos/d6_54 ), 
    .M0(\CIC1Cos/d6_53 ), .CE(\CIC1Cos/osc_clk_enable_997 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d6_53 ), .Q1(\CIC1Cos/d_d6_54 ));
  CIC1Cos_SLICE_1735 \CIC1Cos/SLICE_1735 ( .M1(\CIC1Cos/d6_56 ), 
    .M0(\CIC1Cos/d6_55 ), .CE(\CIC1Cos/osc_clk_enable_997 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d6_55 ), .Q1(\CIC1Cos/d_d6_56 ));
  CIC1Cos_SLICE_1736 \CIC1Cos/SLICE_1736 ( .M1(\CIC1Cos/d6_58 ), 
    .M0(\CIC1Cos/d6_57 ), .CE(\CIC1Cos/osc_clk_enable_997 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d6_57 ), .Q1(\CIC1Cos/d_d6_58 ));
  CIC1Cos_SLICE_1737 \CIC1Cos/SLICE_1737 ( .M1(\CIC1Cos/d6_60 ), 
    .M0(\CIC1Cos/d6_59 ), .CE(\CIC1Cos/osc_clk_enable_997 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d6_59 ), .Q1(\CIC1Cos/d_d6_60 ));
  CIC1Cos_SLICE_1738 \CIC1Cos/SLICE_1738 ( .M1(\CIC1Cos/d6_62 ), 
    .M0(\CIC1Cos/d6_61 ), .CE(\CIC1Cos/osc_clk_enable_997 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d6_61 ), .Q1(\CIC1Cos/d_d6_62 ));
  CIC1Cos_SLICE_1739 \CIC1Cos/SLICE_1739 ( .M1(\CIC1Cos/d6_64 ), 
    .M0(\CIC1Cos/d6_63 ), .CE(\CIC1Cos/osc_clk_enable_997 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d6_63 ), .Q1(\CIC1Cos/d_d6_64 ));
  CIC1Cos_SLICE_1740 \CIC1Cos/SLICE_1740 ( .M1(\CIC1Cos/d6_66 ), 
    .M0(\CIC1Cos/d6_65 ), .CE(\CIC1Cos/osc_clk_enable_997 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d6_65 ), .Q1(\CIC1Cos/d_d6_66 ));
  CIC1Cos_SLICE_1741 \CIC1Cos/SLICE_1741 ( .M1(\CIC1Cos/d6_68 ), 
    .M0(\CIC1Cos/d6_67 ), .CE(\CIC1Cos/osc_clk_enable_997 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d6_67 ), .Q1(\CIC1Cos/d_d6_68 ));
  CIC1Cos_SLICE_1742 \CIC1Cos/SLICE_1742 ( .M1(\CIC1Cos/d6_70 ), 
    .M0(\CIC1Cos/d6_69 ), .CE(\CIC1Cos/osc_clk_enable_997 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d6_69 ), .Q1(\CIC1Cos/d_d6_70 ));
  CIC1Cos_SLICE_1743 \CIC1Cos/SLICE_1743 ( .M0(\CIC1Cos/d6_71 ), 
    .CE(\CIC1Cos/osc_clk_enable_997 ), .CLK(osc_clk), .Q0(\CIC1Cos/d_d6_71 ));
  CIC1Cos_SLICE_1744 \CIC1Cos/SLICE_1744 ( .M0(\CIC1Cos/d7_0 ), 
    .CE(\CIC1Cos/osc_clk_enable_797 ), .CLK(osc_clk), .Q0(\CIC1Cos/d_d7_0 ));
  CIC1Cos_SLICE_1745 \CIC1Cos/SLICE_1745 ( .M1(\CIC1Cos/d7_2 ), 
    .M0(\CIC1Cos/d7_1 ), .CE(\CIC1Cos/osc_clk_enable_1047 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d7_1 ), .Q1(\CIC1Cos/d_d7_2 ));
  CIC1Cos_SLICE_1746 \CIC1Cos/SLICE_1746 ( .M1(\CIC1Cos/d7_4 ), 
    .M0(\CIC1Cos/d7_3 ), .CE(\CIC1Cos/osc_clk_enable_1047 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d7_3 ), .Q1(\CIC1Cos/d_d7_4 ));
  CIC1Cos_SLICE_1747 \CIC1Cos/SLICE_1747 ( .M1(\CIC1Cos/d7_6 ), 
    .M0(\CIC1Cos/d7_5 ), .CE(\CIC1Cos/osc_clk_enable_1047 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d7_5 ), .Q1(\CIC1Cos/d_d7_6 ));
  CIC1Cos_SLICE_1748 \CIC1Cos/SLICE_1748 ( .M1(\CIC1Cos/d7_8 ), 
    .M0(\CIC1Cos/d7_7 ), .CE(\CIC1Cos/osc_clk_enable_1097 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d7_7 ), .Q1(\CIC1Cos/d_d7_8 ));
  CIC1Cos_SLICE_1749 \CIC1Cos/SLICE_1749 ( .M1(\CIC1Cos/d7_10 ), 
    .M0(\CIC1Cos/d7_9 ), .CE(\CIC1Cos/osc_clk_enable_1097 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d7_9 ), .Q1(\CIC1Cos/d_d7_10 ));
  CIC1Cos_SLICE_1750 \CIC1Cos/SLICE_1750 ( .M1(\CIC1Cos/d7_12 ), 
    .M0(\CIC1Cos/d7_11 ), .CE(\CIC1Cos/osc_clk_enable_1097 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d7_11 ), .Q1(\CIC1Cos/d_d7_12 ));
  CIC1Cos_SLICE_1751 \CIC1Cos/SLICE_1751 ( .M1(\CIC1Cos/d7_14 ), 
    .M0(\CIC1Cos/d7_13 ), .CE(\CIC1Cos/osc_clk_enable_1097 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d7_13 ), .Q1(\CIC1Cos/d_d7_14 ));
  CIC1Cos_SLICE_1752 \CIC1Cos/SLICE_1752 ( .M1(\CIC1Cos/d7_16 ), 
    .M0(\CIC1Cos/d7_15 ), .CE(\CIC1Cos/osc_clk_enable_1097 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d7_15 ), .Q1(\CIC1Cos/d_d7_16 ));
  CIC1Cos_SLICE_1753 \CIC1Cos/SLICE_1753 ( .M1(\CIC1Cos/d7_18 ), 
    .M0(\CIC1Cos/d7_17 ), .CE(\CIC1Cos/osc_clk_enable_1097 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d7_17 ), .Q1(\CIC1Cos/d_d7_18 ));
  CIC1Cos_SLICE_1754 \CIC1Cos/SLICE_1754 ( .M1(\CIC1Cos/d7_20 ), 
    .M0(\CIC1Cos/d7_19 ), .CE(\CIC1Cos/osc_clk_enable_1097 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d7_19 ), .Q1(\CIC1Cos/d_d7_20 ));
  CIC1Cos_SLICE_1755 \CIC1Cos/SLICE_1755 ( .M1(\CIC1Cos/d7_22 ), 
    .M0(\CIC1Cos/d7_21 ), .CE(\CIC1Cos/osc_clk_enable_1097 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d7_21 ), .Q1(\CIC1Cos/d_d7_22 ));
  CIC1Cos_SLICE_1756 \CIC1Cos/SLICE_1756 ( .M1(\CIC1Cos/d7_24 ), 
    .M0(\CIC1Cos/d7_23 ), .CE(\CIC1Cos/osc_clk_enable_1097 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d7_23 ), .Q1(\CIC1Cos/d_d7_24 ));
  CIC1Cos_SLICE_1757 \CIC1Cos/SLICE_1757 ( .M1(\CIC1Cos/d7_26 ), 
    .M0(\CIC1Cos/d7_25 ), .CE(\CIC1Cos/osc_clk_enable_1097 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d7_25 ), .Q1(\CIC1Cos/d_d7_26 ));
  CIC1Cos_SLICE_1758 \CIC1Cos/SLICE_1758 ( .M1(\CIC1Cos/d7_28 ), 
    .M0(\CIC1Cos/d7_27 ), .CE(\CIC1Cos/osc_clk_enable_1097 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d7_27 ), .Q1(\CIC1Cos/d_d7_28 ));
  CIC1Cos_SLICE_1759 \CIC1Cos/SLICE_1759 ( .M1(\CIC1Cos/d7_30 ), 
    .M0(\CIC1Cos/d7_29 ), .CE(\CIC1Cos/osc_clk_enable_1097 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d7_29 ), .Q1(\CIC1Cos/d_d7_30 ));
  CIC1Cos_SLICE_1760 \CIC1Cos/SLICE_1760 ( .M1(\CIC1Cos/d7_32 ), 
    .M0(\CIC1Cos/d7_31 ), .CE(\CIC1Cos/osc_clk_enable_1097 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d7_31 ), .Q1(\CIC1Cos/d_d7_32 ));
  CIC1Cos_SLICE_1761 \CIC1Cos/SLICE_1761 ( .M1(\CIC1Cos/d7_34 ), 
    .M0(\CIC1Cos/d7_33 ), .CE(\CIC1Cos/osc_clk_enable_1097 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d7_33 ), .Q1(\CIC1Cos/d_d7_34 ));
  CIC1Cos_SLICE_1762 \CIC1Cos/SLICE_1762 ( .M1(\CIC1Cos/d7_36 ), 
    .M0(\CIC1Cos/d7_35 ), .CE(\CIC1Cos/osc_clk_enable_1097 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d7_35 ), .Q1(\CIC1Cos/d_d7_36 ));
  CIC1Cos_SLICE_1763 \CIC1Cos/SLICE_1763 ( .M1(\CIC1Cos/d7_38 ), 
    .M0(\CIC1Cos/d7_37 ), .CE(\CIC1Cos/osc_clk_enable_1097 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d7_37 ), .Q1(\CIC1Cos/d_d7_38 ));
  CIC1Cos_SLICE_1764 \CIC1Cos/SLICE_1764 ( .M1(\CIC1Cos/d7_40 ), 
    .M0(\CIC1Cos/d7_39 ), .CE(\CIC1Cos/osc_clk_enable_1097 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d7_39 ), .Q1(\CIC1Cos/d_d7_40 ));
  CIC1Cos_SLICE_1765 \CIC1Cos/SLICE_1765 ( .M1(\CIC1Cos/d7_42 ), 
    .M0(\CIC1Cos/d7_41 ), .CE(\CIC1Cos/osc_clk_enable_1097 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d7_41 ), .Q1(\CIC1Cos/d_d7_42 ));
  CIC1Cos_SLICE_1766 \CIC1Cos/SLICE_1766 ( .M1(\CIC1Cos/d7_44 ), 
    .M0(\CIC1Cos/d7_43 ), .CE(\CIC1Cos/osc_clk_enable_1097 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d7_43 ), .Q1(\CIC1Cos/d_d7_44 ));
  CIC1Cos_SLICE_1767 \CIC1Cos/SLICE_1767 ( .M1(\CIC1Cos/d7_46 ), 
    .M0(\CIC1Cos/d7_45 ), .CE(\CIC1Cos/osc_clk_enable_1097 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d7_45 ), .Q1(\CIC1Cos/d_d7_46 ));
  CIC1Cos_SLICE_1768 \CIC1Cos/SLICE_1768 ( .M1(\CIC1Cos/d7_48 ), 
    .M0(\CIC1Cos/d7_47 ), .CE(\CIC1Cos/osc_clk_enable_1097 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d7_47 ), .Q1(\CIC1Cos/d_d7_48 ));
  CIC1Cos_SLICE_1769 \CIC1Cos/SLICE_1769 ( .M1(\CIC1Cos/d7_50 ), 
    .M0(\CIC1Cos/d7_49 ), .CE(\CIC1Cos/osc_clk_enable_1097 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d7_49 ), .Q1(\CIC1Cos/d_d7_50 ));
  CIC1Cos_SLICE_1770 \CIC1Cos/SLICE_1770 ( .M1(\CIC1Cos/d7_52 ), 
    .M0(\CIC1Cos/d7_51 ), .CE(\CIC1Cos/osc_clk_enable_1097 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d7_51 ), .Q1(\CIC1Cos/d_d7_52 ));
  CIC1Cos_SLICE_1771 \CIC1Cos/SLICE_1771 ( .M1(\CIC1Cos/d7_54 ), 
    .M0(\CIC1Cos/d7_53 ), .CE(\CIC1Cos/osc_clk_enable_1097 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d7_53 ), .Q1(\CIC1Cos/d_d7_54 ));
  CIC1Cos_SLICE_1772 \CIC1Cos/SLICE_1772 ( .M1(\CIC1Cos/d7_56 ), 
    .M0(\CIC1Cos/d7_55 ), .CE(\CIC1Cos/osc_clk_enable_1097 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d7_55 ), .Q1(\CIC1Cos/d_d7_56 ));
  CIC1Cos_SLICE_1773 \CIC1Cos/SLICE_1773 ( .M1(\CIC1Cos/d7_58 ), 
    .M0(\CIC1Cos/d7_57 ), .CE(\CIC1Cos/osc_clk_enable_1147 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d7_57 ), .Q1(\CIC1Cos/d_d7_58 ));
  CIC1Cos_SLICE_1774 \CIC1Cos/SLICE_1774 ( .M1(\CIC1Cos/d7_60 ), 
    .M0(\CIC1Cos/d7_59 ), .CE(\CIC1Cos/osc_clk_enable_1147 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d7_59 ), .Q1(\CIC1Cos/d_d7_60 ));
  CIC1Cos_SLICE_1775 \CIC1Cos/SLICE_1775 ( .M1(\CIC1Cos/d7_62 ), 
    .M0(\CIC1Cos/d7_61 ), .CE(\CIC1Cos/osc_clk_enable_1147 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d7_61 ), .Q1(\CIC1Cos/d_d7_62 ));
  CIC1Cos_SLICE_1776 \CIC1Cos/SLICE_1776 ( .M1(\CIC1Cos/d7_64 ), 
    .M0(\CIC1Cos/d7_63 ), .CE(\CIC1Cos/osc_clk_enable_1147 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d7_63 ), .Q1(\CIC1Cos/d_d7_64 ));
  CIC1Cos_SLICE_1777 \CIC1Cos/SLICE_1777 ( .M1(\CIC1Cos/d7_66 ), 
    .M0(\CIC1Cos/d7_65 ), .CE(\CIC1Cos/osc_clk_enable_1147 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d7_65 ), .Q1(\CIC1Cos/d_d7_66 ));
  CIC1Cos_SLICE_1778 \CIC1Cos/SLICE_1778 ( .M1(\CIC1Cos/d7_68 ), 
    .M0(\CIC1Cos/d7_67 ), .CE(\CIC1Cos/osc_clk_enable_1147 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d7_67 ), .Q1(\CIC1Cos/d_d7_68 ));
  CIC1Cos_SLICE_1779 \CIC1Cos/SLICE_1779 ( .M1(\CIC1Cos/d7_70 ), 
    .M0(\CIC1Cos/d7_69 ), .CE(\CIC1Cos/osc_clk_enable_1147 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d7_69 ), .Q1(\CIC1Cos/d_d7_70 ));
  CIC1Cos_SLICE_1780 \CIC1Cos/SLICE_1780 ( .M0(\CIC1Cos/d7_71 ), 
    .CE(\CIC1Cos/osc_clk_enable_1147 ), .CLK(osc_clk), .Q0(\CIC1Cos/d_d7_71 ));
  CIC1Cos_SLICE_1781 \CIC1Cos/SLICE_1781 ( .M0(\CIC1Cos/d8_0 ), 
    .CE(\CIC1Cos/osc_clk_enable_797 ), .CLK(osc_clk), .Q0(\CIC1Cos/d_d8_0 ));
  CIC1Cos_SLICE_1782 \CIC1Cos/SLICE_1782 ( .M1(\CIC1Cos/d8_2 ), 
    .M0(\CIC1Cos/d8_1 ), .CE(\CIC1Cos/osc_clk_enable_1197 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d8_1 ), .Q1(\CIC1Cos/d_d8_2 ));
  CIC1Cos_SLICE_1783 \CIC1Cos/SLICE_1783 ( .M1(\CIC1Cos/d8_4 ), 
    .M0(\CIC1Cos/d8_3 ), .CE(\CIC1Cos/osc_clk_enable_1197 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d8_3 ), .Q1(\CIC1Cos/d_d8_4 ));
  CIC1Cos_SLICE_1784 \CIC1Cos/SLICE_1784 ( .M1(\CIC1Cos/d8_6 ), 
    .M0(\CIC1Cos/d8_5 ), .CE(\CIC1Cos/osc_clk_enable_1197 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d8_5 ), .Q1(\CIC1Cos/d_d8_6 ));
  CIC1Cos_SLICE_1785 \CIC1Cos/SLICE_1785 ( .M1(\CIC1Cos/d8_8 ), 
    .M0(\CIC1Cos/d8_7 ), .CE(\CIC1Cos/osc_clk_enable_1197 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d8_7 ), .Q1(\CIC1Cos/d_d8_8 ));
  CIC1Cos_SLICE_1786 \CIC1Cos/SLICE_1786 ( .M1(\CIC1Cos/d8_10 ), 
    .M0(\CIC1Cos/d8_9 ), .CE(\CIC1Cos/osc_clk_enable_1197 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d8_9 ), .Q1(\CIC1Cos/d_d8_10 ));
  CIC1Cos_SLICE_1787 \CIC1Cos/SLICE_1787 ( .M1(\CIC1Cos/d8_12 ), 
    .M0(\CIC1Cos/d8_11 ), .CE(\CIC1Cos/osc_clk_enable_1197 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d8_11 ), .Q1(\CIC1Cos/d_d8_12 ));
  CIC1Cos_SLICE_1788 \CIC1Cos/SLICE_1788 ( .M1(\CIC1Cos/d8_14 ), 
    .M0(\CIC1Cos/d8_13 ), .CE(\CIC1Cos/osc_clk_enable_1197 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d8_13 ), .Q1(\CIC1Cos/d_d8_14 ));
  CIC1Cos_SLICE_1789 \CIC1Cos/SLICE_1789 ( .M1(\CIC1Cos/d8_16 ), 
    .M0(\CIC1Cos/d8_15 ), .CE(\CIC1Cos/osc_clk_enable_1247 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d8_15 ), .Q1(\CIC1Cos/d_d8_16 ));
  CIC1Cos_SLICE_1790 \CIC1Cos/SLICE_1790 ( .M1(\CIC1Cos/d8_18 ), 
    .M0(\CIC1Cos/d8_17 ), .CE(\CIC1Cos/osc_clk_enable_1247 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d8_17 ), .Q1(\CIC1Cos/d_d8_18 ));
  CIC1Cos_SLICE_1791 \CIC1Cos/SLICE_1791 ( .M1(\CIC1Cos/d8_20 ), 
    .M0(\CIC1Cos/d8_19 ), .CE(\CIC1Cos/osc_clk_enable_1247 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d8_19 ), .Q1(\CIC1Cos/d_d8_20 ));
  CIC1Cos_SLICE_1792 \CIC1Cos/SLICE_1792 ( .M1(\CIC1Cos/d8_22 ), 
    .M0(\CIC1Cos/d8_21 ), .CE(\CIC1Cos/osc_clk_enable_1247 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d8_21 ), .Q1(\CIC1Cos/d_d8_22 ));
  CIC1Cos_SLICE_1793 \CIC1Cos/SLICE_1793 ( .M1(\CIC1Cos/d8_24 ), 
    .M0(\CIC1Cos/d8_23 ), .CE(\CIC1Cos/osc_clk_enable_1247 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d8_23 ), .Q1(\CIC1Cos/d_d8_24 ));
  CIC1Cos_SLICE_1794 \CIC1Cos/SLICE_1794 ( .M1(\CIC1Cos/d8_26 ), 
    .M0(\CIC1Cos/d8_25 ), .CE(\CIC1Cos/osc_clk_enable_1247 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d8_25 ), .Q1(\CIC1Cos/d_d8_26 ));
  CIC1Cos_SLICE_1795 \CIC1Cos/SLICE_1795 ( .M1(\CIC1Cos/d8_28 ), 
    .M0(\CIC1Cos/d8_27 ), .CE(\CIC1Cos/osc_clk_enable_1247 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d8_27 ), .Q1(\CIC1Cos/d_d8_28 ));
  CIC1Cos_SLICE_1796 \CIC1Cos/SLICE_1796 ( .M1(\CIC1Cos/d8_30 ), 
    .M0(\CIC1Cos/d8_29 ), .CE(\CIC1Cos/osc_clk_enable_1247 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d8_29 ), .Q1(\CIC1Cos/d_d8_30 ));
  CIC1Cos_SLICE_1797 \CIC1Cos/SLICE_1797 ( .M1(\CIC1Cos/d8_32 ), 
    .M0(\CIC1Cos/d8_31 ), .CE(\CIC1Cos/osc_clk_enable_1247 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d8_31 ), .Q1(\CIC1Cos/d_d8_32 ));
  CIC1Cos_SLICE_1798 \CIC1Cos/SLICE_1798 ( .M1(\CIC1Cos/d8_34 ), 
    .M0(\CIC1Cos/d8_33 ), .CE(\CIC1Cos/osc_clk_enable_1247 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d8_33 ), .Q1(\CIC1Cos/d_d8_34 ));
  CIC1Cos_SLICE_1799 \CIC1Cos/SLICE_1799 ( .M1(\CIC1Cos/d8_36 ), 
    .M0(\CIC1Cos/d8_35 ), .CE(\CIC1Cos/osc_clk_enable_1247 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d8_35 ), .Q1(\CIC1Cos/d_d8_36 ));
  CIC1Cos_SLICE_1800 \CIC1Cos/SLICE_1800 ( .M1(\CIC1Cos/d8_38 ), 
    .M0(\CIC1Cos/d8_37 ), .CE(\CIC1Cos/osc_clk_enable_1247 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d8_37 ), .Q1(\CIC1Cos/d_d8_38 ));
  CIC1Cos_SLICE_1801 \CIC1Cos/SLICE_1801 ( .M1(\CIC1Cos/d8_40 ), 
    .M0(\CIC1Cos/d8_39 ), .CE(\CIC1Cos/osc_clk_enable_1247 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d8_39 ), .Q1(\CIC1Cos/d_d8_40 ));
  CIC1Cos_SLICE_1802 \CIC1Cos/SLICE_1802 ( .M1(\CIC1Cos/d8_42 ), 
    .M0(\CIC1Cos/d8_41 ), .CE(\CIC1Cos/osc_clk_enable_1247 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d8_41 ), .Q1(\CIC1Cos/d_d8_42 ));
  CIC1Cos_SLICE_1803 \CIC1Cos/SLICE_1803 ( .M1(\CIC1Cos/d8_44 ), 
    .M0(\CIC1Cos/d8_43 ), .CE(\CIC1Cos/osc_clk_enable_1247 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d8_43 ), .Q1(\CIC1Cos/d_d8_44 ));
  CIC1Cos_SLICE_1804 \CIC1Cos/SLICE_1804 ( .M1(\CIC1Cos/d8_46 ), 
    .M0(\CIC1Cos/d8_45 ), .CE(\CIC1Cos/osc_clk_enable_1247 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d8_45 ), .Q1(\CIC1Cos/d_d8_46 ));
  CIC1Cos_SLICE_1805 \CIC1Cos/SLICE_1805 ( .M1(\CIC1Cos/d8_48 ), 
    .M0(\CIC1Cos/d8_47 ), .CE(\CIC1Cos/osc_clk_enable_1247 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d8_47 ), .Q1(\CIC1Cos/d_d8_48 ));
  CIC1Cos_SLICE_1806 \CIC1Cos/SLICE_1806 ( .M1(\CIC1Cos/d8_50 ), 
    .M0(\CIC1Cos/d8_49 ), .CE(\CIC1Cos/osc_clk_enable_1247 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d8_49 ), .Q1(\CIC1Cos/d_d8_50 ));
  CIC1Cos_SLICE_1807 \CIC1Cos/SLICE_1807 ( .M1(\CIC1Cos/d8_52 ), 
    .M0(\CIC1Cos/d8_51 ), .CE(\CIC1Cos/osc_clk_enable_1247 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d8_51 ), .Q1(\CIC1Cos/d_d8_52 ));
  CIC1Cos_SLICE_1808 \CIC1Cos/SLICE_1808 ( .M1(\CIC1Cos/d8_54 ), 
    .M0(\CIC1Cos/d8_53 ), .CE(\CIC1Cos/osc_clk_enable_1247 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d8_53 ), .Q1(\CIC1Cos/d_d8_54 ));
  CIC1Cos_SLICE_1809 \CIC1Cos/SLICE_1809 ( .M1(\CIC1Cos/d8_56 ), 
    .M0(\CIC1Cos/d8_55 ), .CE(\CIC1Cos/osc_clk_enable_1247 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d8_55 ), .Q1(\CIC1Cos/d_d8_56 ));
  CIC1Cos_SLICE_1810 \CIC1Cos/SLICE_1810 ( .M1(\CIC1Cos/d8_58 ), 
    .M0(\CIC1Cos/d8_57 ), .CE(\CIC1Cos/osc_clk_enable_1247 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d8_57 ), .Q1(\CIC1Cos/d_d8_58 ));
  CIC1Cos_SLICE_1811 \CIC1Cos/SLICE_1811 ( .M1(\CIC1Cos/d8_60 ), 
    .M0(\CIC1Cos/d8_59 ), .CE(\CIC1Cos/osc_clk_enable_1247 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d8_59 ), .Q1(\CIC1Cos/d_d8_60 ));
  CIC1Cos_SLICE_1812 \CIC1Cos/SLICE_1812 ( .M1(\CIC1Cos/d8_62 ), 
    .M0(\CIC1Cos/d8_61 ), .CE(\CIC1Cos/osc_clk_enable_1247 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d8_61 ), .Q1(\CIC1Cos/d_d8_62 ));
  CIC1Cos_SLICE_1813 \CIC1Cos/SLICE_1813 ( .M1(\CIC1Cos/d8_64 ), 
    .M0(\CIC1Cos/d8_63 ), .CE(\CIC1Cos/osc_clk_enable_1247 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d8_63 ), .Q1(\CIC1Cos/d_d8_64 ));
  CIC1Cos_SLICE_1814 \CIC1Cos/SLICE_1814 ( .M1(\CIC1Cos/d8_66 ), 
    .M0(\CIC1Cos/d8_65 ), .CE(\CIC1Cos/osc_clk_enable_1297 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d8_65 ), .Q1(\CIC1Cos/d_d8_66 ));
  CIC1Cos_SLICE_1815 \CIC1Cos/SLICE_1815 ( .M1(\CIC1Cos/d8_68 ), 
    .M0(\CIC1Cos/d8_67 ), .CE(\CIC1Cos/osc_clk_enable_1297 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d8_67 ), .Q1(\CIC1Cos/d_d8_68 ));
  CIC1Cos_SLICE_1816 \CIC1Cos/SLICE_1816 ( .M1(\CIC1Cos/d8_70 ), 
    .M0(\CIC1Cos/d8_69 ), .CE(\CIC1Cos/osc_clk_enable_1297 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d8_69 ), .Q1(\CIC1Cos/d_d8_70 ));
  CIC1Cos_SLICE_1817 \CIC1Cos/SLICE_1817 ( .M0(\CIC1Cos/d8_71 ), 
    .CE(\CIC1Cos/osc_clk_enable_1297 ), .CLK(osc_clk), .Q0(\CIC1Cos/d_d8_71 ));
  CIC1Cos_SLICE_1818 \CIC1Cos/SLICE_1818 ( .M0(\CIC1Cos/d9_0 ), 
    .CE(\CIC1Cos/osc_clk_enable_797 ), .CLK(osc_clk), .Q0(\CIC1Cos/d_d9_0 ));
  CIC1Cos_SLICE_1819 \CIC1Cos/SLICE_1819 ( .M1(\CIC1Cos/d9_2 ), 
    .M0(\CIC1Cos/d9_1 ), .CE(\CIC1Cos/osc_clk_enable_1347 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d9_1 ), .Q1(\CIC1Cos/d_d9_2 ));
  CIC1Cos_SLICE_1820 \CIC1Cos/SLICE_1820 ( .M1(\CIC1Cos/d9_4 ), 
    .M0(\CIC1Cos/d9_3 ), .CE(\CIC1Cos/osc_clk_enable_1347 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d9_3 ), .Q1(\CIC1Cos/d_d9_4 ));
  CIC1Cos_SLICE_1821 \CIC1Cos/SLICE_1821 ( .M1(\CIC1Cos/d9_6 ), 
    .M0(\CIC1Cos/d9_5 ), .CE(\CIC1Cos/osc_clk_enable_1347 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d9_5 ), .Q1(\CIC1Cos/d_d9_6 ));
  CIC1Cos_SLICE_1822 \CIC1Cos/SLICE_1822 ( .M1(\CIC1Cos/d9_8 ), 
    .M0(\CIC1Cos/d9_7 ), .CE(\CIC1Cos/osc_clk_enable_1347 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d9_7 ), .Q1(\CIC1Cos/d_d9_8 ));
  CIC1Cos_SLICE_1823 \CIC1Cos/SLICE_1823 ( .M1(\CIC1Cos/d9_10 ), 
    .M0(\CIC1Cos/d9_9 ), .CE(\CIC1Cos/osc_clk_enable_1347 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d9_9 ), .Q1(\CIC1Cos/d_d9_10 ));
  CIC1Cos_SLICE_1824 \CIC1Cos/SLICE_1824 ( .M1(\CIC1Cos/d9_12 ), 
    .M0(\CIC1Cos/d9_11 ), .CE(\CIC1Cos/osc_clk_enable_1347 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d9_11 ), .Q1(\CIC1Cos/d_d9_12 ));
  CIC1Cos_SLICE_1825 \CIC1Cos/SLICE_1825 ( .M1(\CIC1Cos/d9_14 ), 
    .M0(\CIC1Cos/d9_13 ), .CE(\CIC1Cos/osc_clk_enable_1347 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d9_13 ), .Q1(\CIC1Cos/d_d9_14 ));
  CIC1Cos_SLICE_1826 \CIC1Cos/SLICE_1826 ( .M1(\CIC1Cos/d9_16 ), 
    .M0(\CIC1Cos/d9_15 ), .CE(\CIC1Cos/osc_clk_enable_1347 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d9_15 ), .Q1(\CIC1Cos/d_d9_16 ));
  CIC1Cos_SLICE_1827 \CIC1Cos/SLICE_1827 ( .M1(\CIC1Cos/d9_18 ), 
    .M0(\CIC1Cos/d9_17 ), .CE(\CIC1Cos/osc_clk_enable_1347 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d9_17 ), .Q1(\CIC1Cos/d_d9_18 ));
  CIC1Cos_SLICE_1828 \CIC1Cos/SLICE_1828 ( .M1(\CIC1Cos/d9_20 ), 
    .M0(\CIC1Cos/d9_19 ), .CE(\CIC1Cos/osc_clk_enable_1347 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d9_19 ), .Q1(\CIC1Cos/d_d9_20 ));
  CIC1Cos_SLICE_1829 \CIC1Cos/SLICE_1829 ( .M1(\CIC1Cos/d9_22 ), 
    .M0(\CIC1Cos/d9_21 ), .CE(\CIC1Cos/osc_clk_enable_1347 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d9_21 ), .Q1(\CIC1Cos/d_d9_22 ));
  CIC1Cos_SLICE_1830 \CIC1Cos/SLICE_1830 ( .M1(\CIC1Cos/d9_24 ), 
    .M0(\CIC1Cos/d9_23 ), .CE(\CIC1Cos/osc_clk_enable_1397 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d9_23 ), .Q1(\CIC1Cos/d_d9_24 ));
  CIC1Cos_SLICE_1831 \CIC1Cos/SLICE_1831 ( .M1(\CIC1Cos/d9_26 ), 
    .M0(\CIC1Cos/d9_25 ), .CE(\CIC1Cos/osc_clk_enable_1397 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d9_25 ), .Q1(\CIC1Cos/d_d9_26 ));
  CIC1Cos_SLICE_1832 \CIC1Cos/SLICE_1832 ( .M1(\CIC1Cos/d9_28 ), 
    .M0(\CIC1Cos/d9_27 ), .CE(\CIC1Cos/osc_clk_enable_1397 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d9_27 ), .Q1(\CIC1Cos/d_d9_28 ));
  CIC1Cos_SLICE_1833 \CIC1Cos/SLICE_1833 ( .M1(\CIC1Cos/d9_30 ), 
    .M0(\CIC1Cos/d9_29 ), .CE(\CIC1Cos/osc_clk_enable_1397 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d9_29 ), .Q1(\CIC1Cos/d_d9_30 ));
  CIC1Cos_SLICE_1834 \CIC1Cos/SLICE_1834 ( .M1(\CIC1Cos/d9_32 ), 
    .M0(\CIC1Cos/d9_31 ), .CE(\CIC1Cos/osc_clk_enable_1397 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d9_31 ), .Q1(\CIC1Cos/d_d9_32 ));
  CIC1Cos_SLICE_1835 \CIC1Cos/SLICE_1835 ( .M1(\CIC1Cos/d9_34 ), 
    .M0(\CIC1Cos/d9_33 ), .CE(\CIC1Cos/osc_clk_enable_1397 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d9_33 ), .Q1(\CIC1Cos/d_d9_34 ));
  CIC1Cos_SLICE_1836 \CIC1Cos/SLICE_1836 ( .M1(\CIC1Cos/d9_36 ), 
    .M0(\CIC1Cos/d9_35 ), .CE(\CIC1Cos/osc_clk_enable_1397 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d9_35 ), .Q1(\CIC1Cos/d_d9_36 ));
  CIC1Cos_SLICE_1837 \CIC1Cos/SLICE_1837 ( .M1(\CIC1Cos/d9_38 ), 
    .M0(\CIC1Cos/d9_37 ), .CE(\CIC1Cos/osc_clk_enable_1397 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d9_37 ), .Q1(\CIC1Cos/d_d9_38 ));
  CIC1Cos_SLICE_1838 \CIC1Cos/SLICE_1838 ( .M1(\CIC1Cos/d9_40 ), 
    .M0(\CIC1Cos/d9_39 ), .CE(\CIC1Cos/osc_clk_enable_1397 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d9_39 ), .Q1(\CIC1Cos/d_d9_40 ));
  CIC1Cos_SLICE_1839 \CIC1Cos/SLICE_1839 ( .M1(\CIC1Cos/d9_42 ), 
    .M0(\CIC1Cos/d9_41 ), .CE(\CIC1Cos/osc_clk_enable_1397 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d9_41 ), .Q1(\CIC1Cos/d_d9_42 ));
  CIC1Cos_SLICE_1840 \CIC1Cos/SLICE_1840 ( .M1(\CIC1Cos/d9_44 ), 
    .M0(\CIC1Cos/d9_43 ), .CE(\CIC1Cos/osc_clk_enable_1397 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d9_43 ), .Q1(\CIC1Cos/d_d9_44 ));
  CIC1Cos_SLICE_1841 \CIC1Cos/SLICE_1841 ( .M1(\CIC1Cos/d9_46 ), 
    .M0(\CIC1Cos/d9_45 ), .CE(\CIC1Cos/osc_clk_enable_1397 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d9_45 ), .Q1(\CIC1Cos/d_d9_46 ));
  CIC1Cos_SLICE_1842 \CIC1Cos/SLICE_1842 ( .M1(\CIC1Cos/d9_48 ), 
    .M0(\CIC1Cos/d9_47 ), .CE(\CIC1Cos/osc_clk_enable_1397 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d9_47 ), .Q1(\CIC1Cos/d_d9_48 ));
  CIC1Cos_SLICE_1843 \CIC1Cos/SLICE_1843 ( .M1(\CIC1Cos/d9_50 ), 
    .M0(\CIC1Cos/d9_49 ), .CE(\CIC1Cos/osc_clk_enable_1397 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d9_49 ), .Q1(\CIC1Cos/d_d9_50 ));
  CIC1Cos_SLICE_1844 \CIC1Cos/SLICE_1844 ( .M1(\CIC1Cos/d9_52 ), 
    .M0(\CIC1Cos/d9_51 ), .CE(\CIC1Cos/osc_clk_enable_1397 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d9_51 ), .Q1(\CIC1Cos/d_d9_52 ));
  CIC1Cos_SLICE_1845 \CIC1Cos/SLICE_1845 ( .M1(\CIC1Cos/d9_54 ), 
    .M0(\CIC1Cos/d9_53 ), .CE(\CIC1Cos/osc_clk_enable_1397 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d9_53 ), .Q1(\CIC1Cos/d_d9_54 ));
  CIC1Cos_SLICE_1846 \CIC1Cos/SLICE_1846 ( .M1(\CIC1Cos/d9_56 ), 
    .M0(\CIC1Cos/d9_55 ), .CE(\CIC1Cos/osc_clk_enable_1397 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d9_55 ), .Q1(\CIC1Cos/d_d9_56 ));
  CIC1Cos_SLICE_1847 \CIC1Cos/SLICE_1847 ( .M1(\CIC1Cos/d9_58 ), 
    .M0(\CIC1Cos/d9_57 ), .CE(\CIC1Cos/osc_clk_enable_1397 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d9_57 ), .Q1(\CIC1Cos/d_d9_58 ));
  CIC1Cos_SLICE_1848 \CIC1Cos/SLICE_1848 ( .M1(\CIC1Cos/d9_60 ), 
    .M0(\CIC1Cos/d9_59 ), .CE(\CIC1Cos/osc_clk_enable_1397 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d9_59 ), .Q1(\CIC1Cos/d_d9_60 ));
  CIC1Cos_SLICE_1849 \CIC1Cos/SLICE_1849 ( .M1(\CIC1Cos/d9_62 ), 
    .M0(\CIC1Cos/d9_61 ), .CE(\CIC1Cos/osc_clk_enable_1397 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d9_61 ), .Q1(\CIC1Cos/d_d9_62 ));
  CIC1Cos_SLICE_1850 \CIC1Cos/SLICE_1850 ( .M1(\CIC1Cos/d9_64 ), 
    .M0(\CIC1Cos/d9_63 ), .CE(\CIC1Cos/osc_clk_enable_1397 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d9_63 ), .Q1(\CIC1Cos/d_d9_64 ));
  CIC1Cos_SLICE_1851 \CIC1Cos/SLICE_1851 ( .M1(\CIC1Cos/d9_66 ), 
    .M0(\CIC1Cos/d9_65 ), .CE(\CIC1Cos/osc_clk_enable_1397 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d9_65 ), .Q1(\CIC1Cos/d_d9_66 ));
  CIC1Cos_SLICE_1852 \CIC1Cos/SLICE_1852 ( .M1(\CIC1Cos/d9_68 ), 
    .M0(\CIC1Cos/d9_67 ), .CE(\CIC1Cos/osc_clk_enable_1397 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d9_67 ), .Q1(\CIC1Cos/d_d9_68 ));
  CIC1Cos_SLICE_1853 \CIC1Cos/SLICE_1853 ( .M1(\CIC1Cos/d9_70 ), 
    .M0(\CIC1Cos/d9_69 ), .CE(\CIC1Cos/osc_clk_enable_1397 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d9_69 ), .Q1(\CIC1Cos/d_d9_70 ));
  CIC1Cos_SLICE_1854 \CIC1Cos/SLICE_1854 ( .M0(\CIC1Cos/d9_71 ), 
    .CE(\CIC1Cos/osc_clk_enable_1397 ), .CLK(osc_clk), .Q0(\CIC1Cos/d_d9_71 ));
  CIC1Cos_SLICE_1855 \CIC1Cos/SLICE_1855 ( .M1(\CIC1Cos/d_tmp_1 ), 
    .M0(\CIC1Cos/d_tmp_0 ), .CE(\CIC1Cos/osc_clk_enable_797 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d_tmp_0 ), .Q1(\CIC1Cos/d_d_tmp_1 ));
  CIC1Cos_SLICE_1856 \CIC1Cos/SLICE_1856 ( .M1(\CIC1Cos/d_tmp_3 ), 
    .M0(\CIC1Cos/d_tmp_2 ), .CE(\CIC1Cos/osc_clk_enable_797 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d_tmp_2 ), .Q1(\CIC1Cos/d_d_tmp_3 ));
  CIC1Cos_SLICE_1857 \CIC1Cos/SLICE_1857 ( .M1(\CIC1Cos/d_tmp_5 ), 
    .M0(\CIC1Cos/d_tmp_4 ), .CE(\CIC1Cos/osc_clk_enable_797 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d_tmp_4 ), .Q1(\CIC1Cos/d_d_tmp_5 ));
  CIC1Cos_SLICE_1858 \CIC1Cos/SLICE_1858 ( .M1(\CIC1Cos/d_tmp_7 ), 
    .M0(\CIC1Cos/d_tmp_6 ), .CE(\CIC1Cos/osc_clk_enable_797 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d_tmp_6 ), .Q1(\CIC1Cos/d_d_tmp_7 ));
  CIC1Cos_SLICE_1859 \CIC1Cos/SLICE_1859 ( .M1(\CIC1Cos/d_tmp_9 ), 
    .M0(\CIC1Cos/d_tmp_8 ), .CE(\CIC1Cos/osc_clk_enable_797 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d_tmp_8 ), .Q1(\CIC1Cos/d_d_tmp_9 ));
  CIC1Cos_SLICE_1860 \CIC1Cos/SLICE_1860 ( .M1(\CIC1Cos/d_tmp_11 ), 
    .M0(\CIC1Cos/d_tmp_10 ), .CE(\CIC1Cos/osc_clk_enable_797 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d_tmp_10 ), .Q1(\CIC1Cos/d_d_tmp_11 ));
  CIC1Cos_SLICE_1861 \CIC1Cos/SLICE_1861 ( .M1(\CIC1Cos/d_tmp_13 ), 
    .M0(\CIC1Cos/d_tmp_12 ), .CE(\CIC1Cos/osc_clk_enable_797 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d_tmp_12 ), .Q1(\CIC1Cos/d_d_tmp_13 ));
  CIC1Cos_SLICE_1862 \CIC1Cos/SLICE_1862 ( .M1(\CIC1Cos/d_tmp_15 ), 
    .M0(\CIC1Cos/d_tmp_14 ), .CE(\CIC1Cos/osc_clk_enable_797 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d_tmp_14 ), .Q1(\CIC1Cos/d_d_tmp_15 ));
  CIC1Cos_SLICE_1863 \CIC1Cos/SLICE_1863 ( .M1(\CIC1Cos/d_tmp_17 ), 
    .M0(\CIC1Cos/d_tmp_16 ), .CE(\CIC1Cos/osc_clk_enable_797 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d_tmp_16 ), .Q1(\CIC1Cos/d_d_tmp_17 ));
  CIC1Cos_SLICE_1864 \CIC1Cos/SLICE_1864 ( .M1(\CIC1Cos/d_tmp_19 ), 
    .M0(\CIC1Cos/d_tmp_18 ), .CE(\CIC1Cos/osc_clk_enable_797 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d_tmp_18 ), .Q1(\CIC1Cos/d_d_tmp_19 ));
  CIC1Cos_SLICE_1865 \CIC1Cos/SLICE_1865 ( .M1(\CIC1Cos/d_tmp_21 ), 
    .M0(\CIC1Cos/d_tmp_20 ), .CE(\CIC1Cos/osc_clk_enable_797 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d_tmp_20 ), .Q1(\CIC1Cos/d_d_tmp_21 ));
  CIC1Cos_SLICE_1866 \CIC1Cos/SLICE_1866 ( .M1(\CIC1Cos/d_tmp_23 ), 
    .M0(\CIC1Cos/d_tmp_22 ), .CE(\CIC1Cos/osc_clk_enable_797 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d_tmp_22 ), .Q1(\CIC1Cos/d_d_tmp_23 ));
  CIC1Cos_SLICE_1867 \CIC1Cos/SLICE_1867 ( .M1(\CIC1Cos/d_tmp_25 ), 
    .M0(\CIC1Cos/d_tmp_24 ), .CE(\CIC1Cos/osc_clk_enable_797 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d_tmp_24 ), .Q1(\CIC1Cos/d_d_tmp_25 ));
  CIC1Cos_SLICE_1868 \CIC1Cos/SLICE_1868 ( .M1(\CIC1Cos/d_tmp_27 ), 
    .M0(\CIC1Cos/d_tmp_26 ), .CE(\CIC1Cos/osc_clk_enable_797 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d_tmp_26 ), .Q1(\CIC1Cos/d_d_tmp_27 ));
  CIC1Cos_SLICE_1869 \CIC1Cos/SLICE_1869 ( .M1(\CIC1Cos/d_tmp_29 ), 
    .M0(\CIC1Cos/d_tmp_28 ), .CE(\CIC1Cos/osc_clk_enable_797 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d_tmp_28 ), .Q1(\CIC1Cos/d_d_tmp_29 ));
  CIC1Cos_SLICE_1870 \CIC1Cos/SLICE_1870 ( .M1(\CIC1Cos/d_tmp_31 ), 
    .M0(\CIC1Cos/d_tmp_30 ), .CE(\CIC1Cos/osc_clk_enable_797 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d_tmp_30 ), .Q1(\CIC1Cos/d_d_tmp_31 ));
  CIC1Cos_SLICE_1871 \CIC1Cos/SLICE_1871 ( .M1(\CIC1Cos/d_tmp_33 ), 
    .M0(\CIC1Cos/d_tmp_32 ), .CE(\CIC1Cos/osc_clk_enable_797 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d_tmp_32 ), .Q1(\CIC1Cos/d_d_tmp_33 ));
  CIC1Cos_SLICE_1872 \CIC1Cos/SLICE_1872 ( .M1(\CIC1Cos/d_tmp_35 ), 
    .M0(\CIC1Cos/d_tmp_34 ), .CE(\CIC1Cos/osc_clk_enable_797 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d_tmp_34 ), .Q1(\CIC1Cos/d_d_tmp_35 ));
  CIC1Cos_SLICE_1873 \CIC1Cos/SLICE_1873 ( .M1(\CIC1Cos/d_tmp_37 ), 
    .M0(\CIC1Cos/d_tmp_36 ), .CE(\CIC1Cos/osc_clk_enable_797 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d_tmp_36 ), .Q1(\CIC1Cos/d_d_tmp_37 ));
  CIC1Cos_SLICE_1874 \CIC1Cos/SLICE_1874 ( .M1(\CIC1Cos/d_tmp_39 ), 
    .M0(\CIC1Cos/d_tmp_38 ), .CE(\CIC1Cos/osc_clk_enable_797 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d_tmp_38 ), .Q1(\CIC1Cos/d_d_tmp_39 ));
  CIC1Cos_SLICE_1875 \CIC1Cos/SLICE_1875 ( .M0(\CIC1Cos/d_tmp_40 ), 
    .CE(\CIC1Cos/osc_clk_enable_797 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d_tmp_40 ));
  CIC1Cos_SLICE_1876 \CIC1Cos/SLICE_1876 ( .M1(\CIC1Cos/d_tmp_42 ), 
    .M0(\CIC1Cos/d_tmp_41 ), .CE(\CIC1Cos/osc_clk_enable_847 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d_tmp_41 ), .Q1(\CIC1Cos/d_d_tmp_42 ));
  CIC1Cos_SLICE_1877 \CIC1Cos/SLICE_1877 ( .M1(\CIC1Cos/d_tmp_44 ), 
    .M0(\CIC1Cos/d_tmp_43 ), .CE(\CIC1Cos/osc_clk_enable_847 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d_tmp_43 ), .Q1(\CIC1Cos/d_d_tmp_44 ));
  CIC1Cos_SLICE_1878 \CIC1Cos/SLICE_1878 ( .M1(\CIC1Cos/d_tmp_46 ), 
    .M0(\CIC1Cos/d_tmp_45 ), .CE(\CIC1Cos/osc_clk_enable_847 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d_tmp_45 ), .Q1(\CIC1Cos/d_d_tmp_46 ));
  CIC1Cos_SLICE_1879 \CIC1Cos/SLICE_1879 ( .M1(\CIC1Cos/d_tmp_48 ), 
    .M0(\CIC1Cos/d_tmp_47 ), .CE(\CIC1Cos/osc_clk_enable_847 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d_tmp_47 ), .Q1(\CIC1Cos/d_d_tmp_48 ));
  CIC1Cos_SLICE_1880 \CIC1Cos/SLICE_1880 ( .M1(\CIC1Cos/d_tmp_50 ), 
    .M0(\CIC1Cos/d_tmp_49 ), .CE(\CIC1Cos/osc_clk_enable_847 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d_tmp_49 ), .Q1(\CIC1Cos/d_d_tmp_50 ));
  CIC1Cos_SLICE_1881 \CIC1Cos/SLICE_1881 ( .M1(\CIC1Cos/d_tmp_52 ), 
    .M0(\CIC1Cos/d_tmp_51 ), .CE(\CIC1Cos/osc_clk_enable_847 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d_tmp_51 ), .Q1(\CIC1Cos/d_d_tmp_52 ));
  CIC1Cos_SLICE_1882 \CIC1Cos/SLICE_1882 ( .M1(\CIC1Cos/d_tmp_54 ), 
    .M0(\CIC1Cos/d_tmp_53 ), .CE(\CIC1Cos/osc_clk_enable_847 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d_tmp_53 ), .Q1(\CIC1Cos/d_d_tmp_54 ));
  CIC1Cos_SLICE_1883 \CIC1Cos/SLICE_1883 ( .M1(\CIC1Cos/d_tmp_56 ), 
    .M0(\CIC1Cos/d_tmp_55 ), .CE(\CIC1Cos/osc_clk_enable_847 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d_tmp_55 ), .Q1(\CIC1Cos/d_d_tmp_56 ));
  CIC1Cos_SLICE_1884 \CIC1Cos/SLICE_1884 ( .M1(\CIC1Cos/d_tmp_58 ), 
    .M0(\CIC1Cos/d_tmp_57 ), .CE(\CIC1Cos/osc_clk_enable_847 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d_tmp_57 ), .Q1(\CIC1Cos/d_d_tmp_58 ));
  CIC1Cos_SLICE_1885 \CIC1Cos/SLICE_1885 ( .M1(\CIC1Cos/d_tmp_60 ), 
    .M0(\CIC1Cos/d_tmp_59 ), .CE(\CIC1Cos/osc_clk_enable_847 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d_tmp_59 ), .Q1(\CIC1Cos/d_d_tmp_60 ));
  CIC1Cos_SLICE_1886 \CIC1Cos/SLICE_1886 ( .M1(\CIC1Cos/d_tmp_62 ), 
    .M0(\CIC1Cos/d_tmp_61 ), .CE(\CIC1Cos/osc_clk_enable_847 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d_tmp_61 ), .Q1(\CIC1Cos/d_d_tmp_62 ));
  CIC1Cos_SLICE_1887 \CIC1Cos/SLICE_1887 ( .M1(\CIC1Cos/d_tmp_64 ), 
    .M0(\CIC1Cos/d_tmp_63 ), .CE(\CIC1Cos/osc_clk_enable_847 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d_tmp_63 ), .Q1(\CIC1Cos/d_d_tmp_64 ));
  CIC1Cos_SLICE_1888 \CIC1Cos/SLICE_1888 ( .M1(\CIC1Cos/d_tmp_66 ), 
    .M0(\CIC1Cos/d_tmp_65 ), .CE(\CIC1Cos/osc_clk_enable_847 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d_tmp_65 ), .Q1(\CIC1Cos/d_d_tmp_66 ));
  CIC1Cos_SLICE_1889 \CIC1Cos/SLICE_1889 ( .M1(\CIC1Cos/d_tmp_68 ), 
    .M0(\CIC1Cos/d_tmp_67 ), .CE(\CIC1Cos/osc_clk_enable_847 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d_tmp_67 ), .Q1(\CIC1Cos/d_d_tmp_68 ));
  CIC1Cos_SLICE_1890 \CIC1Cos/SLICE_1890 ( .M1(\CIC1Cos/d_tmp_70 ), 
    .M0(\CIC1Cos/d_tmp_69 ), .CE(\CIC1Cos/osc_clk_enable_847 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d_tmp_69 ), .Q1(\CIC1Cos/d_d_tmp_70 ));
  CIC1Cos_SLICE_1891 \CIC1Cos/SLICE_1891 ( .M0(\CIC1Cos/d_tmp_71 ), 
    .CE(\CIC1Cos/osc_clk_enable_847 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d_tmp_71 ));
  CIC1Cos_SLICE_1892 \CIC1Cos/SLICE_1892 ( .M1(\CIC1Cos/d5_1 ), 
    .M0(\CIC1Cos/d5_0 ), .CE(\CIC1Cos/osc_clk_enable_757 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_tmp_0 ), .Q1(\CIC1Cos/d_tmp_1 ));
  CIC1Cos_SLICE_1893 \CIC1Cos/SLICE_1893 ( .M1(\CIC1Cos/d5_3 ), 
    .M0(\CIC1Cos/d5_2 ), .CE(\CIC1Cos/osc_clk_enable_757 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_tmp_2 ), .Q1(\CIC1Cos/d_tmp_3 ));
  CIC1Cos_SLICE_1894 \CIC1Cos/SLICE_1894 ( .M1(\CIC1Cos/d5_5 ), 
    .M0(\CIC1Cos/d5_4 ), .CE(\CIC1Cos/osc_clk_enable_757 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_tmp_4 ), .Q1(\CIC1Cos/d_tmp_5 ));
  CIC1Cos_SLICE_1895 \CIC1Cos/SLICE_1895 ( .M1(\CIC1Cos/d5_7 ), 
    .M0(\CIC1Cos/d5_6 ), .CE(\CIC1Cos/osc_clk_enable_757 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_tmp_6 ), .Q1(\CIC1Cos/d_tmp_7 ));
  CIC1Cos_SLICE_1896 \CIC1Cos/SLICE_1896 ( .M1(\CIC1Cos/d5_9 ), 
    .M0(\CIC1Cos/d5_8 ), .CE(\CIC1Cos/osc_clk_enable_757 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_tmp_8 ), .Q1(\CIC1Cos/d_tmp_9 ));
  CIC1Cos_SLICE_1897 \CIC1Cos/SLICE_1897 ( .M1(\CIC1Cos/d5_11 ), 
    .M0(\CIC1Cos/d5_10 ), .CE(\CIC1Cos/osc_clk_enable_757 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_tmp_10 ), .Q1(\CIC1Cos/d_tmp_11 ));
  CIC1Cos_SLICE_1898 \CIC1Cos/SLICE_1898 ( .M1(\CIC1Cos/d5_13 ), 
    .M0(\CIC1Cos/d5_12 ), .CE(\CIC1Cos/osc_clk_enable_757 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_tmp_12 ), .Q1(\CIC1Cos/d_tmp_13 ));
  CIC1Cos_SLICE_1899 \CIC1Cos/SLICE_1899 ( .M1(\CIC1Cos/d5_15 ), 
    .M0(\CIC1Cos/d5_14 ), .CE(\CIC1Cos/osc_clk_enable_757 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_tmp_14 ), .Q1(\CIC1Cos/d_tmp_15 ));
  CIC1Cos_SLICE_1900 \CIC1Cos/SLICE_1900 ( .M1(\CIC1Cos/d5_17 ), 
    .M0(\CIC1Cos/d5_16 ), .CE(\CIC1Cos/osc_clk_enable_757 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_tmp_16 ), .Q1(\CIC1Cos/d_tmp_17 ));
  CIC1Cos_SLICE_1901 \CIC1Cos/SLICE_1901 ( .M1(\CIC1Cos/d5_19 ), 
    .M0(\CIC1Cos/d5_18 ), .CE(\CIC1Cos/osc_clk_enable_757 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_tmp_18 ), .Q1(\CIC1Cos/d_tmp_19 ));
  CIC1Cos_SLICE_1902 \CIC1Cos/SLICE_1902 ( .M1(\CIC1Cos/d5_21 ), 
    .M0(\CIC1Cos/d5_20 ), .CE(\CIC1Cos/osc_clk_enable_757 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_tmp_20 ), .Q1(\CIC1Cos/d_tmp_21 ));
  CIC1Cos_SLICE_1903 \CIC1Cos/SLICE_1903 ( .M1(\CIC1Cos/d5_23 ), 
    .M0(\CIC1Cos/d5_22 ), .CE(\CIC1Cos/osc_clk_enable_757 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_tmp_22 ), .Q1(\CIC1Cos/d_tmp_23 ));
  CIC1Cos_SLICE_1904 \CIC1Cos/SLICE_1904 ( .M1(\CIC1Cos/d5_25 ), 
    .M0(\CIC1Cos/d5_24 ), .CE(\CIC1Cos/osc_clk_enable_757 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_tmp_24 ), .Q1(\CIC1Cos/d_tmp_25 ));
  CIC1Cos_SLICE_1905 \CIC1Cos/SLICE_1905 ( .M1(\CIC1Cos/d5_27 ), 
    .M0(\CIC1Cos/d5_26 ), .CE(\CIC1Cos/osc_clk_enable_757 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_tmp_26 ), .Q1(\CIC1Cos/d_tmp_27 ));
  CIC1Cos_SLICE_1906 \CIC1Cos/SLICE_1906 ( .M1(\CIC1Cos/d5_29 ), 
    .M0(\CIC1Cos/d5_28 ), .CE(\CIC1Cos/osc_clk_enable_757 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_tmp_28 ), .Q1(\CIC1Cos/d_tmp_29 ));
  CIC1Cos_SLICE_1907 \CIC1Cos/SLICE_1907 ( .M1(\CIC1Cos/d5_31 ), 
    .M0(\CIC1Cos/d5_30 ), .CE(\CIC1Cos/osc_clk_enable_757 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_tmp_30 ), .Q1(\CIC1Cos/d_tmp_31 ));
  CIC1Cos_SLICE_1908 \CIC1Cos/SLICE_1908 ( .M1(\CIC1Cos/d5_33 ), 
    .M0(\CIC1Cos/d5_32 ), .CE(\CIC1Cos/osc_clk_enable_757 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_tmp_32 ), .Q1(\CIC1Cos/d_tmp_33 ));
  CIC1Cos_SLICE_1909 \CIC1Cos/SLICE_1909 ( .M1(\CIC1Cos/d5_35 ), 
    .M0(\CIC1Cos/d5_34 ), .CE(\CIC1Cos/osc_clk_enable_757 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_tmp_34 ), .Q1(\CIC1Cos/d_tmp_35 ));
  CIC1Cos_SLICE_1910 \CIC1Cos/SLICE_1910 ( .M1(\CIC1Cos/d5_37 ), 
    .M0(\CIC1Cos/d5_36 ), .CE(\CIC1Cos/osc_clk_enable_757 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_tmp_36 ), .Q1(\CIC1Cos/d_tmp_37 ));
  CIC1Cos_SLICE_1911 \CIC1Cos/SLICE_1911 ( .M1(\CIC1Cos/d5_39 ), 
    .M0(\CIC1Cos/d5_38 ), .CE(\CIC1Cos/osc_clk_enable_757 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_tmp_38 ), .Q1(\CIC1Cos/d_tmp_39 ));
  CIC1Cos_SLICE_1912 \CIC1Cos/SLICE_1912 ( .M1(\CIC1Cos/d5_41 ), 
    .M0(\CIC1Cos/d5_40 ), .CE(\CIC1Cos/osc_clk_enable_757 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_tmp_40 ), .Q1(\CIC1Cos/d_tmp_41 ));
  CIC1Cos_SLICE_1913 \CIC1Cos/SLICE_1913 ( .M1(\CIC1Cos/d5_43 ), 
    .M0(\CIC1Cos/d5_42 ), .CE(\CIC1Cos/osc_clk_enable_757 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_tmp_42 ), .Q1(\CIC1Cos/d_tmp_43 ));
  CIC1Cos_SLICE_1914 \CIC1Cos/SLICE_1914 ( .M1(\CIC1Cos/d5_45 ), 
    .M0(\CIC1Cos/d5_44 ), .CE(\CIC1Cos/osc_clk_enable_757 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_tmp_44 ), .Q1(\CIC1Cos/d_tmp_45 ));
  CIC1Cos_SLICE_1915 \CIC1Cos/SLICE_1915 ( .M1(\CIC1Cos/d5_47 ), 
    .M0(\CIC1Cos/d5_46 ), .CE(\CIC1Cos/osc_clk_enable_757 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_tmp_46 ), .Q1(\CIC1Cos/d_tmp_47 ));
  CIC1Cos_SLICE_1916 \CIC1Cos/SLICE_1916 ( .M1(\CIC1Cos/d5_49 ), 
    .M0(\CIC1Cos/d5_48 ), .CE(\CIC1Cos/count_15__N_1458 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_tmp_48 ), .Q1(\CIC1Cos/d_tmp_49 ));
  CIC1Cos_SLICE_1917 \CIC1Cos/SLICE_1917 ( .M1(\CIC1Cos/d5_51 ), 
    .M0(\CIC1Cos/d5_50 ), .CE(\CIC1Cos/count_15__N_1458 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_tmp_50 ), .Q1(\CIC1Cos/d_tmp_51 ));
  CIC1Cos_SLICE_1918 \CIC1Cos/SLICE_1918 ( .M1(\CIC1Cos/d5_53 ), 
    .M0(\CIC1Cos/d5_52 ), .CE(\CIC1Cos/count_15__N_1458 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_tmp_52 ), .Q1(\CIC1Cos/d_tmp_53 ));
  CIC1Cos_SLICE_1919 \CIC1Cos/SLICE_1919 ( .M1(\CIC1Cos/d5_55 ), 
    .M0(\CIC1Cos/d5_54 ), .CE(\CIC1Cos/count_15__N_1458 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_tmp_54 ), .Q1(\CIC1Cos/d_tmp_55 ));
  CIC1Cos_SLICE_1920 \CIC1Cos/SLICE_1920 ( .M1(\CIC1Cos/d5_57 ), 
    .M0(\CIC1Cos/d5_56 ), .CE(\CIC1Cos/count_15__N_1458 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_tmp_56 ), .Q1(\CIC1Cos/d_tmp_57 ));
  CIC1Cos_SLICE_1921 \CIC1Cos/SLICE_1921 ( .M1(\CIC1Cos/d5_59 ), 
    .M0(\CIC1Cos/d5_58 ), .CE(\CIC1Cos/count_15__N_1458 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_tmp_58 ), .Q1(\CIC1Cos/d_tmp_59 ));
  CIC1Cos_SLICE_1922 \CIC1Cos/SLICE_1922 ( .M1(\CIC1Cos/d5_61 ), 
    .M0(\CIC1Cos/d5_60 ), .CE(\CIC1Cos/count_15__N_1458 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_tmp_60 ), .Q1(\CIC1Cos/d_tmp_61 ));
  CIC1Cos_SLICE_1923 \CIC1Cos/SLICE_1923 ( .M1(\CIC1Cos/d5_63 ), 
    .M0(\CIC1Cos/d5_62 ), .CE(\CIC1Cos/count_15__N_1458 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_tmp_62 ), .Q1(\CIC1Cos/d_tmp_63 ));
  CIC1Cos_SLICE_1924 \CIC1Cos/SLICE_1924 ( .M1(\CIC1Cos/d5_65 ), 
    .M0(\CIC1Cos/d5_64 ), .CE(\CIC1Cos/count_15__N_1458 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_tmp_64 ), .Q1(\CIC1Cos/d_tmp_65 ));
  CIC1Cos_SLICE_1925 \CIC1Cos/SLICE_1925 ( .M1(\CIC1Cos/d5_67 ), 
    .M0(\CIC1Cos/d5_66 ), .CE(\CIC1Cos/count_15__N_1458 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_tmp_66 ), .Q1(\CIC1Cos/d_tmp_67 ));
  CIC1Cos_SLICE_1926 \CIC1Cos/SLICE_1926 ( .M1(\CIC1Cos/d5_69 ), 
    .M0(\CIC1Cos/d5_68 ), .CE(\CIC1Cos/count_15__N_1458 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_tmp_68 ), .Q1(\CIC1Cos/d_tmp_69 ));
  CIC1Cos_SLICE_1927 \CIC1Cos/SLICE_1927 ( .M1(\CIC1Cos/d5_71 ), 
    .M0(\CIC1Cos/d5_70 ), .CE(\CIC1Cos/count_15__N_1458 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_tmp_70 ), .Q1(\CIC1Cos/d_tmp_71 ));
  CIC1Cos_SLICE_1928 \CIC1Cos/SLICE_1928 ( .D1(\CIC1Cos/count_6 ), 
    .C1(\CIC1Cos/count_7 ), .B1(\CIC1Cos/count_4 ), .A1(\CIC1Cos/count_9 ), 
    .D0(\CIC1Cos/n12784 ), .C0(\CIC1Cos/n12790 ), .B0(\CIC1Cos/n13 ), 
    .A0(\CIC1Cos/n12788 ), .DI0(\CIC1Cos/osc_clk_enable_757 ), 
    .M1(\CIC1Cos/osc_clk_enable_757 ), .CLK(osc_clk), 
    .F0(\CIC1Cos/osc_clk_enable_757 ), .Q0(\CIC1Cos/osc_clk_enable_797 ), 
    .F1(\CIC1Cos/n12790 ), .Q1(\CIC1Cos/osc_clk_enable_847 ));
  CIC1Cos_SLICE_1929 \CIC1Cos/SLICE_1929 ( .M1(\CIC1Cos/osc_clk_enable_757 ), 
    .M0(\CIC1Cos/osc_clk_enable_757 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/osc_clk_enable_897 ), .Q1(\CIC1Cos/osc_clk_enable_947 ));
  CIC1Cos_SLICE_1930 \CIC1Cos/SLICE_1930 ( .M1(\CIC1Cos/osc_clk_enable_757 ), 
    .M0(\CIC1Cos/osc_clk_enable_757 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/osc_clk_enable_997 ), .Q1(\CIC1Cos/osc_clk_enable_1047 ));
  CIC1Cos_SLICE_1931 \CIC1Cos/SLICE_1931 ( .M1(\CIC1Cos/osc_clk_enable_757 ), 
    .M0(\CIC1Cos/osc_clk_enable_757 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/osc_clk_enable_1097 ), .Q1(\CIC1Cos/osc_clk_enable_1147 ));
  CIC1Cos_SLICE_1932 \CIC1Cos/SLICE_1932 ( .M1(\CIC1Cos/osc_clk_enable_757 ), 
    .M0(\CIC1Cos/osc_clk_enable_757 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/osc_clk_enable_1197 ), .Q1(\CIC1Cos/osc_clk_enable_1247 ));
  CIC1Cos_SLICE_1933 \CIC1Cos/SLICE_1933 ( .M1(\CIC1Cos/osc_clk_enable_757 ), 
    .M0(\CIC1Cos/osc_clk_enable_757 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/osc_clk_enable_1297 ), .Q1(\CIC1Cos/osc_clk_enable_1347 ));
  CIC1Cos_SLICE_1934 \CIC1Cos/SLICE_1934 ( .M0(\CIC1Cos/osc_clk_enable_757 ), 
    .CLK(osc_clk), .Q0(\CIC1Cos/osc_clk_enable_1397 ));
  CIC1Cos_SLICE_1935 \CIC1Cos/SLICE_1935 ( .M0(\CIC1Cos/osc_clk_enable_757 ), 
    .CLK(osc_clk), .Q0(\CIC1Cos/v_comb ));
  CIC1Sin_SLICE_1936 \CIC1Sin/SLICE_1936 ( .B0(\CIC1Sin/n54 ), 
    .A0(\CIC1Sin/n391 ), .DI0(\CIC1Sin/count_15_N_1442_0 ), 
    .LSR(\CIC1Sin/osc_clk_enable_141 ), .CLK(osc_clk), 
    .F0(\CIC1Sin/count_15_N_1442_0 ), .Q0(\CIC1Sin/count_0 ));
  CIC1Sin_SLICE_1937 \CIC1Sin/SLICE_1937 ( .B0(\CIC1Sin/n54 ), 
    .A0(\CIC1Sin/n380 ), .DI0(\CIC1Sin/count_15_N_1442_11 ), 
    .LSR(\CIC1Sin/d_clk_tmp_N_1831 ), .CLK(osc_clk), 
    .F0(\CIC1Sin/count_15_N_1442_11 ), .Q0(\CIC1Sin/count_11 ));
  CIC1Sin_SLICE_1938 \CIC1Sin/SLICE_1938 ( .C0(\CIC1Sin/n5968 ), 
    .B0(\CIC1Sin/n6022 ), .A0(\CIC1Sin/n5984 ), 
    .DI0(\CIC1Sin/d10_71_N_1747_57 ), .CE(\CIC1Sin/osc_clk_enable_710 ), 
    .CLK(osc_clk), .F0(\CIC1Sin/d10_71_N_1747_57 ), .Q0(\CIC1Sin/d10_57 ));
  CIC1Sin_SLICE_1939 \CIC1Sin/SLICE_1939 ( .C1(\CIC1Sin/n5968 ), 
    .B1(\CIC1Sin/n6016 ), .A1(\CIC1Sin/n5978 ), .C0(\CIC1Sin/n5968 ), 
    .B0(\CIC1Sin/n6021 ), .A0(\CIC1Sin/n5983 ), 
    .DI1(\CIC1Sin/d10_71_N_1747_63 ), .DI0(\CIC1Sin/d10_71_N_1747_58 ), 
    .CE(\CIC1Sin/v_comb ), .CLK(osc_clk), .F0(\CIC1Sin/d10_71_N_1747_58 ), 
    .Q0(\CIC1Sin/d10_58 ), .F1(\CIC1Sin/d10_71_N_1747_63 ), 
    .Q1(\CIC1Sin/d10_63 ));
  CIC1Sin_SLICE_1940 \CIC1Sin/SLICE_1940 ( .C1(\CIC1Sin/n5968 ), 
    .B1(\CIC1Sin/n6012 ), .A1(\CIC1Sin/n5974 ), .C0(\CIC1Sin/n5968 ), 
    .B0(\CIC1Sin/n6015 ), .A0(\CIC1Sin/n5977 ), 
    .DI1(\CIC1Sin/d10_71_N_1747_67 ), .DI0(\CIC1Sin/d10_71_N_1747_64 ), 
    .CE(\CIC1Sin/v_comb ), .CLK(osc_clk), .F0(\CIC1Sin/d10_71_N_1747_64 ), 
    .Q0(\CIC1Sin/d10_64 ), .F1(\CIC1Sin/d10_71_N_1747_67 ), 
    .Q1(\CIC1Sin/d10_67 ));
  CIC1Sin_SLICE_1941 \CIC1Sin/SLICE_1941 ( .C1(\CIC1Sin/n5968 ), 
    .B1(\CIC1Sin/n6010 ), .A1(\CIC1Sin/n5972 ), .C0(\CIC1Sin/n5968 ), 
    .B0(\CIC1Sin/n6011 ), .A0(\CIC1Sin/n5973 ), 
    .DI1(\CIC1Sin/d10_71_N_1747_69 ), .DI0(\CIC1Sin/d10_71_N_1747_68 ), 
    .CE(\CIC1Sin/v_comb ), .CLK(osc_clk), .F0(\CIC1Sin/d10_71_N_1747_68 ), 
    .Q0(\CIC1Sin/d10_68 ), .F1(\CIC1Sin/d10_71_N_1747_69 ), 
    .Q1(\CIC1Sin/d10_69 ));
  CIC1Sin_SLICE_1942 \CIC1Sin/SLICE_1942 ( .C1(\CIC1Sin/n5968 ), 
    .B1(\CIC1Sin/n6008 ), .A1(\CIC1Sin/n5970 ), .C0(\CIC1Sin/n5968 ), 
    .B0(\CIC1Sin/n6009 ), .A0(\CIC1Sin/n5971 ), 
    .DI1(\CIC1Sin/d10_71_N_1747_71 ), .DI0(\CIC1Sin/d10_71_N_1747_70 ), 
    .CE(\CIC1Sin/v_comb ), .CLK(osc_clk), .F0(\CIC1Sin/d10_71_N_1747_70 ), 
    .Q0(\CIC1Sin/d10_70 ), .F1(\CIC1Sin/d10_71_N_1747_71 ), 
    .Q1(\CIC1Sin/d10_71 ));
  CIC1Sin_SLICE_1943 \CIC1Sin/SLICE_1943 ( .C0(\CIC1Sin/n5968 ), 
    .B0(\CIC1Sin/n6020 ), .A0(\CIC1Sin/n5982 ), 
    .DI0(\CIC1Sin/d10_71_N_1747_59 ), .CE(\CIC1Sin/v_comb ), .CLK(osc_clk), 
    .F0(\CIC1Sin/d10_71_N_1747_59 ), .Q0(\CIC1Sin/d10_59_adj_2500 ));
  CIC1Sin_SLICE_1944 \CIC1Sin/SLICE_1944 ( .C0(\CIC1Sin/n5968 ), 
    .B0(\CIC1Sin/n6019 ), .A0(\CIC1Sin/n5981 ), 
    .DI0(\CIC1Sin/d10_71_N_1747_60 ), .CE(\CIC1Sin/v_comb ), .CLK(osc_clk), 
    .F0(\CIC1Sin/d10_71_N_1747_60 ), .Q0(\CIC1Sin/d10_60_adj_2521 ));
  CIC1Sin_SLICE_1945 \CIC1Sin/SLICE_1945 ( .C0(\CIC1Sin/n5968 ), 
    .B0(\CIC1Sin/n6018 ), .A0(\CIC1Sin/n5980 ), 
    .DI0(\CIC1Sin/d10_71_N_1747_61 ), .CE(\CIC1Sin/v_comb ), .CLK(osc_clk), 
    .F0(\CIC1Sin/d10_71_N_1747_61 ), .Q0(\CIC1Sin/d10_61_adj_2522 ));
  CIC1Sin_SLICE_1946 \CIC1Sin/SLICE_1946 ( .C0(\CIC1Sin/n5968 ), 
    .B0(\CIC1Sin/n6017 ), .A0(\CIC1Sin/n5979 ), 
    .DI0(\CIC1Sin/d10_71_N_1747_62 ), .CE(\CIC1Sin/v_comb ), .CLK(osc_clk), 
    .F0(\CIC1Sin/d10_71_N_1747_62 ), .Q0(\CIC1Sin/d10_62_adj_2497 ));
  CIC1Sin_SLICE_1947 \CIC1Sin/SLICE_1947 ( .C0(\CIC1Sin/n5968 ), 
    .B0(\CIC1Sin/n6014 ), .A0(\CIC1Sin/n5976 ), 
    .DI0(\CIC1Sin/d10_71_N_1747_65 ), .CE(\CIC1Sin/v_comb ), .CLK(osc_clk), 
    .F0(\CIC1Sin/d10_71_N_1747_65 ), .Q0(\CIC1Sin/d10_65_adj_2488 ));
  CIC1Sin_SLICE_1948 \CIC1Sin/SLICE_1948 ( .C0(\CIC1Sin/n5968 ), 
    .B0(\CIC1Sin/n6013 ), .A0(\CIC1Sin/n5975 ), 
    .DI0(\CIC1Sin/d10_71_N_1747_66 ), .CE(\CIC1Sin/v_comb ), .CLK(osc_clk), 
    .F0(\CIC1Sin/d10_71_N_1747_66 ), .Q0(\CIC1Sin/d10_66_adj_2491 ));
  CIC1Sin_SLICE_1949 \CIC1Sin/SLICE_1949 ( .B0(\CIC1Sin/d1_0 ), 
    .A0(MixerOutSin_0), .DI0(\CIC1Sin/d1_71_N_418_0 ), .CLK(osc_clk), 
    .F0(\CIC1Sin/d1_71_N_418_0 ), .Q0(\CIC1Sin/d1_0 ));
  CIC1Sin_SLICE_1950 \CIC1Sin/SLICE_1950 ( .B0(\CIC1Sin/d2_0 ), 
    .A0(\CIC1Sin/d1_0 ), .DI0(\CIC1Sin/d2_71_N_490_0 ), .CLK(osc_clk), 
    .F0(\CIC1Sin/d2_71_N_490_0 ), .Q0(\CIC1Sin/d2_0 ));
  CIC1Sin_SLICE_1951 \CIC1Sin/SLICE_1951 ( .B0(\CIC1Sin/d3_0 ), 
    .A0(\CIC1Sin/d2_0 ), .DI0(\CIC1Sin/d3_71_N_562_0 ), .CLK(osc_clk), 
    .F0(\CIC1Sin/d3_71_N_562_0 ), .Q0(\CIC1Sin/d3_0 ));
  CIC1Sin_SLICE_1952 \CIC1Sin/SLICE_1952 ( .B0(\CIC1Sin/d4_0 ), 
    .A0(\CIC1Sin/d3_0 ), .DI0(\CIC1Sin/d4_71_N_634_0 ), .CLK(osc_clk), 
    .F0(\CIC1Sin/d4_71_N_634_0 ), .Q0(\CIC1Sin/d4_0 ));
  CIC1Sin_SLICE_1953 \CIC1Sin/SLICE_1953 ( .B0(\CIC1Sin/d5_0 ), 
    .A0(\CIC1Sin/d4_0 ), .DI0(\CIC1Sin/d5_71_N_706_0 ), .CLK(osc_clk), 
    .F0(\CIC1Sin/d5_71_N_706_0 ), .Q0(\CIC1Sin/d5_0 ));
  CIC1Sin_SLICE_1954 \CIC1Sin/SLICE_1954 ( .M0(\CIC1Sin/d6_71_N_1459_20 ), 
    .CE(\CIC1Sin/osc_clk_enable_210 ), .CLK(osc_clk), .Q0(\CIC1Sin/d6_20 ));
  CIC1Sin_SLICE_1955 \CIC1Sin/SLICE_1955 ( .M0(\CIC1Sin/d7_71_N_1531_28 ), 
    .CE(\CIC1Sin/osc_clk_enable_360 ), .CLK(osc_clk), .Q0(\CIC1Sin/d7_28 ));
  CIC1Sin_SLICE_1956 \CIC1Sin/SLICE_1956 ( .B0(\CIC1Sin/d_clk_tmp ), 
    .A0(\CIC1Sin/n54 ), .DI0(\CIC1Sin/n8396 ), 
    .LSR(\CIC1Sin/osc_clk_enable_141 ), .CLK(osc_clk), .F0(\CIC1Sin/n8396 ), 
    .Q0(\CIC1Sin/d_clk_tmp ));
  CIC1Sin_SLICE_1957 \CIC1Sin/SLICE_1957 ( .M0(\CIC1Sin/d6_0 ), 
    .CE(\CIC1Sin/osc_clk_enable_69 ), .CLK(osc_clk), .Q0(\CIC1Sin/d_d6_0 ));
  CIC1Sin_SLICE_1958 \CIC1Sin/SLICE_1958 ( .M1(\CIC1Sin/d6_2 ), 
    .M0(\CIC1Sin/d6_1 ), .CE(\CIC1Sin/osc_clk_enable_260 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d6_1 ), .Q1(\CIC1Sin/d_d6_2 ));
  CIC1Sin_SLICE_1959 \CIC1Sin/SLICE_1959 ( .M1(\CIC1Sin/d6_4 ), 
    .M0(\CIC1Sin/d6_3 ), .CE(\CIC1Sin/osc_clk_enable_260 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d6_3 ), .Q1(\CIC1Sin/d_d6_4 ));
  CIC1Sin_SLICE_1960 \CIC1Sin/SLICE_1960 ( .M1(\CIC1Sin/d6_6 ), 
    .M0(\CIC1Sin/d6_5 ), .CE(\CIC1Sin/osc_clk_enable_260 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d6_5 ), .Q1(\CIC1Sin/d_d6_6 ));
  CIC1Sin_SLICE_1961 \CIC1Sin/SLICE_1961 ( .M1(\CIC1Sin/d6_8 ), 
    .M0(\CIC1Sin/d6_7 ), .CE(\CIC1Sin/osc_clk_enable_260 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d6_7 ), .Q1(\CIC1Sin/d_d6_8 ));
  CIC1Sin_SLICE_1962 \CIC1Sin/SLICE_1962 ( .M1(\CIC1Sin/d6_10 ), 
    .M0(\CIC1Sin/d6_9 ), .CE(\CIC1Sin/osc_clk_enable_260 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d6_9 ), .Q1(\CIC1Sin/d_d6_10 ));
  CIC1Sin_SLICE_1963 \CIC1Sin/SLICE_1963 ( .M1(\CIC1Sin/d6_12 ), 
    .M0(\CIC1Sin/d6_11 ), .CE(\CIC1Sin/osc_clk_enable_260 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d6_11 ), .Q1(\CIC1Sin/d_d6_12 ));
  CIC1Sin_SLICE_1964 \CIC1Sin/SLICE_1964 ( .M1(\CIC1Sin/d6_14 ), 
    .M0(\CIC1Sin/d6_13 ), .CE(\CIC1Sin/osc_clk_enable_260 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d6_13 ), .Q1(\CIC1Sin/d_d6_14 ));
  CIC1Sin_SLICE_1965 \CIC1Sin/SLICE_1965 ( .M1(\CIC1Sin/d6_16 ), 
    .M0(\CIC1Sin/d6_15 ), .CE(\CIC1Sin/osc_clk_enable_260 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d6_15 ), .Q1(\CIC1Sin/d_d6_16 ));
  CIC1Sin_SLICE_1966 \CIC1Sin/SLICE_1966 ( .M1(\CIC1Sin/d6_18 ), 
    .M0(\CIC1Sin/d6_17 ), .CE(\CIC1Sin/osc_clk_enable_260 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d6_17 ), .Q1(\CIC1Sin/d_d6_18 ));
  CIC1Sin_SLICE_1967 \CIC1Sin/SLICE_1967 ( .M1(\CIC1Sin/d6_20 ), 
    .M0(\CIC1Sin/d6_19 ), .CE(\CIC1Sin/osc_clk_enable_260 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d6_19 ), .Q1(\CIC1Sin/d_d6_20 ));
  CIC1Sin_SLICE_1968 \CIC1Sin/SLICE_1968 ( .M1(\CIC1Sin/d6_22 ), 
    .M0(\CIC1Sin/d6_21 ), .CE(\CIC1Sin/osc_clk_enable_260 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d6_21 ), .Q1(\CIC1Sin/d_d6_22 ));
  CIC1Sin_SLICE_1969 \CIC1Sin/SLICE_1969 ( .M1(\CIC1Sin/d6_24 ), 
    .M0(\CIC1Sin/d6_23 ), .CE(\CIC1Sin/osc_clk_enable_260 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d6_23 ), .Q1(\CIC1Sin/d_d6_24 ));
  CIC1Sin_SLICE_1970 \CIC1Sin/SLICE_1970 ( .M1(\CIC1Sin/d6_26 ), 
    .M0(\CIC1Sin/d6_25 ), .CE(\CIC1Sin/osc_clk_enable_260 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d6_25 ), .Q1(\CIC1Sin/d_d6_26 ));
  CIC1Sin_SLICE_1971 \CIC1Sin/SLICE_1971 ( .M1(\CIC1Sin/d6_28 ), 
    .M0(\CIC1Sin/d6_27 ), .CE(\CIC1Sin/osc_clk_enable_260 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d6_27 ), .Q1(\CIC1Sin/d_d6_28 ));
  CIC1Sin_SLICE_1972 \CIC1Sin/SLICE_1972 ( .M1(\CIC1Sin/d6_30 ), 
    .M0(\CIC1Sin/d6_29 ), .CE(\CIC1Sin/osc_clk_enable_260 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d6_29 ), .Q1(\CIC1Sin/d_d6_30 ));
  CIC1Sin_SLICE_1973 \CIC1Sin/SLICE_1973 ( .M1(\CIC1Sin/d6_32 ), 
    .M0(\CIC1Sin/d6_31 ), .CE(\CIC1Sin/osc_clk_enable_260 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d6_31 ), .Q1(\CIC1Sin/d_d6_32 ));
  CIC1Sin_SLICE_1974 \CIC1Sin/SLICE_1974 ( .M1(\CIC1Sin/d6_34 ), 
    .M0(\CIC1Sin/d6_33 ), .CE(\CIC1Sin/osc_clk_enable_260 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d6_33 ), .Q1(\CIC1Sin/d_d6_34 ));
  CIC1Sin_SLICE_1975 \CIC1Sin/SLICE_1975 ( .M1(\CIC1Sin/d6_36 ), 
    .M0(\CIC1Sin/d6_35 ), .CE(\CIC1Sin/osc_clk_enable_260 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d6_35 ), .Q1(\CIC1Sin/d_d6_36 ));
  CIC1Sin_SLICE_1976 \CIC1Sin/SLICE_1976 ( .M1(\CIC1Sin/d6_38 ), 
    .M0(\CIC1Sin/d6_37 ), .CE(\CIC1Sin/osc_clk_enable_260 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d6_37 ), .Q1(\CIC1Sin/d_d6_38 ));
  CIC1Sin_SLICE_1977 \CIC1Sin/SLICE_1977 ( .M1(\CIC1Sin/d6_40 ), 
    .M0(\CIC1Sin/d6_39 ), .CE(\CIC1Sin/osc_clk_enable_260 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d6_39 ), .Q1(\CIC1Sin/d_d6_40 ));
  CIC1Sin_SLICE_1978 \CIC1Sin/SLICE_1978 ( .M1(\CIC1Sin/d6_42 ), 
    .M0(\CIC1Sin/d6_41 ), .CE(\CIC1Sin/osc_clk_enable_260 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d6_41 ), .Q1(\CIC1Sin/d_d6_42 ));
  CIC1Sin_SLICE_1979 \CIC1Sin/SLICE_1979 ( .M1(\CIC1Sin/d6_44 ), 
    .M0(\CIC1Sin/d6_43 ), .CE(\CIC1Sin/osc_clk_enable_260 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d6_43 ), .Q1(\CIC1Sin/d_d6_44 ));
  CIC1Sin_SLICE_1980 \CIC1Sin/SLICE_1980 ( .M1(\CIC1Sin/d6_46 ), 
    .M0(\CIC1Sin/d6_45 ), .CE(\CIC1Sin/osc_clk_enable_260 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d6_45 ), .Q1(\CIC1Sin/d_d6_46 ));
  CIC1Sin_SLICE_1981 \CIC1Sin/SLICE_1981 ( .M1(\CIC1Sin/d6_48 ), 
    .M0(\CIC1Sin/d6_47 ), .CE(\CIC1Sin/osc_clk_enable_260 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d6_47 ), .Q1(\CIC1Sin/d_d6_48 ));
  CIC1Sin_SLICE_1982 \CIC1Sin/SLICE_1982 ( .M1(\CIC1Sin/d6_50 ), 
    .M0(\CIC1Sin/d6_49 ), .CE(\CIC1Sin/osc_clk_enable_310 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d6_49 ), .Q1(\CIC1Sin/d_d6_50 ));
  CIC1Sin_SLICE_1983 \CIC1Sin/SLICE_1983 ( .M1(\CIC1Sin/d6_52 ), 
    .M0(\CIC1Sin/d6_51 ), .CE(\CIC1Sin/osc_clk_enable_310 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d6_51 ), .Q1(\CIC1Sin/d_d6_52 ));
  CIC1Sin_SLICE_1984 \CIC1Sin/SLICE_1984 ( .M1(\CIC1Sin/d6_54 ), 
    .M0(\CIC1Sin/d6_53 ), .CE(\CIC1Sin/osc_clk_enable_310 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d6_53 ), .Q1(\CIC1Sin/d_d6_54 ));
  CIC1Sin_SLICE_1985 \CIC1Sin/SLICE_1985 ( .M1(\CIC1Sin/d6_56 ), 
    .M0(\CIC1Sin/d6_55 ), .CE(\CIC1Sin/osc_clk_enable_310 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d6_55 ), .Q1(\CIC1Sin/d_d6_56 ));
  CIC1Sin_SLICE_1986 \CIC1Sin/SLICE_1986 ( .M1(\CIC1Sin/d6_58 ), 
    .M0(\CIC1Sin/d6_57 ), .CE(\CIC1Sin/osc_clk_enable_310 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d6_57 ), .Q1(\CIC1Sin/d_d6_58 ));
  CIC1Sin_SLICE_1987 \CIC1Sin/SLICE_1987 ( .M1(\CIC1Sin/d6_60 ), 
    .M0(\CIC1Sin/d6_59 ), .CE(\CIC1Sin/osc_clk_enable_310 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d6_59 ), .Q1(\CIC1Sin/d_d6_60 ));
  CIC1Sin_SLICE_1988 \CIC1Sin/SLICE_1988 ( .M1(\CIC1Sin/d6_62 ), 
    .M0(\CIC1Sin/d6_61 ), .CE(\CIC1Sin/osc_clk_enable_310 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d6_61 ), .Q1(\CIC1Sin/d_d6_62 ));
  CIC1Sin_SLICE_1989 \CIC1Sin/SLICE_1989 ( .M1(\CIC1Sin/d6_64 ), 
    .M0(\CIC1Sin/d6_63 ), .CE(\CIC1Sin/osc_clk_enable_310 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d6_63 ), .Q1(\CIC1Sin/d_d6_64 ));
  CIC1Sin_SLICE_1990 \CIC1Sin/SLICE_1990 ( .M1(\CIC1Sin/d6_66 ), 
    .M0(\CIC1Sin/d6_65 ), .CE(\CIC1Sin/osc_clk_enable_310 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d6_65 ), .Q1(\CIC1Sin/d_d6_66 ));
  CIC1Sin_SLICE_1991 \CIC1Sin/SLICE_1991 ( .M1(\CIC1Sin/d6_68 ), 
    .M0(\CIC1Sin/d6_67 ), .CE(\CIC1Sin/osc_clk_enable_310 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d6_67 ), .Q1(\CIC1Sin/d_d6_68 ));
  CIC1Sin_SLICE_1992 \CIC1Sin/SLICE_1992 ( .M1(\CIC1Sin/d6_70 ), 
    .M0(\CIC1Sin/d6_69 ), .CE(\CIC1Sin/osc_clk_enable_310 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d6_69 ), .Q1(\CIC1Sin/d_d6_70 ));
  CIC1Sin_SLICE_1993 \CIC1Sin/SLICE_1993 ( .M0(\CIC1Sin/d6_71 ), 
    .CE(\CIC1Sin/osc_clk_enable_310 ), .CLK(osc_clk), .Q0(\CIC1Sin/d_d6_71 ));
  CIC1Sin_SLICE_1994 \CIC1Sin/SLICE_1994 ( .M0(\CIC1Sin/d7_0 ), 
    .CE(\CIC1Sin/osc_clk_enable_69 ), .CLK(osc_clk), .Q0(\CIC1Sin/d_d7_0 ));
  CIC1Sin_SLICE_1995 \CIC1Sin/SLICE_1995 ( .M1(\CIC1Sin/d7_2 ), 
    .M0(\CIC1Sin/d7_1 ), .CE(\CIC1Sin/osc_clk_enable_360 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d7_1 ), .Q1(\CIC1Sin/d_d7_2 ));
  CIC1Sin_SLICE_1996 \CIC1Sin/SLICE_1996 ( .M1(\CIC1Sin/d7_4 ), 
    .M0(\CIC1Sin/d7_3 ), .CE(\CIC1Sin/osc_clk_enable_360 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d7_3 ), .Q1(\CIC1Sin/d_d7_4 ));
  CIC1Sin_SLICE_1997 \CIC1Sin/SLICE_1997 ( .M1(\CIC1Sin/d7_6 ), 
    .M0(\CIC1Sin/d7_5 ), .CE(\CIC1Sin/osc_clk_enable_360 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d7_5 ), .Q1(\CIC1Sin/d_d7_6 ));
  CIC1Sin_SLICE_1998 \CIC1Sin/SLICE_1998 ( .M1(\CIC1Sin/d7_8 ), 
    .M0(\CIC1Sin/d7_7 ), .CE(\CIC1Sin/osc_clk_enable_410 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d7_7 ), .Q1(\CIC1Sin/d_d7_8 ));
  CIC1Sin_SLICE_1999 \CIC1Sin/SLICE_1999 ( .M1(\CIC1Sin/d7_10 ), 
    .M0(\CIC1Sin/d7_9 ), .CE(\CIC1Sin/osc_clk_enable_410 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d7_9 ), .Q1(\CIC1Sin/d_d7_10 ));
  CIC1Sin_SLICE_2000 \CIC1Sin/SLICE_2000 ( .M1(\CIC1Sin/d7_12 ), 
    .M0(\CIC1Sin/d7_11 ), .CE(\CIC1Sin/osc_clk_enable_410 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d7_11 ), .Q1(\CIC1Sin/d_d7_12 ));
  CIC1Sin_SLICE_2001 \CIC1Sin/SLICE_2001 ( .M1(\CIC1Sin/d7_14 ), 
    .M0(\CIC1Sin/d7_13 ), .CE(\CIC1Sin/osc_clk_enable_410 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d7_13 ), .Q1(\CIC1Sin/d_d7_14 ));
  CIC1Sin_SLICE_2002 \CIC1Sin/SLICE_2002 ( .M1(\CIC1Sin/d7_16 ), 
    .M0(\CIC1Sin/d7_15 ), .CE(\CIC1Sin/osc_clk_enable_410 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d7_15 ), .Q1(\CIC1Sin/d_d7_16 ));
  CIC1Sin_SLICE_2003 \CIC1Sin/SLICE_2003 ( .M1(\CIC1Sin/d7_18 ), 
    .M0(\CIC1Sin/d7_17 ), .CE(\CIC1Sin/osc_clk_enable_410 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d7_17 ), .Q1(\CIC1Sin/d_d7_18 ));
  CIC1Sin_SLICE_2004 \CIC1Sin/SLICE_2004 ( .M1(\CIC1Sin/d7_20 ), 
    .M0(\CIC1Sin/d7_19 ), .CE(\CIC1Sin/osc_clk_enable_410 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d7_19 ), .Q1(\CIC1Sin/d_d7_20 ));
  CIC1Sin_SLICE_2005 \CIC1Sin/SLICE_2005 ( .M1(\CIC1Sin/d7_22 ), 
    .M0(\CIC1Sin/d7_21 ), .CE(\CIC1Sin/osc_clk_enable_410 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d7_21 ), .Q1(\CIC1Sin/d_d7_22 ));
  CIC1Sin_SLICE_2006 \CIC1Sin/SLICE_2006 ( .M1(\CIC1Sin/d7_24 ), 
    .M0(\CIC1Sin/d7_23 ), .CE(\CIC1Sin/osc_clk_enable_410 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d7_23 ), .Q1(\CIC1Sin/d_d7_24 ));
  CIC1Sin_SLICE_2007 \CIC1Sin/SLICE_2007 ( .M1(\CIC1Sin/d7_26 ), 
    .M0(\CIC1Sin/d7_25 ), .CE(\CIC1Sin/osc_clk_enable_410 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d7_25 ), .Q1(\CIC1Sin/d_d7_26 ));
  CIC1Sin_SLICE_2008 \CIC1Sin/SLICE_2008 ( .M1(\CIC1Sin/d7_28 ), 
    .M0(\CIC1Sin/d7_27 ), .CE(\CIC1Sin/osc_clk_enable_410 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d7_27 ), .Q1(\CIC1Sin/d_d7_28 ));
  CIC1Sin_SLICE_2009 \CIC1Sin/SLICE_2009 ( .M1(\CIC1Sin/d7_30 ), 
    .M0(\CIC1Sin/d7_29 ), .CE(\CIC1Sin/osc_clk_enable_410 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d7_29 ), .Q1(\CIC1Sin/d_d7_30 ));
  CIC1Sin_SLICE_2010 \CIC1Sin/SLICE_2010 ( .M1(\CIC1Sin/d7_32 ), 
    .M0(\CIC1Sin/d7_31 ), .CE(\CIC1Sin/osc_clk_enable_410 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d7_31 ), .Q1(\CIC1Sin/d_d7_32 ));
  CIC1Sin_SLICE_2011 \CIC1Sin/SLICE_2011 ( .M1(\CIC1Sin/d7_34 ), 
    .M0(\CIC1Sin/d7_33 ), .CE(\CIC1Sin/osc_clk_enable_410 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d7_33 ), .Q1(\CIC1Sin/d_d7_34 ));
  CIC1Sin_SLICE_2012 \CIC1Sin/SLICE_2012 ( .M1(\CIC1Sin/d7_36 ), 
    .M0(\CIC1Sin/d7_35 ), .CE(\CIC1Sin/osc_clk_enable_410 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d7_35 ), .Q1(\CIC1Sin/d_d7_36 ));
  CIC1Sin_SLICE_2013 \CIC1Sin/SLICE_2013 ( .M1(\CIC1Sin/d7_38 ), 
    .M0(\CIC1Sin/d7_37 ), .CE(\CIC1Sin/osc_clk_enable_410 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d7_37 ), .Q1(\CIC1Sin/d_d7_38 ));
  CIC1Sin_SLICE_2014 \CIC1Sin/SLICE_2014 ( .M1(\CIC1Sin/d7_40 ), 
    .M0(\CIC1Sin/d7_39 ), .CE(\CIC1Sin/osc_clk_enable_410 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d7_39 ), .Q1(\CIC1Sin/d_d7_40 ));
  CIC1Sin_SLICE_2015 \CIC1Sin/SLICE_2015 ( .M1(\CIC1Sin/d7_42 ), 
    .M0(\CIC1Sin/d7_41 ), .CE(\CIC1Sin/osc_clk_enable_410 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d7_41 ), .Q1(\CIC1Sin/d_d7_42 ));
  CIC1Sin_SLICE_2016 \CIC1Sin/SLICE_2016 ( .M1(\CIC1Sin/d7_44 ), 
    .M0(\CIC1Sin/d7_43 ), .CE(\CIC1Sin/osc_clk_enable_410 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d7_43 ), .Q1(\CIC1Sin/d_d7_44 ));
  CIC1Sin_SLICE_2017 \CIC1Sin/SLICE_2017 ( .M1(\CIC1Sin/d7_46 ), 
    .M0(\CIC1Sin/d7_45 ), .CE(\CIC1Sin/osc_clk_enable_410 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d7_45 ), .Q1(\CIC1Sin/d_d7_46 ));
  CIC1Sin_SLICE_2018 \CIC1Sin/SLICE_2018 ( .M1(\CIC1Sin/d7_48 ), 
    .M0(\CIC1Sin/d7_47 ), .CE(\CIC1Sin/osc_clk_enable_410 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d7_47 ), .Q1(\CIC1Sin/d_d7_48 ));
  CIC1Sin_SLICE_2019 \CIC1Sin/SLICE_2019 ( .M1(\CIC1Sin/d7_50 ), 
    .M0(\CIC1Sin/d7_49 ), .CE(\CIC1Sin/osc_clk_enable_410 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d7_49 ), .Q1(\CIC1Sin/d_d7_50 ));
  CIC1Sin_SLICE_2020 \CIC1Sin/SLICE_2020 ( .M1(\CIC1Sin/d7_52 ), 
    .M0(\CIC1Sin/d7_51 ), .CE(\CIC1Sin/osc_clk_enable_410 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d7_51 ), .Q1(\CIC1Sin/d_d7_52 ));
  CIC1Sin_SLICE_2021 \CIC1Sin/SLICE_2021 ( .M1(\CIC1Sin/d7_54 ), 
    .M0(\CIC1Sin/d7_53 ), .CE(\CIC1Sin/osc_clk_enable_410 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d7_53 ), .Q1(\CIC1Sin/d_d7_54 ));
  CIC1Sin_SLICE_2022 \CIC1Sin/SLICE_2022 ( .M1(\CIC1Sin/d7_56 ), 
    .M0(\CIC1Sin/d7_55 ), .CE(\CIC1Sin/osc_clk_enable_410 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d7_55 ), .Q1(\CIC1Sin/d_d7_56 ));
  CIC1Sin_SLICE_2023 \CIC1Sin/SLICE_2023 ( .M1(\CIC1Sin/d7_58 ), 
    .M0(\CIC1Sin/d7_57 ), .CE(\CIC1Sin/osc_clk_enable_460 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d7_57 ), .Q1(\CIC1Sin/d_d7_58 ));
  CIC1Sin_SLICE_2024 \CIC1Sin/SLICE_2024 ( .M1(\CIC1Sin/d7_60 ), 
    .M0(\CIC1Sin/d7_59 ), .CE(\CIC1Sin/osc_clk_enable_460 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d7_59 ), .Q1(\CIC1Sin/d_d7_60 ));
  CIC1Sin_SLICE_2025 \CIC1Sin/SLICE_2025 ( .M1(\CIC1Sin/d7_62 ), 
    .M0(\CIC1Sin/d7_61 ), .CE(\CIC1Sin/osc_clk_enable_460 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d7_61 ), .Q1(\CIC1Sin/d_d7_62 ));
  CIC1Sin_SLICE_2026 \CIC1Sin/SLICE_2026 ( .M1(\CIC1Sin/d7_64 ), 
    .M0(\CIC1Sin/d7_63 ), .CE(\CIC1Sin/osc_clk_enable_460 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d7_63 ), .Q1(\CIC1Sin/d_d7_64 ));
  CIC1Sin_SLICE_2027 \CIC1Sin/SLICE_2027 ( .M1(\CIC1Sin/d7_66 ), 
    .M0(\CIC1Sin/d7_65 ), .CE(\CIC1Sin/osc_clk_enable_460 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d7_65 ), .Q1(\CIC1Sin/d_d7_66 ));
  CIC1Sin_SLICE_2028 \CIC1Sin/SLICE_2028 ( .M1(\CIC1Sin/d7_68 ), 
    .M0(\CIC1Sin/d7_67 ), .CE(\CIC1Sin/osc_clk_enable_460 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d7_67 ), .Q1(\CIC1Sin/d_d7_68 ));
  CIC1Sin_SLICE_2029 \CIC1Sin/SLICE_2029 ( .M1(\CIC1Sin/d7_70 ), 
    .M0(\CIC1Sin/d7_69 ), .CE(\CIC1Sin/osc_clk_enable_460 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d7_69 ), .Q1(\CIC1Sin/d_d7_70 ));
  CIC1Sin_SLICE_2030 \CIC1Sin/SLICE_2030 ( .M0(\CIC1Sin/d7_71 ), 
    .CE(\CIC1Sin/osc_clk_enable_460 ), .CLK(osc_clk), .Q0(\CIC1Sin/d_d7_71 ));
  CIC1Sin_SLICE_2031 \CIC1Sin/SLICE_2031 ( .M0(\CIC1Sin/d8_0 ), 
    .CE(\CIC1Sin/osc_clk_enable_69 ), .CLK(osc_clk), .Q0(\CIC1Sin/d_d8_0 ));
  CIC1Sin_SLICE_2032 \CIC1Sin/SLICE_2032 ( .M1(\CIC1Sin/d8_2 ), 
    .M0(\CIC1Sin/d8_1 ), .CE(\CIC1Sin/osc_clk_enable_510 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d8_1 ), .Q1(\CIC1Sin/d_d8_2 ));
  CIC1Sin_SLICE_2033 \CIC1Sin/SLICE_2033 ( .M1(\CIC1Sin/d8_4 ), 
    .M0(\CIC1Sin/d8_3 ), .CE(\CIC1Sin/osc_clk_enable_510 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d8_3 ), .Q1(\CIC1Sin/d_d8_4 ));
  CIC1Sin_SLICE_2034 \CIC1Sin/SLICE_2034 ( .M1(\CIC1Sin/d8_6 ), 
    .M0(\CIC1Sin/d8_5 ), .CE(\CIC1Sin/osc_clk_enable_510 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d8_5 ), .Q1(\CIC1Sin/d_d8_6 ));
  CIC1Sin_SLICE_2035 \CIC1Sin/SLICE_2035 ( .M1(\CIC1Sin/d8_8 ), 
    .M0(\CIC1Sin/d8_7 ), .CE(\CIC1Sin/osc_clk_enable_510 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d8_7 ), .Q1(\CIC1Sin/d_d8_8 ));
  CIC1Sin_SLICE_2036 \CIC1Sin/SLICE_2036 ( .M1(\CIC1Sin/d8_10 ), 
    .M0(\CIC1Sin/d8_9 ), .CE(\CIC1Sin/osc_clk_enable_510 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d8_9 ), .Q1(\CIC1Sin/d_d8_10 ));
  CIC1Sin_SLICE_2037 \CIC1Sin/SLICE_2037 ( .M1(\CIC1Sin/d8_12 ), 
    .M0(\CIC1Sin/d8_11 ), .CE(\CIC1Sin/osc_clk_enable_510 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d8_11 ), .Q1(\CIC1Sin/d_d8_12 ));
  CIC1Sin_SLICE_2038 \CIC1Sin/SLICE_2038 ( .M1(\CIC1Sin/d8_14 ), 
    .M0(\CIC1Sin/d8_13 ), .CE(\CIC1Sin/osc_clk_enable_510 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d8_13 ), .Q1(\CIC1Sin/d_d8_14 ));
  CIC1Sin_SLICE_2039 \CIC1Sin/SLICE_2039 ( .M1(\CIC1Sin/d8_16 ), 
    .M0(\CIC1Sin/d8_15 ), .CE(\CIC1Sin/osc_clk_enable_560 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d8_15 ), .Q1(\CIC1Sin/d_d8_16 ));
  CIC1Sin_SLICE_2040 \CIC1Sin/SLICE_2040 ( .M1(\CIC1Sin/d8_18 ), 
    .M0(\CIC1Sin/d8_17 ), .CE(\CIC1Sin/osc_clk_enable_560 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d8_17 ), .Q1(\CIC1Sin/d_d8_18 ));
  CIC1Sin_SLICE_2041 \CIC1Sin/SLICE_2041 ( .M1(\CIC1Sin/d8_20 ), 
    .M0(\CIC1Sin/d8_19 ), .CE(\CIC1Sin/osc_clk_enable_560 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d8_19 ), .Q1(\CIC1Sin/d_d8_20 ));
  CIC1Sin_SLICE_2042 \CIC1Sin/SLICE_2042 ( .M1(\CIC1Sin/d8_22 ), 
    .M0(\CIC1Sin/d8_21 ), .CE(\CIC1Sin/osc_clk_enable_560 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d8_21 ), .Q1(\CIC1Sin/d_d8_22 ));
  CIC1Sin_SLICE_2043 \CIC1Sin/SLICE_2043 ( .M1(\CIC1Sin/d8_24 ), 
    .M0(\CIC1Sin/d8_23 ), .CE(\CIC1Sin/osc_clk_enable_560 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d8_23 ), .Q1(\CIC1Sin/d_d8_24 ));
  CIC1Sin_SLICE_2044 \CIC1Sin/SLICE_2044 ( .M1(\CIC1Sin/d8_26 ), 
    .M0(\CIC1Sin/d8_25 ), .CE(\CIC1Sin/osc_clk_enable_560 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d8_25 ), .Q1(\CIC1Sin/d_d8_26 ));
  CIC1Sin_SLICE_2045 \CIC1Sin/SLICE_2045 ( .M1(\CIC1Sin/d8_28 ), 
    .M0(\CIC1Sin/d8_27 ), .CE(\CIC1Sin/osc_clk_enable_560 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d8_27 ), .Q1(\CIC1Sin/d_d8_28 ));
  CIC1Sin_SLICE_2046 \CIC1Sin/SLICE_2046 ( .M1(\CIC1Sin/d8_30 ), 
    .M0(\CIC1Sin/d8_29 ), .CE(\CIC1Sin/osc_clk_enable_560 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d8_29 ), .Q1(\CIC1Sin/d_d8_30 ));
  CIC1Sin_SLICE_2047 \CIC1Sin/SLICE_2047 ( .M1(\CIC1Sin/d8_32 ), 
    .M0(\CIC1Sin/d8_31 ), .CE(\CIC1Sin/osc_clk_enable_560 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d8_31 ), .Q1(\CIC1Sin/d_d8_32 ));
  CIC1Sin_SLICE_2048 \CIC1Sin/SLICE_2048 ( .M1(\CIC1Sin/d8_34 ), 
    .M0(\CIC1Sin/d8_33 ), .CE(\CIC1Sin/osc_clk_enable_560 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d8_33 ), .Q1(\CIC1Sin/d_d8_34 ));
  CIC1Sin_SLICE_2049 \CIC1Sin/SLICE_2049 ( .M1(\CIC1Sin/d8_36 ), 
    .M0(\CIC1Sin/d8_35 ), .CE(\CIC1Sin/osc_clk_enable_560 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d8_35 ), .Q1(\CIC1Sin/d_d8_36 ));
  CIC1Sin_SLICE_2050 \CIC1Sin/SLICE_2050 ( .M1(\CIC1Sin/d8_38 ), 
    .M0(\CIC1Sin/d8_37 ), .CE(\CIC1Sin/osc_clk_enable_560 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d8_37 ), .Q1(\CIC1Sin/d_d8_38 ));
  CIC1Sin_SLICE_2051 \CIC1Sin/SLICE_2051 ( .M1(\CIC1Sin/d8_40 ), 
    .M0(\CIC1Sin/d8_39 ), .CE(\CIC1Sin/osc_clk_enable_560 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d8_39 ), .Q1(\CIC1Sin/d_d8_40 ));
  CIC1Sin_SLICE_2052 \CIC1Sin/SLICE_2052 ( .M1(\CIC1Sin/d8_42 ), 
    .M0(\CIC1Sin/d8_41 ), .CE(\CIC1Sin/osc_clk_enable_560 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d8_41 ), .Q1(\CIC1Sin/d_d8_42 ));
  CIC1Sin_SLICE_2053 \CIC1Sin/SLICE_2053 ( .M1(\CIC1Sin/d8_44 ), 
    .M0(\CIC1Sin/d8_43 ), .CE(\CIC1Sin/osc_clk_enable_560 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d8_43 ), .Q1(\CIC1Sin/d_d8_44 ));
  CIC1Sin_SLICE_2054 \CIC1Sin/SLICE_2054 ( .M1(\CIC1Sin/d8_46 ), 
    .M0(\CIC1Sin/d8_45 ), .CE(\CIC1Sin/osc_clk_enable_560 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d8_45 ), .Q1(\CIC1Sin/d_d8_46 ));
  CIC1Sin_SLICE_2055 \CIC1Sin/SLICE_2055 ( .M1(\CIC1Sin/d8_48 ), 
    .M0(\CIC1Sin/d8_47 ), .CE(\CIC1Sin/osc_clk_enable_560 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d8_47 ), .Q1(\CIC1Sin/d_d8_48 ));
  CIC1Sin_SLICE_2056 \CIC1Sin/SLICE_2056 ( .M1(\CIC1Sin/d8_50 ), 
    .M0(\CIC1Sin/d8_49 ), .CE(\CIC1Sin/osc_clk_enable_560 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d8_49 ), .Q1(\CIC1Sin/d_d8_50 ));
  CIC1Sin_SLICE_2057 \CIC1Sin/SLICE_2057 ( .M1(\CIC1Sin/d8_52 ), 
    .M0(\CIC1Sin/d8_51 ), .CE(\CIC1Sin/osc_clk_enable_560 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d8_51 ), .Q1(\CIC1Sin/d_d8_52 ));
  CIC1Sin_SLICE_2058 \CIC1Sin/SLICE_2058 ( .M1(\CIC1Sin/d8_54 ), 
    .M0(\CIC1Sin/d8_53 ), .CE(\CIC1Sin/osc_clk_enable_560 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d8_53 ), .Q1(\CIC1Sin/d_d8_54 ));
  CIC1Sin_SLICE_2059 \CIC1Sin/SLICE_2059 ( .M1(\CIC1Sin/d8_56 ), 
    .M0(\CIC1Sin/d8_55 ), .CE(\CIC1Sin/osc_clk_enable_560 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d8_55 ), .Q1(\CIC1Sin/d_d8_56 ));
  CIC1Sin_SLICE_2060 \CIC1Sin/SLICE_2060 ( .M1(\CIC1Sin/d8_58 ), 
    .M0(\CIC1Sin/d8_57 ), .CE(\CIC1Sin/osc_clk_enable_560 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d8_57 ), .Q1(\CIC1Sin/d_d8_58 ));
  CIC1Sin_SLICE_2061 \CIC1Sin/SLICE_2061 ( .M1(\CIC1Sin/d8_60 ), 
    .M0(\CIC1Sin/d8_59 ), .CE(\CIC1Sin/osc_clk_enable_560 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d8_59 ), .Q1(\CIC1Sin/d_d8_60 ));
  CIC1Sin_SLICE_2062 \CIC1Sin/SLICE_2062 ( .M1(\CIC1Sin/d8_62 ), 
    .M0(\CIC1Sin/d8_61 ), .CE(\CIC1Sin/osc_clk_enable_560 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d8_61 ), .Q1(\CIC1Sin/d_d8_62 ));
  CIC1Sin_SLICE_2063 \CIC1Sin/SLICE_2063 ( .M1(\CIC1Sin/d8_64 ), 
    .M0(\CIC1Sin/d8_63 ), .CE(\CIC1Sin/osc_clk_enable_560 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d8_63 ), .Q1(\CIC1Sin/d_d8_64 ));
  CIC1Sin_SLICE_2064 \CIC1Sin/SLICE_2064 ( .M1(\CIC1Sin/d8_66 ), 
    .M0(\CIC1Sin/d8_65 ), .CE(\CIC1Sin/osc_clk_enable_610 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d8_65 ), .Q1(\CIC1Sin/d_d8_66 ));
  CIC1Sin_SLICE_2065 \CIC1Sin/SLICE_2065 ( .M1(\CIC1Sin/d8_68 ), 
    .M0(\CIC1Sin/d8_67 ), .CE(\CIC1Sin/osc_clk_enable_610 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d8_67 ), .Q1(\CIC1Sin/d_d8_68 ));
  CIC1Sin_SLICE_2066 \CIC1Sin/SLICE_2066 ( .M1(\CIC1Sin/d8_70 ), 
    .M0(\CIC1Sin/d8_69 ), .CE(\CIC1Sin/osc_clk_enable_610 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d8_69 ), .Q1(\CIC1Sin/d_d8_70 ));
  CIC1Sin_SLICE_2067 \CIC1Sin/SLICE_2067 ( .M0(\CIC1Sin/d8_71 ), 
    .CE(\CIC1Sin/osc_clk_enable_610 ), .CLK(osc_clk), .Q0(\CIC1Sin/d_d8_71 ));
  CIC1Sin_SLICE_2068 \CIC1Sin/SLICE_2068 ( .M0(\CIC1Sin/d9_0 ), 
    .CE(\CIC1Sin/osc_clk_enable_69 ), .CLK(osc_clk), .Q0(\CIC1Sin/d_d9_0 ));
  CIC1Sin_SLICE_2069 \CIC1Sin/SLICE_2069 ( .M1(\CIC1Sin/d9_2 ), 
    .M0(\CIC1Sin/d9_1 ), .CE(\CIC1Sin/osc_clk_enable_660 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d9_1 ), .Q1(\CIC1Sin/d_d9_2 ));
  CIC1Sin_SLICE_2070 \CIC1Sin/SLICE_2070 ( .M1(\CIC1Sin/d9_4 ), 
    .M0(\CIC1Sin/d9_3 ), .CE(\CIC1Sin/osc_clk_enable_660 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d9_3 ), .Q1(\CIC1Sin/d_d9_4 ));
  CIC1Sin_SLICE_2071 \CIC1Sin/SLICE_2071 ( .M1(\CIC1Sin/d9_6 ), 
    .M0(\CIC1Sin/d9_5 ), .CE(\CIC1Sin/osc_clk_enable_660 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d9_5 ), .Q1(\CIC1Sin/d_d9_6 ));
  CIC1Sin_SLICE_2072 \CIC1Sin/SLICE_2072 ( .M1(\CIC1Sin/d9_8 ), 
    .M0(\CIC1Sin/d9_7 ), .CE(\CIC1Sin/osc_clk_enable_660 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d9_7 ), .Q1(\CIC1Sin/d_d9_8 ));
  CIC1Sin_SLICE_2073 \CIC1Sin/SLICE_2073 ( .M1(\CIC1Sin/d9_10 ), 
    .M0(\CIC1Sin/d9_9 ), .CE(\CIC1Sin/osc_clk_enable_660 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d9_9 ), .Q1(\CIC1Sin/d_d9_10 ));
  CIC1Sin_SLICE_2074 \CIC1Sin/SLICE_2074 ( .M1(\CIC1Sin/d9_12 ), 
    .M0(\CIC1Sin/d9_11 ), .CE(\CIC1Sin/osc_clk_enable_660 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d9_11 ), .Q1(\CIC1Sin/d_d9_12 ));
  CIC1Sin_SLICE_2075 \CIC1Sin/SLICE_2075 ( .M1(\CIC1Sin/d9_14 ), 
    .M0(\CIC1Sin/d9_13 ), .CE(\CIC1Sin/osc_clk_enable_660 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d9_13 ), .Q1(\CIC1Sin/d_d9_14 ));
  CIC1Sin_SLICE_2076 \CIC1Sin/SLICE_2076 ( .M1(\CIC1Sin/d9_16 ), 
    .M0(\CIC1Sin/d9_15 ), .CE(\CIC1Sin/osc_clk_enable_660 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d9_15 ), .Q1(\CIC1Sin/d_d9_16 ));
  CIC1Sin_SLICE_2077 \CIC1Sin/SLICE_2077 ( .M1(\CIC1Sin/d9_18 ), 
    .M0(\CIC1Sin/d9_17 ), .CE(\CIC1Sin/osc_clk_enable_660 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d9_17 ), .Q1(\CIC1Sin/d_d9_18 ));
  CIC1Sin_SLICE_2078 \CIC1Sin/SLICE_2078 ( .M1(\CIC1Sin/d9_20 ), 
    .M0(\CIC1Sin/d9_19 ), .CE(\CIC1Sin/osc_clk_enable_660 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d9_19 ), .Q1(\CIC1Sin/d_d9_20 ));
  CIC1Sin_SLICE_2079 \CIC1Sin/SLICE_2079 ( .M1(\CIC1Sin/d9_22 ), 
    .M0(\CIC1Sin/d9_21 ), .CE(\CIC1Sin/osc_clk_enable_660 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d9_21 ), .Q1(\CIC1Sin/d_d9_22 ));
  CIC1Sin_SLICE_2080 \CIC1Sin/SLICE_2080 ( .M1(\CIC1Sin/d9_24 ), 
    .M0(\CIC1Sin/d9_23 ), .CE(\CIC1Sin/osc_clk_enable_710 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d9_23 ), .Q1(\CIC1Sin/d_d9_24 ));
  CIC1Sin_SLICE_2081 \CIC1Sin/SLICE_2081 ( .M1(\CIC1Sin/d9_26 ), 
    .M0(\CIC1Sin/d9_25 ), .CE(\CIC1Sin/osc_clk_enable_710 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d9_25 ), .Q1(\CIC1Sin/d_d9_26 ));
  CIC1Sin_SLICE_2082 \CIC1Sin/SLICE_2082 ( .M1(\CIC1Sin/d9_28 ), 
    .M0(\CIC1Sin/d9_27 ), .CE(\CIC1Sin/osc_clk_enable_710 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d9_27 ), .Q1(\CIC1Sin/d_d9_28 ));
  CIC1Sin_SLICE_2083 \CIC1Sin/SLICE_2083 ( .M1(\CIC1Sin/d9_30 ), 
    .M0(\CIC1Sin/d9_29 ), .CE(\CIC1Sin/osc_clk_enable_710 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d9_29 ), .Q1(\CIC1Sin/d_d9_30 ));
  CIC1Sin_SLICE_2084 \CIC1Sin/SLICE_2084 ( .M1(\CIC1Sin/d9_32 ), 
    .M0(\CIC1Sin/d9_31 ), .CE(\CIC1Sin/osc_clk_enable_710 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d9_31 ), .Q1(\CIC1Sin/d_d9_32 ));
  CIC1Sin_SLICE_2085 \CIC1Sin/SLICE_2085 ( .M1(\CIC1Sin/d9_34 ), 
    .M0(\CIC1Sin/d9_33 ), .CE(\CIC1Sin/osc_clk_enable_710 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d9_33 ), .Q1(\CIC1Sin/d_d9_34 ));
  CIC1Sin_SLICE_2086 \CIC1Sin/SLICE_2086 ( .M1(\CIC1Sin/d9_36 ), 
    .M0(\CIC1Sin/d9_35 ), .CE(\CIC1Sin/osc_clk_enable_710 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d9_35 ), .Q1(\CIC1Sin/d_d9_36 ));
  CIC1Sin_SLICE_2087 \CIC1Sin/SLICE_2087 ( .M1(\CIC1Sin/d9_38 ), 
    .M0(\CIC1Sin/d9_37 ), .CE(\CIC1Sin/osc_clk_enable_710 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d9_37 ), .Q1(\CIC1Sin/d_d9_38 ));
  CIC1Sin_SLICE_2088 \CIC1Sin/SLICE_2088 ( .M1(\CIC1Sin/d9_40 ), 
    .M0(\CIC1Sin/d9_39 ), .CE(\CIC1Sin/osc_clk_enable_710 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d9_39 ), .Q1(\CIC1Sin/d_d9_40 ));
  CIC1Sin_SLICE_2089 \CIC1Sin/SLICE_2089 ( .M1(\CIC1Sin/d9_42 ), 
    .M0(\CIC1Sin/d9_41 ), .CE(\CIC1Sin/osc_clk_enable_710 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d9_41 ), .Q1(\CIC1Sin/d_d9_42 ));
  CIC1Sin_SLICE_2090 \CIC1Sin/SLICE_2090 ( .M1(\CIC1Sin/d9_44 ), 
    .M0(\CIC1Sin/d9_43 ), .CE(\CIC1Sin/osc_clk_enable_710 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d9_43 ), .Q1(\CIC1Sin/d_d9_44 ));
  CIC1Sin_SLICE_2091 \CIC1Sin/SLICE_2091 ( .M1(\CIC1Sin/d9_46 ), 
    .M0(\CIC1Sin/d9_45 ), .CE(\CIC1Sin/osc_clk_enable_710 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d9_45 ), .Q1(\CIC1Sin/d_d9_46 ));
  CIC1Sin_SLICE_2092 \CIC1Sin/SLICE_2092 ( .M1(\CIC1Sin/d9_48 ), 
    .M0(\CIC1Sin/d9_47 ), .CE(\CIC1Sin/osc_clk_enable_710 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d9_47 ), .Q1(\CIC1Sin/d_d9_48 ));
  CIC1Sin_SLICE_2093 \CIC1Sin/SLICE_2093 ( .M1(\CIC1Sin/d9_50 ), 
    .M0(\CIC1Sin/d9_49 ), .CE(\CIC1Sin/osc_clk_enable_710 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d9_49 ), .Q1(\CIC1Sin/d_d9_50 ));
  CIC1Sin_SLICE_2094 \CIC1Sin/SLICE_2094 ( .M1(\CIC1Sin/d9_52 ), 
    .M0(\CIC1Sin/d9_51 ), .CE(\CIC1Sin/osc_clk_enable_710 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d9_51 ), .Q1(\CIC1Sin/d_d9_52 ));
  CIC1Sin_SLICE_2095 \CIC1Sin/SLICE_2095 ( .M1(\CIC1Sin/d9_54 ), 
    .M0(\CIC1Sin/d9_53 ), .CE(\CIC1Sin/osc_clk_enable_710 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d9_53 ), .Q1(\CIC1Sin/d_d9_54 ));
  CIC1Sin_SLICE_2096 \CIC1Sin/SLICE_2096 ( .M1(\CIC1Sin/d9_56 ), 
    .M0(\CIC1Sin/d9_55 ), .CE(\CIC1Sin/osc_clk_enable_710 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d9_55 ), .Q1(\CIC1Sin/d_d9_56 ));
  CIC1Sin_SLICE_2097 \CIC1Sin/SLICE_2097 ( .M1(\CIC1Sin/d9_58 ), 
    .M0(\CIC1Sin/d9_57 ), .CE(\CIC1Sin/osc_clk_enable_710 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d9_57 ), .Q1(\CIC1Sin/d_d9_58 ));
  CIC1Sin_SLICE_2098 \CIC1Sin/SLICE_2098 ( .M1(\CIC1Sin/d9_60 ), 
    .M0(\CIC1Sin/d9_59 ), .CE(\CIC1Sin/osc_clk_enable_710 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d9_59 ), .Q1(\CIC1Sin/d_d9_60 ));
  CIC1Sin_SLICE_2099 \CIC1Sin/SLICE_2099 ( .M1(\CIC1Sin/d9_62 ), 
    .M0(\CIC1Sin/d9_61 ), .CE(\CIC1Sin/osc_clk_enable_710 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d9_61 ), .Q1(\CIC1Sin/d_d9_62 ));
  CIC1Sin_SLICE_2100 \CIC1Sin/SLICE_2100 ( .M1(\CIC1Sin/d9_64 ), 
    .M0(\CIC1Sin/d9_63 ), .CE(\CIC1Sin/osc_clk_enable_710 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d9_63 ), .Q1(\CIC1Sin/d_d9_64 ));
  CIC1Sin_SLICE_2101 \CIC1Sin/SLICE_2101 ( .M1(\CIC1Sin/d9_66 ), 
    .M0(\CIC1Sin/d9_65 ), .CE(\CIC1Sin/osc_clk_enable_710 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d9_65 ), .Q1(\CIC1Sin/d_d9_66 ));
  CIC1Sin_SLICE_2102 \CIC1Sin/SLICE_2102 ( .M1(\CIC1Sin/d9_68 ), 
    .M0(\CIC1Sin/d9_67 ), .CE(\CIC1Sin/osc_clk_enable_710 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d9_67 ), .Q1(\CIC1Sin/d_d9_68 ));
  CIC1Sin_SLICE_2103 \CIC1Sin/SLICE_2103 ( .M1(\CIC1Sin/d9_70 ), 
    .M0(\CIC1Sin/d9_69 ), .CE(\CIC1Sin/osc_clk_enable_710 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d9_69 ), .Q1(\CIC1Sin/d_d9_70 ));
  CIC1Sin_SLICE_2104 \CIC1Sin/SLICE_2104 ( .M0(\CIC1Sin/d9_71 ), 
    .CE(\CIC1Sin/osc_clk_enable_710 ), .CLK(osc_clk), .Q0(\CIC1Sin/d_d9_71 ));
  CIC1Sin_SLICE_2105 \CIC1Sin/SLICE_2105 ( .M0(\CIC1Sin/d_tmp_0 ), 
    .CE(\CIC1Sin/osc_clk_enable_69 ), .CLK(osc_clk), .Q0(\CIC1Sin/d_d_tmp_0 ));
  CIC1Sin_SLICE_2106 \CIC1Sin/SLICE_2106 ( .M1(\CIC1Sin/d_tmp_2 ), 
    .M0(\CIC1Sin/d_tmp_1 ), .CE(\CIC1Sin/osc_clk_enable_160 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d_tmp_1 ), .Q1(\CIC1Sin/d_d_tmp_2 ));
  CIC1Sin_SLICE_2107 \CIC1Sin/SLICE_2107 ( .M1(\CIC1Sin/d_tmp_4 ), 
    .M0(\CIC1Sin/d_tmp_3 ), .CE(\CIC1Sin/osc_clk_enable_160 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d_tmp_3 ), .Q1(\CIC1Sin/d_d_tmp_4 ));
  CIC1Sin_SLICE_2108 \CIC1Sin/SLICE_2108 ( .M1(\CIC1Sin/d_tmp_6 ), 
    .M0(\CIC1Sin/d_tmp_5 ), .CE(\CIC1Sin/osc_clk_enable_160 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d_tmp_5 ), .Q1(\CIC1Sin/d_d_tmp_6 ));
  CIC1Sin_SLICE_2109 \CIC1Sin/SLICE_2109 ( .M1(\CIC1Sin/d_tmp_8 ), 
    .M0(\CIC1Sin/d_tmp_7 ), .CE(\CIC1Sin/osc_clk_enable_160 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d_tmp_7 ), .Q1(\CIC1Sin/d_d_tmp_8 ));
  CIC1Sin_SLICE_2110 \CIC1Sin/SLICE_2110 ( .M1(\CIC1Sin/d_tmp_10 ), 
    .M0(\CIC1Sin/d_tmp_9 ), .CE(\CIC1Sin/osc_clk_enable_160 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d_tmp_9 ), .Q1(\CIC1Sin/d_d_tmp_10 ));
  CIC1Sin_SLICE_2111 \CIC1Sin/SLICE_2111 ( .M1(\CIC1Sin/d_tmp_12 ), 
    .M0(\CIC1Sin/d_tmp_11 ), .CE(\CIC1Sin/osc_clk_enable_160 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d_tmp_11 ), .Q1(\CIC1Sin/d_d_tmp_12 ));
  CIC1Sin_SLICE_2112 \CIC1Sin/SLICE_2112 ( .M1(\CIC1Sin/d_tmp_14 ), 
    .M0(\CIC1Sin/d_tmp_13 ), .CE(\CIC1Sin/osc_clk_enable_160 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d_tmp_13 ), .Q1(\CIC1Sin/d_d_tmp_14 ));
  CIC1Sin_SLICE_2113 \CIC1Sin/SLICE_2113 ( .M1(\CIC1Sin/d_tmp_16 ), 
    .M0(\CIC1Sin/d_tmp_15 ), .CE(\CIC1Sin/osc_clk_enable_160 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d_tmp_15 ), .Q1(\CIC1Sin/d_d_tmp_16 ));
  CIC1Sin_SLICE_2114 \CIC1Sin/SLICE_2114 ( .M1(\CIC1Sin/d_tmp_18 ), 
    .M0(\CIC1Sin/d_tmp_17 ), .CE(\CIC1Sin/osc_clk_enable_160 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d_tmp_17 ), .Q1(\CIC1Sin/d_d_tmp_18 ));
  CIC1Sin_SLICE_2115 \CIC1Sin/SLICE_2115 ( .M1(\CIC1Sin/d_tmp_20 ), 
    .M0(\CIC1Sin/d_tmp_19 ), .CE(\CIC1Sin/osc_clk_enable_160 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d_tmp_19 ), .Q1(\CIC1Sin/d_d_tmp_20 ));
  CIC1Sin_SLICE_2116 \CIC1Sin/SLICE_2116 ( .M1(\CIC1Sin/d_tmp_22 ), 
    .M0(\CIC1Sin/d_tmp_21 ), .CE(\CIC1Sin/osc_clk_enable_160 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d_tmp_21 ), .Q1(\CIC1Sin/d_d_tmp_22 ));
  CIC1Sin_SLICE_2117 \CIC1Sin/SLICE_2117 ( .M1(\CIC1Sin/d_tmp_24 ), 
    .M0(\CIC1Sin/d_tmp_23 ), .CE(\CIC1Sin/osc_clk_enable_160 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d_tmp_23 ), .Q1(\CIC1Sin/d_d_tmp_24 ));
  CIC1Sin_SLICE_2118 \CIC1Sin/SLICE_2118 ( .M1(\CIC1Sin/d_tmp_26 ), 
    .M0(\CIC1Sin/d_tmp_25 ), .CE(\CIC1Sin/osc_clk_enable_160 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d_tmp_25 ), .Q1(\CIC1Sin/d_d_tmp_26 ));
  CIC1Sin_SLICE_2119 \CIC1Sin/SLICE_2119 ( .M1(\CIC1Sin/d_tmp_28 ), 
    .M0(\CIC1Sin/d_tmp_27 ), .CE(\CIC1Sin/osc_clk_enable_160 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d_tmp_27 ), .Q1(\CIC1Sin/d_d_tmp_28 ));
  CIC1Sin_SLICE_2120 \CIC1Sin/SLICE_2120 ( .M1(\CIC1Sin/d_tmp_30 ), 
    .M0(\CIC1Sin/d_tmp_29 ), .CE(\CIC1Sin/osc_clk_enable_160 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d_tmp_29 ), .Q1(\CIC1Sin/d_d_tmp_30 ));
  CIC1Sin_SLICE_2121 \CIC1Sin/SLICE_2121 ( .M0(\CIC1Sin/d_tmp_31 ), 
    .CE(\CIC1Sin/osc_clk_enable_160 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d_tmp_31 ));
  CIC1Sin_SLICE_2122 \CIC1Sin/SLICE_2122 ( .M1(\CIC1Sin/d_tmp_33 ), 
    .M0(\CIC1Sin/d_tmp_32 ), .CE(\CIC1Sin/osc_clk_enable_69 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d_tmp_32 ), .Q1(\CIC1Sin/d_d_tmp_33 ));
  CIC1Sin_SLICE_2123 \CIC1Sin/SLICE_2123 ( .M1(\CIC1Sin/d_tmp_35 ), 
    .M0(\CIC1Sin/d_tmp_34 ), .CE(\CIC1Sin/osc_clk_enable_69 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d_tmp_34 ), .Q1(\CIC1Sin/d_d_tmp_35 ));
  CIC1Sin_SLICE_2124 \CIC1Sin/SLICE_2124 ( .M1(\CIC1Sin/d_tmp_37 ), 
    .M0(\CIC1Sin/d_tmp_36 ), .CE(\CIC1Sin/osc_clk_enable_69 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d_tmp_36 ), .Q1(\CIC1Sin/d_d_tmp_37 ));
  CIC1Sin_SLICE_2125 \CIC1Sin/SLICE_2125 ( .M1(\CIC1Sin/d_tmp_39 ), 
    .M0(\CIC1Sin/d_tmp_38 ), .CE(\CIC1Sin/osc_clk_enable_69 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d_tmp_38 ), .Q1(\CIC1Sin/d_d_tmp_39 ));
  CIC1Sin_SLICE_2126 \CIC1Sin/SLICE_2126 ( .M1(\CIC1Sin/d_tmp_41 ), 
    .M0(\CIC1Sin/d_tmp_40 ), .CE(\CIC1Sin/osc_clk_enable_69 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d_tmp_40 ), .Q1(\CIC1Sin/d_d_tmp_41 ));
  CIC1Sin_SLICE_2127 \CIC1Sin/SLICE_2127 ( .M1(\CIC1Sin/d_tmp_43 ), 
    .M0(\CIC1Sin/d_tmp_42 ), .CE(\CIC1Sin/osc_clk_enable_69 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d_tmp_42 ), .Q1(\CIC1Sin/d_d_tmp_43 ));
  CIC1Sin_SLICE_2128 \CIC1Sin/SLICE_2128 ( .M1(\CIC1Sin/d_tmp_45 ), 
    .M0(\CIC1Sin/d_tmp_44 ), .CE(\CIC1Sin/osc_clk_enable_69 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d_tmp_44 ), .Q1(\CIC1Sin/d_d_tmp_45 ));
  CIC1Sin_SLICE_2129 \CIC1Sin/SLICE_2129 ( .M1(\CIC1Sin/d_tmp_47 ), 
    .M0(\CIC1Sin/d_tmp_46 ), .CE(\CIC1Sin/osc_clk_enable_69 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d_tmp_46 ), .Q1(\CIC1Sin/d_d_tmp_47 ));
  CIC1Sin_SLICE_2130 \CIC1Sin/SLICE_2130 ( .M1(\CIC1Sin/d_tmp_49 ), 
    .M0(\CIC1Sin/d_tmp_48 ), .CE(\CIC1Sin/osc_clk_enable_69 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d_tmp_48 ), .Q1(\CIC1Sin/d_d_tmp_49 ));
  CIC1Sin_SLICE_2131 \CIC1Sin/SLICE_2131 ( .M1(\CIC1Sin/d_tmp_51 ), 
    .M0(\CIC1Sin/d_tmp_50 ), .CE(\CIC1Sin/osc_clk_enable_69 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d_tmp_50 ), .Q1(\CIC1Sin/d_d_tmp_51 ));
  CIC1Sin_SLICE_2132 \CIC1Sin/SLICE_2132 ( .M1(\CIC1Sin/d_tmp_53 ), 
    .M0(\CIC1Sin/d_tmp_52 ), .CE(\CIC1Sin/osc_clk_enable_69 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d_tmp_52 ), .Q1(\CIC1Sin/d_d_tmp_53 ));
  CIC1Sin_SLICE_2133 \CIC1Sin/SLICE_2133 ( .M1(\CIC1Sin/d_tmp_55 ), 
    .M0(\CIC1Sin/d_tmp_54 ), .CE(\CIC1Sin/osc_clk_enable_69 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d_tmp_54 ), .Q1(\CIC1Sin/d_d_tmp_55 ));
  CIC1Sin_SLICE_2134 \CIC1Sin/SLICE_2134 ( .M1(\CIC1Sin/d_tmp_57 ), 
    .M0(\CIC1Sin/d_tmp_56 ), .CE(\CIC1Sin/osc_clk_enable_69 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d_tmp_56 ), .Q1(\CIC1Sin/d_d_tmp_57 ));
  CIC1Sin_SLICE_2135 \CIC1Sin/SLICE_2135 ( .M1(\CIC1Sin/d_tmp_59 ), 
    .M0(\CIC1Sin/d_tmp_58 ), .CE(\CIC1Sin/osc_clk_enable_69 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d_tmp_58 ), .Q1(\CIC1Sin/d_d_tmp_59 ));
  CIC1Sin_SLICE_2136 \CIC1Sin/SLICE_2136 ( .M1(\CIC1Sin/d_tmp_61 ), 
    .M0(\CIC1Sin/d_tmp_60 ), .CE(\CIC1Sin/osc_clk_enable_69 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d_tmp_60 ), .Q1(\CIC1Sin/d_d_tmp_61 ));
  CIC1Sin_SLICE_2137 \CIC1Sin/SLICE_2137 ( .M1(\CIC1Sin/d_tmp_63 ), 
    .M0(\CIC1Sin/d_tmp_62 ), .CE(\CIC1Sin/osc_clk_enable_69 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d_tmp_62 ), .Q1(\CIC1Sin/d_d_tmp_63 ));
  CIC1Sin_SLICE_2138 \CIC1Sin/SLICE_2138 ( .M1(\CIC1Sin/d_tmp_65 ), 
    .M0(\CIC1Sin/d_tmp_64 ), .CE(\CIC1Sin/osc_clk_enable_69 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d_tmp_64 ), .Q1(\CIC1Sin/d_d_tmp_65 ));
  CIC1Sin_SLICE_2139 \CIC1Sin/SLICE_2139 ( .M1(\CIC1Sin/d_tmp_67 ), 
    .M0(\CIC1Sin/d_tmp_66 ), .CE(\CIC1Sin/osc_clk_enable_69 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d_tmp_66 ), .Q1(\CIC1Sin/d_d_tmp_67 ));
  CIC1Sin_SLICE_2140 \CIC1Sin/SLICE_2140 ( .M1(\CIC1Sin/d_tmp_69 ), 
    .M0(\CIC1Sin/d_tmp_68 ), .CE(\CIC1Sin/osc_clk_enable_69 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d_tmp_68 ), .Q1(\CIC1Sin/d_d_tmp_69 ));
  CIC1Sin_SLICE_2141 \CIC1Sin/SLICE_2141 ( .M1(\CIC1Sin/d_tmp_71 ), 
    .M0(\CIC1Sin/d_tmp_70 ), .CE(\CIC1Sin/osc_clk_enable_69 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d_tmp_70 ), .Q1(\CIC1Sin/d_d_tmp_71 ));
  CIC1Sin_SLICE_2142 \CIC1Sin/SLICE_2142 ( .M1(\CIC1Sin/d5_1 ), 
    .M0(\CIC1Sin/d5_0 ), .CE(\CIC1Sin/osc_clk_enable_141 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_tmp_0 ), .Q1(\CIC1Sin/d_tmp_1 ));
  CIC1Sin_SLICE_2143 \CIC1Sin/SLICE_2143 ( .M1(\CIC1Sin/d5_3 ), 
    .M0(\CIC1Sin/d5_2 ), .CE(\CIC1Sin/osc_clk_enable_141 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_tmp_2 ), .Q1(\CIC1Sin/d_tmp_3 ));
  CIC1Sin_SLICE_2144 \CIC1Sin/SLICE_2144 ( .M0(\CIC1Sin/d5_4 ), 
    .CE(\CIC1Sin/osc_clk_enable_141 ), .CLK(osc_clk), .Q0(\CIC1Sin/d_tmp_4 ));
  CIC1Sin_SLICE_2145 \CIC1Sin/SLICE_2145 ( .M1(\CIC1Sin/d5_6 ), 
    .M0(\CIC1Sin/d5_5 ), .CE(\CIC1Sin/d_clk_tmp_N_1831 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_tmp_5 ), .Q1(\CIC1Sin/d_tmp_6 ));
  CIC1Sin_SLICE_2146 \CIC1Sin/SLICE_2146 ( .M1(\CIC1Sin/d5_8 ), 
    .M0(\CIC1Sin/d5_7 ), .CE(\CIC1Sin/d_clk_tmp_N_1831 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_tmp_7 ), .Q1(\CIC1Sin/d_tmp_8 ));
  CIC1Sin_SLICE_2147 \CIC1Sin/SLICE_2147 ( .M1(\CIC1Sin/d5_10 ), 
    .M0(\CIC1Sin/d5_9 ), .CE(\CIC1Sin/d_clk_tmp_N_1831 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_tmp_9 ), .Q1(\CIC1Sin/d_tmp_10 ));
  CIC1Sin_SLICE_2148 \CIC1Sin/SLICE_2148 ( .M1(\CIC1Sin/d5_12 ), 
    .M0(\CIC1Sin/d5_11 ), .CE(\CIC1Sin/d_clk_tmp_N_1831 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_tmp_11 ), .Q1(\CIC1Sin/d_tmp_12 ));
  CIC1Sin_SLICE_2149 \CIC1Sin/SLICE_2149 ( .M0(\CIC1Sin/d5_13 ), 
    .CE(\CIC1Sin/d_clk_tmp_N_1831 ), .CLK(osc_clk), .Q0(\CIC1Sin/d_tmp_13 ));
  CIC1Sin_SLICE_2150 \CIC1Sin/SLICE_2150 ( .M1(\CIC1Sin/d5_15 ), 
    .M0(\CIC1Sin/d5_14 ), .CE(\CIC1Sin/osc_clk_enable_141 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_tmp_14 ), .Q1(\CIC1Sin/d_tmp_15 ));
  CIC1Sin_SLICE_2151 \CIC1Sin/SLICE_2151 ( .M1(\CIC1Sin/d5_17 ), 
    .M0(\CIC1Sin/d5_16 ), .CE(\CIC1Sin/d_clk_tmp_N_1831 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_tmp_16 ), .Q1(\CIC1Sin/d_tmp_17 ));
  CIC1Sin_SLICE_2152 \CIC1Sin/SLICE_2152 ( .M1(\CIC1Sin/d5_19 ), 
    .M0(\CIC1Sin/d5_18 ), .CE(\CIC1Sin/d_clk_tmp_N_1831 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_tmp_18 ), .Q1(\CIC1Sin/d_tmp_19 ));
  CIC1Sin_SLICE_2153 \CIC1Sin/SLICE_2153 ( .M1(\CIC1Sin/d5_21 ), 
    .M0(\CIC1Sin/d5_20 ), .CE(\CIC1Sin/d_clk_tmp_N_1831 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_tmp_20 ), .Q1(\CIC1Sin/d_tmp_21 ));
  CIC1Sin_SLICE_2154 \CIC1Sin/SLICE_2154 ( .M1(\CIC1Sin/d5_23 ), 
    .M0(\CIC1Sin/d5_22 ), .CE(\CIC1Sin/d_clk_tmp_N_1831 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_tmp_22 ), .Q1(\CIC1Sin/d_tmp_23 ));
  CIC1Sin_SLICE_2155 \CIC1Sin/SLICE_2155 ( .M1(\CIC1Sin/d5_25 ), 
    .M0(\CIC1Sin/d5_24 ), .CE(\CIC1Sin/d_clk_tmp_N_1831 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_tmp_24 ), .Q1(\CIC1Sin/d_tmp_25 ));
  CIC1Sin_SLICE_2156 \CIC1Sin/SLICE_2156 ( .M1(\CIC1Sin/d5_27 ), 
    .M0(\CIC1Sin/d5_26 ), .CE(\CIC1Sin/d_clk_tmp_N_1831 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_tmp_26 ), .Q1(\CIC1Sin/d_tmp_27 ));
  CIC1Sin_SLICE_2157 \CIC1Sin/SLICE_2157 ( .M1(\CIC1Sin/d5_29 ), 
    .M0(\CIC1Sin/d5_28 ), .CE(\CIC1Sin/d_clk_tmp_N_1831 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_tmp_28 ), .Q1(\CIC1Sin/d_tmp_29 ));
  CIC1Sin_SLICE_2158 \CIC1Sin/SLICE_2158 ( .M1(\CIC1Sin/d5_31 ), 
    .M0(\CIC1Sin/d5_30 ), .CE(\CIC1Sin/d_clk_tmp_N_1831 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_tmp_30 ), .Q1(\CIC1Sin/d_tmp_31 ));
  CIC1Sin_SLICE_2159 \CIC1Sin/SLICE_2159 ( .M1(\CIC1Sin/d5_33 ), 
    .M0(\CIC1Sin/d5_32 ), .CE(\CIC1Sin/osc_clk_enable_141 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_tmp_32 ), .Q1(\CIC1Sin/d_tmp_33 ));
  CIC1Sin_SLICE_2160 \CIC1Sin/SLICE_2160 ( .M1(\CIC1Sin/d5_35 ), 
    .M0(\CIC1Sin/d5_34 ), .CE(\CIC1Sin/osc_clk_enable_141 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_tmp_34 ), .Q1(\CIC1Sin/d_tmp_35 ));
  CIC1Sin_SLICE_2161 \CIC1Sin/SLICE_2161 ( .M1(\CIC1Sin/d5_37 ), 
    .M0(\CIC1Sin/d5_36 ), .CE(\CIC1Sin/osc_clk_enable_141 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_tmp_36 ), .Q1(\CIC1Sin/d_tmp_37 ));
  CIC1Sin_SLICE_2162 \CIC1Sin/SLICE_2162 ( .M1(\CIC1Sin/d5_39 ), 
    .M0(\CIC1Sin/d5_38 ), .CE(\CIC1Sin/osc_clk_enable_141 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_tmp_38 ), .Q1(\CIC1Sin/d_tmp_39 ));
  CIC1Sin_SLICE_2163 \CIC1Sin/SLICE_2163 ( .M1(\CIC1Sin/d5_41 ), 
    .M0(\CIC1Sin/d5_40 ), .CE(\CIC1Sin/osc_clk_enable_141 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_tmp_40 ), .Q1(\CIC1Sin/d_tmp_41 ));
  CIC1Sin_SLICE_2164 \CIC1Sin/SLICE_2164 ( .M1(\CIC1Sin/d5_43 ), 
    .M0(\CIC1Sin/d5_42 ), .CE(\CIC1Sin/osc_clk_enable_141 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_tmp_42 ), .Q1(\CIC1Sin/d_tmp_43 ));
  CIC1Sin_SLICE_2165 \CIC1Sin/SLICE_2165 ( .M1(\CIC1Sin/d5_45 ), 
    .M0(\CIC1Sin/d5_44 ), .CE(\CIC1Sin/osc_clk_enable_141 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_tmp_44 ), .Q1(\CIC1Sin/d_tmp_45 ));
  CIC1Sin_SLICE_2166 \CIC1Sin/SLICE_2166 ( .M1(\CIC1Sin/d5_47 ), 
    .M0(\CIC1Sin/d5_46 ), .CE(\CIC1Sin/osc_clk_enable_141 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_tmp_46 ), .Q1(\CIC1Sin/d_tmp_47 ));
  CIC1Sin_SLICE_2167 \CIC1Sin/SLICE_2167 ( .M1(\CIC1Sin/d5_49 ), 
    .M0(\CIC1Sin/d5_48 ), .CE(\CIC1Sin/osc_clk_enable_141 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_tmp_48 ), .Q1(\CIC1Sin/d_tmp_49 ));
  CIC1Sin_SLICE_2168 \CIC1Sin/SLICE_2168 ( .M1(\CIC1Sin/d5_51 ), 
    .M0(\CIC1Sin/d5_50 ), .CE(\CIC1Sin/osc_clk_enable_141 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_tmp_50 ), .Q1(\CIC1Sin/d_tmp_51 ));
  CIC1Sin_SLICE_2169 \CIC1Sin/SLICE_2169 ( .M1(\CIC1Sin/d5_53 ), 
    .M0(\CIC1Sin/d5_52 ), .CE(\CIC1Sin/osc_clk_enable_141 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_tmp_52 ), .Q1(\CIC1Sin/d_tmp_53 ));
  CIC1Sin_SLICE_2170 \CIC1Sin/SLICE_2170 ( .M1(\CIC1Sin/d5_55 ), 
    .M0(\CIC1Sin/d5_54 ), .CE(\CIC1Sin/osc_clk_enable_141 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_tmp_54 ), .Q1(\CIC1Sin/d_tmp_55 ));
  CIC1Sin_SLICE_2171 \CIC1Sin/SLICE_2171 ( .M1(\CIC1Sin/d5_57 ), 
    .M0(\CIC1Sin/d5_56 ), .CE(\CIC1Sin/osc_clk_enable_141 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_tmp_56 ), .Q1(\CIC1Sin/d_tmp_57 ));
  CIC1Sin_SLICE_2172 \CIC1Sin/SLICE_2172 ( .M1(\CIC1Sin/d5_59 ), 
    .M0(\CIC1Sin/d5_58 ), .CE(\CIC1Sin/osc_clk_enable_141 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_tmp_58 ), .Q1(\CIC1Sin/d_tmp_59 ));
  CIC1Sin_SLICE_2173 \CIC1Sin/SLICE_2173 ( .M1(\CIC1Sin/d5_61 ), 
    .M0(\CIC1Sin/d5_60 ), .CE(\CIC1Sin/osc_clk_enable_141 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_tmp_60 ), .Q1(\CIC1Sin/d_tmp_61 ));
  CIC1Sin_SLICE_2174 \CIC1Sin/SLICE_2174 ( .M1(\CIC1Sin/d5_63 ), 
    .M0(\CIC1Sin/d5_62 ), .CE(\CIC1Sin/osc_clk_enable_141 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_tmp_62 ), .Q1(\CIC1Sin/d_tmp_63 ));
  CIC1Sin_SLICE_2175 \CIC1Sin/SLICE_2175 ( .M1(\CIC1Sin/d5_65 ), 
    .M0(\CIC1Sin/d5_64 ), .CE(\CIC1Sin/osc_clk_enable_141 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_tmp_64 ), .Q1(\CIC1Sin/d_tmp_65 ));
  CIC1Sin_SLICE_2176 \CIC1Sin/SLICE_2176 ( .M1(\CIC1Sin/d5_67 ), 
    .M0(\CIC1Sin/d5_66 ), .CE(\CIC1Sin/osc_clk_enable_141 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_tmp_66 ), .Q1(\CIC1Sin/d_tmp_67 ));
  CIC1Sin_SLICE_2177 \CIC1Sin/SLICE_2177 ( .M1(\CIC1Sin/d5_69 ), 
    .M0(\CIC1Sin/d5_68 ), .CE(\CIC1Sin/osc_clk_enable_141 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_tmp_68 ), .Q1(\CIC1Sin/d_tmp_69 ));
  CIC1Sin_SLICE_2178 \CIC1Sin/SLICE_2178 ( .M1(\CIC1Sin/d5_71 ), 
    .M0(\CIC1Sin/d5_70 ), .CE(\CIC1Sin/osc_clk_enable_141 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_tmp_70 ), .Q1(\CIC1Sin/d_tmp_71 ));
  CIC1Sin_SLICE_2179 \CIC1Sin/SLICE_2179 ( .C1(\CIC1Sin/count_3 ), 
    .B1(\CIC1Sin/count_15 ), .A1(\CIC1Sin/count_13 ), 
    .D0(\CIC1Sin/n16_adj_2524 ), .C0(\CIC1Sin/n15 ), .B0(\CIC1Sin/n26 ), 
    .A0(\CIC1Sin/n21_adj_2523 ), .DI0(\CIC1Sin/osc_clk_enable_141 ), 
    .M1(\CIC1Sin/osc_clk_enable_141 ), .CLK(osc_clk), 
    .F0(\CIC1Sin/osc_clk_enable_141 ), .Q0(\CIC1Sin/osc_clk_enable_69 ), 
    .F1(\CIC1Sin/n21_adj_2523 ), .Q1(\CIC1Sin/osc_clk_enable_160 ));
  CIC1Sin_SLICE_2180 \CIC1Sin/SLICE_2180 ( .M1(\CIC1Sin/osc_clk_enable_141 ), 
    .M0(\CIC1Sin/osc_clk_enable_141 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/osc_clk_enable_210 ), .Q1(\CIC1Sin/osc_clk_enable_260 ));
  CIC1Sin_SLICE_2181 \CIC1Sin/SLICE_2181 ( .M1(\CIC1Sin/osc_clk_enable_141 ), 
    .M0(\CIC1Sin/osc_clk_enable_141 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/osc_clk_enable_310 ), .Q1(\CIC1Sin/osc_clk_enable_360 ));
  CIC1Sin_SLICE_2182 \CIC1Sin/SLICE_2182 ( .M1(\CIC1Sin/osc_clk_enable_141 ), 
    .M0(\CIC1Sin/osc_clk_enable_141 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/osc_clk_enable_410 ), .Q1(\CIC1Sin/osc_clk_enable_460 ));
  CIC1Sin_SLICE_2183 \CIC1Sin/SLICE_2183 ( .M1(\CIC1Sin/osc_clk_enable_141 ), 
    .M0(\CIC1Sin/osc_clk_enable_141 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/osc_clk_enable_510 ), .Q1(\CIC1Sin/osc_clk_enable_560 ));
  CIC1Sin_SLICE_2184 \CIC1Sin/SLICE_2184 ( .M1(\CIC1Sin/osc_clk_enable_141 ), 
    .M0(\CIC1Sin/osc_clk_enable_141 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/osc_clk_enable_610 ), .Q1(\CIC1Sin/osc_clk_enable_660 ));
  CIC1Sin_SLICE_2185 \CIC1Sin/SLICE_2185 ( .M0(\CIC1Sin/osc_clk_enable_141 ), 
    .CLK(osc_clk), .Q0(\CIC1Sin/osc_clk_enable_710 ));
  CIC1Sin_SLICE_2186 \CIC1Sin/SLICE_2186 ( .M0(\CIC1Sin/osc_clk_enable_141 ), 
    .CLK(osc_clk), .Q0(\CIC1Sin/v_comb ));
  CIC1Cos_SLICE_2187 \CIC1Cos/SLICE_2187 ( .C1(\CIC1Cos/d10_57 ), .B1(d10_59), 
    .A1(CICGain_1), .C0(\CIC1Cos/d10_58 ), .B0(CICGain_1), .A0(n61), 
    .DI0(\CIC1Cos/d_out_11_N_1819_0 ), .M0(CICGain_0), 
    .CE(\CIC1Cos/osc_clk_enable_797 ), .CLK(osc_clk), 
    .OFX0(\CIC1Cos/d_out_11_N_1819_0 ), .Q0(CIC1_outCos_0));
  CIC1Cos_SLICE_2188 \CIC1Cos/SLICE_2188 ( .C1(\CIC1Cos/d10_58 ), .B1(d10_60), 
    .A1(CICGain_1), .C0(d10_59), .B0(CICGain_1), .A0(n62), 
    .DI0(\CIC1Cos/d_out_11_N_1819_1 ), .M0(CICGain_0), .CE(\CIC1Cos/v_comb ), 
    .CLK(osc_clk), .OFX0(\CIC1Cos/d_out_11_N_1819_1 ), .Q0(CIC1_outCos_1));
  SLICE_2189 SLICE_2189( .D1(\CIC1Sin/n132 ), .C1(n64), .B1(CICGain_0), 
    .A1(CICGain_1), .D0(\CIC1Sin/n131 ), .C0(n63), .B0(CICGain_0), 
    .A0(CICGain_1), .DI1(d_out_11_N_1819_3), .DI0(d_out_11_N_1819_2), 
    .CE(\CIC1Cos/v_comb ), .CLK(osc_clk), .F0(d_out_11_N_1819_2), 
    .Q0(CIC1_outCos_2), .F1(d_out_11_N_1819_3), .Q1(CIC1_outCos_3));
  SLICE_2190 SLICE_2190( .D1(\CIC1Sin/n134 ), .C1(n66), .B1(CICGain_0), 
    .A1(CICGain_1), .D0(\CIC1Sin/n133 ), .C0(n65), .B0(CICGain_0), 
    .A0(CICGain_1), .DI1(d_out_11_N_1819_5), .DI0(d_out_11_N_1819_4), 
    .CE(\CIC1Cos/v_comb ), .CLK(osc_clk), .F0(d_out_11_N_1819_4), 
    .Q0(CIC1_outCos_4), .F1(d_out_11_N_1819_5), .Q1(CIC1_outCos_5));
  SLICE_2191 SLICE_2191( .D1(\CIC1Sin/n136 ), .C1(n68), .B1(CICGain_0), 
    .A1(CICGain_1), .D0(\CIC1Sin/n135 ), .C0(n67), .B0(CICGain_0), 
    .A0(CICGain_1), .DI1(d_out_11_N_1819_7), .DI0(d_out_11_N_1819_6), 
    .CE(\CIC1Cos/v_comb ), .CLK(osc_clk), .F0(d_out_11_N_1819_6), 
    .Q0(CIC1_outCos_6), .F1(d_out_11_N_1819_7), .Q1(CIC1_outCos_7));
  SLICE_2192 SLICE_2192( .D1(\CIC1Sin/n138 ), .C1(n70), .B1(CICGain_0), 
    .A1(CICGain_1), .D0(d10_68), .C0(\CIC1Sin/n137 ), .B0(CICGain_0), 
    .A0(CICGain_1), .DI1(d_out_11_N_1819_9), .DI0(d_out_11_N_1819_8), 
    .CE(\CIC1Cos/v_comb ), .CLK(osc_clk), .F0(d_out_11_N_1819_8), 
    .Q0(CIC1_outCos_8), .F1(d_out_11_N_1819_9), .Q1(CIC1_outCos_9));
  SLICE_2193 SLICE_2193( .C1(d10_68), .B1(d10_67), .A1(CICGain_0), .C0(d10_70), 
    .B0(d10_69), .A0(CICGain_0), .DI0(d_out_11_N_1819_10), .M0(CICGain_1), 
    .CE(\CIC1Cos/v_comb ), .CLK(osc_clk), .OFX0(d_out_11_N_1819_10), 
    .Q0(CIC1_outCos_10));
  SLICE_2194 SLICE_2194( .D1(d10_68), .C1(n70), .B1(CICGain_0), .A1(CICGain_1), 
    .D0(\CIC1Sin/n140_adj_2519 ), .C0(d10_71), .B0(CICGain_0), .A0(CICGain_1), 
    .DI0(d_out_11_N_1819_11), .CE(\CIC1Cos/v_comb ), .CLK(osc_clk), 
    .F0(d_out_11_N_1819_11), .Q0(CIC1_outCos_11), .F1(\CIC1Sin/n140_adj_2519 ));
  CIC1Sin_SLICE_2195 \CIC1Sin/SLICE_2195 ( .C1(\CIC1Sin/d10_57 ), 
    .B1(\CIC1Sin/d10_59_adj_2500 ), .A1(CICGain_1), .C0(\CIC1Sin/d10_58 ), 
    .B0(CICGain_1), .A0(\CIC1Sin/n61_adj_2499 ), 
    .DI0(\CIC1Sin/d_out_11_N_1819_0 ), .M0(CICGain_0), 
    .CE(\CIC1Sin/osc_clk_enable_69 ), .CLK(osc_clk), 
    .OFX0(\CIC1Sin/d_out_11_N_1819_0 ), .Q0(CIC1_outSin_0));
  CIC1Sin_SLICE_2196 \CIC1Sin/SLICE_2196 ( .C1(\CIC1Sin/d10_58 ), 
    .B1(\CIC1Sin/d10_60_adj_2521 ), .A1(CICGain_1), 
    .C0(\CIC1Sin/d10_59_adj_2500 ), .B0(CICGain_1), 
    .A0(\CIC1Sin/n62_adj_2528 ), .DI0(\CIC1Sin/d_out_11_N_1819_1 ), 
    .M0(CICGain_0), .CE(\CIC1Sin/v_comb ), .CLK(osc_clk), 
    .OFX0(\CIC1Sin/d_out_11_N_1819_1 ), .Q0(CIC1_outSin_1));
  CIC1Sin_SLICE_2197 \CIC1Sin/SLICE_2197 ( .D1(\CIC1Sin/n132_adj_2503 ), 
    .C1(\CIC1Sin/n64 ), .B1(CICGain_0), .A1(CICGain_1), 
    .D0(\CIC1Sin/n131_adj_2501 ), .C0(\CIC1Sin/n63_adj_2502 ), .B0(CICGain_0), 
    .A0(CICGain_1), .DI1(\CIC1Sin/d_out_11_N_1819_3 ), 
    .DI0(\CIC1Sin/d_out_11_N_1819_2 ), .CE(\CIC1Sin/v_comb ), .CLK(osc_clk), 
    .F0(\CIC1Sin/d_out_11_N_1819_2 ), .Q0(CIC1_outSin_2), 
    .F1(\CIC1Sin/d_out_11_N_1819_3 ), .Q1(CIC1_outSin_3));
  CIC1Sin_SLICE_2198 \CIC1Sin/SLICE_2198 ( .D1(\CIC1Sin/n134_adj_2498 ), 
    .C1(\CIC1Sin/n66 ), .B1(CICGain_0), .A1(CICGain_1), 
    .D0(\CIC1Sin/n133_adj_2504 ), .C0(\CIC1Sin/n65 ), .B0(CICGain_0), 
    .A0(CICGain_1), .DI1(\CIC1Sin/d_out_11_N_1819_5 ), 
    .DI0(\CIC1Sin/d_out_11_N_1819_4 ), .CE(\CIC1Sin/v_comb ), .CLK(osc_clk), 
    .F0(\CIC1Sin/d_out_11_N_1819_4 ), .Q0(CIC1_outSin_4), 
    .F1(\CIC1Sin/d_out_11_N_1819_5 ), .Q1(CIC1_outSin_5));
  CIC1Sin_SLICE_2199 \CIC1Sin/SLICE_2199 ( .M0(\CIC1Sin/d_clk_tmp ), 
    .CLK(osc_clk), .Q0(CIC1_out_clkSin));
  SLICE_2200 SLICE_2200( .M1(MYLED_c_6), .M0(o_Rx_Byte_0), 
    .CE(osc_clk_enable_1407), .CLK(osc_clk), .Q0(CICGain_0), .Q1(CICGain_1));
  AMDemodulator1_SLICE_2201 \AMDemodulator1/SLICE_2201 ( 
    .M1(\AMDemodulator1/d_out_d_1 ), .M0(\AMDemodulator1/d_out_d_0 ), 
    .CLK(CIC1_out_clkSin), .Q0(DataInReg_11_N_1856_0), 
    .Q1(DataInReg_11_N_1856_1));
  AMDemodulator1_SLICE_2202 \AMDemodulator1/SLICE_2202 ( 
    .M1(\AMDemodulator1/d_out_d_3 ), .M0(\AMDemodulator1/d_out_d_2 ), 
    .CLK(CIC1_out_clkSin), .Q0(DataInReg_11_N_1856_2), 
    .Q1(DataInReg_11_N_1856_3));
  AMDemodulator1_SLICE_2203 \AMDemodulator1/SLICE_2203 ( 
    .M1(\AMDemodulator1/d_out_d_5 ), .M0(\AMDemodulator1/d_out_d_4 ), 
    .CLK(CIC1_out_clkSin), .Q0(DataInReg_11_N_1856_4), 
    .Q1(DataInReg_11_N_1856_5));
  AMDemodulator1_SLICE_2204 \AMDemodulator1/SLICE_2204 ( 
    .M1(\AMDemodulator1/d_out_d_7 ), .M0(\AMDemodulator1/d_out_d_6 ), 
    .CLK(CIC1_out_clkSin), .Q0(DataInReg_11_N_1856_6), 
    .Q1(DataInReg_11_N_1856_7));
  AMDemodulator1_SLICE_2205 \AMDemodulator1/SLICE_2205 ( 
    .M0(\AMDemodulator1/d_out_d_8 ), .CLK(CIC1_out_clkSin), 
    .Q0(DataInReg_11_N_1856_8));
  AMDemodulator1_SLICE_2206 \AMDemodulator1/SLICE_2206 ( 
    .M0(\AMDemodulator1/d_out_d_9 ), .CLK(CIC1_out_clkSin), .Q0(DemodOut_9));
  SinCos1_SLICE_2208 \SinCos1/SLICE_2208 ( .D1(\SinCos1/out_sel ), 
    .C1(\SinCos1/cosromoutsel ), .B1(\SinCos1/rom_dout_c_n_2 ), 
    .A1(\SinCos1/rom_dout_15 ), .D0(\SinCos1/out_sel ), 
    .C0(\SinCos1/cosromoutsel ), .B0(\SinCos1/rom_dout_c_n_1 ), 
    .A0(\SinCos1/rom_dout_14 ), .DI1(\SinCos1/cosout_pre_2 ), 
    .DI0(\SinCos1/cosout_pre_1 ), .CLK(osc_clk), .F0(\SinCos1/cosout_pre_1 ), 
    .Q0(LOCosine_1), .F1(\SinCos1/cosout_pre_2 ), .Q1(LOCosine_2));
  SinCos1_SLICE_2209 \SinCos1/SLICE_2209 ( .D1(\SinCos1/out_sel ), 
    .C1(\SinCos1/cosromoutsel ), .B1(\SinCos1/rom_dout_c_n_4 ), 
    .A1(\SinCos1/rom_dout_17 ), .D0(\SinCos1/out_sel ), 
    .C0(\SinCos1/cosromoutsel ), .B0(\SinCos1/rom_dout_c_n_3 ), 
    .A0(\SinCos1/rom_dout_16 ), .DI1(\SinCos1/cosout_pre_4 ), 
    .DI0(\SinCos1/cosout_pre_3 ), .CLK(osc_clk), .F0(\SinCos1/cosout_pre_3 ), 
    .Q0(LOCosine_3), .F1(\SinCos1/cosout_pre_4 ), .Q1(LOCosine_4));
  SinCos1_SLICE_2210 \SinCos1/SLICE_2210 ( .D1(\SinCos1/out_sel ), 
    .C1(\SinCos1/cosromoutsel ), .B1(\SinCos1/rom_dout_c_n_6 ), 
    .A1(\SinCos1/rom_dout_19 ), .D0(\SinCos1/out_sel ), 
    .C0(\SinCos1/cosromoutsel ), .B0(\SinCos1/rom_dout_c_n_5 ), 
    .A0(\SinCos1/rom_dout_18 ), .DI1(\SinCos1/cosout_pre_6 ), 
    .DI0(\SinCos1/cosout_pre_5 ), .CLK(osc_clk), .F0(\SinCos1/cosout_pre_5 ), 
    .Q0(LOCosine_5), .F1(\SinCos1/cosout_pre_6 ), .Q1(LOCosine_6));
  SinCos1_SLICE_2211 \SinCos1/SLICE_2211 ( .D1(\SinCos1/out_sel ), 
    .C1(\SinCos1/cosromoutsel ), .B1(\SinCos1/rom_dout_c_n_8 ), 
    .A1(\SinCos1/rom_dout_21 ), .D0(\SinCos1/out_sel ), 
    .C0(\SinCos1/cosromoutsel ), .B0(\SinCos1/rom_dout_c_n_7 ), 
    .A0(\SinCos1/rom_dout_20 ), .DI1(\SinCos1/cosout_pre_8 ), 
    .DI0(\SinCos1/cosout_pre_7 ), .CLK(osc_clk), .F0(\SinCos1/cosout_pre_7 ), 
    .Q0(LOCosine_7), .F1(\SinCos1/cosout_pre_8 ), .Q1(LOCosine_8));
  SinCos1_SLICE_2212 \SinCos1/SLICE_2212 ( .D1(\SinCos1/out_sel ), 
    .C1(\SinCos1/cosromoutsel ), .B1(\SinCos1/rom_dout_c_n_10 ), 
    .A1(\SinCos1/rom_dout_23 ), .D0(\SinCos1/out_sel ), 
    .C0(\SinCos1/cosromoutsel ), .B0(\SinCos1/rom_dout_c_n_9 ), 
    .A0(\SinCos1/rom_dout_22 ), .DI1(\SinCos1/cosout_pre_10 ), 
    .DI0(\SinCos1/cosout_pre_9 ), .CLK(osc_clk), .F0(\SinCos1/cosout_pre_9 ), 
    .Q0(LOCosine_9), .F1(\SinCos1/cosout_pre_10 ), .Q1(LOCosine_10));
  SinCos1_SLICE_2213 \SinCos1/SLICE_2213 ( .D1(\SinCos1/out_sel ), 
    .C1(\SinCos1/cosromoutsel ), .B1(\SinCos1/rom_dout_c_n_12 ), 
    .A1(\SinCos1/rom_dout_25 ), .D0(\SinCos1/out_sel ), 
    .C0(\SinCos1/cosromoutsel ), .B0(\SinCos1/rom_dout_c_n_11 ), 
    .A0(\SinCos1/rom_dout_24 ), .DI1(\SinCos1/cosout_pre_12 ), 
    .DI0(\SinCos1/cosout_pre_11 ), .CLK(osc_clk), .F0(\SinCos1/cosout_pre_11 ), 
    .Q0(LOCosine_11), .F1(\SinCos1/cosout_pre_12 ), .Q1(LOCosine_12));
  SinCos1_SLICE_2214 \SinCos1/SLICE_2214 ( .D1(\SinCos1/out_sel ), 
    .C1(\SinCos1/sinromoutsel ), .B1(\SinCos1/rom_dout_s_n_2 ), 
    .A1(\SinCos1/rom_dout_2 ), .D0(\SinCos1/out_sel ), 
    .C0(\SinCos1/sinromoutsel ), .B0(\SinCos1/rom_dout_s_n_1 ), 
    .A0(\SinCos1/rom_dout_1 ), .DI1(\SinCos1/sinout_pre_2 ), 
    .DI0(\SinCos1/sinout_pre_1 ), .CLK(osc_clk), .F0(\SinCos1/sinout_pre_1 ), 
    .Q0(LOSine_1), .F1(\SinCos1/sinout_pre_2 ), .Q1(LOSine_2));
  SinCos1_SLICE_2215 \SinCos1/SLICE_2215 ( .D1(\SinCos1/out_sel ), 
    .C1(\SinCos1/sinromoutsel ), .B1(\SinCos1/rom_dout_s_n_4 ), 
    .A1(\SinCos1/rom_dout_4 ), .D0(\SinCos1/out_sel ), 
    .C0(\SinCos1/sinromoutsel ), .B0(\SinCos1/rom_dout_s_n_3 ), 
    .A0(\SinCos1/rom_dout_3 ), .DI1(\SinCos1/sinout_pre_4 ), 
    .DI0(\SinCos1/sinout_pre_3 ), .CLK(osc_clk), .F0(\SinCos1/sinout_pre_3 ), 
    .Q0(LOSine_3), .F1(\SinCos1/sinout_pre_4 ), .Q1(LOSine_4));
  SinCos1_SLICE_2216 \SinCos1/SLICE_2216 ( .D1(\SinCos1/out_sel ), 
    .C1(\SinCos1/sinromoutsel ), .B1(\SinCos1/rom_dout_s_n_6 ), 
    .A1(\SinCos1/rom_dout_6 ), .D0(\SinCos1/out_sel ), 
    .C0(\SinCos1/sinromoutsel ), .B0(\SinCos1/rom_dout_s_n_5 ), 
    .A0(\SinCos1/rom_dout_5 ), .DI1(\SinCos1/sinout_pre_6 ), 
    .DI0(\SinCos1/sinout_pre_5 ), .CLK(osc_clk), .F0(\SinCos1/sinout_pre_5 ), 
    .Q0(LOSine_5), .F1(\SinCos1/sinout_pre_6 ), .Q1(LOSine_6));
  SinCos1_SLICE_2217 \SinCos1/SLICE_2217 ( .D1(\SinCos1/out_sel ), 
    .C1(\SinCos1/sinromoutsel ), .B1(\SinCos1/rom_dout_s_n_8 ), 
    .A1(\SinCos1/rom_dout_8 ), .D0(\SinCos1/out_sel ), 
    .C0(\SinCos1/sinromoutsel ), .B0(\SinCos1/rom_dout_s_n_7 ), 
    .A0(\SinCos1/rom_dout_7 ), .DI1(\SinCos1/sinout_pre_8 ), 
    .DI0(\SinCos1/sinout_pre_7 ), .CLK(osc_clk), .F0(\SinCos1/sinout_pre_7 ), 
    .Q0(LOSine_7), .F1(\SinCos1/sinout_pre_8 ), .Q1(LOSine_8));
  SinCos1_SLICE_2218 \SinCos1/SLICE_2218 ( .D1(\SinCos1/out_sel ), 
    .C1(\SinCos1/sinromoutsel ), .B1(\SinCos1/rom_dout_s_n_10 ), 
    .A1(\SinCos1/rom_dout_10 ), .D0(\SinCos1/out_sel ), 
    .C0(\SinCos1/sinromoutsel ), .B0(\SinCos1/rom_dout_s_n_9 ), 
    .A0(\SinCos1/rom_dout_9 ), .DI1(\SinCos1/sinout_pre_10 ), 
    .DI0(\SinCos1/sinout_pre_9 ), .CLK(osc_clk), .F0(\SinCos1/sinout_pre_9 ), 
    .Q0(LOSine_9), .F1(\SinCos1/sinout_pre_10 ), .Q1(LOSine_10));
  SinCos1_SLICE_2219 \SinCos1/SLICE_2219 ( .C1(\SinCos1/out_sel ), 
    .B1(\SinCos1/mx_ctrl_r_1 ), .A1(\SinCos1/rom_dout_s_12 ), 
    .D0(\SinCos1/out_sel ), .C0(\SinCos1/sinromoutsel ), 
    .B0(\SinCos1/rom_dout_s_n_11 ), .A0(\SinCos1/rom_dout_11 ), 
    .DI1(\SinCos1/sinout_pre_12 ), .DI0(\SinCos1/sinout_pre_11 ), 
    .CLK(osc_clk), .F0(\SinCos1/sinout_pre_11 ), .Q0(LOSine_11), 
    .F1(\SinCos1/sinout_pre_12 ), .Q1(LOSine_12));
  CIC1Sin_SLICE_2220 \CIC1Sin/SLICE_2220 ( .D1(\CIC1Sin/n136_adj_2505 ), 
    .C1(\CIC1Sin/n68_adj_2495 ), .B1(CICGain_0), .A1(CICGain_1), 
    .D0(\CIC1Sin/n135_adj_2496 ), .C0(\CIC1Sin/n13174 ), .B0(CICGain_0), 
    .A0(CICGain_1), .DI1(\CIC1Sin/d_out_11_N_1819_7 ), 
    .DI0(\CIC1Sin/d_out_11_N_1819_6 ), .CE(\CIC1Sin/v_comb ), .CLK(osc_clk), 
    .F0(\CIC1Sin/d_out_11_N_1819_6 ), .Q0(MYLED_c_0), 
    .F1(\CIC1Sin/d_out_11_N_1819_7 ), .Q1(MYLED_c_1));
  CIC1Sin_SLICE_2221 \CIC1Sin/SLICE_2221 ( .D1(\CIC1Sin/n138_adj_2507 ), 
    .C1(\CIC1Sin/n70 ), .B1(CICGain_0), .A1(CICGain_1), .D0(\CIC1Sin/d10_68 ), 
    .C0(\CIC1Sin/n137_adj_2506 ), .B0(CICGain_0), .A0(CICGain_1), 
    .DI1(\CIC1Sin/d_out_11_N_1819_9 ), .DI0(\CIC1Sin/d_out_11_N_1819_8 ), 
    .CE(\CIC1Sin/v_comb ), .CLK(osc_clk), .F0(\CIC1Sin/d_out_11_N_1819_8 ), 
    .Q0(MYLED_c_2), .F1(\CIC1Sin/d_out_11_N_1819_9 ), .Q1(MYLED_c_3));
  CIC1Sin_SLICE_2222 \CIC1Sin/SLICE_2222 ( .C1(\CIC1Sin/d10_68 ), 
    .B1(\CIC1Sin/d10_67 ), .A1(CICGain_0), .C0(\CIC1Sin/d10_70 ), 
    .B0(\CIC1Sin/d10_69 ), .A0(CICGain_0), .DI0(\CIC1Sin/d_out_11_N_1819_10 ), 
    .M0(CICGain_1), .CE(\CIC1Sin/v_comb ), .CLK(osc_clk), 
    .OFX0(\CIC1Sin/d_out_11_N_1819_10 ), .Q0(MYLED_c_4));
  CIC1Sin_SLICE_2223 \CIC1Sin/SLICE_2223 ( .D1(\CIC1Sin/d10_68 ), 
    .C1(\CIC1Sin/n70 ), .B1(CICGain_0), .A1(CICGain_1), .D0(\CIC1Sin/n140 ), 
    .C0(\CIC1Sin/d10_71 ), .B0(CICGain_0), .A0(CICGain_1), 
    .DI0(\CIC1Sin/d_out_11_N_1819_11 ), .CE(\CIC1Sin/v_comb ), .CLK(osc_clk), 
    .F0(\CIC1Sin/d_out_11_N_1819_11 ), .Q0(MYLED_c_5), .F1(\CIC1Sin/n140 ));
  Mixer1_SLICE_2225 \Mixer1/SLICE_2225 ( .M1(RFIn_c), .M0(DiffOut_c), 
    .CLK(osc_clk), .Q0(\Mixer1/RFInR ), .Q1(DiffOut_c));
  Mixer1_SLICE_2226 \Mixer1/SLICE_2226 ( .C1(\Mixer1/RFInR ), 
    .B1(\Mixer1/MixerOutCos_11_N_250_1 ), .A1(LOCosine_2), .C0(\Mixer1/RFInR ), 
    .B0(\Mixer1/MixerOutCos_11_N_250_0 ), .A0(LOCosine_1), 
    .DI1(\Mixer1/MixerOutCos_11_N_224_1 ), 
    .DI0(\Mixer1/MixerOutCos_11_N_224_0 ), .CLK(osc_clk), 
    .F0(\Mixer1/MixerOutCos_11_N_224_0 ), .Q0(MixerOutCos_0), 
    .F1(\Mixer1/MixerOutCos_11_N_224_1 ), .Q1(MixerOutCos_1));
  Mixer1_SLICE_2227 \Mixer1/SLICE_2227 ( .C1(\Mixer1/RFInR ), 
    .B1(\Mixer1/MixerOutCos_11_N_250_3 ), .A1(LOCosine_4), .C0(\Mixer1/RFInR ), 
    .B0(\Mixer1/MixerOutCos_11_N_250_2 ), .A0(LOCosine_3), 
    .DI1(\Mixer1/MixerOutCos_11_N_224_3 ), 
    .DI0(\Mixer1/MixerOutCos_11_N_224_2 ), .CLK(osc_clk), 
    .F0(\Mixer1/MixerOutCos_11_N_224_2 ), .Q0(MixerOutCos_2), 
    .F1(\Mixer1/MixerOutCos_11_N_224_3 ), .Q1(MixerOutCos_3));
  Mixer1_SLICE_2228 \Mixer1/SLICE_2228 ( .C1(\Mixer1/RFInR ), 
    .B1(\Mixer1/MixerOutCos_11_N_250_5 ), .A1(LOCosine_6), .C0(\Mixer1/RFInR ), 
    .B0(\Mixer1/MixerOutCos_11_N_250_4 ), .A0(LOCosine_5), 
    .DI1(\Mixer1/MixerOutCos_11_N_224_5 ), 
    .DI0(\Mixer1/MixerOutCos_11_N_224_4 ), .CLK(osc_clk), 
    .F0(\Mixer1/MixerOutCos_11_N_224_4 ), .Q0(MixerOutCos_4), 
    .F1(\Mixer1/MixerOutCos_11_N_224_5 ), .Q1(MixerOutCos_5));
  Mixer1_SLICE_2229 \Mixer1/SLICE_2229 ( .C1(\Mixer1/RFInR ), 
    .B1(\Mixer1/MixerOutCos_11_N_250_7 ), .A1(LOCosine_8), .C0(\Mixer1/RFInR ), 
    .B0(\Mixer1/MixerOutCos_11_N_250_6 ), .A0(LOCosine_7), 
    .DI1(\Mixer1/MixerOutCos_11_N_224_7 ), 
    .DI0(\Mixer1/MixerOutCos_11_N_224_6 ), .CLK(osc_clk), 
    .F0(\Mixer1/MixerOutCos_11_N_224_6 ), .Q0(MixerOutCos_6), 
    .F1(\Mixer1/MixerOutCos_11_N_224_7 ), .Q1(MixerOutCos_7));
  Mixer1_SLICE_2230 \Mixer1/SLICE_2230 ( .C1(\Mixer1/RFInR ), 
    .B1(\Mixer1/MixerOutCos_11_N_250_9 ), .A1(LOCosine_10), 
    .C0(\Mixer1/RFInR ), .B0(\Mixer1/MixerOutCos_11_N_250_8 ), .A0(LOCosine_9), 
    .DI1(\Mixer1/MixerOutCos_11_N_224_9 ), 
    .DI0(\Mixer1/MixerOutCos_11_N_224_8 ), .CLK(osc_clk), 
    .F0(\Mixer1/MixerOutCos_11_N_224_8 ), .Q0(MixerOutCos_8), 
    .F1(\Mixer1/MixerOutCos_11_N_224_9 ), .Q1(MixerOutCos_9));
  Mixer1_SLICE_2231 \Mixer1/SLICE_2231 ( .C1(\Mixer1/RFInR ), 
    .B1(\Mixer1/MixerOutCos_11_N_250_11 ), .A1(LOCosine_12), 
    .C0(\Mixer1/RFInR ), .B0(\Mixer1/MixerOutCos_11_N_250_10 ), 
    .A0(LOCosine_11), .DI1(\Mixer1/MixerOutCos_11_N_224_11 ), 
    .DI0(\Mixer1/MixerOutCos_11_N_224_10 ), .CLK(osc_clk), 
    .F0(\Mixer1/MixerOutCos_11_N_224_10 ), .Q0(MixerOutCos_10), 
    .F1(\Mixer1/MixerOutCos_11_N_224_11 ), .Q1(MixerOutCos_11));
  Mixer1_SLICE_2232 \Mixer1/SLICE_2232 ( .C1(\Mixer1/RFInR ), 
    .B1(\Mixer1/MixerOutSin_11_N_236_1 ), .A1(LOSine_2), .C0(\Mixer1/RFInR ), 
    .B0(\Mixer1/MixerOutSin_11_N_236_0 ), .A0(LOSine_1), 
    .DI1(\Mixer1/MixerOutSin_11_N_212_1 ), 
    .DI0(\Mixer1/MixerOutSin_11_N_212_0 ), .CLK(osc_clk), 
    .F0(\Mixer1/MixerOutSin_11_N_212_0 ), .Q0(MixerOutSin_0), 
    .F1(\Mixer1/MixerOutSin_11_N_212_1 ), .Q1(MixerOutSin_1));
  Mixer1_SLICE_2233 \Mixer1/SLICE_2233 ( .C1(\Mixer1/RFInR ), 
    .B1(\Mixer1/MixerOutSin_11_N_236_3 ), .A1(LOSine_4), .C0(\Mixer1/RFInR ), 
    .B0(\Mixer1/MixerOutSin_11_N_236_2 ), .A0(LOSine_3), 
    .DI1(\Mixer1/MixerOutSin_11_N_212_3 ), 
    .DI0(\Mixer1/MixerOutSin_11_N_212_2 ), .CLK(osc_clk), 
    .F0(\Mixer1/MixerOutSin_11_N_212_2 ), .Q0(MixerOutSin_2), 
    .F1(\Mixer1/MixerOutSin_11_N_212_3 ), .Q1(MixerOutSin_3));
  Mixer1_SLICE_2234 \Mixer1/SLICE_2234 ( .C1(\Mixer1/RFInR ), 
    .B1(\Mixer1/MixerOutSin_11_N_236_5 ), .A1(LOSine_6), .C0(\Mixer1/RFInR ), 
    .B0(\Mixer1/MixerOutSin_11_N_236_4 ), .A0(LOSine_5), 
    .DI1(\Mixer1/MixerOutSin_11_N_212_5 ), 
    .DI0(\Mixer1/MixerOutSin_11_N_212_4 ), .CLK(osc_clk), 
    .F0(\Mixer1/MixerOutSin_11_N_212_4 ), .Q0(MixerOutSin_4), 
    .F1(\Mixer1/MixerOutSin_11_N_212_5 ), .Q1(MixerOutSin_5));
  Mixer1_SLICE_2235 \Mixer1/SLICE_2235 ( .C1(\Mixer1/RFInR ), 
    .B1(\Mixer1/MixerOutSin_11_N_236_7 ), .A1(LOSine_8), .C0(\Mixer1/RFInR ), 
    .B0(\Mixer1/MixerOutSin_11_N_236_6 ), .A0(LOSine_7), 
    .DI1(\Mixer1/MixerOutSin_11_N_212_7 ), 
    .DI0(\Mixer1/MixerOutSin_11_N_212_6 ), .CLK(osc_clk), 
    .F0(\Mixer1/MixerOutSin_11_N_212_6 ), .Q0(MixerOutSin_6), 
    .F1(\Mixer1/MixerOutSin_11_N_212_7 ), .Q1(MixerOutSin_7));
  Mixer1_SLICE_2236 \Mixer1/SLICE_2236 ( .C1(\Mixer1/RFInR ), 
    .B1(\Mixer1/MixerOutSin_11_N_236_9 ), .A1(LOSine_10), .C0(\Mixer1/RFInR ), 
    .B0(\Mixer1/MixerOutSin_11_N_236_8 ), .A0(LOSine_9), 
    .DI1(\Mixer1/MixerOutSin_11_N_212_9 ), 
    .DI0(\Mixer1/MixerOutSin_11_N_212_8 ), .CLK(osc_clk), 
    .F0(\Mixer1/MixerOutSin_11_N_212_8 ), .Q0(MixerOutSin_8), 
    .F1(\Mixer1/MixerOutSin_11_N_212_9 ), .Q1(MixerOutSin_9));
  Mixer1_SLICE_2237 \Mixer1/SLICE_2237 ( .C1(\Mixer1/RFInR ), 
    .B1(\Mixer1/MixerOutSin_11_N_236_11 ), .A1(LOSine_12), .C0(\Mixer1/RFInR ), 
    .B0(\Mixer1/MixerOutSin_11_N_236_10 ), .A0(LOSine_11), 
    .DI1(\Mixer1/MixerOutSin_11_N_212_11 ), 
    .DI0(\Mixer1/MixerOutSin_11_N_212_10 ), .CLK(osc_clk), 
    .F0(\Mixer1/MixerOutSin_11_N_212_10 ), .Q0(MixerOutSin_10), 
    .F1(\Mixer1/MixerOutSin_11_N_212_11 ), .Q1(MixerOutSin_11));
  PWM1_SLICE_2238 \PWM1/SLICE_2238 ( .M1(DataInReg_11_N_1856_1), 
    .M0(DataInReg_11_N_1856_0), .CE(\PWM1/osc_clk_enable_1406 ), .CLK(osc_clk), 
    .Q0(\PWM1/DataInReg_0 ), .Q1(\PWM1/DataInReg_1 ));
  PWM1_SLICE_2239 \PWM1/SLICE_2239 ( .M1(DataInReg_11_N_1856_3), 
    .M0(DataInReg_11_N_1856_2), .CE(\PWM1/osc_clk_enable_1406 ), .CLK(osc_clk), 
    .Q0(\PWM1/DataInReg_2 ), .Q1(\PWM1/DataInReg_3 ));
  PWM1_SLICE_2240 \PWM1/SLICE_2240 ( .M1(DataInReg_11_N_1856_5), 
    .M0(DataInReg_11_N_1856_4), .CE(\PWM1/osc_clk_enable_1406 ), .CLK(osc_clk), 
    .Q0(\PWM1/DataInReg_4 ), .Q1(\PWM1/DataInReg_5 ));
  PWM1_SLICE_2241 \PWM1/SLICE_2241 ( .M1(DataInReg_11_N_1856_7), 
    .M0(DataInReg_11_N_1856_6), .CE(\PWM1/osc_clk_enable_1406 ), .CLK(osc_clk), 
    .Q0(\PWM1/DataInReg_6 ), .Q1(\PWM1/DataInReg_7 ));
  PWM1_SLICE_2242 \PWM1/SLICE_2242 ( .M0(DataInReg_11_N_1856_8), 
    .CE(\PWM1/osc_clk_enable_1406 ), .CLK(osc_clk), .Q0(\PWM1/DataInReg_8 ));
  PWM1_SLICE_2243 \PWM1/SLICE_2243 ( .A0(DemodOut_9), .DI0(\PWM1/n3949 ), 
    .CE(\PWM1/osc_clk_enable_1406 ), .CLK(osc_clk), .F0(\PWM1/n3949 ), 
    .Q0(\PWM1/DataInReg_9 ));
  SinCos1_SLICE_2244 \SinCos1/SLICE_2244 ( .B0(\SinCos1/mx_ctrl_r_1 ), 
    .A0(\SinCos1/mx_ctrl_r ), .DI0(\SinCos1/cosromoutsel_i ), .CLK(osc_clk), 
    .F0(\SinCos1/cosromoutsel_i ), .Q0(\SinCos1/cosromoutsel ));
  SinCos1_SLICE_2247 \SinCos1/SLICE_2247 ( .C1(\SinCos1/mx_ctrl_r ), 
    .B1(\SinCos1/rom_addr0_r_n_4 ), .A1(\SinCos1/rom_addr0_r_4 ), 
    .D0(\SinCos1/mx_ctrl_r ), .C0(\SinCos1/func_or_inet ), 
    .B0(\SinCos1/rom_addr0_r_10 ), .A0(\SinCos1/rom_addr0_r_11 ), 
    .DI0(\SinCos1/out_sel_i ), .CLK(osc_clk), .F0(\SinCos1/out_sel_i ), 
    .Q0(\SinCos1/out_sel ), .F1(\SinCos1/rom_addr0_r_10 ));
  SinCos1_SLICE_2248 \SinCos1/SLICE_2248 ( .M1(phase_accum_59), 
    .M0(phase_accum_57), .CLK(osc_clk), .Q0(\SinCos1/rom_addr0_r_1 ), 
    .Q1(\SinCos1/rom_addr0_r_3 ));
  SinCos1_SLICE_2249 \SinCos1/SLICE_2249 ( .M0(phase_accum_61), .CLK(osc_clk), 
    .Q0(\SinCos1/rom_addr0_r_5 ));
  SinCos1_SLICE_2250 \SinCos1/SLICE_2250 ( .D1(\SinCos1/rom_addr0_r_9 ), 
    .C1(\SinCos1/rom_addr0_r_8 ), .B1(\SinCos1/rom_addr0_r_7 ), 
    .A1(\SinCos1/rom_addr0_r_10 ), .D0(\SinCos1/rom_addr0_r_9 ), 
    .C0(\SinCos1/rom_addr0_r_8 ), .B0(\SinCos1/rom_addr0_r_7 ), 
    .A0(\SinCos1/rom_addr0_r_10 ), .DI1(\SinCos1/rom_dout_ffin ), 
    .M1(\SinCos1/rom_addr0_r_6 ), .M0(\SinCos1/rom_addr0_r_11 ), 
    .FXB(\SinCos1/triglut_1_0_13_1_f5b ), .FXA(\SinCos1/triglut_1_0_13_0_f5a ), 
    .CLK(osc_clk), .OFX0(\SinCos1/triglut_1_0_13_1_f5b ), 
    .Q1(\SinCos1/rom_dout ), .OFX1(\SinCos1/rom_dout_ffin ));
  SinCos1_SLICE_2251 \SinCos1/SLICE_2251 ( .D1(\SinCos1/rom_addr0_r_9 ), 
    .C1(\SinCos1/rom_addr0_r_8 ), .B1(\SinCos1/rom_addr0_r_7 ), 
    .A1(\SinCos1/rom_addr0_r_10 ), .D0(\SinCos1/rom_addr0_r_9 ), 
    .C0(\SinCos1/rom_addr0_r_8 ), .B0(\SinCos1/rom_addr0_r_7 ), 
    .A0(\SinCos1/rom_addr0_r_10 ), .DI1(\SinCos1/rom_dout_1_ffin ), 
    .M1(\SinCos1/rom_addr0_r_6 ), .M0(\SinCos1/rom_addr0_r_11 ), 
    .FXB(\SinCos1/triglut_1_0_14_1_f5b ), .FXA(\SinCos1/triglut_1_0_14_0_f5a ), 
    .CLK(osc_clk), .OFX0(\SinCos1/triglut_1_0_14_1_f5b ), 
    .Q1(\SinCos1/rom_dout_1 ), .OFX1(\SinCos1/rom_dout_1_ffin ));
  SinCos1_SLICE_2252 \SinCos1/SLICE_2252 ( .D1(\SinCos1/rom_addr0_r_9 ), 
    .C1(\SinCos1/rom_addr0_r_8 ), .B1(\SinCos1/rom_addr0_r_7 ), 
    .A1(\SinCos1/rom_addr0_r_10 ), .D0(\SinCos1/rom_addr0_r_9 ), 
    .C0(\SinCos1/rom_addr0_r_8 ), .B0(\SinCos1/rom_addr0_r_7 ), 
    .A0(\SinCos1/rom_addr0_r_10 ), .DI1(\SinCos1/rom_dout_2_ffin ), 
    .M1(\SinCos1/rom_addr0_r_6 ), .M0(\SinCos1/rom_addr0_r_11 ), 
    .FXB(\SinCos1/triglut_1_0_15_1_f5b ), .FXA(\SinCos1/triglut_1_0_15_0_f5a ), 
    .CLK(osc_clk), .OFX0(\SinCos1/triglut_1_0_15_1_f5b ), 
    .Q1(\SinCos1/rom_dout_2 ), .OFX1(\SinCos1/rom_dout_2_ffin ));
  SinCos1_SLICE_2253 \SinCos1/SLICE_2253 ( .D1(\SinCos1/rom_addr0_r_9 ), 
    .C1(\SinCos1/rom_addr0_r_8 ), .B1(\SinCos1/rom_addr0_r_7 ), 
    .A1(\SinCos1/rom_addr0_r_10 ), .D0(\SinCos1/rom_addr0_r_9 ), 
    .C0(\SinCos1/rom_addr0_r_8 ), .B0(\SinCos1/rom_addr0_r_7 ), 
    .A0(\SinCos1/rom_addr0_r_10 ), .DI1(\SinCos1/rom_dout_3_ffin ), 
    .M1(\SinCos1/rom_addr0_r_6 ), .M0(\SinCos1/rom_addr0_r_11 ), 
    .FXB(\SinCos1/triglut_1_0_16_1_f5b ), .FXA(\SinCos1/triglut_1_0_16_0_f5a ), 
    .CLK(osc_clk), .OFX0(\SinCos1/triglut_1_0_16_1_f5b ), 
    .Q1(\SinCos1/rom_dout_3 ), .OFX1(\SinCos1/rom_dout_3_ffin ));
  SinCos1_SLICE_2254 \SinCos1/SLICE_2254 ( .D1(\SinCos1/rom_addr0_r_9 ), 
    .C1(\SinCos1/rom_addr0_r_8 ), .B1(\SinCos1/rom_addr0_r_7 ), 
    .A1(\SinCos1/rom_addr0_r_10 ), .D0(\SinCos1/rom_addr0_r_9 ), 
    .C0(\SinCos1/rom_addr0_r_8 ), .B0(\SinCos1/rom_addr0_r_7 ), 
    .A0(\SinCos1/rom_addr0_r_10 ), .DI1(\SinCos1/rom_dout_4_ffin ), 
    .M1(\SinCos1/rom_addr0_r_6 ), .M0(\SinCos1/rom_addr0_r_11 ), 
    .FXB(\SinCos1/triglut_1_0_17_1_f5b ), .FXA(\SinCos1/triglut_1_0_17_0_f5a ), 
    .CLK(osc_clk), .OFX0(\SinCos1/triglut_1_0_17_1_f5b ), 
    .Q1(\SinCos1/rom_dout_4 ), .OFX1(\SinCos1/rom_dout_4_ffin ));
  SinCos1_SLICE_2255 \SinCos1/SLICE_2255 ( .D1(\SinCos1/rom_addr0_r_9 ), 
    .C1(\SinCos1/rom_addr0_r_8 ), .B1(\SinCos1/rom_addr0_r_7 ), 
    .A1(\SinCos1/rom_addr0_r_10 ), .D0(\SinCos1/rom_addr0_r_9 ), 
    .C0(\SinCos1/rom_addr0_r_8 ), .B0(\SinCos1/rom_addr0_r_7 ), 
    .A0(\SinCos1/rom_addr0_r_10 ), .DI1(\SinCos1/rom_dout_5_ffin ), 
    .M1(\SinCos1/rom_addr0_r_6 ), .M0(\SinCos1/rom_addr0_r_11 ), 
    .FXB(\SinCos1/triglut_1_0_18_1_f5b ), .FXA(\SinCos1/triglut_1_0_18_0_f5a ), 
    .CLK(osc_clk), .OFX0(\SinCos1/triglut_1_0_18_1_f5b ), 
    .Q1(\SinCos1/rom_dout_5 ), .OFX1(\SinCos1/rom_dout_5_ffin ));
  SinCos1_SLICE_2256 \SinCos1/SLICE_2256 ( .D1(\SinCos1/rom_addr0_r_9 ), 
    .C1(\SinCos1/rom_addr0_r_8 ), .B1(\SinCos1/rom_addr0_r_7 ), 
    .A1(\SinCos1/rom_addr0_r_10 ), .D0(\SinCos1/rom_addr0_r_9 ), 
    .C0(\SinCos1/rom_addr0_r_8 ), .B0(\SinCos1/rom_addr0_r_7 ), 
    .A0(\SinCos1/rom_addr0_r_10 ), .DI1(\SinCos1/rom_dout_6_ffin ), 
    .M1(\SinCos1/rom_addr0_r_6 ), .M0(\SinCos1/rom_addr0_r_11 ), 
    .FXB(\SinCos1/triglut_1_0_19_1_f5b ), .FXA(\SinCos1/triglut_1_0_19_0_f5a ), 
    .CLK(osc_clk), .OFX0(\SinCos1/triglut_1_0_19_1_f5b ), 
    .Q1(\SinCos1/rom_dout_6 ), .OFX1(\SinCos1/rom_dout_6_ffin ));
  SinCos1_SLICE_2257 \SinCos1/SLICE_2257 ( .D1(\SinCos1/rom_addr0_r_9 ), 
    .C1(\SinCos1/rom_addr0_r_8 ), .B1(\SinCos1/rom_addr0_r_7 ), 
    .A1(\SinCos1/rom_addr0_r_10 ), .D0(\SinCos1/rom_addr0_r_9 ), 
    .C0(\SinCos1/rom_addr0_r_8 ), .B0(\SinCos1/rom_addr0_r_7 ), 
    .A0(\SinCos1/rom_addr0_r_10 ), .DI1(\SinCos1/rom_dout_7_ffin ), 
    .M1(\SinCos1/rom_addr0_r_6 ), .M0(\SinCos1/rom_addr0_r_11 ), 
    .FXB(\SinCos1/triglut_1_0_20_1_f5b ), .FXA(\SinCos1/triglut_1_0_20_0_f5a ), 
    .CLK(osc_clk), .OFX0(\SinCos1/triglut_1_0_20_1_f5b ), 
    .Q1(\SinCos1/rom_dout_7 ), .OFX1(\SinCos1/rom_dout_7_ffin ));
  SinCos1_SLICE_2258 \SinCos1/SLICE_2258 ( .D1(\SinCos1/rom_addr0_r_9 ), 
    .C1(\SinCos1/rom_addr0_r_8 ), .B1(\SinCos1/rom_addr0_r_7 ), 
    .A1(\SinCos1/rom_addr0_r_10 ), .D0(\SinCos1/rom_addr0_r_9 ), 
    .C0(\SinCos1/rom_addr0_r_8 ), .B0(\SinCos1/rom_addr0_r_7 ), 
    .A0(\SinCos1/rom_addr0_r_10 ), .DI1(\SinCos1/rom_dout_8_ffin ), 
    .M1(\SinCos1/rom_addr0_r_6 ), .M0(\SinCos1/rom_addr0_r_11 ), 
    .FXB(\SinCos1/triglut_1_0_21_1_f5b ), .FXA(\SinCos1/triglut_1_0_21_0_f5a ), 
    .CLK(osc_clk), .OFX0(\SinCos1/triglut_1_0_21_1_f5b ), 
    .Q1(\SinCos1/rom_dout_8 ), .OFX1(\SinCos1/rom_dout_8_ffin ));
  SinCos1_SLICE_2259 \SinCos1/SLICE_2259 ( .D1(\SinCos1/rom_addr0_r_9 ), 
    .C1(\SinCos1/rom_addr0_r_8 ), .B1(\SinCos1/rom_addr0_r_7 ), 
    .A1(\SinCos1/rom_addr0_r_10 ), .D0(\SinCos1/rom_addr0_r_9 ), 
    .C0(\SinCos1/rom_addr0_r_8 ), .B0(\SinCos1/rom_addr0_r_7 ), 
    .A0(\SinCos1/rom_addr0_r_10 ), .DI1(\SinCos1/rom_dout_9_ffin ), 
    .M1(\SinCos1/rom_addr0_r_6 ), .M0(\SinCos1/rom_addr0_r_11 ), 
    .FXB(\SinCos1/triglut_1_0_22_1_f5b ), .FXA(\SinCos1/triglut_1_0_22_0_f5a ), 
    .CLK(osc_clk), .OFX0(\SinCos1/triglut_1_0_22_1_f5b ), 
    .Q1(\SinCos1/rom_dout_9 ), .OFX1(\SinCos1/rom_dout_9_ffin ));
  SinCos1_SLICE_2260 \SinCos1/SLICE_2260 ( .DI1(\SinCos1/rom_dout_10_ffin ), 
    .M1(\SinCos1/rom_addr0_r_11 ), .FXB(\SinCos1/triglut_1_0_23_1_f5b ), 
    .FXA(\SinCos1/triglut_1_0_23_0_f5a ), .CLK(osc_clk), 
    .OFX0(\SinCos1/triglut_1_0_23_1_f5b ), .Q1(\SinCos1/rom_dout_10 ), 
    .OFX1(\SinCos1/rom_dout_10_ffin ));
  SinCos1_SLICE_2261 \SinCos1/SLICE_2261 ( .CLK(osc_clk), 
    .Q0(\SinCos1/rom_dout_11 ), .Q1(\SinCos1/rom_dout_12 ));
  SinCos1_SLICE_2262 \SinCos1/SLICE_2262 ( .D1(\SinCos1/rom_addr0_r_9 ), 
    .C1(\SinCos1/rom_addr0_r_8 ), .B1(\SinCos1/rom_addr0_r_7 ), 
    .A1(\SinCos1/rom_addr0_r_10 ), .D0(\SinCos1/rom_addr0_r_9 ), 
    .C0(\SinCos1/rom_addr0_r_8 ), .B0(\SinCos1/rom_addr0_r_7 ), 
    .A0(\SinCos1/rom_addr0_r_10 ), .DI1(\SinCos1/rom_dout_13_ffin ), 
    .M1(\SinCos1/rom_addr0_r_6 ), .M0(\SinCos1/rom_addr0_r_11 ), 
    .FXB(\SinCos1/triglut_1_0_0_1_f5b ), .FXA(\SinCos1/triglut_1_0_0_0_f5a ), 
    .CLK(osc_clk), .OFX0(\SinCos1/triglut_1_0_0_1_f5b ), 
    .Q1(\SinCos1/rom_dout_13 ), .OFX1(\SinCos1/rom_dout_13_ffin ));
  SinCos1_SLICE_2263 \SinCos1/SLICE_2263 ( .D1(\SinCos1/rom_addr0_r_9 ), 
    .C1(\SinCos1/rom_addr0_r_8 ), .B1(\SinCos1/rom_addr0_r_7 ), 
    .A1(\SinCos1/rom_addr0_r_10 ), .D0(\SinCos1/rom_addr0_r_9 ), 
    .C0(\SinCos1/rom_addr0_r_8 ), .B0(\SinCos1/rom_addr0_r_7 ), 
    .A0(\SinCos1/rom_addr0_r_10 ), .DI1(\SinCos1/rom_dout_14_ffin ), 
    .M1(\SinCos1/rom_addr0_r_6 ), .M0(\SinCos1/rom_addr0_r_11 ), 
    .FXB(\SinCos1/triglut_1_0_1_1_f5b ), .FXA(\SinCos1/triglut_1_0_1_0_f5a ), 
    .CLK(osc_clk), .OFX0(\SinCos1/triglut_1_0_1_1_f5b ), 
    .Q1(\SinCos1/rom_dout_14 ), .OFX1(\SinCos1/rom_dout_14_ffin ));
  SinCos1_SLICE_2264 \SinCos1/SLICE_2264 ( .D1(\SinCos1/rom_addr0_r_9 ), 
    .C1(\SinCos1/rom_addr0_r_8 ), .B1(\SinCos1/rom_addr0_r_7 ), 
    .A1(\SinCos1/rom_addr0_r_10 ), .D0(\SinCos1/rom_addr0_r_9 ), 
    .C0(\SinCos1/rom_addr0_r_8 ), .B0(\SinCos1/rom_addr0_r_7 ), 
    .A0(\SinCos1/rom_addr0_r_10 ), .DI1(\SinCos1/rom_dout_15_ffin ), 
    .M1(\SinCos1/rom_addr0_r_6 ), .M0(\SinCos1/rom_addr0_r_11 ), 
    .FXB(\SinCos1/triglut_1_0_2_1_f5b ), .FXA(\SinCos1/triglut_1_0_2_0_f5a ), 
    .CLK(osc_clk), .OFX0(\SinCos1/triglut_1_0_2_1_f5b ), 
    .Q1(\SinCos1/rom_dout_15 ), .OFX1(\SinCos1/rom_dout_15_ffin ));
  SinCos1_SLICE_2265 \SinCos1/SLICE_2265 ( .D1(\SinCos1/rom_addr0_r_9 ), 
    .C1(\SinCos1/rom_addr0_r_8 ), .B1(\SinCos1/rom_addr0_r_7 ), 
    .A1(\SinCos1/rom_addr0_r_10 ), .D0(\SinCos1/rom_addr0_r_9 ), 
    .C0(\SinCos1/rom_addr0_r_8 ), .B0(\SinCos1/rom_addr0_r_7 ), 
    .A0(\SinCos1/rom_addr0_r_10 ), .DI1(\SinCos1/rom_dout_16_ffin ), 
    .M1(\SinCos1/rom_addr0_r_6 ), .M0(\SinCos1/rom_addr0_r_11 ), 
    .FXB(\SinCos1/triglut_1_0_3_1_f5b ), .FXA(\SinCos1/triglut_1_0_3_0_f5a ), 
    .CLK(osc_clk), .OFX0(\SinCos1/triglut_1_0_3_1_f5b ), 
    .Q1(\SinCos1/rom_dout_16 ), .OFX1(\SinCos1/rom_dout_16_ffin ));
  SinCos1_SLICE_2266 \SinCos1/SLICE_2266 ( .D1(\SinCos1/rom_addr0_r_9 ), 
    .C1(\SinCos1/rom_addr0_r_8 ), .B1(\SinCos1/rom_addr0_r_7 ), 
    .A1(\SinCos1/rom_addr0_r_10 ), .D0(\SinCos1/rom_addr0_r_9 ), 
    .C0(\SinCos1/rom_addr0_r_8 ), .B0(\SinCos1/rom_addr0_r_7 ), 
    .A0(\SinCos1/rom_addr0_r_10 ), .DI1(\SinCos1/rom_dout_17_ffin ), 
    .M1(\SinCos1/rom_addr0_r_6 ), .M0(\SinCos1/rom_addr0_r_11 ), 
    .FXB(\SinCos1/triglut_1_0_4_1_f5b ), .FXA(\SinCos1/triglut_1_0_4_0_f5a ), 
    .CLK(osc_clk), .OFX0(\SinCos1/triglut_1_0_4_1_f5b ), 
    .Q1(\SinCos1/rom_dout_17 ), .OFX1(\SinCos1/rom_dout_17_ffin ));
  SinCos1_SLICE_2267 \SinCos1/SLICE_2267 ( .D1(\SinCos1/rom_addr0_r_9 ), 
    .C1(\SinCos1/rom_addr0_r_8 ), .B1(\SinCos1/rom_addr0_r_7 ), 
    .A1(\SinCos1/rom_addr0_r_10 ), .D0(\SinCos1/rom_addr0_r_9 ), 
    .C0(\SinCos1/rom_addr0_r_8 ), .B0(\SinCos1/rom_addr0_r_7 ), 
    .A0(\SinCos1/rom_addr0_r_10 ), .DI1(\SinCos1/rom_dout_18_ffin ), 
    .M1(\SinCos1/rom_addr0_r_6 ), .M0(\SinCos1/rom_addr0_r_11 ), 
    .FXB(\SinCos1/triglut_1_0_5_1_f5b ), .FXA(\SinCos1/triglut_1_0_5_0_f5a ), 
    .CLK(osc_clk), .OFX0(\SinCos1/triglut_1_0_5_1_f5b ), 
    .Q1(\SinCos1/rom_dout_18 ), .OFX1(\SinCos1/rom_dout_18_ffin ));
  SinCos1_SLICE_2268 \SinCos1/SLICE_2268 ( .D1(\SinCos1/rom_addr0_r_9 ), 
    .C1(\SinCos1/rom_addr0_r_8 ), .B1(\SinCos1/rom_addr0_r_7 ), 
    .A1(\SinCos1/rom_addr0_r_10 ), .D0(\SinCos1/rom_addr0_r_9 ), 
    .C0(\SinCos1/rom_addr0_r_8 ), .B0(\SinCos1/rom_addr0_r_7 ), 
    .A0(\SinCos1/rom_addr0_r_10 ), .DI1(\SinCos1/rom_dout_19_ffin ), 
    .M1(\SinCos1/rom_addr0_r_6 ), .M0(\SinCos1/rom_addr0_r_11 ), 
    .FXB(\SinCos1/triglut_1_0_6_1_f5b ), .FXA(\SinCos1/triglut_1_0_6_0_f5a ), 
    .CLK(osc_clk), .OFX0(\SinCos1/triglut_1_0_6_1_f5b ), 
    .Q1(\SinCos1/rom_dout_19 ), .OFX1(\SinCos1/rom_dout_19_ffin ));
  SinCos1_SLICE_2269 \SinCos1/SLICE_2269 ( .D1(\SinCos1/rom_addr0_r_9 ), 
    .C1(\SinCos1/rom_addr0_r_8 ), .B1(\SinCos1/rom_addr0_r_7 ), 
    .A1(\SinCos1/rom_addr0_r_10 ), .D0(\SinCos1/rom_addr0_r_9 ), 
    .C0(\SinCos1/rom_addr0_r_8 ), .B0(\SinCos1/rom_addr0_r_7 ), 
    .A0(\SinCos1/rom_addr0_r_10 ), .DI1(\SinCos1/rom_dout_20_ffin ), 
    .M1(\SinCos1/rom_addr0_r_6 ), .M0(\SinCos1/rom_addr0_r_11 ), 
    .FXB(\SinCos1/triglut_1_0_7_1_f5b ), .FXA(\SinCos1/triglut_1_0_7_0_f5a ), 
    .CLK(osc_clk), .OFX0(\SinCos1/triglut_1_0_7_1_f5b ), 
    .Q1(\SinCos1/rom_dout_20 ), .OFX1(\SinCos1/rom_dout_20_ffin ));
  SinCos1_SLICE_2270 \SinCos1/SLICE_2270 ( .D1(\SinCos1/rom_addr0_r_9 ), 
    .C1(\SinCos1/rom_addr0_r_8 ), .B1(\SinCos1/rom_addr0_r_7 ), 
    .A1(\SinCos1/rom_addr0_r_10 ), .D0(\SinCos1/rom_addr0_r_9 ), 
    .C0(\SinCos1/rom_addr0_r_8 ), .B0(\SinCos1/rom_addr0_r_7 ), 
    .A0(\SinCos1/rom_addr0_r_10 ), .DI1(\SinCos1/rom_dout_21_ffin ), 
    .M1(\SinCos1/rom_addr0_r_6 ), .M0(\SinCos1/rom_addr0_r_11 ), 
    .FXB(\SinCos1/triglut_1_0_8_1_f5b ), .FXA(\SinCos1/triglut_1_0_8_0_f5a ), 
    .CLK(osc_clk), .OFX0(\SinCos1/triglut_1_0_8_1_f5b ), 
    .Q1(\SinCos1/rom_dout_21 ), .OFX1(\SinCos1/rom_dout_21_ffin ));
  SinCos1_SLICE_2271 \SinCos1/SLICE_2271 ( .D1(\SinCos1/rom_addr0_r_9 ), 
    .C1(\SinCos1/rom_addr0_r_8 ), .B1(\SinCos1/rom_addr0_r_7 ), 
    .A1(\SinCos1/rom_addr0_r_10 ), .D0(\SinCos1/rom_addr0_r_9 ), 
    .C0(\SinCos1/rom_addr0_r_8 ), .B0(\SinCos1/rom_addr0_r_7 ), 
    .A0(\SinCos1/rom_addr0_r_10 ), .DI1(\SinCos1/rom_dout_22_ffin ), 
    .M1(\SinCos1/rom_addr0_r_6 ), .M0(\SinCos1/rom_addr0_r_11 ), 
    .FXB(\SinCos1/triglut_1_0_9_1_f5b ), .FXA(\SinCos1/triglut_1_0_9_0_f5a ), 
    .CLK(osc_clk), .OFX0(\SinCos1/triglut_1_0_9_1_f5b ), 
    .Q1(\SinCos1/rom_dout_22 ), .OFX1(\SinCos1/rom_dout_22_ffin ));
  SinCos1_SLICE_2272 \SinCos1/SLICE_2272 ( .D1(\SinCos1/rom_addr0_r_9 ), 
    .C1(\SinCos1/rom_addr0_r_8 ), .B1(\SinCos1/rom_addr0_r_7 ), 
    .A1(\SinCos1/rom_addr0_r_10 ), .DI1(\SinCos1/rom_dout_23_ffin ), 
    .M1(\SinCos1/rom_addr0_r_6 ), .M0(\SinCos1/rom_addr0_r_11 ), 
    .FXB(\SinCos1/triglut_1_0_10_1_f5b ), .FXA(\SinCos1/triglut_1_0_10_0_f5a ), 
    .CLK(osc_clk), .OFX0(\SinCos1/triglut_1_0_10_1_f5b ), 
    .Q1(\SinCos1/rom_dout_23 ), .OFX1(\SinCos1/rom_dout_23_ffin ));
  SinCos1_SLICE_2273 \SinCos1/SLICE_2273 ( .DI1(\SinCos1/rom_dout_24_ffin ), 
    .M1(\SinCos1/rom_addr0_r_11 ), .FXB(\SinCos1/triglut_1_0_11_1_f5b ), 
    .FXA(\SinCos1/triglut_1_0_11_0_f5a ), .CLK(osc_clk), 
    .OFX0(\SinCos1/triglut_1_0_11_1_f5b ), .Q1(\SinCos1/rom_dout_24 ), 
    .OFX1(\SinCos1/rom_dout_24_ffin ));
  SinCos1_SLICE_2274 \SinCos1/SLICE_2274 ( .CLK(osc_clk), 
    .Q0(\SinCos1/rom_dout_25 ));
  SinCos1_SLICE_2275 \SinCos1/SLICE_2275 ( .M1(phase_accum_63), 
    .M0(\SinCos1/mx_ctrl_r_1 ), .CLK(osc_clk), .Q0(\SinCos1/sinromoutsel ), 
    .Q1(\SinCos1/mx_ctrl_r_1 ));
  CIC1Cos_SLICE_2276 \CIC1Cos/SLICE_2276 ( .C1(\CIC1Cos/n6728 ), 
    .B1(\CIC1Cos/n6779 ), .A1(\CIC1Cos/n6741 ), .C0(\CIC1Cos/n6728 ), 
    .B0(\CIC1Cos/n6780 ), .A0(\CIC1Cos/n6742 ), 
    .DI1(\CIC1Cos/d10_71_N_1747_60 ), .DI0(\CIC1Cos/d10_71_N_1747_59 ), 
    .CE(\CIC1Cos/v_comb ), .CLK(osc_clk), .F0(\CIC1Cos/d10_71_N_1747_59 ), 
    .Q0(d10_59), .F1(\CIC1Cos/d10_71_N_1747_60 ), .Q1(d10_60));
  CIC1Cos_SLICE_2277 \CIC1Cos/SLICE_2277 ( .C1(\CIC1Cos/n6728 ), 
    .B1(\CIC1Cos/n6777 ), .A1(\CIC1Cos/n6739 ), .C0(\CIC1Cos/n6728 ), 
    .B0(\CIC1Cos/n6778 ), .A0(\CIC1Cos/n6740 ), 
    .DI1(\CIC1Cos/d10_71_N_1747_62 ), .DI0(\CIC1Cos/d10_71_N_1747_61 ), 
    .CE(\CIC1Cos/v_comb ), .CLK(osc_clk), .F0(\CIC1Cos/d10_71_N_1747_61 ), 
    .Q0(d10_61), .F1(\CIC1Cos/d10_71_N_1747_62 ), .Q1(d10_62));
  CIC1Cos_SLICE_2278 \CIC1Cos/SLICE_2278 ( .C1(\CIC1Cos/n6728 ), 
    .B1(\CIC1Cos/n6775 ), .A1(\CIC1Cos/n6737 ), .C0(\CIC1Cos/n6728 ), 
    .B0(\CIC1Cos/n6776 ), .A0(\CIC1Cos/n6738 ), 
    .DI1(\CIC1Cos/d10_71_N_1747_64 ), .DI0(\CIC1Cos/d10_71_N_1747_63 ), 
    .CE(\CIC1Cos/v_comb ), .CLK(osc_clk), .F0(\CIC1Cos/d10_71_N_1747_63 ), 
    .Q0(d10_63), .F1(\CIC1Cos/d10_71_N_1747_64 ), .Q1(d10_64));
  CIC1Cos_SLICE_2279 \CIC1Cos/SLICE_2279 ( .C1(\CIC1Cos/n6728 ), 
    .B1(\CIC1Cos/n6773 ), .A1(\CIC1Cos/n6735 ), .C0(\CIC1Cos/n6728 ), 
    .B0(\CIC1Cos/n6774 ), .A0(\CIC1Cos/n6736 ), 
    .DI1(\CIC1Cos/d10_71_N_1747_66 ), .DI0(\CIC1Cos/d10_71_N_1747_65 ), 
    .CE(\CIC1Cos/v_comb ), .CLK(osc_clk), .F0(\CIC1Cos/d10_71_N_1747_65 ), 
    .Q0(d10_65), .F1(\CIC1Cos/d10_71_N_1747_66 ), .Q1(d10_66));
  CIC1Cos_SLICE_2280 \CIC1Cos/SLICE_2280 ( .C1(\CIC1Cos/n6728 ), 
    .B1(\CIC1Cos/n6771 ), .A1(\CIC1Cos/n6733 ), .C0(\CIC1Cos/n6728 ), 
    .B0(\CIC1Cos/n6772 ), .A0(\CIC1Cos/n6734 ), 
    .DI1(\CIC1Cos/d10_71_N_1747_68 ), .DI0(\CIC1Cos/d10_71_N_1747_67 ), 
    .CE(\CIC1Cos/v_comb ), .CLK(osc_clk), .F0(\CIC1Cos/d10_71_N_1747_67 ), 
    .Q0(d10_67), .F1(\CIC1Cos/d10_71_N_1747_68 ), .Q1(d10_68));
  CIC1Cos_SLICE_2281 \CIC1Cos/SLICE_2281 ( .C1(\CIC1Cos/n6728 ), 
    .B1(\CIC1Cos/n6769 ), .A1(\CIC1Cos/n6731 ), .C0(\CIC1Cos/n6728 ), 
    .B0(\CIC1Cos/n6770 ), .A0(\CIC1Cos/n6732 ), 
    .DI1(\CIC1Cos/d10_71_N_1747_70 ), .DI0(\CIC1Cos/d10_71_N_1747_69 ), 
    .CE(\CIC1Cos/v_comb ), .CLK(osc_clk), .F0(\CIC1Cos/d10_71_N_1747_69 ), 
    .Q0(d10_69), .F1(\CIC1Cos/d10_71_N_1747_70 ), .Q1(d10_70));
  CIC1Cos_SLICE_2282 \CIC1Cos/SLICE_2282 ( .C0(\CIC1Cos/n6728 ), 
    .B0(\CIC1Cos/n6768 ), .A0(\CIC1Cos/n6730 ), 
    .DI0(\CIC1Cos/d10_71_N_1747_71 ), .CE(\CIC1Cos/v_comb ), .CLK(osc_clk), 
    .F0(\CIC1Cos/d10_71_N_1747_71 ), .Q0(d10_71));
  ncoGen_SLICE_2284 \ncoGen/SLICE_2284 ( .B0(phase_inc_carrGen1_0), 
    .A0(\ncoGen/phase_accum_0 ), .DI0(\ncoGen/phase_accum_63_N_146_0 ), 
    .CLK(osc_clk), .F0(\ncoGen/phase_accum_63_N_146_0 ), 
    .Q0(\ncoGen/phase_accum_0 ));
  uart_rx1_SLICE_2285 \uart_rx1/SLICE_2285 ( .M1(\uart_rx1/r_Rx_Byte_1 ), 
    .M0(\uart_rx1/r_Rx_Byte_0 ), .CE(\uart_rx1/UartClk_2_enable_16 ), 
    .CLK(\uart_rx1/UartClk[2] ), .Q0(o_Rx_Byte1_0), .Q1(o_Rx_Byte1_1));
  uart_rx1_SLICE_2286 \uart_rx1/SLICE_2286 ( .M1(\uart_rx1/r_Rx_Byte_3 ), 
    .M0(\uart_rx1/r_Rx_Byte_2 ), .CE(\uart_rx1/UartClk_2_enable_16 ), 
    .CLK(\uart_rx1/UartClk[2] ), .Q0(o_Rx_Byte1_2), .Q1(o_Rx_Byte1_3));
  uart_rx1_SLICE_2287 \uart_rx1/SLICE_2287 ( .M1(\uart_rx1/r_Rx_Byte_5 ), 
    .M0(\uart_rx1/r_Rx_Byte_4 ), .CE(\uart_rx1/UartClk_2_enable_16 ), 
    .CLK(\uart_rx1/UartClk[2] ), .Q0(o_Rx_Byte1_4), .Q1(o_Rx_Byte1_5));
  uart_rx1_SLICE_2288 \uart_rx1/SLICE_2288 ( .M1(\uart_rx1/r_Rx_Byte_7 ), 
    .M0(\uart_rx1/r_Rx_Byte_6 ), .CE(\uart_rx1/UartClk_2_enable_16 ), 
    .CLK(\uart_rx1/UartClk[2] ), .Q0(o_Rx_Byte1_6), .Q1(o_Rx_Byte1_7));
  SLICE_2289 SLICE_2289( .M1(o_Rx_Byte1_2), .M0(o_Rx_Byte1_0), .CLK(osc_clk), 
    .Q0(o_Rx_Byte_0), .Q1(o_Rx_Byte_2));
  SLICE_2290 SLICE_2290( .M1(o_Rx_Byte1_4), .M0(o_Rx_Byte1_3), .CLK(osc_clk), 
    .Q0(o_Rx_Byte_3), .Q1(o_Rx_Byte_4));
  SLICE_2291 SLICE_2291( .M1(o_Rx_Byte1_6), .M0(o_Rx_Byte1_5), .CLK(osc_clk), 
    .Q0(o_Rx_Byte_5), .Q1(o_Rx_Byte_6));
  uart_rx1_SLICE_2294 \uart_rx1/SLICE_2294 ( .A0(\uart_rx1/r_Rx_DV_last ), 
    .DI0(\uart_rx1/r_Rx_DV_last_N_2483 ), .LSR(\uart_rx1/r_Rx_DV ), 
    .CLK(osc_clk), .F0(\uart_rx1/r_Rx_DV_last_N_2483 ), .Q0(o_Rx_DV1));
  SLICE_2295 SLICE_2295( .M1(phase_inc_carrGen_1), .M0(phase_inc_carrGen_0), 
    .CLK(osc_clk), .Q0(phase_inc_carrGen1_0), .Q1(phase_inc_carrGen1_1));
  SLICE_2296 SLICE_2296( .M1(phase_inc_carrGen_3), .M0(phase_inc_carrGen_2), 
    .CLK(osc_clk), .Q0(phase_inc_carrGen1_2), .Q1(phase_inc_carrGen1_3));
  SLICE_2297 SLICE_2297( .M1(phase_inc_carrGen_5), .M0(phase_inc_carrGen_4), 
    .CLK(osc_clk), .Q0(phase_inc_carrGen1_4), .Q1(phase_inc_carrGen1_5));
  SLICE_2298 SLICE_2298( .M1(phase_inc_carrGen_7), .M0(phase_inc_carrGen_6), 
    .CLK(osc_clk), .Q0(phase_inc_carrGen1_6), .Q1(phase_inc_carrGen1_7));
  SLICE_2299 SLICE_2299( .M1(phase_inc_carrGen_9), .M0(phase_inc_carrGen_8), 
    .CLK(osc_clk), .Q0(phase_inc_carrGen1_8), .Q1(phase_inc_carrGen1_9));
  SLICE_2300 SLICE_2300( .M1(phase_inc_carrGen_11), .M0(phase_inc_carrGen_10), 
    .CLK(osc_clk), .Q0(phase_inc_carrGen1_10), .Q1(phase_inc_carrGen1_11));
  SLICE_2301 SLICE_2301( .M1(phase_inc_carrGen_13), .M0(phase_inc_carrGen_12), 
    .CLK(osc_clk), .Q0(phase_inc_carrGen1_12), .Q1(phase_inc_carrGen1_13));
  SLICE_2302 SLICE_2302( .M1(phase_inc_carrGen_15), .M0(phase_inc_carrGen_14), 
    .CLK(osc_clk), .Q0(phase_inc_carrGen1_14), .Q1(phase_inc_carrGen1_15));
  SLICE_2303 SLICE_2303( .M1(phase_inc_carrGen_17), .M0(phase_inc_carrGen_16), 
    .CLK(osc_clk), .Q0(phase_inc_carrGen1_16), .Q1(phase_inc_carrGen1_17));
  SLICE_2304 SLICE_2304( .M1(phase_inc_carrGen_19), .M0(phase_inc_carrGen_18), 
    .CLK(osc_clk), .Q0(phase_inc_carrGen1_18), .Q1(phase_inc_carrGen1_19));
  SLICE_2305 SLICE_2305( .M1(phase_inc_carrGen_21), .M0(phase_inc_carrGen_20), 
    .CLK(osc_clk), .Q0(phase_inc_carrGen1_20), .Q1(phase_inc_carrGen1_21));
  SLICE_2306 SLICE_2306( .M1(phase_inc_carrGen_23), .M0(phase_inc_carrGen_22), 
    .CLK(osc_clk), .Q0(phase_inc_carrGen1_22), .Q1(phase_inc_carrGen1_23));
  SLICE_2307 SLICE_2307( .M1(phase_inc_carrGen_25), .M0(phase_inc_carrGen_24), 
    .CLK(osc_clk), .Q0(phase_inc_carrGen1_24), .Q1(phase_inc_carrGen1_25));
  SLICE_2308 SLICE_2308( .M1(phase_inc_carrGen_27), .M0(phase_inc_carrGen_26), 
    .CLK(osc_clk), .Q0(phase_inc_carrGen1_26), .Q1(phase_inc_carrGen1_27));
  SLICE_2309 SLICE_2309( .M1(phase_inc_carrGen_29), .M0(phase_inc_carrGen_28), 
    .CLK(osc_clk), .Q0(phase_inc_carrGen1_28), .Q1(phase_inc_carrGen1_29));
  SLICE_2310 SLICE_2310( .M1(phase_inc_carrGen_31), .M0(phase_inc_carrGen_30), 
    .CLK(osc_clk), .Q0(phase_inc_carrGen1_30), .Q1(phase_inc_carrGen1_31));
  SLICE_2311 SLICE_2311( .M1(phase_inc_carrGen_33), .M0(phase_inc_carrGen_32), 
    .CLK(osc_clk), .Q0(phase_inc_carrGen1_32), .Q1(phase_inc_carrGen1_33));
  SLICE_2312 SLICE_2312( .M1(phase_inc_carrGen_35), .M0(phase_inc_carrGen_34), 
    .CLK(osc_clk), .Q0(phase_inc_carrGen1_34), .Q1(phase_inc_carrGen1_35));
  SLICE_2313 SLICE_2313( .M1(phase_inc_carrGen_37), .M0(phase_inc_carrGen_36), 
    .CLK(osc_clk), .Q0(phase_inc_carrGen1_36), .Q1(phase_inc_carrGen1_37));
  SLICE_2314 SLICE_2314( .M1(phase_inc_carrGen_39), .M0(phase_inc_carrGen_38), 
    .CLK(osc_clk), .Q0(phase_inc_carrGen1_38), .Q1(phase_inc_carrGen1_39));
  SLICE_2315 SLICE_2315( .M1(phase_inc_carrGen_41), .M0(phase_inc_carrGen_40), 
    .CLK(osc_clk), .Q0(phase_inc_carrGen1_40), .Q1(phase_inc_carrGen1_41));
  SLICE_2316 SLICE_2316( .M1(phase_inc_carrGen_43), .M0(phase_inc_carrGen_42), 
    .CLK(osc_clk), .Q0(phase_inc_carrGen1_42), .Q1(phase_inc_carrGen1_43));
  SLICE_2317 SLICE_2317( .M1(phase_inc_carrGen_45), .M0(phase_inc_carrGen_44), 
    .CLK(osc_clk), .Q0(phase_inc_carrGen1_44), .Q1(phase_inc_carrGen1_45));
  SLICE_2318 SLICE_2318( .M1(phase_inc_carrGen_47), .M0(phase_inc_carrGen_46), 
    .CLK(osc_clk), .Q0(phase_inc_carrGen1_46), .Q1(phase_inc_carrGen1_47));
  SLICE_2319 SLICE_2319( .M1(phase_inc_carrGen_49), .M0(phase_inc_carrGen_48), 
    .CLK(osc_clk), .Q0(phase_inc_carrGen1_48), .Q1(phase_inc_carrGen1_49));
  SLICE_2320 SLICE_2320( .M1(phase_inc_carrGen_51), .M0(phase_inc_carrGen_50), 
    .CLK(osc_clk), .Q0(phase_inc_carrGen1_50), .Q1(phase_inc_carrGen1_51));
  SLICE_2321 SLICE_2321( .M1(phase_inc_carrGen_53), .M0(phase_inc_carrGen_52), 
    .CLK(osc_clk), .Q0(phase_inc_carrGen1_52), .Q1(phase_inc_carrGen1_53));
  SLICE_2322 SLICE_2322( .M1(phase_inc_carrGen_55), .M0(phase_inc_carrGen_54), 
    .CLK(osc_clk), .Q0(phase_inc_carrGen1_54), .Q1(phase_inc_carrGen1_55));
  SLICE_2323 SLICE_2323( .M1(phase_inc_carrGen_57), .M0(phase_inc_carrGen_56), 
    .CLK(osc_clk), .Q0(phase_inc_carrGen1_56), .Q1(phase_inc_carrGen1_57));
  SLICE_2324 SLICE_2324( .M1(phase_inc_carrGen_59), .M0(phase_inc_carrGen_58), 
    .CLK(osc_clk), .Q0(phase_inc_carrGen1_58), .Q1(phase_inc_carrGen1_59));
  SLICE_2325 SLICE_2325( .M1(phase_inc_carrGen_61), .M0(phase_inc_carrGen_60), 
    .CLK(osc_clk), .Q0(phase_inc_carrGen1_60), .Q1(phase_inc_carrGen1_61));
  SLICE_2326 SLICE_2326( .M1(phase_inc_carrGen_63), .M0(phase_inc_carrGen_62), 
    .CLK(osc_clk), .Q0(phase_inc_carrGen1_62), .Q1(phase_inc_carrGen1_63));
  SLICE_2327 SLICE_2327( .M0(n2879), .CE(osc_clk_enable_1411), .CLK(osc_clk), 
    .Q0(phase_inc_carrGen_1));
  uart_rx1_SLICE_2328 \uart_rx1/SLICE_2328 ( .D1(\uart_rx1/n12530 ), 
    .C1(\uart_rx1/r_Bit_Index_1 ), .B1(\uart_rx1/n13063 ), 
    .A1(\uart_rx1/r_Bit_Index_0 ), .D0(\uart_rx1/n12530 ), 
    .C0(\uart_rx1/r_Bit_Index_0 ), .B0(\uart_rx1/n12501 ), 
    .A0(\uart_rx1/n8821 ), .DI1(\uart_rx1/n12649 ), .DI0(\uart_rx1/n12647 ), 
    .CE(\uart_rx1/UartClk_2_enable_32 ), .CLK(\uart_rx1/UartClk[2] ), 
    .F0(\uart_rx1/n12647 ), .Q0(\uart_rx1/r_Bit_Index_0 ), 
    .F1(\uart_rx1/n12649 ), .Q1(\uart_rx1/r_Bit_Index_1 ));
  uart_rx1_SLICE_2329 \uart_rx1/SLICE_2329 ( .C1(\uart_rx1/r_Bit_Index_0 ), 
    .B1(\uart_rx1/r_Bit_Index_1 ), .A1(\uart_rx1/r_Bit_Index_2 ), 
    .D0(\uart_rx1/n13063 ), .C0(\uart_rx1/r_SM_Main_1 ), 
    .B0(\uart_rx1/r_SM_Main_0 ), .A0(\uart_rx1/n12980 ), 
    .DI0(\uart_rx1/n12692 ), .CE(\uart_rx1/UartClk_2_enable_32 ), 
    .CLK(\uart_rx1/UartClk[2] ), .F0(\uart_rx1/n12692 ), 
    .Q0(\uart_rx1/r_Bit_Index_2 ), .F1(\uart_rx1/n12980 ));
  uart_rx1_SLICE_2330 \uart_rx1/SLICE_2330 ( .M0(\uart_rx1/r_Rx_Data ), 
    .CE(\uart_rx1/UartClk_2_enable_36 ), .CLK(\uart_rx1/UartClk[2] ), 
    .Q0(\uart_rx1/r_Rx_Byte_0 ));
  uart_rx1_SLICE_2331 \uart_rx1/SLICE_2331 ( .M0(\uart_rx1/r_Rx_Data ), 
    .CE(\uart_rx1/UartClk_2_enable_7 ), .CLK(\uart_rx1/UartClk[2] ), 
    .Q0(\uart_rx1/r_Rx_Byte_1 ));
  uart_rx1_SLICE_2332 \uart_rx1/SLICE_2332 ( .M0(\uart_rx1/r_Rx_Data ), 
    .CE(\uart_rx1/UartClk_2_enable_5 ), .CLK(\uart_rx1/UartClk[2] ), 
    .Q0(\uart_rx1/r_Rx_Byte_2 ));
  uart_rx1_SLICE_2333 \uart_rx1/SLICE_2333 ( .M0(\uart_rx1/r_Rx_Data ), 
    .CE(\uart_rx1/UartClk_2_enable_4 ), .CLK(\uart_rx1/UartClk[2] ), 
    .Q0(\uart_rx1/r_Rx_Byte_3 ));
  uart_rx1_SLICE_2334 \uart_rx1/SLICE_2334 ( .M0(\uart_rx1/r_Rx_Data ), 
    .CE(\uart_rx1/UartClk_2_enable_1 ), .CLK(\uart_rx1/UartClk[2] ), 
    .Q0(\uart_rx1/r_Rx_Byte_4 ));
  uart_rx1_SLICE_2335 \uart_rx1/SLICE_2335 ( .M0(\uart_rx1/r_Rx_Data ), 
    .CE(\uart_rx1/UartClk_2_enable_35 ), .CLK(\uart_rx1/UartClk[2] ), 
    .Q0(\uart_rx1/r_Rx_Byte_5 ));
  uart_rx1_SLICE_2336 \uart_rx1/SLICE_2336 ( .M0(\uart_rx1/r_Rx_Data ), 
    .CE(\uart_rx1/UartClk_2_enable_34 ), .CLK(\uart_rx1/UartClk[2] ), 
    .Q0(\uart_rx1/r_Rx_Byte_6 ));
  uart_rx1_SLICE_2337 \uart_rx1/SLICE_2337 ( .M0(\uart_rx1/r_Rx_Data ), 
    .CE(\uart_rx1/UartClk_2_enable_33 ), .CLK(\uart_rx1/UartClk[2] ), 
    .Q0(\uart_rx1/r_Rx_Byte_7 ));
  uart_rx1_SLICE_2338 \uart_rx1/SLICE_2338 ( .D1(\uart_rx1/n12744 ), 
    .C1(\uart_rx1/n12740 ), .B1(\uart_rx1/n12748 ), .A1(\uart_rx1/n12746 ), 
    .D0(\uart_rx1/r_SM_Main_0 ), .C0(\uart_rx1/n13070 ), 
    .B0(\uart_rx1/n12501 ), .A0(\uart_rx1/n8821 ), 
    .DI0(\uart_rx1/r_Rx_DV_N_2484 ), .CE(\uart_rx1/UartClk_2_enable_6 ), 
    .CLK(\uart_rx1/UartClk[2] ), .F0(\uart_rx1/r_Rx_DV_N_2484 ), 
    .Q0(\uart_rx1/r_Rx_DV ), .F1(\uart_rx1/n12501 ));
  uart_rx1_SLICE_2339 \uart_rx1/SLICE_2339 ( .M0(\uart_rx1/r_Rx_DV ), 
    .CLK(osc_clk), .Q0(\uart_rx1/r_Rx_DV_last ));
  uart_rx1_SLICE_2341 \uart_rx1/SLICE_2341 ( .M1(\uart_rx1/r_Rx_Data_R ), 
    .M0(i_Rx_Serial_c), .CLK(\uart_rx1/UartClk[2] ), 
    .Q0(\uart_rx1/r_Rx_Data_R ), .Q1(\uart_rx1/r_Rx_Data ));
  uart_rx1_SLICE_2342 \uart_rx1/SLICE_2342 ( .D1(\uart_rx1/n8783 ), 
    .C1(\uart_rx1/n12501 ), .B1(\uart_rx1/n8821 ), .A1(\uart_rx1/r_SM_Main_0 ), 
    .C0(\uart_rx1/r_SM_Main_0 ), .B0(\uart_rx1/r_Rx_Data ), 
    .A0(\uart_rx1/r_SM_Main_2_N_2424_0 ), .DI0(\uart_rx1/n12990 ), 
    .M0(\uart_rx1/r_SM_Main_1 ), .LSR(\uart_rx1/r_SM_Main_2 ), 
    .CLK(\uart_rx1/UartClk[2] ), .OFX0(\uart_rx1/n12990 ), 
    .Q0(\uart_rx1/r_SM_Main_0 ));
  uart_rx1_SLICE_2343 \uart_rx1/SLICE_2343 ( .C1(\uart_rx1/n8821 ), 
    .B1(\uart_rx1/n12501 ), .A1(\uart_rx1/r_SM_Main_0 ), 
    .C0(\uart_rx1/r_SM_Main_0 ), .B0(\uart_rx1/r_Rx_Data ), 
    .A0(\uart_rx1/r_SM_Main_2_N_2424_0 ), .DI0(\uart_rx1/n13074 ), 
    .M0(\uart_rx1/r_SM_Main_1 ), .LSR(\uart_rx1/r_SM_Main_2 ), 
    .CLK(\uart_rx1/UartClk[2] ), .OFX0(\uart_rx1/n13074 ), 
    .Q0(\uart_rx1/r_SM_Main_1 ));
  uart_rx1_SLICE_2344 \uart_rx1/SLICE_2344 ( .D1(\uart_rx1/r_Clock_Count_4 ), 
    .C1(\uart_rx1/r_Clock_Count_5 ), .B1(\uart_rx1/r_Clock_Count_6 ), 
    .A1(\uart_rx1/n8805 ), .B0(\uart_rx1/n12501 ), .A0(\uart_rx1/n8821 ), 
    .DI0(\uart_rx1/n13063 ), .LSR(\uart_rx1/n12528 ), 
    .CLK(\uart_rx1/UartClk[2] ), .F0(\uart_rx1/n13063 ), 
    .Q0(\uart_rx1/r_SM_Main_2 ), .F1(\uart_rx1/n8821 ));
  i5447_SLICE_2345 \i5447/SLICE_2345 ( .D1(o_Rx_Byte_2), .C1(MYLED_c_6), 
    .B1(o_Rx_Byte_3), .A1(o_Rx_Byte_4), .D0(o_Rx_Byte_2), .C0(MYLED_c_6), 
    .B0(o_Rx_Byte_3), .A0(o_Rx_Byte_4), .M0(o_Rx_Byte_0), .OFX0(n13092));
  SinCos1_SLICE_2346 \SinCos1/SLICE_2346 ( .C1(\SinCos1/mx_ctrl_r ), 
    .B1(\SinCos1/rom_addr0_r_n_1 ), .A1(\SinCos1/rom_addr0_r_1 ), 
    .D0(\SinCos1/rom_addr0_r_10 ), .C0(\SinCos1/rom_addr0_r_9 ), 
    .B0(\SinCos1/rom_addr0_r_8 ), .A0(\SinCos1/rom_addr0_r_7 ), 
    .OFX0(\SinCos1/triglut_1_0_23_0_f5a ), .F1(\SinCos1/rom_addr0_r_7 ));
  SinCos1_SLICE_2347 \SinCos1/SLICE_2347 ( .C1(\SinCos1/rom_addr0_r_9 ), 
    .B1(\SinCos1/rom_addr0_r_8 ), .A1(\SinCos1/rom_addr0_r_10 ), 
    .D0(\SinCos1/rom_addr0_r_9 ), .C0(\SinCos1/rom_addr0_r_8 ), 
    .B0(\SinCos1/rom_addr0_r_7 ), .A0(\SinCos1/rom_addr0_r_10 ), 
    .M0(\SinCos1/rom_addr0_r_11 ), .OFX0(\SinCos1/triglut_1_0_22_0_f5a ));
  SinCos1_SLICE_2348 \SinCos1/SLICE_2348 ( .C1(\SinCos1/rom_addr0_r_9 ), 
    .B1(\SinCos1/rom_addr0_r_8 ), .A1(\SinCos1/rom_addr0_r_10 ), 
    .D0(\SinCos1/rom_addr0_r_9 ), .C0(\SinCos1/rom_addr0_r_8 ), 
    .B0(\SinCos1/rom_addr0_r_7 ), .A0(\SinCos1/rom_addr0_r_10 ), 
    .M0(\SinCos1/rom_addr0_r_11 ), .OFX0(\SinCos1/triglut_1_0_21_0_f5a ));
  SinCos1_SLICE_2349 \SinCos1/SLICE_2349 ( .D1(\SinCos1/rom_addr0_r_9 ), 
    .C1(\SinCos1/rom_addr0_r_8 ), .B1(\SinCos1/rom_addr0_r_7 ), 
    .A1(\SinCos1/rom_addr0_r_10 ), .D0(\SinCos1/rom_addr0_r_9 ), 
    .C0(\SinCos1/rom_addr0_r_8 ), .B0(\SinCos1/rom_addr0_r_7 ), 
    .A0(\SinCos1/rom_addr0_r_10 ), .M0(\SinCos1/rom_addr0_r_11 ), 
    .OFX0(\SinCos1/triglut_1_0_20_0_f5a ));
  SinCos1_SLICE_2350 \SinCos1/SLICE_2350 ( .D1(\SinCos1/rom_addr0_r_9 ), 
    .C1(\SinCos1/rom_addr0_r_8 ), .B1(\SinCos1/rom_addr0_r_7 ), 
    .A1(\SinCos1/rom_addr0_r_10 ), .D0(\SinCos1/rom_addr0_r_9 ), 
    .C0(\SinCos1/rom_addr0_r_8 ), .B0(\SinCos1/rom_addr0_r_7 ), 
    .A0(\SinCos1/rom_addr0_r_10 ), .M0(\SinCos1/rom_addr0_r_11 ), 
    .OFX0(\SinCos1/triglut_1_0_19_0_f5a ));
  SinCos1_SLICE_2351 \SinCos1/SLICE_2351 ( .D1(\SinCos1/rom_addr0_r_9 ), 
    .C1(\SinCos1/rom_addr0_r_8 ), .B1(\SinCos1/rom_addr0_r_7 ), 
    .A1(\SinCos1/rom_addr0_r_10 ), .D0(\SinCos1/rom_addr0_r_9 ), 
    .C0(\SinCos1/rom_addr0_r_8 ), .B0(\SinCos1/rom_addr0_r_7 ), 
    .A0(\SinCos1/rom_addr0_r_10 ), .M0(\SinCos1/rom_addr0_r_11 ), 
    .OFX0(\SinCos1/triglut_1_0_18_0_f5a ));
  SinCos1_SLICE_2352 \SinCos1/SLICE_2352 ( .D1(\SinCos1/rom_addr0_r_9 ), 
    .C1(\SinCos1/rom_addr0_r_8 ), .B1(\SinCos1/rom_addr0_r_7 ), 
    .A1(\SinCos1/rom_addr0_r_10 ), .D0(\SinCos1/rom_addr0_r_9 ), 
    .C0(\SinCos1/rom_addr0_r_8 ), .B0(\SinCos1/rom_addr0_r_7 ), 
    .A0(\SinCos1/rom_addr0_r_10 ), .M0(\SinCos1/rom_addr0_r_11 ), 
    .OFX0(\SinCos1/triglut_1_0_17_0_f5a ));
  SinCos1_SLICE_2353 \SinCos1/SLICE_2353 ( .D1(\SinCos1/rom_addr0_r_9 ), 
    .C1(\SinCos1/rom_addr0_r_8 ), .B1(\SinCos1/rom_addr0_r_7 ), 
    .A1(\SinCos1/rom_addr0_r_10 ), .D0(\SinCos1/rom_addr0_r_9 ), 
    .C0(\SinCos1/rom_addr0_r_8 ), .B0(\SinCos1/rom_addr0_r_7 ), 
    .A0(\SinCos1/rom_addr0_r_10 ), .M0(\SinCos1/rom_addr0_r_11 ), 
    .OFX0(\SinCos1/triglut_1_0_16_0_f5a ));
  SinCos1_SLICE_2354 \SinCos1/SLICE_2354 ( .D1(\SinCos1/rom_addr0_r_9 ), 
    .C1(\SinCos1/rom_addr0_r_8 ), .B1(\SinCos1/rom_addr0_r_7 ), 
    .A1(\SinCos1/rom_addr0_r_10 ), .D0(\SinCos1/rom_addr0_r_9 ), 
    .C0(\SinCos1/rom_addr0_r_8 ), .B0(\SinCos1/rom_addr0_r_7 ), 
    .A0(\SinCos1/rom_addr0_r_10 ), .M0(\SinCos1/rom_addr0_r_11 ), 
    .OFX0(\SinCos1/triglut_1_0_15_0_f5a ));
  SinCos1_SLICE_2355 \SinCos1/SLICE_2355 ( .D1(\SinCos1/rom_addr0_r_9 ), 
    .C1(\SinCos1/rom_addr0_r_8 ), .B1(\SinCos1/rom_addr0_r_7 ), 
    .A1(\SinCos1/rom_addr0_r_10 ), .D0(\SinCos1/rom_addr0_r_9 ), 
    .C0(\SinCos1/rom_addr0_r_8 ), .B0(\SinCos1/rom_addr0_r_7 ), 
    .A0(\SinCos1/rom_addr0_r_10 ), .M0(\SinCos1/rom_addr0_r_11 ), 
    .OFX0(\SinCos1/triglut_1_0_14_0_f5a ));
  SinCos1_SLICE_2356 \SinCos1/SLICE_2356 ( .D1(\SinCos1/rom_addr0_r_9 ), 
    .C1(\SinCos1/rom_addr0_r_8 ), .B1(\SinCos1/rom_addr0_r_7 ), 
    .A1(\SinCos1/rom_addr0_r_10 ), .D0(\SinCos1/rom_addr0_r_9 ), 
    .C0(\SinCos1/rom_addr0_r_8 ), .B0(\SinCos1/rom_addr0_r_7 ), 
    .A0(\SinCos1/rom_addr0_r_10 ), .M0(\SinCos1/rom_addr0_r_11 ), 
    .OFX0(\SinCos1/triglut_1_0_13_0_f5a ));
  SinCos1_SLICE_2357 \SinCos1/SLICE_2357 ( .D0(\SinCos1/rom_addr0_r_9 ), 
    .C0(\SinCos1/rom_addr0_r_8 ), .B0(\SinCos1/rom_addr0_r_7 ), 
    .A0(\SinCos1/rom_addr0_r_6 ), .M0(\SinCos1/rom_addr0_r_10 ), 
    .OFX0(\SinCos1/triglut_1_0_11_0_f5a ));
  SinCos1_SLICE_2358 \SinCos1/SLICE_2358 ( .C1(\SinCos1/rom_addr0_r_9 ), 
    .B1(\SinCos1/rom_addr0_r_8 ), .A1(\SinCos1/rom_addr0_r_10 ), 
    .D0(\SinCos1/rom_addr0_r_9 ), .C0(\SinCos1/rom_addr0_r_8 ), 
    .B0(\SinCos1/rom_addr0_r_7 ), .A0(\SinCos1/rom_addr0_r_10 ), 
    .M0(\SinCos1/rom_addr0_r_11 ), .OFX0(\SinCos1/triglut_1_0_10_0_f5a ));
  SinCos1_SLICE_2359 \SinCos1/SLICE_2359 ( .D1(\SinCos1/rom_addr0_r_9 ), 
    .C1(\SinCos1/rom_addr0_r_8 ), .B1(\SinCos1/rom_addr0_r_7 ), 
    .A1(\SinCos1/rom_addr0_r_10 ), .D0(\SinCos1/rom_addr0_r_9 ), 
    .C0(\SinCos1/rom_addr0_r_8 ), .B0(\SinCos1/rom_addr0_r_7 ), 
    .A0(\SinCos1/rom_addr0_r_10 ), .M0(\SinCos1/rom_addr0_r_11 ), 
    .OFX0(\SinCos1/triglut_1_0_9_0_f5a ));
  SinCos1_SLICE_2360 \SinCos1/SLICE_2360 ( .D1(\SinCos1/rom_addr0_r_9 ), 
    .C1(\SinCos1/rom_addr0_r_8 ), .B1(\SinCos1/rom_addr0_r_7 ), 
    .A1(\SinCos1/rom_addr0_r_10 ), .D0(\SinCos1/rom_addr0_r_9 ), 
    .C0(\SinCos1/rom_addr0_r_8 ), .B0(\SinCos1/rom_addr0_r_7 ), 
    .A0(\SinCos1/rom_addr0_r_10 ), .M0(\SinCos1/rom_addr0_r_11 ), 
    .OFX0(\SinCos1/triglut_1_0_8_0_f5a ));
  SinCos1_SLICE_2361 \SinCos1/SLICE_2361 ( .D1(\SinCos1/rom_addr0_r_9 ), 
    .C1(\SinCos1/rom_addr0_r_8 ), .B1(\SinCos1/rom_addr0_r_7 ), 
    .A1(\SinCos1/rom_addr0_r_10 ), .D0(\SinCos1/rom_addr0_r_9 ), 
    .C0(\SinCos1/rom_addr0_r_8 ), .B0(\SinCos1/rom_addr0_r_7 ), 
    .A0(\SinCos1/rom_addr0_r_10 ), .M0(\SinCos1/rom_addr0_r_11 ), 
    .OFX0(\SinCos1/triglut_1_0_7_0_f5a ));
  SinCos1_SLICE_2362 \SinCos1/SLICE_2362 ( .D1(\SinCos1/rom_addr0_r_9 ), 
    .C1(\SinCos1/rom_addr0_r_8 ), .B1(\SinCos1/rom_addr0_r_7 ), 
    .A1(\SinCos1/rom_addr0_r_10 ), .D0(\SinCos1/rom_addr0_r_9 ), 
    .C0(\SinCos1/rom_addr0_r_8 ), .B0(\SinCos1/rom_addr0_r_7 ), 
    .A0(\SinCos1/rom_addr0_r_10 ), .M0(\SinCos1/rom_addr0_r_11 ), 
    .OFX0(\SinCos1/triglut_1_0_6_0_f5a ));
  SinCos1_SLICE_2363 \SinCos1/SLICE_2363 ( .D1(\SinCos1/rom_addr0_r_9 ), 
    .C1(\SinCos1/rom_addr0_r_8 ), .B1(\SinCos1/rom_addr0_r_7 ), 
    .A1(\SinCos1/rom_addr0_r_10 ), .D0(\SinCos1/rom_addr0_r_9 ), 
    .C0(\SinCos1/rom_addr0_r_8 ), .B0(\SinCos1/rom_addr0_r_7 ), 
    .A0(\SinCos1/rom_addr0_r_10 ), .M0(\SinCos1/rom_addr0_r_11 ), 
    .OFX0(\SinCos1/triglut_1_0_5_0_f5a ));
  SinCos1_SLICE_2364 \SinCos1/SLICE_2364 ( .D1(\SinCos1/rom_addr0_r_9 ), 
    .C1(\SinCos1/rom_addr0_r_8 ), .B1(\SinCos1/rom_addr0_r_7 ), 
    .A1(\SinCos1/rom_addr0_r_10 ), .D0(\SinCos1/rom_addr0_r_9 ), 
    .C0(\SinCos1/rom_addr0_r_8 ), .B0(\SinCos1/rom_addr0_r_7 ), 
    .A0(\SinCos1/rom_addr0_r_10 ), .M0(\SinCos1/rom_addr0_r_11 ), 
    .OFX0(\SinCos1/triglut_1_0_4_0_f5a ));
  SinCos1_SLICE_2365 \SinCos1/SLICE_2365 ( .D1(\SinCos1/rom_addr0_r_9 ), 
    .C1(\SinCos1/rom_addr0_r_8 ), .B1(\SinCos1/rom_addr0_r_7 ), 
    .A1(\SinCos1/rom_addr0_r_10 ), .D0(\SinCos1/rom_addr0_r_9 ), 
    .C0(\SinCos1/rom_addr0_r_8 ), .B0(\SinCos1/rom_addr0_r_7 ), 
    .A0(\SinCos1/rom_addr0_r_10 ), .M0(\SinCos1/rom_addr0_r_11 ), 
    .OFX0(\SinCos1/triglut_1_0_3_0_f5a ));
  SinCos1_SLICE_2366 \SinCos1/SLICE_2366 ( .D1(\SinCos1/rom_addr0_r_9 ), 
    .C1(\SinCos1/rom_addr0_r_8 ), .B1(\SinCos1/rom_addr0_r_7 ), 
    .A1(\SinCos1/rom_addr0_r_10 ), .D0(\SinCos1/rom_addr0_r_9 ), 
    .C0(\SinCos1/rom_addr0_r_8 ), .B0(\SinCos1/rom_addr0_r_7 ), 
    .A0(\SinCos1/rom_addr0_r_10 ), .M0(\SinCos1/rom_addr0_r_11 ), 
    .OFX0(\SinCos1/triglut_1_0_2_0_f5a ));
  SinCos1_SLICE_2367 \SinCos1/SLICE_2367 ( .D1(\SinCos1/rom_addr0_r_9 ), 
    .C1(\SinCos1/rom_addr0_r_8 ), .B1(\SinCos1/rom_addr0_r_7 ), 
    .A1(\SinCos1/rom_addr0_r_10 ), .D0(\SinCos1/rom_addr0_r_9 ), 
    .C0(\SinCos1/rom_addr0_r_8 ), .B0(\SinCos1/rom_addr0_r_7 ), 
    .A0(\SinCos1/rom_addr0_r_10 ), .M0(\SinCos1/rom_addr0_r_11 ), 
    .OFX0(\SinCos1/triglut_1_0_1_0_f5a ));
  SinCos1_SLICE_2368 \SinCos1/SLICE_2368 ( .D1(\SinCos1/rom_addr0_r_9 ), 
    .C1(\SinCos1/rom_addr0_r_8 ), .B1(\SinCos1/rom_addr0_r_7 ), 
    .A1(\SinCos1/rom_addr0_r_10 ), .D0(\SinCos1/rom_addr0_r_9 ), 
    .C0(\SinCos1/rom_addr0_r_8 ), .B0(\SinCos1/rom_addr0_r_7 ), 
    .A0(\SinCos1/rom_addr0_r_10 ), .M0(\SinCos1/rom_addr0_r_11 ), 
    .OFX0(\SinCos1/triglut_1_0_0_0_f5a ));
  SLICE_2369 SLICE_2369( .D1(n8250), .C1(o_Rx_Byte_2), .B1(n12961), 
    .A1(n12962), .C0(n2815), .B0(o_Rx_Byte_4), .A0(o_Rx_Byte_2), .F0(n3683), 
    .F1(n2815));
  SLICE_2370 SLICE_2370( .D1(n2628), .C1(n1152), .B1(n13061), .A1(o_Rx_Byte_3), 
    .C0(o_Rx_Byte_2), .B0(n13064), .A0(o_Rx_Byte_3), .F0(n2628), .F1(n2359));
  SLICE_2371 SLICE_2371( .D1(n13092), .C1(o_Rx_Byte_6), .B1(n8245), 
    .A1(n13067), .D0(o_Rx_Byte_3), .C0(n13210), .B0(n13055), .A0(n13067), 
    .F0(osc_clk_enable_1411), .F1(n13210));
  SLICE_2372 SLICE_2372( .D1(n12533), .C1(n13064), .B1(o_Rx_Byte_3), 
    .A1(o_Rx_Byte_4), .D0(o_Rx_Byte_4), .C0(n8250), .B0(o_Rx_Byte_0), 
    .A0(MYLED_c_6), .F0(n13064), .F1(n7990));
  CIC1Sin_SLICE_2373 \CIC1Sin/SLICE_2373 ( .D1(\CIC1Sin/d10_62_adj_2497 ), 
    .C1(\CIC1Sin/n64 ), .B1(CICGain_0), .A1(CICGain_1), .C0(CICGain_0), 
    .B0(\CIC1Sin/d10_64 ), .A0(\CIC1Sin/d10_63 ), .F0(\CIC1Sin/n64 ), 
    .F1(\CIC1Sin/n134_adj_2498 ));
  SLICE_2374 SLICE_2374( .C1(CICGain_0), .B1(d10_67), .A1(d10_66), .D0(d10_65), 
    .C0(n67), .B0(CICGain_0), .A0(CICGain_1), .F0(\CIC1Sin/n137 ), .F1(n67));
  SLICE_2375 SLICE_2375( .C1(CICGain_0), .B1(d10_68), .A1(d10_67), .D0(d10_66), 
    .C0(n68), .B0(CICGain_0), .A0(CICGain_1), .F0(\CIC1Sin/n138 ), .F1(n68));
  CIC1Sin_SLICE_2376 \CIC1Sin/SLICE_2376 ( .D1(\CIC1Sin/d10_63 ), 
    .C1(\CIC1Sin/n65 ), .B1(CICGain_0), .A1(CICGain_1), .C0(CICGain_0), 
    .B0(\CIC1Sin/d10_65_adj_2488 ), .A0(\CIC1Sin/d10_64 ), .F0(\CIC1Sin/n65 ), 
    .F1(\CIC1Sin/n135_adj_2496 ));
  SLICE_2377 SLICE_2377( .C1(CICGain_0), .B1(d10_65), .A1(d10_64), .D0(d10_63), 
    .C0(n65), .B0(CICGain_0), .A0(CICGain_1), .F0(\CIC1Sin/n135 ), .F1(n65));
  CIC1Sin_SLICE_2378 \CIC1Sin/SLICE_2378 ( .D1(\CIC1Sin/d10_64 ), 
    .C1(\CIC1Sin/n66 ), .B1(CICGain_0), .A1(CICGain_1), .C0(CICGain_0), 
    .B0(\CIC1Sin/d10_66_adj_2491 ), .A0(\CIC1Sin/d10_65_adj_2488 ), 
    .F0(\CIC1Sin/n66 ), .F1(\CIC1Sin/n136_adj_2505 ));
  SLICE_2379 SLICE_2379( .C1(CICGain_0), .B1(d10_66), .A1(d10_65), .D0(d10_64), 
    .C0(n66), .B0(CICGain_0), .A0(CICGain_1), .F0(\CIC1Sin/n136 ), .F1(n66));
  SLICE_2380 SLICE_2380( .C1(CICGain_0), .B1(d10_63), .A1(d10_62), .D0(d10_61), 
    .C0(n63), .B0(CICGain_0), .A0(CICGain_1), .F0(\CIC1Sin/n133 ), .F1(n63));
  SLICE_2381 SLICE_2381( .C1(CICGain_0), .B1(d10_64), .A1(d10_63), .D0(d10_62), 
    .C0(n64), .B0(CICGain_0), .A0(CICGain_1), .F0(\CIC1Sin/n134 ), .F1(n64));
  SLICE_2382 SLICE_2382( .C1(CICGain_0), .B1(d10_61), .A1(d10_60), .D0(d10_59), 
    .C0(n61), .B0(CICGain_0), .A0(CICGain_1), .F0(\CIC1Sin/n131 ), .F1(n61));
  CIC1Sin_SLICE_2383 \CIC1Sin/SLICE_2383 ( .D1(\CIC1Sin/d10_66_adj_2491 ), 
    .C1(\CIC1Sin/n68_adj_2495 ), .B1(CICGain_0), .A1(CICGain_1), 
    .C0(CICGain_0), .B0(\CIC1Sin/d10_68 ), .A0(\CIC1Sin/d10_67 ), 
    .F0(\CIC1Sin/n68_adj_2495 ), .F1(\CIC1Sin/n138_adj_2507 ));
  SLICE_2384 SLICE_2384( .C1(CICGain_0), .B1(d10_62), .A1(d10_61), .D0(d10_60), 
    .C0(n62), .B0(CICGain_0), .A0(CICGain_1), .F0(\CIC1Sin/n132 ), .F1(n62));
  CIC1Sin_SLICE_2385 \CIC1Sin/SLICE_2385 ( .C1(CICGain_0), 
    .B1(\CIC1Sin/d10_61_adj_2522 ), .A1(\CIC1Sin/d10_60_adj_2521 ), 
    .D0(\CIC1Sin/d10_59_adj_2500 ), .C0(\CIC1Sin/n61_adj_2499 ), 
    .B0(CICGain_0), .A0(CICGain_1), .F0(\CIC1Sin/n131_adj_2501 ), 
    .F1(\CIC1Sin/n61_adj_2499 ));
  CIC1Sin_SLICE_2386 \CIC1Sin/SLICE_2386 ( .D1(\CIC1Sin/d10_65_adj_2488 ), 
    .C1(\CIC1Sin/n13174 ), .B1(CICGain_0), .A1(CICGain_1), .C0(CICGain_0), 
    .B0(\CIC1Sin/d10_67 ), .A0(\CIC1Sin/d10_66_adj_2491 ), 
    .F0(\CIC1Sin/n13174 ), .F1(\CIC1Sin/n137_adj_2506 ));
  CIC1Sin_SLICE_2387 \CIC1Sin/SLICE_2387 ( .C1(CICGain_0), 
    .B1(\CIC1Sin/d10_63 ), .A1(\CIC1Sin/d10_62_adj_2497 ), 
    .D0(\CIC1Sin/d10_61_adj_2522 ), .C0(\CIC1Sin/n63_adj_2502 ), 
    .B0(CICGain_0), .A0(CICGain_1), .F0(\CIC1Sin/n133_adj_2504 ), 
    .F1(\CIC1Sin/n63_adj_2502 ));
  CIC1Sin_SLICE_2388 \CIC1Sin/SLICE_2388 ( .D1(\CIC1Sin/d10_60_adj_2521 ), 
    .C1(\CIC1Sin/n62_adj_2528 ), .B1(CICGain_0), .A1(CICGain_1), 
    .C0(CICGain_0), .B0(\CIC1Sin/d10_62_adj_2497 ), 
    .A0(\CIC1Sin/d10_61_adj_2522 ), .F0(\CIC1Sin/n62_adj_2528 ), 
    .F1(\CIC1Sin/n132_adj_2503 ));
  SLICE_2389 SLICE_2389( .C1(n12533), .B1(o_Rx_Byte_3), .A1(o_Rx_Byte_4), 
    .D0(n2563), .C0(n13057), .B0(n1115), .A0(n2522), .F0(n2322), .F1(n2563));
  SLICE_2390 SLICE_2390( .B1(n12533), .A1(o_Rx_Byte_4), .D0(n13061), 
    .C0(o_Rx_Byte_3), .B0(n1053), .A0(n1114), .F0(n8028), .F1(n13061));
  PWM1_SLICE_2391 \PWM1/SLICE_2391 ( .B1(\PWM1/counter_8 ), 
    .A1(\PWM1/counter_7 ), .D0(\PWM1/n12 ), .C0(\PWM1/n11 ), .B0(\PWM1/n15 ), 
    .A0(\PWM1/n17 ), .F0(\PWM1/osc_clk_enable_1406 ), .F1(\PWM1/n12 ));
  SLICE_2392 SLICE_2392( .D1(n2563), .C1(n13057), .B1(n1148), .A1(n2555), 
    .C0(n1087), .B0(n13064), .A0(o_Rx_Byte_3), .F0(n2555), .F1(n2355));
  SLICE_2393 SLICE_2393( .D1(n2563), .C1(n13057), .B1(n1104), .A1(n7833), 
    .D0(n1043), .C0(o_Rx_Byte_3), .B0(n13064), .A0(o_Rx_Byte_2), .F0(n7833), 
    .F1(n2311));
  SLICE_2394 SLICE_2394( .C1(n13177), .B1(n12533), .A1(o_Rx_Byte_4), 
    .D0(n2563), .C0(n13057), .B0(n1117), .A0(n7813), .F0(n2324), .F1(n13057));
  SLICE_2395 SLICE_2395( .D1(n2563), .C1(n13057), .B1(n1110), .A1(n7823), 
    .D0(n1049), .C0(n13177), .B0(n13064), .A0(o_Rx_Byte_2), .F0(n7823), 
    .F1(n2317));
  SLICE_2396 SLICE_2396( .D1(n1055), .C1(n13177), .B1(n13064), 
    .A1(o_Rx_Byte_2), .D0(n2563), .C0(n13057), .B0(n1116), .A0(n7815), 
    .F0(n2323), .F1(n7815));
  SLICE_2397 SLICE_2397( .C1(n1079), .B1(n13064), .A1(o_Rx_Byte_3), .D0(n2563), 
    .C0(n13057), .B0(n1140), .A0(n2547), .F0(n2347), .F1(n2547));
  SLICE_2398 SLICE_2398( .D1(n1058), .C1(n13177), .B1(n13064), 
    .A1(o_Rx_Byte_2), .D0(n2563), .C0(n13057), .B0(n1119), .A0(n7809), 
    .F0(n2326), .F1(n7809));
  SLICE_2399 SLICE_2399( .D1(n2563), .C1(n13057), .B1(n1101), .A1(n7839), 
    .D0(n1040), .C0(n13177), .B0(n13064), .A0(o_Rx_Byte_2), .F0(n7839), 
    .F1(n2308));
  SLICE_2400 SLICE_2400( .D1(n1057), .C1(o_Rx_Byte_3), .B1(n13064), 
    .A1(o_Rx_Byte_2), .D0(n2563), .C0(n13057), .B0(n1118), .A0(n7811), 
    .F0(n2325), .F1(n7811));
  SLICE_2401 SLICE_2401( .D1(n1060), .C1(n13177), .B1(n13064), 
    .A1(o_Rx_Byte_2), .D0(n2563), .C0(n13057), .B0(n1121), .A0(n7805), 
    .F0(n2328), .F1(n7805));
  SLICE_2402 SLICE_2402( .D1(n1059), .C1(o_Rx_Byte_3), .B1(n13064), 
    .A1(o_Rx_Byte_2), .D0(n2563), .C0(n13057), .B0(n1120), .A0(n7807), 
    .F0(n2327), .F1(n7807));
  SLICE_2403 SLICE_2403( .C1(n1082), .B1(n13064), .A1(o_Rx_Byte_3), .D0(n2563), 
    .C0(n13057), .B0(n1143), .A0(n2550), .F0(n2350), .F1(n2550));
  SLICE_2404 SLICE_2404( .D1(n1062), .C1(o_Rx_Byte_3), .B1(n13064), 
    .A1(o_Rx_Byte_2), .D0(n2563), .C0(n13057), .B0(n1123), .A0(n7801), 
    .F0(n2330), .F1(n7801));
  SLICE_2405 SLICE_2405( .D1(n1061), .C1(n13177), .B1(n13064), 
    .A1(o_Rx_Byte_2), .D0(n2563), .C0(n13057), .B0(n1122), .A0(n7803), 
    .F0(n2329), .F1(n7803));
  SLICE_2406 SLICE_2406( .D1(n1084), .C1(n13177), .B1(n13064), 
    .A1(o_Rx_Byte_2), .D0(n2563), .C0(n13057), .B0(n1145), .A0(n7763), 
    .F0(n2352), .F1(n7763));
  SLICE_2407 SLICE_2407( .D1(o_Rx_Byte_6), .C1(MYLED_c_6), .B1(n12952), 
    .A1(n12953), .C0(o_Rx_Byte_0), .B0(n13177), .A0(o_Rx_Byte_2), .F0(n12953), 
    .F1(n13055));
  SLICE_2408 SLICE_2408( .B1(o_Rx_Byte_3), .A1(n1083), .D0(n2563), .C0(n13057), 
    .B0(n1144), .A0(n2551), .F0(n2351), .F1(n2551));
  SLICE_2409 SLICE_2409( .D1(n1064), .C1(o_Rx_Byte_3), .B1(n13064), 
    .A1(o_Rx_Byte_2), .D0(n2563), .C0(n13057), .B0(n1125), .A0(n7797), 
    .F0(n2332), .F1(n7797));
  SLICE_2410 SLICE_2410( .D1(n1086), .C1(n13177), .B1(n13064), 
    .A1(o_Rx_Byte_2), .D0(n2563), .C0(n13057), .B0(n1147), .A0(n7759), 
    .F0(n2354), .F1(n7759));
  SLICE_2411 SLICE_2411( .D1(n1085), .C1(o_Rx_Byte_3), .B1(n13064), 
    .A1(o_Rx_Byte_2), .D0(n2563), .C0(n13057), .B0(n1146), .A0(n7761), 
    .F0(n2353), .F1(n7761));
  SLICE_2412 SLICE_2412( .D1(o_Rx_Byte_4), .C1(o_Rx_Byte_7), .B1(o_Rx_Byte_5), 
    .A1(o_Rx_DV), .D0(n6), .C0(o_Rx_Byte_6), .B0(o_Rx_Byte_2), 
    .A0(o_Rx_Byte_3), .M0(o_Rx_Byte1_7), .CLK(osc_clk), 
    .F0(osc_clk_enable_1407), .Q0(o_Rx_Byte_7), .F1(n6));
  SLICE_2413 SLICE_2413( .D1(n2563), .C1(n13057), .B1(n1108), .A1(n7827), 
    .D0(n1047), .C0(o_Rx_Byte_3), .B0(n13064), .A0(o_Rx_Byte_2), .F0(n7827), 
    .F1(n2315));
  SLICE_2414 SLICE_2414( .D1(n1090), .C1(n13177), .B1(n13064), 
    .A1(o_Rx_Byte_2), .D0(n2563), .C0(n13057), .B0(n1151), .A0(n7753), 
    .F0(n2358), .F1(n7753));
  SLICE_2415 SLICE_2415( .D1(n1063), .C1(n13177), .B1(n13064), 
    .A1(o_Rx_Byte_2), .D0(n2563), .C0(n13057), .B0(n1124), .A0(n7799), 
    .F0(n2331), .F1(n7799));
  SLICE_2416 SLICE_2416( .D1(n1089), .C1(o_Rx_Byte_3), .B1(n13064), 
    .A1(o_Rx_Byte_2), .D0(n2563), .C0(n13057), .B0(n1150), .A0(n7755), 
    .F0(n2357), .F1(n7755));
  SLICE_2417 SLICE_2417( .D1(n1066), .C1(o_Rx_Byte_3), .B1(n13064), 
    .A1(o_Rx_Byte_2), .D0(n2563), .C0(n13057), .B0(n1127), .A0(n7793), 
    .F0(n2334), .F1(n7793));
  SLICE_2418 SLICE_2418( .D1(n8250), .C1(n13069), .B1(n13177), 
    .A1(o_Rx_Byte_4), .D0(n2563), .C0(n13057), .B0(n1154), .A0(n8383), 
    .M0(o_Rx_Byte1_3), .CLK(osc_clk), .F0(n2361), .Q0(n13177), .F1(n8383));
  SLICE_2419 SLICE_2419( .D1(n2563), .C1(n13057), .B1(n1112), .A1(n7821), 
    .D0(n1051), .C0(n13177), .B0(n13064), .A0(o_Rx_Byte_2), .F0(n7821), 
    .F1(n2319));
  SLICE_2420 SLICE_2420( .B1(n13177), .A1(n1065), .D0(n2563), .C0(n13057), 
    .B0(n1126), .A0(n2533), .F0(n2333), .F1(n2533));
  SLICE_2421 SLICE_2421( .D1(n1068), .C1(o_Rx_Byte_3), .B1(n13064), 
    .A1(o_Rx_Byte_2), .D0(n2563), .C0(n13057), .B0(n1129), .A0(n7789), 
    .F0(n2336), .F1(n7789));
  uart_rx1_SLICE_2422 \uart_rx1/SLICE_2422 ( .D1(\uart_rx1/n13070 ), 
    .C1(\uart_rx1/r_SM_Main_0 ), .B1(\uart_rx1/n12501 ), .A1(\uart_rx1/n8821 ), 
    .D0(\uart_rx1/r_Bit_Index_0 ), .C0(\uart_rx1/r_Bit_Index_2 ), 
    .B0(\uart_rx1/n13056 ), .A0(\uart_rx1/r_Bit_Index_1 ), 
    .F0(\uart_rx1/UartClk_2_enable_5 ), .F1(\uart_rx1/n13056 ));
  uart_rx1_SLICE_2423 \uart_rx1/SLICE_2423 ( .D1(\uart_rx1/n8821 ), 
    .C1(\uart_rx1/n12501 ), .B1(\uart_rx1/r_SM_Main_1 ), 
    .A1(\uart_rx1/r_SM_Main_2 ), .D0(\uart_rx1/r_Bit_Index_1 ), 
    .C0(\uart_rx1/n12539 ), .B0(\uart_rx1/n13059 ), 
    .A0(\uart_rx1/r_SM_Main_0 ), .F0(\uart_rx1/UartClk_2_enable_7 ), 
    .F1(\uart_rx1/n13059 ));
  uart_rx1_SLICE_2424 \uart_rx1/SLICE_2424 ( 
    .C1(\uart_rx1/r_SM_Main_2_N_2424_0 ), .B1(\uart_rx1/r_SM_Main_0 ), 
    .A1(\uart_rx1/r_Rx_Data ), .D0(\uart_rx1/n12756 ), .C0(\uart_rx1/n12501 ), 
    .B0(\uart_rx1/r_Clock_Count_1 ), .A0(\uart_rx1/n12792 ), 
    .F0(\uart_rx1/r_SM_Main_2_N_2424_0 ), .F1(\uart_rx1/n12594 ));
  uart_rx1_SLICE_2425 \uart_rx1/SLICE_2425 ( .B1(\uart_rx1/r_Bit_Index_0 ), 
    .A1(\uart_rx1/r_Bit_Index_2 ), .D0(\uart_rx1/r_Bit_Index_1 ), 
    .C0(\uart_rx1/n13065 ), .B0(\uart_rx1/n13059 ), 
    .A0(\uart_rx1/r_SM_Main_0 ), .F0(\uart_rx1/UartClk_2_enable_33 ), 
    .F1(\uart_rx1/n13065 ));
  uart_rx1_SLICE_2426 \uart_rx1/SLICE_2426 ( .D1(\uart_rx1/r_Bit_Index_1 ), 
    .C1(\uart_rx1/n12539 ), .B1(\uart_rx1/n13059 ), 
    .A1(\uart_rx1/r_SM_Main_0 ), .B0(\uart_rx1/r_Bit_Index_0 ), 
    .A0(\uart_rx1/r_Bit_Index_2 ), .F0(\uart_rx1/n12539 ), 
    .F1(\uart_rx1/UartClk_2_enable_4 ));
  uart_rx1_SLICE_2427 \uart_rx1/SLICE_2427 ( .D1(\uart_rx1/n13070 ), 
    .C1(\uart_rx1/r_SM_Main_0 ), .B1(\uart_rx1/n12501 ), .A1(\uart_rx1/n8821 ), 
    .B0(\uart_rx1/r_SM_Main_1 ), .A0(\uart_rx1/r_SM_Main_2 ), 
    .F0(\uart_rx1/n13070 ), .F1(\uart_rx1/UartClk_2_enable_16 ));
  uart_rx1_SLICE_2428 \uart_rx1/SLICE_2428 ( .B1(\uart_rx1/r_SM_Main_0 ), 
    .A1(\uart_rx1/r_Rx_Data ), .D0(\uart_rx1/n12764 ), 
    .C0(\uart_rx1/r_SM_Main_2_N_2424_0 ), .B0(\uart_rx1/r_SM_Main_1 ), 
    .A0(\uart_rx1/r_SM_Main_2 ), .F0(\uart_rx1/UartClk_2_enable_30 ), 
    .F1(\uart_rx1/n12764 ));
  uart_rx1_SLICE_2429 \uart_rx1/SLICE_2429 ( .B1(\uart_rx1/r_SM_Main_2 ), 
    .A1(\uart_rx1/r_SM_Main_0 ), .D0(\uart_rx1/r_SM_Main_1 ), 
    .C0(\uart_rx1/n8821 ), .B0(\uart_rx1/n12501 ), .A0(\uart_rx1/n12774 ), 
    .F0(\uart_rx1/UartClk_2_enable_32 ), .F1(\uart_rx1/n12774 ));
  SLICE_2430 SLICE_2430( .D1(n1067), .C1(n13177), .B1(n13064), 
    .A1(o_Rx_Byte_2), .D0(n2563), .C0(n13057), .B0(n1128), .A0(n7791), 
    .F0(n2335), .F1(n7791));
  SLICE_2431 SLICE_2431( .C1(o_Rx_Byte_7), .B1(o_Rx_Byte_5), .A1(o_Rx_DV), 
    .D0(n13092), .C0(o_Rx_Byte_6), .B0(n8245), .A0(n13067), 
    .F0(osc_clk_enable_1461), .F1(n13067));
  SLICE_2432 SLICE_2432( .D1(n13055), .C1(o_Rx_Byte_7), .B1(o_Rx_Byte_5), 
    .A1(o_Rx_DV), .D0(n13061), .C0(n13062), .B0(o_Rx_Byte_3), .A0(n13210), 
    .M0(o_Rx_DV1), .CLK(osc_clk), .F0(osc_clk_enable_1408), .Q0(o_Rx_DV), 
    .F1(n13062));
  SLICE_2433 SLICE_2433( .D1(MYLED_c_6), .C1(o_Rx_Byte_3), .B1(o_Rx_Byte_2), 
    .A1(n41), .D0(n13092), .C0(o_Rx_Byte_6), .B0(n8245), .A0(n13067), 
    .F0(osc_clk_enable_1471), .F1(n8245));
  SLICE_2434 SLICE_2434( .D1(n1070), .C1(o_Rx_Byte_3), .B1(n13064), 
    .A1(o_Rx_Byte_2), .D0(n2563), .C0(n13057), .B0(n1131), .A0(n7785), 
    .F0(n2338), .F1(n7785));
  SLICE_2435 SLICE_2435( .D1(n1153), .C1(n12533), .B1(o_Rx_Byte_4), 
    .A1(o_Rx_Byte_3), .D0(MYLED_c_6), .C0(o_Rx_Byte_0), .B0(o_Rx_Byte_2), 
    .A0(n8250), .F0(n12533), .F1(n2360));
  SLICE_2436 SLICE_2436( .D1(n2563), .C1(n13057), .B1(n1132), .A1(n7783), 
    .D0(n1071), .C0(n13177), .B0(n13064), .A0(o_Rx_Byte_2), .F0(n7783), 
    .F1(n2339));
  SLICE_2437 SLICE_2437( .D1(n1069), .C1(n13177), .B1(n13064), 
    .A1(o_Rx_Byte_2), .D0(n2563), .C0(n13057), .B0(n1130), .A0(n7787), 
    .F0(n2337), .F1(n7787));
  SLICE_2438 SLICE_2438( .C1(n1072), .B1(n13064), .A1(o_Rx_Byte_3), .D0(n2563), 
    .C0(n13057), .B0(n1133), .A0(n2540), .F0(n2340), .F1(n2540));
  SLICE_2439 SLICE_2439( .D1(n2563), .C1(n13057), .B1(n1095), .A1(n7849), 
    .D0(n1034), .C0(n13177), .B0(n13064), .A0(o_Rx_Byte_2), .F0(n7849), 
    .F1(n2302));
  SLICE_2440 SLICE_2440( .D1(n1074), .C1(o_Rx_Byte_3), .B1(n13064), 
    .A1(o_Rx_Byte_2), .D0(n2563), .C0(n13057), .B0(n1135), .A0(n7779), 
    .F0(n2342), .F1(n7779));
  SLICE_2441 SLICE_2441( .B1(n13177), .A1(n1073), .D0(n2563), .C0(n13057), 
    .B0(n1134), .A0(n2541), .F0(n2341), .F1(n2541));
  SLICE_2442 SLICE_2442( .D1(n1076), .C1(o_Rx_Byte_3), .B1(n13064), 
    .A1(o_Rx_Byte_2), .D0(n2563), .C0(n13057), .B0(n1137), .A0(n7775), 
    .F0(n2344), .F1(n7775));
  SLICE_2443 SLICE_2443( .D1(n1078), .C1(o_Rx_Byte_3), .B1(n13064), 
    .A1(o_Rx_Byte_2), .D0(n2563), .C0(n13057), .B0(n1139), .A0(n7771), 
    .F0(n2346), .F1(n7771));
  SLICE_2444 SLICE_2444( .D1(n1080), .C1(n13177), .B1(n13064), 
    .A1(o_Rx_Byte_2), .D0(n2563), .C0(n13057), .B0(n1141), .A0(n7769), 
    .F0(n2348), .F1(n7769));
  SLICE_2445 SLICE_2445( .D1(n2563), .C1(n13057), .B1(n1097), .A1(n7845), 
    .D0(n1036), .C0(n13177), .B0(n13064), .A0(o_Rx_Byte_2), .F0(n7845), 
    .F1(n2304));
  SLICE_2446 SLICE_2446( .D1(n2563), .C1(n13057), .B1(n1096), .A1(n7847), 
    .D0(n1035), .C0(o_Rx_Byte_3), .B0(n13064), .A0(o_Rx_Byte_2), .F0(n7847), 
    .F1(n2303));
  SLICE_2447 SLICE_2447( .D1(n2563), .C1(n13057), .B1(n1113), .A1(n7819), 
    .D0(n1052), .C0(o_Rx_Byte_3), .B0(n13064), .A0(o_Rx_Byte_2), .F0(n7819), 
    .F1(n2320));
  SLICE_2448 SLICE_2448( .D1(n1041), .C1(o_Rx_Byte_3), .B1(n13064), 
    .A1(o_Rx_Byte_2), .D0(n2563), .C0(n13057), .B0(n1102), .A0(n7837), 
    .F0(n2309), .F1(n7837));
  SLICE_2449 SLICE_2449( .B1(n13177), .A1(n1044), .D0(n2563), .C0(n13057), 
    .B0(n1105), .A0(n2512), .F0(n2312), .F1(n2512));
  SLICE_2450 SLICE_2450( .D1(n2563), .C1(n13057), .B1(n1107), .A1(n7829), 
    .D0(n1046), .C0(n13177), .B0(n13064), .A0(o_Rx_Byte_2), .F0(n7829), 
    .F1(n2314));
  SLICE_2451 SLICE_2451( .D1(n2563), .C1(n13057), .B1(n1109), .A1(n7825), 
    .D0(n1048), .C0(n13177), .B0(n13064), .A0(o_Rx_Byte_2), .F0(n7825), 
    .F1(n2316));
  SLICE_2452 SLICE_2452( .B1(o_Rx_Byte_3), .A1(n1038), .D0(n2563), .C0(n13057), 
    .B0(n1099), .A0(n2506), .F0(n2306), .F1(n2506));
  SLICE_2453 SLICE_2453( .B1(o_Rx_Byte_3), .A1(n1037), .D0(n2563), .C0(n13057), 
    .B0(n1098), .A0(n2505), .F0(n2305), .F1(n2505));
  SLICE_2454 SLICE_2454( .B1(o_Rx_Byte_3), .A1(n1039), .D0(n7990), .C0(n13057), 
    .B0(n1100), .A0(n2373), .F0(n2307), .F1(n2373));
  SLICE_2455 SLICE_2455( .B1(o_Rx_Byte_3), .A1(n1045), .D0(n7990), .C0(n13057), 
    .B0(n1106), .A0(n2379), .F0(n2313), .F1(n2379));
  SinCos1_SLICE_2456 \SinCos1/SLICE_2456 ( .D1(\SinCos1/rom_addr0_r_6 ), 
    .C1(\SinCos1/rom_addr0_r_7 ), .B1(\SinCos1/rom_addr0_r_8 ), 
    .A1(\SinCos1/rom_addr0_r_9 ), .C0(\SinCos1/mx_ctrl_r ), 
    .B0(\SinCos1/rom_addr0_r_n ), .A0(\SinCos1/rom_addr0_r ), 
    .F0(\SinCos1/rom_addr0_r_6 ), .F1(\SinCos1/func_or_inet ));
  CIC1Sin_SLICE_2457 \CIC1Sin/SLICE_2457 ( .D1(\CIC1Sin/count_11 ), 
    .C1(\CIC1Sin/count_6 ), .B1(\CIC1Sin/n24 ), .A1(\CIC1Sin/n17 ), 
    .B0(\CIC1Sin/count_0 ), .A0(\CIC1Sin/count_10 ), .F0(\CIC1Sin/n17 ), 
    .F1(\CIC1Sin/n26 ));
  CIC1Sin_SLICE_2458 \CIC1Sin/SLICE_2458 ( .D1(\CIC1Sin/n20 ), 
    .C1(\CIC1Sin/n19 ), .B1(\CIC1Sin/n23 ), .A1(\CIC1Sin/n25 ), 
    .D0(\CIC1Sin/count_2 ), .C0(\CIC1Sin/n13066 ), .B0(\CIC1Sin/count_6 ), 
    .A0(\CIC1Sin/n13071 ), .F0(\CIC1Sin/n23 ), .F1(\CIC1Sin/n54 ));
  CIC1Sin_SLICE_2459 \CIC1Sin/SLICE_2459 ( .D1(\CIC1Sin/count_3 ), 
    .C1(\CIC1Sin/n16 ), .B1(\CIC1Sin/count_8 ), .A1(\CIC1Sin/n21 ), 
    .B0(\CIC1Sin/count_7 ), .A0(\CIC1Sin/count_9 ), .F0(\CIC1Sin/n21 ), 
    .F1(\CIC1Sin/n25 ));
  CIC1Sin_SLICE_2460 \CIC1Sin/SLICE_2460 ( .D1(\CIC1Sin/n16_adj_2524 ), 
    .C1(\CIC1Sin/n15 ), .B1(\CIC1Sin/n26 ), .A1(\CIC1Sin/n21_adj_2523 ), 
    .B0(\CIC1Sin/count_4 ), .A0(\CIC1Sin/count_5 ), 
    .F0(\CIC1Sin/n16_adj_2524 ), .F1(\CIC1Sin/d_clk_tmp_N_1831 ));
  CIC1Sin_SLICE_2461 \CIC1Sin/SLICE_2461 ( .D1(\CIC1Sin/n16_adj_2524 ), 
    .C1(\CIC1Sin/n15 ), .B1(\CIC1Sin/n26 ), .A1(\CIC1Sin/n21_adj_2523 ), 
    .B0(\CIC1Sin/n54 ), .A0(\CIC1Sin/n13178 ), .F0(\CIC1Sin/n8418 ), 
    .F1(\CIC1Sin/n13178 ));
  SLICE_2462 SLICE_2462( .B1(o_Rx_Byte_3), .A1(n1050), .D0(n7990), .C0(n13057), 
    .B0(n1111), .A0(n2384), .F0(n2318), .F1(n2384));
  CIC1Cos_SLICE_2463 \CIC1Cos/SLICE_2463 ( .D1(\CIC1Cos/n12784 ), 
    .C1(\CIC1Cos/n12790 ), .B1(\CIC1Cos/n13 ), .A1(\CIC1Cos/n12788 ), 
    .B0(\CIC1Cos/count_5 ), .A0(\CIC1Cos/count_10 ), .F0(\CIC1Cos/n12784 ), 
    .F1(\CIC1Cos/count_15__N_1458 ));
  CIC1Cos_SLICE_2464 \CIC1Cos/SLICE_2464 ( .B1(\CIC1Cos/count_3 ), 
    .A1(\CIC1Cos/n12503 ), .D0(\CIC1Cos/count_14 ), .C0(\CIC1Cos/count_11 ), 
    .B0(\CIC1Cos/count_15 ), .A0(\CIC1Cos/n7 ), .F0(\CIC1Cos/n12503 ), 
    .F1(\CIC1Cos/n13 ));
  CIC1Cos_SLICE_2465 \CIC1Cos/SLICE_2465 ( .B1(\CIC1Cos/n13194 ), 
    .A1(\CIC1Cos/n31 ), .D0(\CIC1Cos/n12784 ), .C0(\CIC1Cos/n12790 ), 
    .B0(\CIC1Cos/n13 ), .A0(\CIC1Cos/n12788 ), .F0(\CIC1Cos/n13194 ), 
    .F1(\CIC1Cos/n8429 ));
  CIC1Cos_SLICE_2466 \CIC1Cos/SLICE_2466 ( .C1(\CIC1Cos/n14 ), 
    .B1(\CIC1Cos/n13_adj_2487 ), .A1(\CIC1Cos/count_10 ), 
    .D0(\CIC1Cos/count_0 ), .C0(\CIC1Cos/count_4 ), .B0(\CIC1Cos/count_3 ), 
    .A0(\CIC1Cos/count_9 ), .F0(\CIC1Cos/n14 ), .F1(\CIC1Cos/n6 ));
  uart_rx1_SLICE_2467 \uart_rx1/SLICE_2467 ( .D1(\uart_rx1/r_Bit_Index_0 ), 
    .C1(\uart_rx1/r_Bit_Index_2 ), .B1(\uart_rx1/n13056 ), 
    .A1(\uart_rx1/r_Bit_Index_1 ), .D0(\uart_rx1/r_Bit_Index_0 ), 
    .C0(\uart_rx1/r_Bit_Index_2 ), .B0(\uart_rx1/n13056 ), 
    .A0(\uart_rx1/r_Bit_Index_1 ), .F0(\uart_rx1/UartClk_2_enable_34 ), 
    .F1(\uart_rx1/UartClk_2_enable_1 ));
  SLICE_2468 SLICE_2468( .D1(o_Rx_Byte_0), .C1(MYLED_c_6), .B1(o_Rx_Byte_3), 
    .A1(o_Rx_Byte_4), .D0(o_Rx_Byte_3), .C0(MYLED_c_6), .B0(o_Rx_Byte_4), 
    .A0(o_Rx_Byte_0), .M0(o_Rx_Byte1_1), .CLK(osc_clk), .F0(n12962), 
    .Q0(MYLED_c_6), .F1(n12961));
  uart_rx1_SLICE_2469 \uart_rx1/SLICE_2469 ( .D1(\uart_rx1/n13063 ), 
    .C1(\uart_rx1/r_SM_Main_0 ), .B1(\uart_rx1/r_SM_Main_2 ), 
    .A1(\uart_rx1/r_SM_Main_1 ), .D0(\uart_rx1/r_SM_Main_1 ), 
    .C0(\uart_rx1/n13063 ), .B0(\uart_rx1/n12594 ), 
    .A0(\uart_rx1/r_SM_Main_2 ), .F0(\uart_rx1/n8431 ), 
    .F1(\uart_rx1/UartClk_2_enable_6 ));
  uart_rx1_SLICE_2470 \uart_rx1/SLICE_2470 ( .C1(\uart_rx1/r_Bit_Index_1 ), 
    .B1(\uart_rx1/r_Bit_Index_0 ), .A1(\uart_rx1/r_Bit_Index_2 ), 
    .D0(\uart_rx1/r_Bit_Index_0 ), .C0(\uart_rx1/r_Bit_Index_2 ), 
    .B0(\uart_rx1/n13056 ), .A0(\uart_rx1/r_Bit_Index_1 ), 
    .F0(\uart_rx1/UartClk_2_enable_36 ), .F1(\uart_rx1/n8783 ));
  SLICE_2471 SLICE_2471( .C1(o_Rx_Byte_2), .B1(n2815), .A1(o_Rx_Byte_4), 
    .C0(n2815), .B0(o_Rx_Byte_4), .A0(o_Rx_Byte_2), .F0(n3652), .F1(n3648));
  uart_rx1_SLICE_2472 \uart_rx1/SLICE_2472 ( .B1(\uart_rx1/r_Clock_Count_10 ), 
    .A1(\uart_rx1/r_Clock_Count_14 ), .B0(\uart_rx1/r_Clock_Count_12 ), 
    .A0(\uart_rx1/r_Clock_Count_9 ), .F0(\uart_rx1/n12744 ), 
    .F1(\uart_rx1/n12740 ));
  uart_rx1_SLICE_2473 \uart_rx1/SLICE_2473 ( .B1(\uart_rx1/r_Clock_Count_15 ), 
    .A1(\uart_rx1/r_Clock_Count_11 ), .C0(\uart_rx1/r_Clock_Count_7 ), 
    .B0(\uart_rx1/r_Clock_Count_8 ), .A0(\uart_rx1/r_Clock_Count_13 ), 
    .F0(\uart_rx1/n12748 ), .F1(\uart_rx1/n12746 ));
  PWM1_SLICE_2474 \PWM1/SLICE_2474 ( .B1(\PWM1/counter_4 ), 
    .A1(\PWM1/counter_6 ), .B0(\PWM1/counter_5 ), .A0(\PWM1/counter_0 ), 
    .F0(\PWM1/n11 ), .F1(\PWM1/n15 ));
  CIC1Sin_SLICE_2475 \CIC1Sin/SLICE_2475 ( .B1(\CIC1Sin/count_14 ), 
    .A1(\CIC1Sin/count_12 ), .C0(\CIC1Sin/count_2 ), .B0(\CIC1Sin/count_14 ), 
    .A0(\CIC1Sin/count_12 ), .F0(\CIC1Sin/n15 ), .F1(\CIC1Sin/n13066 ));
  SLICE_2476 SLICE_2476( .B1(o_Rx_Byte_0), .A1(MYLED_c_6), .D0(o_Rx_DV), 
    .C0(o_Rx_Byte_6), .B0(o_Rx_Byte_7), .A0(o_Rx_Byte_5), .F0(n8250), 
    .F1(n13069));
  CIC1Sin_SLICE_2477 \CIC1Sin/SLICE_2477 ( .D1(\CIC1Sin/count_7 ), 
    .C1(\CIC1Sin/count_1 ), .B1(\CIC1Sin/count_9 ), .A1(\CIC1Sin/count_8 ), 
    .B0(\CIC1Sin/count_5 ), .A0(\CIC1Sin/count_0 ), .F0(\CIC1Sin/n16 ), 
    .F1(\CIC1Sin/n24 ));
  CIC1Sin_SLICE_2478 \CIC1Sin/SLICE_2478 ( .B1(\CIC1Sin/count_11 ), 
    .A1(\CIC1Sin/count_4 ), .B0(\CIC1Sin/count_10 ), .A0(\CIC1Sin/count_1 ), 
    .F0(\CIC1Sin/n20 ), .F1(\CIC1Sin/n19 ));
  uart_rx1_SLICE_2479 \uart_rx1/SLICE_2479 ( .C1(\uart_rx1/r_Clock_Count_0 ), 
    .B1(\uart_rx1/r_Clock_Count_5 ), .A1(\uart_rx1/r_Clock_Count_3 ), 
    .C0(\uart_rx1/r_Clock_Count_4 ), .B0(\uart_rx1/r_Clock_Count_6 ), 
    .A0(\uart_rx1/r_Clock_Count_2 ), .F0(\uart_rx1/n12756 ), 
    .F1(\uart_rx1/n12792 ));
  SinCos1_SLICE_2480 \SinCos1/SLICE_2480 ( .C1(\SinCos1/mx_ctrl_r ), 
    .B1(\SinCos1/rom_addr0_r_n_2 ), .A1(\SinCos1/rom_addr0_r_2 ), 
    .C0(\SinCos1/mx_ctrl_r ), .B0(\SinCos1/rom_addr0_r_n_3 ), 
    .A0(\SinCos1/rom_addr0_r_3 ), .F0(\SinCos1/rom_addr0_r_9 ), 
    .F1(\SinCos1/rom_addr0_r_8 ));
  PWM1_SLICE_2481 \PWM1/SLICE_2481 ( .D0(\PWM1/counter_9 ), 
    .C0(\PWM1/counter_1 ), .B0(\PWM1/counter_2 ), .A0(\PWM1/counter_3 ), 
    .F0(\PWM1/n17 ));
  SLICE_2482 SLICE_2482( .D0(n1056), .C0(o_Rx_Byte_3), .B0(n13064), 
    .A0(o_Rx_Byte_2), .F0(n7813));
  SLICE_2483 SLICE_2483( .B0(n2815), .A0(o_Rx_Byte_4), .F0(n3669));
  SLICE_2484 SLICE_2484( .D0(n13061), .C0(o_Rx_Byte_3), .B0(n1081), .A0(n1142), 
    .F0(n8022));
  SLICE_2485 SLICE_2485( .D0(n13061), .C0(o_Rx_Byte_3), .B0(n1088), .A0(n1149), 
    .F0(n8020));
  uart_rx1_SLICE_2486 \uart_rx1/SLICE_2486 ( .B0(\uart_rx1/r_SM_Main_0 ), 
    .A0(\uart_rx1/r_SM_Main_1 ), .F0(\uart_rx1/n12530 ));
  uart_rx1_SLICE_2487 \uart_rx1/SLICE_2487 ( .C0(\uart_rx1/r_Clock_Count_2 ), 
    .B0(\uart_rx1/r_Clock_Count_3 ), .A0(\uart_rx1/r_Clock_Count_1 ), 
    .F0(\uart_rx1/n8805 ));
  uart_rx1_SLICE_2488 \uart_rx1/SLICE_2488 ( .D0(\uart_rx1/r_Bit_Index_1 ), 
    .C0(\uart_rx1/n13065 ), .B0(\uart_rx1/n13059 ), 
    .A0(\uart_rx1/r_SM_Main_0 ), .F0(\uart_rx1/UartClk_2_enable_35 ));
  uart_rx1_SLICE_2489 \uart_rx1/SLICE_2489 ( .C0(\uart_rx1/r_SM_Main_0 ), 
    .B0(\uart_rx1/r_SM_Main_2 ), .A0(\uart_rx1/r_SM_Main_1 ), 
    .F0(\uart_rx1/n12528 ));
  SLICE_2490 SLICE_2490( .B0(o_Rx_Byte_0), .A0(o_Rx_Byte_4), .F0(n41));
  SLICE_2491 SLICE_2491( .D0(o_Rx_Byte_0), .C0(o_Rx_Byte_3), .B0(o_Rx_Byte_2), 
    .A0(o_Rx_Byte_4), .F0(n12952));
  SLICE_2492 SLICE_2492( .D0(n13061), .C0(o_Rx_Byte_3), .B0(n1075), .A0(n1136), 
    .F0(n8026));
  SLICE_2493 SLICE_2493( .D0(n13061), .C0(o_Rx_Byte_3), .B0(n1077), .A0(n1138), 
    .F0(n8024));
  SLICE_2494 SLICE_2494( .C0(n1054), .B0(n13064), .A0(n13177), .F0(n2522));
  SLICE_2495 SLICE_2495( .A0(PWMOutP4_c), .F0(PWMOutN4_c));
  SLICE_2496 SLICE_2496( .D0(n13061), .C0(o_Rx_Byte_3), .B0(n1032), .A0(n1093), 
    .F0(n8034));
  SLICE_2497 SLICE_2497( .D0(n13061), .C0(o_Rx_Byte_3), .B0(n1031), .A0(n1092), 
    .F0(n8036));
  SLICE_2498 SLICE_2498( .D0(n13061), .C0(o_Rx_Byte_3), .B0(n1033), .A0(n1094), 
    .F0(n8032));
  SLICE_2499 SLICE_2499( .D0(n13061), .C0(o_Rx_Byte_3), .B0(n1042), .A0(n1103), 
    .F0(n8030));
  SinCos1_SLICE_2500 \SinCos1/SLICE_2500 ( .C0(\SinCos1/mx_ctrl_r ), 
    .B0(\SinCos1/rom_addr0_r_n_5 ), .A0(\SinCos1/rom_addr0_r_5 ), 
    .M0(phase_accum_62), .CLK(osc_clk), .F0(\SinCos1/rom_addr0_r_11 ), 
    .Q0(\SinCos1/mx_ctrl_r ));
  SinCos1_muxb_39_SLICE_2501 \SinCos1/muxb_39/SLICE_2501 ( 
    .C0(\SinCos1/sinromoutsel ), .B0(\SinCos1/rom_dout_s_n_12 ), 
    .A0(\SinCos1/rom_dout_12 ), .F0(\SinCos1/rom_dout_s_12 ));
  CIC1Sin_SLICE_2502 \CIC1Sin/SLICE_2502 ( .C0(CICGain_0), 
    .B0(\CIC1Sin/d10_70 ), .A0(\CIC1Sin/d10_69 ), .F0(\CIC1Sin/n70 ));
  CIC1Sin_SLICE_2503 \CIC1Sin/SLICE_2503 ( .B0(\CIC1Sin/d3_36 ), 
    .A0(\CIC1Sin/d2_36 ), .F0(\CIC1Sin/n4637 ));
  CIC1Sin_SLICE_2504 \CIC1Sin/SLICE_2504 ( .B0(\CIC1Sin/d4_36 ), 
    .A0(\CIC1Sin/d3_36 ), .F0(\CIC1Sin/n4789 ));
  CIC1Sin_SLICE_2505 \CIC1Sin/SLICE_2505 ( .B0(\CIC1Sin/d5_36 ), 
    .A0(\CIC1Sin/d4_36 ), .F0(\CIC1Sin/n4941 ));
  CIC1Sin_SLICE_2506 \CIC1Sin/SLICE_2506 ( .B0(\CIC1Sin/count_15 ), 
    .A0(\CIC1Sin/count_13 ), .F0(\CIC1Sin/n13071 ));
  CIC1Sin_SLICE_2507 \CIC1Sin/SLICE_2507 ( .B0(\CIC1Sin/d1_36 ), 
    .A0(MixerOutSin_11), .F0(\CIC1Sin/n4333 ));
  CIC1Sin_SLICE_2508 \CIC1Sin/SLICE_2508 ( .B0(\CIC1Sin/d2_36 ), 
    .A0(\CIC1Sin/d1_36 ), .F0(\CIC1Sin/n4485 ));
  SLICE_2509 SLICE_2509( .B0(n2815), .A0(o_Rx_Byte_4), .F0(n3634));
  SLICE_2510 SLICE_2510( .B0(n2815), .A0(o_Rx_Byte_4), .F0(n3673));
  ncoGen_SLICE_2511 \ncoGen/SLICE_2511 ( .A0(phase_accum_63), .F0(sinGen_c));
  AMDemodulator1_SLICE_2512 \AMDemodulator1/SLICE_2512 ( 
    .A0(\AMDemodulator1/d_out_d_11_N_1872_17 ), 
    .F0(\AMDemodulator1/d_out_d_11__N_1871 ));
  AMDemodulator1_SLICE_2513 \AMDemodulator1/SLICE_2513 ( 
    .B0(\AMDemodulator1/ISquare_22 ), .A0(\AMDemodulator1/ISquare_23 ), 
    .F0(\AMDemodulator1/n12154 ));
  AMDemodulator1_SLICE_2514 \AMDemodulator1/SLICE_2514 ( 
    .A0(\AMDemodulator1/d_out_d_11_N_1874_17 ), 
    .F0(\AMDemodulator1/d_out_d_11__N_1873 ));
  AMDemodulator1_SLICE_2515 \AMDemodulator1/SLICE_2515 ( 
    .A0(\AMDemodulator1/ISquare_31 ), .F0(\AMDemodulator1/n209 ));
  AMDemodulator1_Multiplier2_SLICE_2516 
    \AMDemodulator1/Multiplier2/SLICE_2516 ( 
    .B0(\AMDemodulator1/Multiplier2/regb_b_1 ), 
    .A0(\AMDemodulator1/Multiplier2/rega_a_11 ), 
    .F0(\AMDemodulator1/Multiplier2/Multiplier_0_mult_0_5_n1 ));
  AMDemodulator1_Multiplier2_SLICE_2517 
    \AMDemodulator1/Multiplier2/SLICE_2517 ( 
    .B0(\AMDemodulator1/Multiplier2/regb_b_2 ), 
    .A0(\AMDemodulator1/Multiplier2/regb_b_0 ), 
    .F0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_1_2 ));
  AMDemodulator1_Multiplier2_SLICE_2518 
    \AMDemodulator1/Multiplier2/SLICE_2518 ( 
    .B0(\AMDemodulator1/Multiplier2/regb_b_3 ), 
    .A0(\AMDemodulator1/Multiplier2/rega_a_11 ), 
    .F0(\AMDemodulator1/Multiplier2/Multiplier_0_mult_2_5_n1 ));
  AMDemodulator1_Multiplier2_SLICE_2519 
    \AMDemodulator1/Multiplier2/SLICE_2519 ( 
    .B0(\AMDemodulator1/Multiplier2/regb_b_5 ), 
    .A0(\AMDemodulator1/Multiplier2/rega_a_11 ), 
    .F0(\AMDemodulator1/Multiplier2/Multiplier_0_mult_4_5_n1 ));
  AMDemodulator1_Multiplier2_SLICE_2520 
    \AMDemodulator1/Multiplier2/SLICE_2520 ( 
    .B0(\AMDemodulator1/Multiplier2/regb_b_6 ), 
    .A0(\AMDemodulator1/Multiplier2/regb_b_0 ), 
    .F0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_3_6 ));
  AMDemodulator1_Multiplier2_SLICE_2521 
    \AMDemodulator1/Multiplier2/SLICE_2521 ( 
    .B0(\AMDemodulator1/Multiplier2/regb_b_7 ), 
    .A0(\AMDemodulator1/Multiplier2/rega_a_11 ), 
    .F0(\AMDemodulator1/Multiplier2/Multiplier_0_mult_6_5_n1 ));
  AMDemodulator1_Multiplier2_SLICE_2522 
    \AMDemodulator1/Multiplier2/SLICE_2522 ( 
    .B0(\AMDemodulator1/Multiplier2/regb_b_9 ), 
    .A0(\AMDemodulator1/Multiplier2/rega_a_11 ), 
    .F0(\AMDemodulator1/Multiplier2/Multiplier_0_mult_8_5_n1 ));
  AMDemodulator1_Multiplier2_SLICE_2523 
    \AMDemodulator1/Multiplier2/SLICE_2523 ( 
    .B0(\AMDemodulator1/Multiplier2/regb_b_10 ), 
    .A0(\AMDemodulator1/Multiplier2/regb_b_0 ), 
    .F0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_5_10 ));
  AMDemodulator1_Multiplier2_SLICE_2524 
    \AMDemodulator1/Multiplier2/SLICE_2524 ( 
    .B0(\AMDemodulator1/Multiplier2/regb_b_11 ), 
    .A0(\AMDemodulator1/Multiplier2/regb_b_0 ), 
    .F0(\AMDemodulator1/Multiplier2/Multiplier_0_mult_10_0_n0 ));
  AMDemodulator1_Multiplier2_SLICE_2525 
    \AMDemodulator1/Multiplier2/SLICE_2525 ( 
    .B0(\AMDemodulator1/Multiplier2/regb_b_11 ), 
    .A0(\AMDemodulator1/Multiplier2/rega_a_3 ), 
    .F0(\AMDemodulator1/Multiplier2/Multiplier_0_mult_10_1_n1 ));
  AMDemodulator1_Multiplier2_SLICE_2526 
    \AMDemodulator1/Multiplier2/SLICE_2526 ( 
    .B0(\AMDemodulator1/Multiplier2/regb_b_11 ), 
    .A0(\AMDemodulator1/Multiplier2/rega_a_2 ), 
    .F0(\AMDemodulator1/Multiplier2/Multiplier_0_mult_10_1_n0 ));
  AMDemodulator1_Multiplier2_SLICE_2527 
    \AMDemodulator1/Multiplier2/SLICE_2527 ( 
    .B0(\AMDemodulator1/Multiplier2/regb_b_11 ), 
    .A0(\AMDemodulator1/Multiplier2/rega_a_5 ), 
    .F0(\AMDemodulator1/Multiplier2/Multiplier_0_mult_10_2_n1 ));
  AMDemodulator1_Multiplier2_SLICE_2528 
    \AMDemodulator1/Multiplier2/SLICE_2528 ( 
    .B0(\AMDemodulator1/Multiplier2/regb_b_11 ), 
    .A0(\AMDemodulator1/Multiplier2/rega_a_4 ), 
    .F0(\AMDemodulator1/Multiplier2/Multiplier_0_mult_10_2_n0 ));
  AMDemodulator1_Multiplier2_SLICE_2529 
    \AMDemodulator1/Multiplier2/SLICE_2529 ( 
    .B0(\AMDemodulator1/Multiplier2/regb_b_11 ), 
    .A0(\AMDemodulator1/Multiplier2/rega_a_7 ), 
    .F0(\AMDemodulator1/Multiplier2/Multiplier_0_mult_10_3_n1 ));
  AMDemodulator1_Multiplier2_SLICE_2530 
    \AMDemodulator1/Multiplier2/SLICE_2530 ( 
    .B0(\AMDemodulator1/Multiplier2/regb_b_11 ), 
    .A0(\AMDemodulator1/Multiplier2/rega_a_6 ), 
    .F0(\AMDemodulator1/Multiplier2/Multiplier_0_mult_10_3_n0 ));
  AMDemodulator1_Multiplier2_SLICE_2531 
    \AMDemodulator1/Multiplier2/SLICE_2531 ( 
    .B0(\AMDemodulator1/Multiplier2/regb_b_11 ), 
    .A0(\AMDemodulator1/Multiplier2/rega_a_9 ), 
    .F0(\AMDemodulator1/Multiplier2/Multiplier_0_mult_10_4_n1 ));
  AMDemodulator1_Multiplier2_SLICE_2532 
    \AMDemodulator1/Multiplier2/SLICE_2532 ( 
    .B0(\AMDemodulator1/Multiplier2/regb_b_11 ), 
    .A0(\AMDemodulator1/Multiplier2/rega_a_8 ), 
    .F0(\AMDemodulator1/Multiplier2/Multiplier_0_mult_10_4_n0 ));
  AMDemodulator1_Multiplier2_SLICE_2533 
    \AMDemodulator1/Multiplier2/SLICE_2533 ( 
    .B0(\AMDemodulator1/Multiplier2/regb_b_10 ), 
    .A0(\AMDemodulator1/Multiplier2/rega_a_11 ), 
    .F0(\AMDemodulator1/Multiplier2/Multiplier_0_mult_10_5_n2 ));
  AMDemodulator1_Multiplier2_SLICE_2534 
    \AMDemodulator1/Multiplier2/SLICE_2534 ( 
    .B0(\AMDemodulator1/Multiplier2/regb_b_11 ), 
    .A0(\AMDemodulator1/Multiplier2/rega_a_10 ), 
    .F0(\AMDemodulator1/Multiplier2/Multiplier_0_mult_10_5_n0 ));
  AMDemodulator1_Multiplier2_SLICE_2535 
    \AMDemodulator1/Multiplier2/SLICE_2535 ( 
    .B0(\AMDemodulator1/Multiplier2/regb_b_0 ), 
    .A0(\AMDemodulator1/Multiplier2/rega_a_11 ), 
    .F0(\AMDemodulator1/Multiplier2/Multiplier_0_mult_0_5_n2 ));
  AMDemodulator1_Multiplier2_SLICE_2536 
    \AMDemodulator1/Multiplier2/SLICE_2536 ( 
    .B0(\AMDemodulator1/Multiplier2/regb_b_2 ), 
    .A0(\AMDemodulator1/Multiplier2/rega_a_11 ), 
    .F0(\AMDemodulator1/Multiplier2/Multiplier_0_mult_2_5_n2 ));
  AMDemodulator1_Multiplier2_SLICE_2537 
    \AMDemodulator1/Multiplier2/SLICE_2537 ( 
    .B0(\AMDemodulator1/Multiplier2/regb_b_4 ), 
    .A0(\AMDemodulator1/Multiplier2/rega_a_11 ), 
    .F0(\AMDemodulator1/Multiplier2/Multiplier_0_mult_4_5_n2 ));
  AMDemodulator1_Multiplier2_SLICE_2538 
    \AMDemodulator1/Multiplier2/SLICE_2538 ( 
    .B0(\AMDemodulator1/Multiplier2/regb_b_6 ), 
    .A0(\AMDemodulator1/Multiplier2/rega_a_11 ), 
    .F0(\AMDemodulator1/Multiplier2/Multiplier_0_mult_6_5_n2 ));
  AMDemodulator1_Multiplier2_SLICE_2539 
    \AMDemodulator1/Multiplier2/SLICE_2539 ( 
    .B0(\AMDemodulator1/Multiplier2/regb_b_8 ), 
    .A0(\AMDemodulator1/Multiplier2/rega_a_11 ), 
    .M0(\AMDemodulator1/MultDataC_11 ), .CLK(CIC1_out_clkSin), 
    .F0(\AMDemodulator1/Multiplier2/Multiplier_0_mult_8_5_n2 ), 
    .Q0(\AMDemodulator1/Multiplier2/rega_a_11 ));
  AMDemodulator1_Multiplier2_SLICE_2540 
    \AMDemodulator1/Multiplier2/SLICE_2540 ( 
    .B0(\AMDemodulator1/Multiplier2/regb_b_11 ), 
    .A0(\AMDemodulator1/Multiplier2/rega_a_1 ), 
    .F0(\AMDemodulator1/Multiplier2/Multiplier_0_mult_10_0_n1 ));
  AMDemodulator1_Multiplier1_SLICE_2541 
    \AMDemodulator1/Multiplier1/SLICE_2541 ( 
    .B0(\AMDemodulator1/Multiplier1/regb_b_1 ), 
    .A0(\AMDemodulator1/Multiplier1/rega_a_11 ), 
    .F0(\AMDemodulator1/Multiplier1/Multiplier_0_mult_0_5_n1 ));
  AMDemodulator1_Multiplier1_SLICE_2542 
    \AMDemodulator1/Multiplier1/SLICE_2542 ( 
    .B0(\AMDemodulator1/Multiplier1/regb_b_2 ), 
    .A0(\AMDemodulator1/Multiplier1/regb_b_0 ), 
    .F0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_1_2 ));
  AMDemodulator1_Multiplier1_SLICE_2543 
    \AMDemodulator1/Multiplier1/SLICE_2543 ( 
    .B0(\AMDemodulator1/Multiplier1/regb_b_3 ), 
    .A0(\AMDemodulator1/Multiplier1/rega_a_11 ), 
    .F0(\AMDemodulator1/Multiplier1/Multiplier_0_mult_2_5_n1 ));
  AMDemodulator1_Multiplier1_SLICE_2544 
    \AMDemodulator1/Multiplier1/SLICE_2544 ( 
    .B0(\AMDemodulator1/Multiplier1/regb_b_5 ), 
    .A0(\AMDemodulator1/Multiplier1/rega_a_11 ), 
    .F0(\AMDemodulator1/Multiplier1/Multiplier_0_mult_4_5_n1 ));
  AMDemodulator1_Multiplier1_SLICE_2545 
    \AMDemodulator1/Multiplier1/SLICE_2545 ( 
    .B0(\AMDemodulator1/Multiplier1/regb_b_6 ), 
    .A0(\AMDemodulator1/Multiplier1/regb_b_0 ), 
    .F0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_3_6 ));
  AMDemodulator1_Multiplier1_SLICE_2546 
    \AMDemodulator1/Multiplier1/SLICE_2546 ( 
    .B0(\AMDemodulator1/Multiplier1/regb_b_7 ), 
    .A0(\AMDemodulator1/Multiplier1/rega_a_11 ), 
    .F0(\AMDemodulator1/Multiplier1/Multiplier_0_mult_6_5_n1 ));
  AMDemodulator1_Multiplier1_SLICE_2547 
    \AMDemodulator1/Multiplier1/SLICE_2547 ( 
    .B0(\AMDemodulator1/Multiplier1/regb_b_9 ), 
    .A0(\AMDemodulator1/Multiplier1/rega_a_11 ), 
    .F0(\AMDemodulator1/Multiplier1/Multiplier_0_mult_8_5_n1 ));
  AMDemodulator1_Multiplier1_SLICE_2548 
    \AMDemodulator1/Multiplier1/SLICE_2548 ( 
    .B0(\AMDemodulator1/Multiplier1/regb_b_10 ), 
    .A0(\AMDemodulator1/Multiplier1/regb_b_0 ), 
    .F0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_5_10 ));
  AMDemodulator1_Multiplier1_SLICE_2549 
    \AMDemodulator1/Multiplier1/SLICE_2549 ( 
    .B0(\AMDemodulator1/Multiplier1/regb_b_11 ), 
    .A0(\AMDemodulator1/Multiplier1/regb_b_0 ), 
    .F0(\AMDemodulator1/Multiplier1/Multiplier_0_mult_10_0_n0 ));
  AMDemodulator1_Multiplier1_SLICE_2550 
    \AMDemodulator1/Multiplier1/SLICE_2550 ( 
    .B0(\AMDemodulator1/Multiplier1/regb_b_11 ), 
    .A0(\AMDemodulator1/Multiplier1/rega_a_3 ), 
    .F0(\AMDemodulator1/Multiplier1/Multiplier_0_mult_10_1_n1 ));
  AMDemodulator1_Multiplier1_SLICE_2551 
    \AMDemodulator1/Multiplier1/SLICE_2551 ( 
    .B0(\AMDemodulator1/Multiplier1/regb_b_11 ), 
    .A0(\AMDemodulator1/Multiplier1/rega_a_2 ), 
    .F0(\AMDemodulator1/Multiplier1/Multiplier_0_mult_10_1_n0 ));
  AMDemodulator1_Multiplier1_SLICE_2552 
    \AMDemodulator1/Multiplier1/SLICE_2552 ( 
    .B0(\AMDemodulator1/Multiplier1/regb_b_11 ), 
    .A0(\AMDemodulator1/Multiplier1/rega_a_5 ), 
    .F0(\AMDemodulator1/Multiplier1/Multiplier_0_mult_10_2_n1 ));
  AMDemodulator1_Multiplier1_SLICE_2553 
    \AMDemodulator1/Multiplier1/SLICE_2553 ( 
    .B0(\AMDemodulator1/Multiplier1/regb_b_11 ), 
    .A0(\AMDemodulator1/Multiplier1/rega_a_4 ), 
    .F0(\AMDemodulator1/Multiplier1/Multiplier_0_mult_10_2_n0 ));
  AMDemodulator1_Multiplier1_SLICE_2554 
    \AMDemodulator1/Multiplier1/SLICE_2554 ( 
    .B0(\AMDemodulator1/Multiplier1/regb_b_11 ), 
    .A0(\AMDemodulator1/Multiplier1/rega_a_7 ), 
    .F0(\AMDemodulator1/Multiplier1/Multiplier_0_mult_10_3_n1 ));
  AMDemodulator1_Multiplier1_SLICE_2555 
    \AMDemodulator1/Multiplier1/SLICE_2555 ( 
    .B0(\AMDemodulator1/Multiplier1/regb_b_11 ), 
    .A0(\AMDemodulator1/Multiplier1/rega_a_6 ), 
    .F0(\AMDemodulator1/Multiplier1/Multiplier_0_mult_10_3_n0 ));
  AMDemodulator1_Multiplier1_SLICE_2556 
    \AMDemodulator1/Multiplier1/SLICE_2556 ( 
    .B0(\AMDemodulator1/Multiplier1/regb_b_11 ), 
    .A0(\AMDemodulator1/Multiplier1/rega_a_9 ), 
    .F0(\AMDemodulator1/Multiplier1/Multiplier_0_mult_10_4_n1 ));
  AMDemodulator1_Multiplier1_SLICE_2557 
    \AMDemodulator1/Multiplier1/SLICE_2557 ( 
    .B0(\AMDemodulator1/Multiplier1/regb_b_11 ), 
    .A0(\AMDemodulator1/Multiplier1/rega_a_8 ), 
    .F0(\AMDemodulator1/Multiplier1/Multiplier_0_mult_10_4_n0 ));
  AMDemodulator1_Multiplier1_SLICE_2558 
    \AMDemodulator1/Multiplier1/SLICE_2558 ( 
    .B0(\AMDemodulator1/Multiplier1/regb_b_10 ), 
    .A0(\AMDemodulator1/Multiplier1/rega_a_11 ), 
    .F0(\AMDemodulator1/Multiplier1/Multiplier_0_mult_10_5_n2 ));
  AMDemodulator1_Multiplier1_SLICE_2559 
    \AMDemodulator1/Multiplier1/SLICE_2559 ( 
    .B0(\AMDemodulator1/Multiplier1/regb_b_11 ), 
    .A0(\AMDemodulator1/Multiplier1/rega_a_10 ), 
    .F0(\AMDemodulator1/Multiplier1/Multiplier_0_mult_10_5_n0 ));
  AMDemodulator1_Multiplier1_SLICE_2560 
    \AMDemodulator1/Multiplier1/SLICE_2560 ( 
    .B0(\AMDemodulator1/Multiplier1/regb_b_0 ), 
    .A0(\AMDemodulator1/Multiplier1/rega_a_11 ), 
    .F0(\AMDemodulator1/Multiplier1/Multiplier_0_mult_0_5_n2 ));
  AMDemodulator1_Multiplier1_SLICE_2561 
    \AMDemodulator1/Multiplier1/SLICE_2561 ( 
    .B0(\AMDemodulator1/Multiplier1/regb_b_2 ), 
    .A0(\AMDemodulator1/Multiplier1/rega_a_11 ), 
    .F0(\AMDemodulator1/Multiplier1/Multiplier_0_mult_2_5_n2 ));
  AMDemodulator1_Multiplier1_SLICE_2562 
    \AMDemodulator1/Multiplier1/SLICE_2562 ( 
    .B0(\AMDemodulator1/Multiplier1/regb_b_4 ), 
    .A0(\AMDemodulator1/Multiplier1/rega_a_11 ), 
    .F0(\AMDemodulator1/Multiplier1/Multiplier_0_mult_4_5_n2 ));
  AMDemodulator1_Multiplier1_SLICE_2563 
    \AMDemodulator1/Multiplier1/SLICE_2563 ( 
    .B0(\AMDemodulator1/Multiplier1/regb_b_6 ), 
    .A0(\AMDemodulator1/Multiplier1/rega_a_11 ), 
    .F0(\AMDemodulator1/Multiplier1/Multiplier_0_mult_6_5_n2 ));
  AMDemodulator1_Multiplier1_SLICE_2564 
    \AMDemodulator1/Multiplier1/SLICE_2564 ( 
    .B0(\AMDemodulator1/Multiplier1/regb_b_8 ), 
    .A0(\AMDemodulator1/Multiplier1/rega_a_11 ), 
    .M0(\AMDemodulator1/MultDataB_11 ), .CLK(CIC1_out_clkSin), 
    .F0(\AMDemodulator1/Multiplier1/Multiplier_0_mult_8_5_n2 ), 
    .Q0(\AMDemodulator1/Multiplier1/rega_a_11 ));
  AMDemodulator1_Multiplier1_SLICE_2565 
    \AMDemodulator1/Multiplier1/SLICE_2565 ( 
    .B0(\AMDemodulator1/Multiplier1/regb_b_11 ), 
    .A0(\AMDemodulator1/Multiplier1/rega_a_1 ), 
    .F0(\AMDemodulator1/Multiplier1/Multiplier_0_mult_10_0_n1 ));
  CIC1Cos_SLICE_2566 \CIC1Cos/SLICE_2566 ( .B0(\CIC1Cos/d2_36 ), 
    .A0(\CIC1Cos/d1_36 ), .F0(\CIC1Cos/n5245 ));
  CIC1Cos_SLICE_2567 \CIC1Cos/SLICE_2567 ( .B0(\CIC1Cos/d3_36 ), 
    .A0(\CIC1Cos/d2_36 ), .F0(\CIC1Cos/n5397 ));
  CIC1Cos_SLICE_2568 \CIC1Cos/SLICE_2568 ( .B0(\CIC1Cos/count_12 ), 
    .A0(\CIC1Cos/count_13 ), .F0(\CIC1Cos/n7 ));
  CIC1Cos_SLICE_2569 \CIC1Cos/SLICE_2569 ( .C0(CICGain_0), .B0(d10_70), 
    .A0(d10_69), .F0(n70));
  CIC1Cos_SLICE_2570 \CIC1Cos/SLICE_2570 ( .B0(\CIC1Cos/d1_36 ), 
    .A0(MixerOutCos_11), .F0(\CIC1Cos/n5093 ));
  CIC1Cos_SLICE_2571 \CIC1Cos/SLICE_2571 ( .B0(\CIC1Cos/d5_36 ), 
    .A0(\CIC1Cos/d4_36 ), .F0(\CIC1Cos/n5701 ));
  CIC1Cos_SLICE_2572 \CIC1Cos/SLICE_2572 ( .B0(\CIC1Cos/d4_36 ), 
    .A0(\CIC1Cos/d3_36 ), .F0(\CIC1Cos/n5549 ));
  CIC1Cos_SLICE_2573 \CIC1Cos/SLICE_2573 ( .D0(\CIC1Cos/count_7 ), 
    .C0(\CIC1Cos/count_1 ), .B0(\CIC1Cos/count_8 ), .A0(\CIC1Cos/count_5 ), 
    .F0(\CIC1Cos/n13_adj_2487 ));
  SLICE_2574 SLICE_2574( .F0(VCC_net));
  SLICE_2575 SLICE_2575( .F0(GND_net));
  MYLED_6_ \MYLED[6]_I ( .PADDO(MYLED_c_6), .MYLED6(MYLED[6]));
  MYLED_5_ \MYLED[5]_I ( .PADDO(MYLED_c_5), .MYLED5(MYLED[5]));
  MYLED_7_ \MYLED[7]_I ( .PADDO(GND_net), .MYLED7(MYLED[7]));
  o_Tx_Serial o_Tx_Serial_I( .PADDO(GND_net), .o_Tx_Serial(o_Tx_Serial));
  MYLED_4_ \MYLED[4]_I ( .PADDO(MYLED_c_4), .MYLED4(MYLED[4]));
  MYLED_3_ \MYLED[3]_I ( .PADDO(MYLED_c_3), .MYLED3(MYLED[3]));
  MYLED_2_ \MYLED[2]_I ( .PADDO(MYLED_c_2), .MYLED2(MYLED[2]));
  MYLED_1_ \MYLED[1]_I ( .PADDO(MYLED_c_1), .MYLED1(MYLED[1]));
  MYLED_0_ \MYLED[0]_I ( .PADDO(MYLED_c_0), .MYLED0(MYLED[0]));
  XOut XOut_I( .PADDO(GND_net), .XOut(XOut));
  DiffOut DiffOut_I( .PADDO(DiffOut_c), .DiffOut(DiffOut));
  PWMOut PWMOut_I( .PADDO(PWMOutP4_c), .PWMOut(PWMOut));
  PWMOutP1 PWMOutP1_I( .PADDO(PWMOutP4_c), .PWMOutP1(PWMOutP1));
  PWMOutP2 PWMOutP2_I( .PADDO(PWMOutP4_c), .PWMOutP2(PWMOutP2));
  PWMOutP3 PWMOutP3_I( .PADDO(PWMOutP4_c), .PWMOutP3(PWMOutP3));
  PWMOutP4 PWMOutP4_I( .PADDO(PWMOutP4_c), .PWMOutP4(PWMOutP4));
  PWMOutN1 PWMOutN1_I( .PADDO(PWMOutN4_c), .PWMOutN1(PWMOutN1));
  PWMOutN2 PWMOutN2_I( .PADDO(PWMOutN4_c), .PWMOutN2(PWMOutN2));
  PWMOutN3 PWMOutN3_I( .PADDO(PWMOutN4_c), .PWMOutN3(PWMOutN3));
  PWMOutN4 PWMOutN4_I( .PADDO(PWMOutN4_c), .PWMOutN4(PWMOutN4));
  sinGen sinGen_I( .PADDO(sinGen_c), .sinGen(sinGen));
  sin_out sin_out_I( .PADDO(GND_net), .sin_out(sin_out));
  CIC_out_clkSin CIC_out_clkSin_I( .PADDO(GND_net), 
    .CIC_out_clkSin(CIC_out_clkSin));
  i_Rx_Serial i_Rx_Serial_I( .PADDI(i_Rx_Serial_c), .i_Rx_Serial(i_Rx_Serial));
  RFIn RFIn_I( .PADDI(RFIn_c), .RFIn(RFIn));
  OSCH_inst OSCH_inst( .OSC(osc_clk));
  VHI VHI_INST( .Z(VCCI));
  PUR PUR_INST( .PUR(VCC_net));
  GSR GSR_INST( .GSR(VCCI));
endmodule

module PWM1_SLICE_0 ( input A0, DI0, CLK, FCI, output F0, Q0 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly;

  vmuxregsre \PWM1/counter_1003__i9 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ccu2 \PWM1/counter_1003_add_4_11 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(), 
    .CO1());

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module vmuxregsre ( input D0, D1, SD, SP, CK, LSR, output Q );

  FL1P3DX INST01( .D0(D0), .D1(D1), .SP(SP), .CK(CK), .SD(SD), .CD(LSR), .Q(Q));
  defparam INST01.GSR = "DISABLED";
endmodule

module vcc ( output PWR1 );

  VHI INST1( .Z(PWR1));
endmodule

module gnd ( output PWR0 );

  VLO INST1( .Z(PWR0));
endmodule

module ccu2 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'hfaaa;
  defparam inst1.INIT1 = 16'h0000;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module PWM1_SLICE_1 ( input A1, A0, DI1, DI0, CLK, FCI, output F0, Q0, F1, Q1, 
    FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \PWM1/counter_1003__i8 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \PWM1/counter_1003__i7 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20001 \PWM1/counter_1003_add_4_9 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ccu20001 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'hfaaa;
  defparam inst1.INIT1 = 16'hfaaa;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module PWM1_SLICE_2 ( input A1, A0, DI1, DI0, CLK, FCI, output F0, Q0, F1, Q1, 
    FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \PWM1/counter_1003__i6 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \PWM1/counter_1003__i5 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20001 \PWM1/counter_1003_add_4_7 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module PWM1_SLICE_3 ( input A1, A0, DI1, DI0, CLK, FCI, output F0, Q0, F1, Q1, 
    FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \PWM1/counter_1003__i4 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \PWM1/counter_1003__i3 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20001 \PWM1/counter_1003_add_4_5 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module PWM1_SLICE_4 ( input A1, A0, DI1, DI0, CLK, FCI, output F0, Q0, F1, Q1, 
    FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \PWM1/counter_1003__i2 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \PWM1/counter_1003__i1 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20001 \PWM1/counter_1003_add_4_3 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module PWM1_SLICE_5 ( input A1, DI1, CLK, output F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly;

  vmuxregsre \PWM1/counter_1003__i0 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ccu20002 \PWM1/counter_1003_add_4_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), 
    .S1(F1), .CO1(FCO));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ccu20002 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'hF000;
  defparam inst1.INIT1 = 16'h0555;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module PWM1_SLICE_6 ( input B0, A0, DI1, CLK, FCI, output F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly;

  vmuxregsre \PWM1/PWMOut_15 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ccu20003 \PWM1/sub_765_add_2_11 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(F1), 
    .CO1());

  specify
    (B0 => F1) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ccu20003 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h5999;
  defparam inst1.INIT1 = 16'h0000;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module PWM1_SLICE_7 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \PWM1/sub_765_add_2_9 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20004 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h5999;
  defparam inst1.INIT1 = 16'h5999;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module PWM1_SLICE_8 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \PWM1/sub_765_add_2_7 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module PWM1_SLICE_9 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \PWM1/sub_765_add_2_5 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module PWM1_SLICE_10 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \PWM1/sub_765_add_2_3 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module PWM1_SLICE_11 ( input B1, A1, output FCO );
  wire   GNDI;

  ccu20005 \PWM1/sub_765_add_2_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20005 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h0000;
  defparam inst1.INIT1 = 16'h5999;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module uart_rx1_SLICE_12 ( input A1, A0, DI1, DI0, CLK, FCI, output F0, Q0, F1, 
    Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \uart_rx1/UartClk_1004_1026__i2 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \uart_rx1/UartClk_1004_1026__i1 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20001 \uart_rx1/UartClk_1004_1026_add_4_3 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1());

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module uart_rx1_SLICE_13 ( input A1, DI1, CLK, output F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly;

  vmuxregsre \uart_rx1/UartClk_1004_1026__i0 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ccu20002 \uart_rx1/UartClk_1004_1026_add_4_1 ( .A0(GNDI), .B0(GNDI), 
    .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), 
    .S0(), .S1(F1), .CO1(FCO));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module uart_rx1_SLICE_14 ( input A0, DI0, CE, LSR, CLK, FCI, output F0, Q0 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  vmuxregsre0006 \uart_rx1/r_Clock_Count_1006__i15 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ccu2 \uart_rx1/r_Clock_Count_1006_add_4_17 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module vmuxregsre0006 ( input D0, D1, SD, SP, CK, LSR, output Q );

  FL1P3IY INST01( .D0(D0), .D1(D1), .SP(SP), .CK(CK), .SD(SD), .CD(LSR), .Q(Q));
  defparam INST01.GSR = "DISABLED";
endmodule

module uart_rx1_SLICE_15 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre0006 \uart_rx1/r_Clock_Count_1006__i14 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0006 \uart_rx1/r_Clock_Count_1006__i13 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20001 \uart_rx1/r_Clock_Count_1006_add_4_15 ( .A0(A0), .B0(GNDI), 
    .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module uart_rx1_SLICE_16 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre0006 \uart_rx1/r_Clock_Count_1006__i12 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0006 \uart_rx1/r_Clock_Count_1006__i11 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20001 \uart_rx1/r_Clock_Count_1006_add_4_13 ( .A0(A0), .B0(GNDI), 
    .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module uart_rx1_SLICE_17 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre0006 \uart_rx1/r_Clock_Count_1006__i10 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0006 \uart_rx1/r_Clock_Count_1006__i9 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20001 \uart_rx1/r_Clock_Count_1006_add_4_11 ( .A0(A0), .B0(GNDI), 
    .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module uart_rx1_SLICE_18 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre0006 \uart_rx1/r_Clock_Count_1006__i8 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0006 \uart_rx1/r_Clock_Count_1006__i7 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20001 \uart_rx1/r_Clock_Count_1006_add_4_9 ( .A0(A0), .B0(GNDI), 
    .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module uart_rx1_SLICE_19 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre0006 \uart_rx1/r_Clock_Count_1006__i6 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0006 \uart_rx1/r_Clock_Count_1006__i5 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20001 \uart_rx1/r_Clock_Count_1006_add_4_7 ( .A0(A0), .B0(GNDI), 
    .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module uart_rx1_SLICE_20 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre0006 \uart_rx1/r_Clock_Count_1006__i4 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0006 \uart_rx1/r_Clock_Count_1006__i3 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20001 \uart_rx1/r_Clock_Count_1006_add_4_5 ( .A0(A0), .B0(GNDI), 
    .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module uart_rx1_SLICE_21 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre0006 \uart_rx1/r_Clock_Count_1006__i2 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0006 \uart_rx1/r_Clock_Count_1006__i1 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20001 \uart_rx1/r_Clock_Count_1006_add_4_3 ( .A0(A0), .B0(GNDI), 
    .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module uart_rx1_SLICE_22 ( input A1, DI1, CE, LSR, CLK, output F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, CE_dly, LSR_dly;

  vmuxregsre0006 \uart_rx1/r_Clock_Count_1006__i0 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ccu20002 \uart_rx1/r_Clock_Count_1006_add_4_1 ( .A0(GNDI), .B0(GNDI), 
    .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), 
    .S0(), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_23 ( input A1, A0, FCI, output F0, F1 );
  wire   GNDI;

  ccu20007 sub_46_add_2_63( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20007 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h5555;
  defparam inst1.INIT1 = 16'h5555;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module SLICE_24 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20007 sub_46_add_2_61( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_25 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20007 sub_46_add_2_59( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_26 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20007 sub_46_add_2_57( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_27 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20007 sub_46_add_2_55( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_28 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20007 sub_46_add_2_53( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_29 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20007 sub_46_add_2_51( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_30 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20007 sub_46_add_2_49( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_31 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20008 sub_46_add_2_47( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20008 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h5aaa;
  defparam inst1.INIT1 = 16'h5aaa;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module SLICE_32 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20007 sub_46_add_2_45( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_33 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20009 sub_46_add_2_43( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20009 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h5555;
  defparam inst1.INIT1 = 16'h5aaa;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module SLICE_34 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20009 sub_46_add_2_41( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_35 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20007 sub_46_add_2_39( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_36 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20009 sub_46_add_2_37( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_37 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20007 sub_46_add_2_35( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_38 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20009 sub_46_add_2_33( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_39 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20009 sub_46_add_2_31( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_40 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20010 sub_46_add_2_29( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20010 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h5aaa;
  defparam inst1.INIT1 = 16'h5555;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module SLICE_41 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20009 sub_46_add_2_27( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_42 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20007 sub_46_add_2_25( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_43 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20007 sub_46_add_2_23( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_44 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20007 sub_46_add_2_21( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_45 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20009 sub_46_add_2_19( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_46 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20008 sub_46_add_2_17( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_47 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20009 sub_46_add_2_15( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_48 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20009 sub_46_add_2_13( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_49 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20010 sub_46_add_2_11( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_50 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20010 sub_46_add_2_9( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_51 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20010 sub_46_add_2_7( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_52 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20008 sub_46_add_2_5( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_53 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20008 sub_46_add_2_3( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_54 ( input A1, output F1, FCO );
  wire   GNDI;

  ccu20011 sub_46_add_2_1( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20011 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'hF000;
  defparam inst1.INIT1 = 16'h5555;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module SLICE_55 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre phase_inc_carrGen_i0_i63( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre phase_inc_carrGen_i0_i62( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 add_749_65( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1());

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ccu20012 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'hd1e2;
  defparam inst1.INIT1 = 16'hd1e2;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module SLICE_56 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre phase_inc_carrGen_i0_i61( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre phase_inc_carrGen_i0_i60( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 add_749_63( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_57 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre phase_inc_carrGen_i0_i59( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre phase_inc_carrGen_i0_i58( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 add_749_61( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_58 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre phase_inc_carrGen_i0_i57( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre phase_inc_carrGen_i0_i56( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 add_749_59( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_59 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre phase_inc_carrGen_i0_i55( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre phase_inc_carrGen_i0_i54( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 add_749_57( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_60 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre phase_inc_carrGen_i0_i53( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre phase_inc_carrGen_i0_i52( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 add_749_55( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_61 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre phase_inc_carrGen_i0_i51( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre phase_inc_carrGen_i0_i50( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 add_749_53( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_62 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre phase_inc_carrGen_i0_i49( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre phase_inc_carrGen_i0_i48( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 add_749_51( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_63 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre phase_inc_carrGen_i0_i47( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre phase_inc_carrGen_i0_i46( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20013 add_749_49( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ccu20013 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'he4b1;
  defparam inst1.INIT1 = 16'he4b1;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module SLICE_64 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre phase_inc_carrGen_i0_i45( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre phase_inc_carrGen_i0_i44( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 add_749_47( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_65 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre phase_inc_carrGen_i0_i43( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre phase_inc_carrGen_i0_i42( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20014 add_749_45( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ccu20014 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'hd1e2;
  defparam inst1.INIT1 = 16'he4b1;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module SLICE_66 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre phase_inc_carrGen_i0_i41( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre phase_inc_carrGen_i0_i40( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20014 add_749_43( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_67 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre phase_inc_carrGen_i0_i39( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre phase_inc_carrGen_i0_i38( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 add_749_41( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_68 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre phase_inc_carrGen_i0_i37( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre phase_inc_carrGen_i0_i36( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 add_749_39( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_69 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre phase_inc_carrGen_i0_i35( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre phase_inc_carrGen_i0_i34( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 add_749_37( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_70 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre phase_inc_carrGen_i0_i33( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre phase_inc_carrGen_i0_i32( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 add_749_35( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_71 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre phase_inc_carrGen_i0_i31( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre phase_inc_carrGen_i0_i30( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 add_749_33( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_72 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre phase_inc_carrGen_i0_i29( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre phase_inc_carrGen_i0_i28( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20015 add_749_31( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ccu20015 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'he4b1;
  defparam inst1.INIT1 = 16'hd1e2;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module SLICE_73 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre phase_inc_carrGen_i0_i27( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre phase_inc_carrGen_i0_i26( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 add_749_29( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_74 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre phase_inc_carrGen_i0_i25( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre phase_inc_carrGen_i0_i24( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 add_749_27( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_75 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre phase_inc_carrGen_i0_i23( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre phase_inc_carrGen_i0_i22( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 add_749_25( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_76 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre phase_inc_carrGen_i0_i21( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre phase_inc_carrGen_i0_i20( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 add_749_23( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_77 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre phase_inc_carrGen_i0_i19( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre phase_inc_carrGen_i0_i18( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 add_749_21( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_78 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre phase_inc_carrGen_i0_i17( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre phase_inc_carrGen_i0_i16( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20014 add_749_19( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_79 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre phase_inc_carrGen_i0_i15( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre phase_inc_carrGen_i0_i14( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 add_749_17( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_80 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre phase_inc_carrGen_i0_i13( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre phase_inc_carrGen_i0_i12( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 add_749_15( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_81 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre phase_inc_carrGen_i0_i11( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre phase_inc_carrGen_i0_i10( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 add_749_13( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_82 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre phase_inc_carrGen_i0_i9( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre phase_inc_carrGen_i0_i8( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20015 add_749_11( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_83 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre phase_inc_carrGen_i0_i7( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre phase_inc_carrGen_i0_i6( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 add_749_9( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_84 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre phase_inc_carrGen_i0_i5( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre phase_inc_carrGen_i0_i4( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 add_749_7( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_85 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre phase_inc_carrGen_i0_i3( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre phase_inc_carrGen_i0_i2( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20013 add_749_5( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_86 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, FCO );
  wire   VCCI, GNDI, DI0_dly, CLK_dly, CE_dly;

  vmuxregsre phase_inc_carrGen_i0_i0( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ccu20012 add_749_3( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_87 ( input B1, A1, output FCO );
  wire   GNDI;

  ccu20016 add_749_1( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(B1), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20016 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'hF000;
  defparam inst1.INIT1 = 16'hdddd;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module Mixer1_SLICE_88 ( input A0, FCI, output F0 );
  wire   GNDI;

  ccu20017 \Mixer1/unary_minus_7_add_3_13 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20017 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'hf555;
  defparam inst1.INIT1 = 16'h0000;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module Mixer1_SLICE_89 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20018 \Mixer1/unary_minus_7_add_3_11 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20018 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'hf555;
  defparam inst1.INIT1 = 16'hf555;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module Mixer1_SLICE_90 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20018 \Mixer1/unary_minus_7_add_3_9 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module Mixer1_SLICE_91 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20018 \Mixer1/unary_minus_7_add_3_7 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module Mixer1_SLICE_92 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20018 \Mixer1/unary_minus_7_add_3_5 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module Mixer1_SLICE_93 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20018 \Mixer1/unary_minus_7_add_3_3 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module Mixer1_SLICE_94 ( input A1, output F1, FCO );
  wire   GNDI;

  ccu20019 \Mixer1/unary_minus_7_add_3_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20019 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'hF000;
  defparam inst1.INIT1 = 16'h0aaa;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module Mixer1_SLICE_95 ( input A0, FCI, output F0 );
  wire   GNDI;

  ccu20017 \Mixer1/unary_minus_6_add_3_13 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module Mixer1_SLICE_96 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20018 \Mixer1/unary_minus_6_add_3_11 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module Mixer1_SLICE_97 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20018 \Mixer1/unary_minus_6_add_3_9 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module Mixer1_SLICE_98 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20018 \Mixer1/unary_minus_6_add_3_7 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module Mixer1_SLICE_99 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20018 \Mixer1/unary_minus_6_add_3_5 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module Mixer1_SLICE_100 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20018 \Mixer1/unary_minus_6_add_3_3 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module Mixer1_SLICE_101 ( input A1, output F1, FCO );
  wire   GNDI;

  ccu20019 \Mixer1/unary_minus_6_add_3_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_102 ( input A0, FCI, output F0 );
  wire   GNDI;

  ccu20020 sub_45_add_2_61( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(), 
    .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20020 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h5555;
  defparam inst1.INIT1 = 16'h0000;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module SLICE_103 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20007 sub_45_add_2_59( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_104 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20007 sub_45_add_2_57( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_105 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20007 sub_45_add_2_55( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_106 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20007 sub_45_add_2_53( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_107 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20007 sub_45_add_2_51( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_108 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20007 sub_45_add_2_49( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_109 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20008 sub_45_add_2_47( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_110 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20009 sub_45_add_2_45( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_111 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20007 sub_45_add_2_43( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_112 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20008 sub_45_add_2_41( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_113 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20010 sub_45_add_2_39( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_114 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20009 sub_45_add_2_37( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_115 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20010 sub_45_add_2_35( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_116 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20009 sub_45_add_2_33( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_117 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20008 sub_45_add_2_31( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_118 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20009 sub_45_add_2_29( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_119 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20009 sub_45_add_2_27( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_120 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20008 sub_45_add_2_25( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_121 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20007 sub_45_add_2_23( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_122 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20007 sub_45_add_2_21( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_123 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20008 sub_45_add_2_19( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_124 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20010 sub_45_add_2_17( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_125 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20007 sub_45_add_2_15( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_126 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20010 sub_45_add_2_13( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_127 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20009 sub_45_add_2_11( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_128 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20009 sub_45_add_2_9( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_129 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20007 sub_45_add_2_7( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_130 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20009 sub_45_add_2_5( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_131 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20008 sub_45_add_2_3( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_132 ( input A1, output F1, FCO );
  wire   GNDI;

  ccu20011 sub_45_add_2_1( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SinCos1_SLICE_133 ( input A1, M1, CLK, output F1, Q1, FCO );
  wire   VCCI, GNDI, A1_NOTIN, M1_dly, CLK_dly;

  vmuxregsre \SinCos1/FF_62 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  alu2_mult \SinCos1/neg_rom_addr0_r_n_0 ( .A0(GNDI), .A1(A1_NOTIN), .B0(GNDI), 
    .B1(VCCI), .CI(), .S0(), .S1(F1), .CO1(FCO));
  inverter A1_INVERTERIN( .I(A1), .Z(A1_NOTIN));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module alu2_mult ( input A0, A1, B0, B1, CI, output S0, S1, CO1 );

  FADD2B INST01( .A0(A0), .A1(A1), .B0(B0), .B1(B1), .CI(CI), .COUT(CO1), 
    .S0(S0), .S1(S1));
endmodule

module inverter ( input I, output Z );

  INV INST1( .A(I), .Z(Z));
endmodule

module SinCos1_SLICE_134 ( input A1, A0, M1, CLK, FCI, output F0, F1, Q1, FCO );
  wire   VCCI, GNDI, A0_NOTIN, A1_NOTIN, M1_dly, CLK_dly;

  vmuxregsre \SinCos1/FF_60 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  alu2_mult \SinCos1/neg_rom_addr0_r_n_1 ( .A0(A0_NOTIN), .A1(A1_NOTIN), 
    .B0(GNDI), .B1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  inverter A0_INVERTERIN( .I(A0), .Z(A0_NOTIN));
  inverter A1_INVERTERIN( .I(A1), .Z(A1_NOTIN));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SinCos1_SLICE_135 ( input A1, A0, M1, CLK, FCI, output F0, F1, Q1, FCO );
  wire   VCCI, GNDI, A0_NOTIN, A1_NOTIN, M1_dly, CLK_dly;

  vmuxregsre \SinCos1/FF_58 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  alu2_mult \SinCos1/neg_rom_addr0_r_n_2 ( .A0(A0_NOTIN), .A1(A1_NOTIN), 
    .B0(GNDI), .B1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  inverter A0_INVERTERIN( .I(A0), .Z(A0_NOTIN));
  inverter A1_INVERTERIN( .I(A1), .Z(A1_NOTIN));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SinCos1_SLICE_136 ( input A0, FCI, output F0 );
  wire   A0_NOTIN, GNDI;

  alu2_mult \SinCos1/neg_rom_addr0_r_n_3 ( .A0(A0_NOTIN), .A1(GNDI), .B0(GNDI), 
    .B1(GNDI), .CI(FCI), .S0(F0), .S1(), .CO1());
  inverter A0_INVERTERIN( .I(A0), .Z(A0_NOTIN));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SinCos1_SLICE_137 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   A0_NOTIN, A1_NOTIN, GNDI;

  alu2_mult \SinCos1/neg_rom_dout_s_n_1 ( .A0(A0_NOTIN), .A1(A1_NOTIN), 
    .B0(GNDI), .B1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  inverter A0_INVERTERIN( .I(A0), .Z(A0_NOTIN));
  inverter A1_INVERTERIN( .I(A1), .Z(A1_NOTIN));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SinCos1_SLICE_138 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   A0_NOTIN, A1_NOTIN, GNDI;

  alu2_mult \SinCos1/neg_rom_dout_s_n_2 ( .A0(A0_NOTIN), .A1(A1_NOTIN), 
    .B0(GNDI), .B1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  inverter A0_INVERTERIN( .I(A0), .Z(A0_NOTIN));
  inverter A1_INVERTERIN( .I(A1), .Z(A1_NOTIN));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SinCos1_SLICE_139 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   A0_NOTIN, A1_NOTIN, GNDI;

  alu2_mult \SinCos1/neg_rom_dout_s_n_3 ( .A0(A0_NOTIN), .A1(A1_NOTIN), 
    .B0(GNDI), .B1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  inverter A0_INVERTERIN( .I(A0), .Z(A0_NOTIN));
  inverter A1_INVERTERIN( .I(A1), .Z(A1_NOTIN));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SinCos1_SLICE_140 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   A0_NOTIN, A1_NOTIN, GNDI;

  alu2_mult \SinCos1/neg_rom_dout_s_n_4 ( .A0(A0_NOTIN), .A1(A1_NOTIN), 
    .B0(GNDI), .B1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  inverter A0_INVERTERIN( .I(A0), .Z(A0_NOTIN));
  inverter A1_INVERTERIN( .I(A1), .Z(A1_NOTIN));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SinCos1_SLICE_141 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   A0_NOTIN, A1_NOTIN, GNDI;

  alu2_mult \SinCos1/neg_rom_dout_s_n_5 ( .A0(A0_NOTIN), .A1(A1_NOTIN), 
    .B0(GNDI), .B1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  inverter A0_INVERTERIN( .I(A0), .Z(A0_NOTIN));
  inverter A1_INVERTERIN( .I(A1), .Z(A1_NOTIN));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SinCos1_SLICE_142 ( input A1, A0, FCI, output F0, F1 );
  wire   A0_NOTIN, A1_NOTIN, GNDI;

  alu2_mult \SinCos1/neg_rom_dout_s_n_6 ( .A0(A0_NOTIN), .A1(A1_NOTIN), 
    .B0(GNDI), .B1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1());
  inverter A0_INVERTERIN( .I(A0), .Z(A0_NOTIN));
  inverter A1_INVERTERIN( .I(A1), .Z(A1_NOTIN));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
  endspecify

endmodule

module SinCos1_SLICE_143 ( input A1, output FCO );
  wire   GNDI, A1_NOTIN, VCCI;

  alu2_mult \SinCos1/neg_rom_dout_c_n_0 ( .A0(GNDI), .A1(A1_NOTIN), .B0(GNDI), 
    .B1(VCCI), .CI(), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));
  inverter A1_INVERTERIN( .I(A1), .Z(A1_NOTIN));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (A1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SinCos1_SLICE_144 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   A0_NOTIN, A1_NOTIN, GNDI;

  alu2_mult \SinCos1/neg_rom_dout_c_n_1 ( .A0(A0_NOTIN), .A1(A1_NOTIN), 
    .B0(GNDI), .B1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  inverter A0_INVERTERIN( .I(A0), .Z(A0_NOTIN));
  inverter A1_INVERTERIN( .I(A1), .Z(A1_NOTIN));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SinCos1_SLICE_145 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   A0_NOTIN, A1_NOTIN, GNDI;

  alu2_mult \SinCos1/neg_rom_dout_c_n_2 ( .A0(A0_NOTIN), .A1(A1_NOTIN), 
    .B0(GNDI), .B1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  inverter A0_INVERTERIN( .I(A0), .Z(A0_NOTIN));
  inverter A1_INVERTERIN( .I(A1), .Z(A1_NOTIN));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SinCos1_SLICE_146 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   A0_NOTIN, A1_NOTIN, GNDI;

  alu2_mult \SinCos1/neg_rom_dout_c_n_3 ( .A0(A0_NOTIN), .A1(A1_NOTIN), 
    .B0(GNDI), .B1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  inverter A0_INVERTERIN( .I(A0), .Z(A0_NOTIN));
  inverter A1_INVERTERIN( .I(A1), .Z(A1_NOTIN));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SinCos1_SLICE_147 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   A0_NOTIN, A1_NOTIN, GNDI;

  alu2_mult \SinCos1/neg_rom_dout_c_n_4 ( .A0(A0_NOTIN), .A1(A1_NOTIN), 
    .B0(GNDI), .B1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  inverter A0_INVERTERIN( .I(A0), .Z(A0_NOTIN));
  inverter A1_INVERTERIN( .I(A1), .Z(A1_NOTIN));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SinCos1_SLICE_148 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   A0_NOTIN, A1_NOTIN, GNDI;

  alu2_mult \SinCos1/neg_rom_dout_c_n_5 ( .A0(A0_NOTIN), .A1(A1_NOTIN), 
    .B0(GNDI), .B1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  inverter A0_INVERTERIN( .I(A0), .Z(A0_NOTIN));
  inverter A1_INVERTERIN( .I(A1), .Z(A1_NOTIN));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SinCos1_SLICE_149 ( input A1, A0, FCI, output F0, F1 );
  wire   A0_NOTIN, A1_NOTIN, GNDI;

  alu2_mult \SinCos1/neg_rom_dout_c_n_6 ( .A0(A0_NOTIN), .A1(A1_NOTIN), 
    .B0(GNDI), .B1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1());
  inverter A0_INVERTERIN( .I(A0), .Z(A0_NOTIN));
  inverter A1_INVERTERIN( .I(A1), .Z(A1_NOTIN));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
  endspecify

endmodule

module SinCos1_SLICE_150 ( input A1, output FCO );
  wire   GNDI, A1_NOTIN, VCCI;

  alu2_mult \SinCos1/neg_rom_dout_s_n_0 ( .A0(GNDI), .A1(A1_NOTIN), .B0(GNDI), 
    .B1(VCCI), .CI(), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));
  inverter A1_INVERTERIN( .I(A1), .Z(A1_NOTIN));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (A1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_151 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d1_i43 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d1_i42 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20021 \CIC1Sin/add_1049_9 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ccu20021 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h74b8;
  defparam inst1.INIT1 = 16'h74b8;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module CIC1Sin_SLICE_152 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1103_23 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_153 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1103_7 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_154 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1102_11 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_155 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d1_i41 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d1_i40 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20021 \CIC1Sin/add_1049_7 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_156 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d1_i39 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d1_i38 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20021 \CIC1Sin/add_1049_5 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_157 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d1_i37 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d1_i36 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20021 \CIC1Sin/add_1049_3 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_158 ( input A1, output FCO );
  wire   GNDI;

  ccu20002 \CIC1Sin/add_1049_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_159 ( input B1, A1, B0, A0, FCI, output F0, F1 );
  wire   GNDI;

  ccu20022 \CIC1Sin/add_1053_36 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20022 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h5666;
  defparam inst1.INIT1 = 16'h5666;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module CIC1Sin_SLICE_160 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20022 \CIC1Sin/add_1053_34 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_161 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20022 \CIC1Sin/add_1053_32 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_162 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20022 \CIC1Sin/add_1053_30 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_163 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20022 \CIC1Sin/add_1053_28 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_164 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20022 \CIC1Sin/add_1053_26 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_165 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1102_9 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_166 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1102_7 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_167 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1102_5 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_168 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1102_3 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_169 ( input B1, A1, output FCO );
  wire   GNDI;

  ccu20005 \CIC1Sin/add_1102_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_170 ( input B0, A0, FCI, output F0 );
  wire   GNDI;

  ccu20003 \CIC1Sin/add_1098_37 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(), 
    .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_171 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1098_35 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_172 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1098_33 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_173 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1098_31 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_174 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1098_29 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_175 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1098_27 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_176 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1098_25 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_177 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1098_23 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_178 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1098_21 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_179 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1098_19 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_180 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1098_17 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_181 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1098_15 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_182 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1098_13 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_183 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1098_11 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_184 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1098_9 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_185 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1098_7 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_186 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1098_5 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_187 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1098_3 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_188 ( input B1, A1, output F1, FCO );
  wire   GNDI;

  ccu20023 \CIC1Sin/add_1098_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20023 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'hF000;
  defparam inst1.INIT1 = 16'h5999;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module CIC1Sin_SLICE_189 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20022 \CIC1Sin/add_1053_24 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_190 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1103_5 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_191 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1103_3 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_192 ( input B1, A1, output FCO );
  wire   GNDI;

  ccu20023 \CIC1Sin/add_1103_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_193 ( input B0, A0, FCI, output F0 );
  wire   GNDI;

  ccu20003 \CIC1Sin/add_1104_37 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(), 
    .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_194 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1104_35 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_195 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1104_33 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_196 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1104_31 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_197 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1104_29 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_198 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1104_27 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_199 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1104_25 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_200 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1104_23 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_201 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1104_21 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_202 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1104_19 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_203 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1103_21 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_204 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1104_17 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_205 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1104_15 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_206 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1104_13 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_207 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d9_i0_i71 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d9_i0_i70 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Sin/add_1099_37 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1());

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ccu20024 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'hb874;
  defparam inst1.INIT1 = 16'hb874;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module CIC1Sin_SLICE_208 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d9_i0_i69 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d9_i0_i68 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Sin/add_1099_35 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_209 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1104_11 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_210 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d9_i0_i67 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d9_i0_i66 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Sin/add_1099_33 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_211 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1104_9 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_212 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d9_i0_i65 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d9_i0_i64 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Sin/add_1099_31 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_213 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d9_i0_i63 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d9_i0_i62 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Sin/add_1099_29 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_214 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d9_i0_i61 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d9_i0_i60 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Sin/add_1099_27 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_215 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1104_7 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_216 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d9_i0_i59 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d9_i0_i58 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Sin/add_1099_25 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_217 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d9_i0_i57 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d9_i0_i56 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Sin/add_1099_23 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_218 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d9_i0_i55 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d9_i0_i54 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Sin/add_1099_21 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_219 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d9_i0_i53 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d9_i0_i52 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Sin/add_1099_19 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_220 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d9_i0_i51 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d9_i0_i50 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Sin/add_1099_17 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_221 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d9_i0_i49 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d9_i0_i48 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Sin/add_1099_15 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_222 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d9_i0_i47 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d9_i0_i46 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Sin/add_1099_13 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_223 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d9_i0_i45 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d9_i0_i44 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Sin/add_1099_11 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_224 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d9_i0_i43 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d9_i0_i42 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Sin/add_1099_9 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_225 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1104_5 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_226 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d9_i0_i41 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d9_i0_i40 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Sin/add_1099_7 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_227 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1104_3 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_228 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d9_i0_i39 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d9_i0_i38 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Sin/add_1099_5 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_229 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d9_i0_i37 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d9_i0_i36 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Sin/add_1099_3 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_230 ( input A1, output FCO );
  wire   GNDI;

  ccu20002 \CIC1Sin/add_1099_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_231 ( input B0, A0, FCI, output F0 );
  wire   GNDI;

  ccu20003 \CIC1Sin/add_1103_37 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(), 
    .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_232 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1103_35 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_233 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1103_33 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_234 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1103_31 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_235 ( input B1, A1, output FCO );
  wire   GNDI;

  ccu20005 \CIC1Sin/add_1104_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_236 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20022 \CIC1Sin/add_1053_22 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_237 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1103_19 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_238 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1103_17 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_239 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1103_15 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_240 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20022 \CIC1Sin/add_1053_20 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_241 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20022 \CIC1Sin/add_1053_18 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_242 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20022 \CIC1Sin/add_1053_16 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_243 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20022 \CIC1Sin/add_1053_14 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_244 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20022 \CIC1Sin/add_1053_12 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_245 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20022 \CIC1Sin/add_1053_10 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_246 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20022 \CIC1Sin/add_1053_8 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_247 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20022 \CIC1Sin/add_1053_6 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_248 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20022 \CIC1Sin/add_1053_4 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_249 ( input B1, A1, B0, A0, output F1, FCO );
  wire   GNDI;

  ccu20025 \CIC1Sin/add_1053_2 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20025 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h7000;
  defparam inst1.INIT1 = 16'h5666;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module CIC1Sin_SLICE_250 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d2_i71 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d2_i70 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20021 \CIC1Sin/add_1054_37 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1());

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_251 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d2_i69 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d2_i68 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20021 \CIC1Sin/add_1054_35 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_252 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d2_i67 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d2_i66 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20021 \CIC1Sin/add_1054_33 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_253 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d2_i65 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d2_i64 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20021 \CIC1Sin/add_1054_31 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_254 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d2_i63 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d2_i62 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20021 \CIC1Sin/add_1054_29 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_255 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d2_i61 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d2_i60 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20021 \CIC1Sin/add_1054_27 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_256 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d2_i59 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d2_i58 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20021 \CIC1Sin/add_1054_25 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_257 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d2_i57 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d2_i56 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20021 \CIC1Sin/add_1054_23 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_258 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d2_i55 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d2_i54 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20021 \CIC1Sin/add_1054_21 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_259 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d2_i53 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d2_i52 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20021 \CIC1Sin/add_1054_19 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_260 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d2_i51 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d2_i50 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20021 \CIC1Sin/add_1054_17 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_261 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d2_i49 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d2_i48 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20021 \CIC1Sin/add_1054_15 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_262 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d2_i47 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d2_i46 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20021 \CIC1Sin/add_1054_13 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_263 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d2_i45 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d2_i44 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20021 \CIC1Sin/add_1054_11 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_264 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d2_i43 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d2_i42 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20021 \CIC1Sin/add_1054_9 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_265 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d2_i41 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d2_i40 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20021 \CIC1Sin/add_1054_7 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_266 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d2_i39 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d2_i38 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20021 \CIC1Sin/add_1054_5 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_267 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d2_i37 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d2_i36 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20021 \CIC1Sin/add_1054_3 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_268 ( input A1, output FCO );
  wire   GNDI;

  ccu20002 \CIC1Sin/add_1054_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_269 ( input B1, A1, B0, A0, FCI, output F0, F1 );
  wire   GNDI;

  ccu20022 \CIC1Sin/add_1058_36 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_270 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20022 \CIC1Sin/add_1058_34 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_271 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20022 \CIC1Sin/add_1058_32 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_272 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20022 \CIC1Sin/add_1058_30 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_273 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20022 \CIC1Sin/add_1058_28 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_274 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20022 \CIC1Sin/add_1058_26 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_275 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1103_13 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_276 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20022 \CIC1Sin/add_1058_24 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_277 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1103_11 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_278 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20022 \CIC1Sin/add_1058_22 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_279 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20022 \CIC1Sin/add_1058_20 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_280 ( input B0, A0, FCI, output F0 );
  wire   GNDI;

  ccu20003 \CIC1Sin/add_1133_37 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(), 
    .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_281 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1133_35 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_282 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1133_33 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_283 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1133_31 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_284 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1133_29 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_285 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1133_27 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_286 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1133_25 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_287 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1133_23 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_288 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1133_21 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_289 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1133_19 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_290 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1133_17 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_291 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1133_15 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_292 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1133_13 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_293 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1133_11 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_294 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1133_9 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_295 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1133_7 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_296 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1133_5 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_297 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1133_3 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_298 ( input B1, A1, output F1, FCO );
  wire   GNDI;

  ccu20023 \CIC1Sin/add_1133_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_299 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d8_i0_i71 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d8_i0_i70 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Sin/add_1134_37 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1());

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_300 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d8_i0_i69 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d8_i0_i68 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Sin/add_1134_35 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_301 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d8_i0_i67 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d8_i0_i66 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Sin/add_1134_33 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_302 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d8_i0_i65 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d8_i0_i64 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Sin/add_1134_31 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_303 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d8_i0_i63 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d8_i0_i62 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Sin/add_1134_29 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_304 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d8_i0_i61 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d8_i0_i60 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Sin/add_1134_27 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_305 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d8_i0_i59 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d8_i0_i58 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Sin/add_1134_25 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_306 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d8_i0_i57 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d8_i0_i56 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Sin/add_1134_23 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_307 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d8_i0_i55 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d8_i0_i54 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Sin/add_1134_21 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_308 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d8_i0_i53 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d8_i0_i52 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Sin/add_1134_19 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_309 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d8_i0_i51 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d8_i0_i50 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Sin/add_1134_17 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_310 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d8_i0_i49 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d8_i0_i48 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Sin/add_1134_15 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_311 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d8_i0_i47 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d8_i0_i46 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Sin/add_1134_13 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_312 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d8_i0_i45 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d8_i0_i44 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Sin/add_1134_11 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_313 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d8_i0_i43 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d8_i0_i42 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Sin/add_1134_9 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_314 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d8_i0_i41 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d8_i0_i40 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Sin/add_1134_7 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_315 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d8_i0_i39 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d8_i0_i38 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Sin/add_1134_5 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_316 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d8_i0_i37 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d8_i0_i36 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Sin/add_1134_3 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_317 ( input A1, output FCO );
  wire   GNDI;

  ccu20002 \CIC1Sin/add_1134_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_318 ( input B0, A0, FCI, output F0 );
  wire   GNDI;

  ccu20003 \CIC1Sin/add_1138_37 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(), 
    .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_319 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1138_35 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_320 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1138_33 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_321 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1138_31 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_322 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1138_29 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_323 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1138_27 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_324 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1138_25 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_325 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1138_23 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_326 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1138_21 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_327 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1138_19 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_328 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1138_17 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_329 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1138_15 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_330 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1138_13 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_331 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1138_11 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_332 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1138_9 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_333 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1138_7 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_334 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1138_5 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_335 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1138_3 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_336 ( input B1, A1, output F1, FCO );
  wire   GNDI;

  ccu20023 \CIC1Sin/add_1138_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_337 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d7_i0_i71 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d7_i0_i70 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Sin/add_1139_37 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1());

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_338 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d7_i0_i69 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d7_i0_i68 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Sin/add_1139_35 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_339 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d7_i0_i67 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d7_i0_i66 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Sin/add_1139_33 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_340 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d7_i0_i65 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d7_i0_i64 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Sin/add_1139_31 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_341 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d7_i0_i63 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d7_i0_i62 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Sin/add_1139_29 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_342 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d7_i0_i61 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d7_i0_i60 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Sin/add_1139_27 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_343 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d7_i0_i59 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d7_i0_i58 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Sin/add_1139_25 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_344 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d7_i0_i57 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d7_i0_i56 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Sin/add_1139_23 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_345 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d7_i0_i55 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d7_i0_i54 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Sin/add_1139_21 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_346 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d7_i0_i53 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d7_i0_i52 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Sin/add_1139_19 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_347 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d7_i0_i51 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d7_i0_i50 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Sin/add_1139_17 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_348 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d7_i0_i49 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d7_i0_i48 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Sin/add_1139_15 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_349 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d7_i0_i47 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d7_i0_i46 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Sin/add_1139_13 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_350 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d7_i0_i45 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d7_i0_i44 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Sin/add_1139_11 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_351 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d7_i0_i43 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d7_i0_i42 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Sin/add_1139_9 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_352 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d7_i0_i41 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d7_i0_i40 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Sin/add_1139_7 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_353 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d7_i0_i39 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d7_i0_i38 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Sin/add_1139_5 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_354 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d7_i0_i37 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d7_i0_i36 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Sin/add_1139_3 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_355 ( input A1, output FCO );
  wire   GNDI;

  ccu20002 \CIC1Sin/add_1139_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_356 ( input B0, A0, DI0, CE, CLK, FCI, output F0, Q0, F1 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly, CE_dly;

  vmuxregsre \CIC1Sin/d6_i0_i35 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ccu20003 \CIC1Sin/add_1042_37 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1());

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_357 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d6_i0_i34 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d6_i0_i33 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Sin/add_1042_35 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_358 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d6_i0_i32 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d6_i0_i31 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Sin/add_1042_33 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_359 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d6_i0_i30 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d6_i0_i29 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Sin/add_1042_31 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_360 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d6_i0_i28 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d6_i0_i27 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Sin/add_1042_29 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_361 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d6_i0_i26 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d6_i0_i25 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Sin/add_1042_27 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_362 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d6_i0_i24 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d6_i0_i23 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Sin/add_1042_25 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_363 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d6_i0_i22 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d6_i0_i21 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Sin/add_1042_23 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_364 ( input B1, A1, B0, A0, DI0, CE, CLK, FCI, output F0, 
    Q0, F1, FCO );
  wire   VCCI, GNDI, DI0_dly, CLK_dly, CE_dly;

  vmuxregsre \CIC1Sin/d6_i0_i19 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ccu20004 \CIC1Sin/add_1042_21 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_365 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d6_i0_i18 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d6_i0_i17 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Sin/add_1042_19 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_366 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d6_i0_i16 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d6_i0_i15 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Sin/add_1042_17 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_367 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d6_i0_i14 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d6_i0_i13 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Sin/add_1042_15 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_368 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d6_i0_i12 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d6_i0_i11 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Sin/add_1042_13 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_369 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d6_i0_i10 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d6_i0_i9 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Sin/add_1042_11 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_370 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d6_i0_i8 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d6_i0_i7 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Sin/add_1042_9 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_371 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d6_i0_i6 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d6_i0_i5 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Sin/add_1042_7 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_372 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d6_i0_i4 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d6_i0_i3 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Sin/add_1042_5 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_373 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d6_i0_i2 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d6_i0_i1 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Sin/add_1042_3 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_374 ( input B1, A1, DI1, CE, CLK, output F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, CE_dly;

  vmuxregsre \CIC1Sin/d6_i0_i0 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ccu20005 \CIC1Sin/add_1042_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_375 ( input B0, A0, DI0, CE, CLK, FCI, output F0, Q0, F1 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly, CE_dly;

  vmuxregsre \CIC1Sin/d9_i0_i35 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ccu20003 \CIC1Sin/add_1097_37 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1());

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_376 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d9_i0_i34 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d9_i0_i33 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Sin/add_1097_35 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_377 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d9_i0_i32 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d9_i0_i31 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Sin/add_1097_33 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_378 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d9_i0_i30 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d9_i0_i29 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Sin/add_1097_31 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_379 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d9_i0_i28 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d9_i0_i27 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Sin/add_1097_29 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_380 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d9_i0_i26 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d9_i0_i25 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Sin/add_1097_27 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_381 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d9_i0_i24 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d9_i0_i23 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Sin/add_1097_25 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_382 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d9_i0_i22 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d9_i0_i21 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Sin/add_1097_23 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_383 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d9_i0_i20 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d9_i0_i19 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Sin/add_1097_21 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_384 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d9_i0_i18 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d9_i0_i17 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Sin/add_1097_19 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_385 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d9_i0_i16 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d9_i0_i15 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Sin/add_1097_17 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_386 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d9_i0_i14 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d9_i0_i13 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Sin/add_1097_15 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_387 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d9_i0_i12 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d9_i0_i11 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Sin/add_1097_13 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_388 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d9_i0_i10 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d9_i0_i9 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Sin/add_1097_11 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_389 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d9_i0_i8 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d9_i0_i7 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Sin/add_1097_9 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_390 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d9_i0_i6 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d9_i0_i5 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Sin/add_1097_7 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_391 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d9_i0_i4 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d9_i0_i3 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Sin/add_1097_5 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_392 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d9_i0_i2 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d9_i0_i1 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Sin/add_1097_3 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_393 ( input B1, A1, DI1, CE, CLK, output F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, CE_dly;

  vmuxregsre \CIC1Sin/d9_i0_i0 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ccu20005 \CIC1Sin/add_1097_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_394 ( input A0, DI0, LSR, CLK, FCI, output F0, Q0 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly, LSR_dly;

  vmuxregsre0006 \CIC1Sin/count__i15 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ccu20026 \CIC1Sin/add_10_17 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(), 
    .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ccu20026 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h5aaa;
  defparam inst1.INIT1 = 16'h0000;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module CIC1Sin_SLICE_395 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0006 \CIC1Sin/count__i14 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0006 \CIC1Sin/count__i13 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20008 \CIC1Sin/add_10_15 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_396 ( input A1, A0, DI1, LSR, CLK, FCI, output F0, F1, Q1, 
    FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, LSR_dly;

  vmuxregsre0006 \CIC1Sin/count__i12 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ccu20008 \CIC1Sin/add_10_13 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_397 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0006 \CIC1Sin/count__i10 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0006 \CIC1Sin/count__i9 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20008 \CIC1Sin/add_10_11 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_398 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0006 \CIC1Sin/count__i8 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0006 \CIC1Sin/count__i7 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20008 \CIC1Sin/add_10_9 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_399 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0006 \CIC1Sin/count__i6 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0006 \CIC1Sin/count__i5 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20008 \CIC1Sin/add_10_7 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_400 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0006 \CIC1Sin/count__i4 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0006 \CIC1Sin/count__i3 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20008 \CIC1Sin/add_10_5 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_401 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0006 \CIC1Sin/count__i2 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0006 \CIC1Sin/count__i1 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20008 \CIC1Sin/add_10_3 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_402 ( input A1, output F1, FCO );
  wire   GNDI;

  ccu20011 \CIC1Sin/add_10_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_403 ( input FCI, output F0 );
  wire   GNDI;

  ccu20027 \CIC1Sin/add_1067_cout ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(), 
    .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (FCI => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20027 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h0000;
  defparam inst1.INIT1 = 16'h0000;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module CIC1Sin_SLICE_404 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d5_i35 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d5_i34 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 \CIC1Sin/add_1067_36 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_405 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d5_i33 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d5_i32 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 \CIC1Sin/add_1067_34 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_406 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d5_i31 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d5_i30 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 \CIC1Sin/add_1067_32 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_407 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d5_i29 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d5_i28 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 \CIC1Sin/add_1067_30 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_408 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d5_i27 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d5_i26 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 \CIC1Sin/add_1067_28 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_409 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d5_i25 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d5_i24 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 \CIC1Sin/add_1067_26 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_410 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d5_i23 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d5_i22 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 \CIC1Sin/add_1067_24 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_411 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d5_i21 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d5_i20 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 \CIC1Sin/add_1067_22 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_412 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d5_i19 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d5_i18 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 \CIC1Sin/add_1067_20 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_413 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d5_i17 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d5_i16 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 \CIC1Sin/add_1067_18 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_414 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d5_i15 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d5_i14 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 \CIC1Sin/add_1067_16 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_415 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d5_i13 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d5_i12 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 \CIC1Sin/add_1067_14 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_416 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d5_i11 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d5_i10 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 \CIC1Sin/add_1067_12 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_417 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d5_i9 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d5_i8 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 \CIC1Sin/add_1067_10 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_418 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d5_i7 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d5_i6 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 \CIC1Sin/add_1067_8 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_419 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d5_i5 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d5_i4 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 \CIC1Sin/add_1067_6 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_420 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d5_i3 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d5_i2 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 \CIC1Sin/add_1067_4 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_421 ( input B1, A1, B0, A0, DI1, CLK, output F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly;

  vmuxregsre \CIC1Sin/d5_i1 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ccu20025 \CIC1Sin/add_1067_2 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_422 ( input FCI, output F0 );
  wire   GNDI;

  ccu20027 \CIC1Sin/add_1062_cout ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(), 
    .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (FCI => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_423 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d4_i35 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d4_i34 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 \CIC1Sin/add_1062_36 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_424 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d4_i33 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d4_i32 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 \CIC1Sin/add_1062_34 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_425 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d4_i31 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d4_i30 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 \CIC1Sin/add_1062_32 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_426 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d4_i29 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d4_i28 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 \CIC1Sin/add_1062_30 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_427 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d4_i27 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d4_i26 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 \CIC1Sin/add_1062_28 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_428 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d4_i25 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d4_i24 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 \CIC1Sin/add_1062_26 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_429 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d4_i23 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d4_i22 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 \CIC1Sin/add_1062_24 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_430 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d4_i21 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d4_i20 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 \CIC1Sin/add_1062_22 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_431 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d4_i19 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d4_i18 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 \CIC1Sin/add_1062_20 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_432 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d4_i17 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d4_i16 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 \CIC1Sin/add_1062_18 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_433 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d4_i15 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d4_i14 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 \CIC1Sin/add_1062_16 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_434 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d4_i13 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d4_i12 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 \CIC1Sin/add_1062_14 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_435 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d4_i11 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d4_i10 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 \CIC1Sin/add_1062_12 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_436 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d4_i9 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d4_i8 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 \CIC1Sin/add_1062_10 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_437 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d4_i7 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d4_i6 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 \CIC1Sin/add_1062_8 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_438 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d4_i5 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d4_i4 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 \CIC1Sin/add_1062_6 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_439 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d4_i3 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d4_i2 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 \CIC1Sin/add_1062_4 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_440 ( input B1, A1, B0, A0, DI1, CLK, output F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly;

  vmuxregsre \CIC1Sin/d4_i1 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ccu20025 \CIC1Sin/add_1062_2 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_441 ( input FCI, output F0 );
  wire   GNDI;

  ccu20027 \CIC1Sin/add_1057_cout ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(), 
    .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (FCI => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_442 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d3_i35 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d3_i34 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 \CIC1Sin/add_1057_36 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_443 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d3_i33 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d3_i32 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 \CIC1Sin/add_1057_34 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_444 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d3_i31 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d3_i30 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 \CIC1Sin/add_1057_32 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_445 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d3_i29 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d3_i28 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 \CIC1Sin/add_1057_30 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_446 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d3_i27 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d3_i26 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 \CIC1Sin/add_1057_28 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_447 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d3_i25 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d3_i24 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 \CIC1Sin/add_1057_26 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_448 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d3_i23 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d3_i22 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 \CIC1Sin/add_1057_24 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_449 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d3_i21 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d3_i20 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 \CIC1Sin/add_1057_22 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_450 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d3_i19 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d3_i18 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 \CIC1Sin/add_1057_20 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_451 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d3_i17 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d3_i16 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 \CIC1Sin/add_1057_18 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_452 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d3_i15 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d3_i14 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 \CIC1Sin/add_1057_16 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_453 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d3_i13 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d3_i12 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 \CIC1Sin/add_1057_14 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_454 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d3_i11 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d3_i10 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 \CIC1Sin/add_1057_12 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_455 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d3_i9 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d3_i8 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 \CIC1Sin/add_1057_10 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_456 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d3_i7 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d3_i6 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 \CIC1Sin/add_1057_8 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_457 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d3_i5 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d3_i4 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 \CIC1Sin/add_1057_6 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_458 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d3_i3 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d3_i2 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 \CIC1Sin/add_1057_4 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_459 ( input B1, A1, B0, A0, DI1, CLK, output F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly;

  vmuxregsre \CIC1Sin/d3_i1 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ccu20025 \CIC1Sin/add_1057_2 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_460 ( input FCI, output F0 );
  wire   GNDI;

  ccu20027 \CIC1Sin/add_1052_cout ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(), 
    .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (FCI => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_461 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d2_i35 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d2_i34 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 \CIC1Sin/add_1052_36 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_462 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d2_i33 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d2_i32 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 \CIC1Sin/add_1052_34 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_463 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d2_i31 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d2_i30 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 \CIC1Sin/add_1052_32 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_464 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d2_i29 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d2_i28 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 \CIC1Sin/add_1052_30 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_465 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d2_i27 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d2_i26 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 \CIC1Sin/add_1052_28 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_466 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d2_i25 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d2_i24 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 \CIC1Sin/add_1052_26 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_467 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d2_i23 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d2_i22 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 \CIC1Sin/add_1052_24 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_468 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d2_i21 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d2_i20 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 \CIC1Sin/add_1052_22 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_469 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d2_i19 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d2_i18 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 \CIC1Sin/add_1052_20 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_470 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d2_i17 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d2_i16 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 \CIC1Sin/add_1052_18 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_471 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d2_i15 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d2_i14 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 \CIC1Sin/add_1052_16 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_472 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d2_i13 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d2_i12 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 \CIC1Sin/add_1052_14 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_473 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d2_i11 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d2_i10 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 \CIC1Sin/add_1052_12 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_474 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d2_i9 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d2_i8 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 \CIC1Sin/add_1052_10 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_475 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d2_i7 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d2_i6 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 \CIC1Sin/add_1052_8 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_476 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d2_i5 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d2_i4 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 \CIC1Sin/add_1052_6 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_477 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d2_i3 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d2_i2 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 \CIC1Sin/add_1052_4 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_478 ( input B1, A1, B0, A0, DI1, CLK, output F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly;

  vmuxregsre \CIC1Sin/d2_i1 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ccu20025 \CIC1Sin/add_1052_2 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_479 ( input FCI, output F0 );
  wire   GNDI;

  ccu20027 \CIC1Sin/add_1047_cout ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(), 
    .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (FCI => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_480 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d1_i35 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d1_i34 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 \CIC1Sin/add_1047_36 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_481 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d1_i33 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d1_i32 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 \CIC1Sin/add_1047_34 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_482 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d1_i31 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d1_i30 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 \CIC1Sin/add_1047_32 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_483 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d1_i29 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d1_i28 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 \CIC1Sin/add_1047_30 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_484 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d1_i27 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d1_i26 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 \CIC1Sin/add_1047_28 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_485 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d1_i25 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d1_i24 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 \CIC1Sin/add_1047_26 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_486 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d1_i23 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d1_i22 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 \CIC1Sin/add_1047_24 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_487 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d1_i21 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d1_i20 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 \CIC1Sin/add_1047_22 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_488 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d1_i19 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d1_i18 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 \CIC1Sin/add_1047_20 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_489 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d1_i17 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d1_i16 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 \CIC1Sin/add_1047_18 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_490 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d1_i15 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d1_i14 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 \CIC1Sin/add_1047_16 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_491 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d1_i13 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d1_i12 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 \CIC1Sin/add_1047_14 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_492 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d1_i11 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d1_i10 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 \CIC1Sin/add_1047_12 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_493 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d1_i9 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d1_i8 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 \CIC1Sin/add_1047_10 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_494 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d1_i7 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d1_i6 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 \CIC1Sin/add_1047_8 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_495 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d1_i5 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d1_i4 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 \CIC1Sin/add_1047_6 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_496 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d1_i3 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d1_i2 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 \CIC1Sin/add_1047_4 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_497 ( input B1, A1, B0, A0, DI1, CLK, output F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly;

  vmuxregsre \CIC1Sin/d1_i1 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ccu20025 \CIC1Sin/add_1047_2 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_498 ( input B0, A0, DI0, CE, CLK, FCI, output F0, Q0, F1 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly, CE_dly;

  vmuxregsre \CIC1Sin/d7_i0_i35 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ccu20003 \CIC1Sin/add_1137_37 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1());

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_499 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d7_i0_i34 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d7_i0_i33 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Sin/add_1137_35 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_500 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d7_i0_i32 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d7_i0_i31 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Sin/add_1137_33 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_501 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d7_i0_i30 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d7_i0_i29 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Sin/add_1137_31 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_502 ( input B1, A1, B0, A0, DI0, CE, CLK, FCI, output F0, 
    Q0, F1, FCO );
  wire   VCCI, GNDI, DI0_dly, CLK_dly, CE_dly;

  vmuxregsre \CIC1Sin/d7_i0_i27 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ccu20004 \CIC1Sin/add_1137_29 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_503 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d7_i0_i26 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d7_i0_i25 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Sin/add_1137_27 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_504 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d7_i0_i24 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d7_i0_i23 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Sin/add_1137_25 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_505 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d7_i0_i22 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d7_i0_i21 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Sin/add_1137_23 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_506 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d7_i0_i20 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d7_i0_i19 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Sin/add_1137_21 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_507 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d7_i0_i18 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d7_i0_i17 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Sin/add_1137_19 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_508 ( input B0, A0, DI0, CE, CLK, FCI, output F0, Q0, F1 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly, CE_dly;

  vmuxregsre \CIC1Sin/d8_i0_i35 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ccu20003 \CIC1Sin/add_1132_37 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1());

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_509 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d8_i0_i34 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d8_i0_i33 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Sin/add_1132_35 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_510 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d8_i0_i32 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d8_i0_i31 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Sin/add_1132_33 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_511 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d8_i0_i30 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d8_i0_i29 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Sin/add_1132_31 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_512 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d8_i0_i28 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d8_i0_i27 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Sin/add_1132_29 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_513 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d8_i0_i26 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d8_i0_i25 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Sin/add_1132_27 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_514 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d8_i0_i24 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d8_i0_i23 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Sin/add_1132_25 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_515 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d8_i0_i22 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d8_i0_i21 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Sin/add_1132_23 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_516 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d8_i0_i20 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d8_i0_i19 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Sin/add_1132_21 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_517 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d8_i0_i18 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d8_i0_i17 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Sin/add_1132_19 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_518 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d8_i0_i16 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d8_i0_i15 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Sin/add_1132_17 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_519 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d8_i0_i14 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d8_i0_i13 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Sin/add_1132_15 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_520 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d8_i0_i12 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d8_i0_i11 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Sin/add_1132_13 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_521 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d8_i0_i10 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d8_i0_i9 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Sin/add_1132_11 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_522 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d8_i0_i8 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d8_i0_i7 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Sin/add_1132_9 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_523 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d8_i0_i6 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d8_i0_i5 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Sin/add_1132_7 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_524 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d8_i0_i4 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d8_i0_i3 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Sin/add_1132_5 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_525 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d8_i0_i2 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d8_i0_i1 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Sin/add_1132_3 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_526 ( input B1, A1, DI1, CE, CLK, output F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, CE_dly;

  vmuxregsre \CIC1Sin/d8_i0_i0 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ccu20005 \CIC1Sin/add_1132_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_527 ( input B0, A0, FCI, output F1 );
  wire   GNDI;

  ccu20003 \CIC1Sin/add_1102_37 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(F1), 
    .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F1) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_528 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1102_35 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_529 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1102_33 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_530 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1102_31 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_531 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1102_29 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_532 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1102_27 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_533 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1102_25 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_534 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1102_23 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_535 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1102_21 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_536 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1102_19 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_537 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1102_17 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_538 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1102_15 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_539 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1102_13 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_540 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d7_i0_i16 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d7_i0_i15 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Sin/add_1137_17 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_541 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d7_i0_i14 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d7_i0_i13 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Sin/add_1137_15 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_542 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d7_i0_i12 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d7_i0_i11 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Sin/add_1137_13 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_543 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d7_i0_i10 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d7_i0_i9 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Sin/add_1137_11 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_544 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d7_i0_i8 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d7_i0_i7 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Sin/add_1137_9 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_545 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d7_i0_i6 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d7_i0_i5 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Sin/add_1137_7 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_546 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d7_i0_i4 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d7_i0_i3 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Sin/add_1137_5 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_547 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d7_i0_i2 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d7_i0_i1 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Sin/add_1137_3 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_548 ( input B1, A1, DI1, CE, CLK, output F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, CE_dly;

  vmuxregsre \CIC1Sin/d7_i0_i0 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ccu20005 \CIC1Sin/add_1137_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_549 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20022 \CIC1Sin/add_1058_18 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_550 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20022 \CIC1Sin/add_1058_16 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_551 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20022 \CIC1Sin/add_1058_14 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_552 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20022 \CIC1Sin/add_1058_12 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_553 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20022 \CIC1Sin/add_1058_10 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_554 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20022 \CIC1Sin/add_1058_8 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_555 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20022 \CIC1Sin/add_1058_6 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_556 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20022 \CIC1Sin/add_1058_4 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_557 ( input B1, A1, B0, A0, output F1, FCO );
  wire   GNDI;

  ccu20025 \CIC1Sin/add_1058_2 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_558 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d3_i71 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d3_i70 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20021 \CIC1Sin/add_1059_37 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1());

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_559 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d3_i69 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d3_i68 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20021 \CIC1Sin/add_1059_35 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_560 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d3_i67 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d3_i66 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20021 \CIC1Sin/add_1059_33 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_561 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d3_i65 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d3_i64 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20021 \CIC1Sin/add_1059_31 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_562 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d3_i63 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d3_i62 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20021 \CIC1Sin/add_1059_29 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_563 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d3_i61 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d3_i60 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20021 \CIC1Sin/add_1059_27 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_564 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d3_i59 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d3_i58 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20021 \CIC1Sin/add_1059_25 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_565 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d3_i57 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d3_i56 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20021 \CIC1Sin/add_1059_23 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_566 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d3_i55 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d3_i54 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20021 \CIC1Sin/add_1059_21 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_567 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d3_i53 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d3_i52 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20021 \CIC1Sin/add_1059_19 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_568 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d3_i51 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d3_i50 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20021 \CIC1Sin/add_1059_17 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_569 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d3_i49 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d3_i48 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20021 \CIC1Sin/add_1059_15 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_570 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d3_i47 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d3_i46 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20021 \CIC1Sin/add_1059_13 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_571 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d3_i45 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d3_i44 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20021 \CIC1Sin/add_1059_11 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_572 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d3_i43 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d3_i42 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20021 \CIC1Sin/add_1059_9 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_573 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d3_i41 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d3_i40 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20021 \CIC1Sin/add_1059_7 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_574 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d3_i39 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d3_i38 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20021 \CIC1Sin/add_1059_5 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_575 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d3_i37 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d3_i36 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20021 \CIC1Sin/add_1059_3 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_576 ( input A1, output FCO );
  wire   GNDI;

  ccu20002 \CIC1Sin/add_1059_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_577 ( input B1, A1, B0, A0, FCI, output F0, F1 );
  wire   GNDI;

  ccu20022 \CIC1Sin/add_1063_36 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_578 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20022 \CIC1Sin/add_1063_34 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_579 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20022 \CIC1Sin/add_1063_32 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_580 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20022 \CIC1Sin/add_1063_30 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_581 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20022 \CIC1Sin/add_1063_28 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_582 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20022 \CIC1Sin/add_1063_26 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_583 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20022 \CIC1Sin/add_1063_24 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_584 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20022 \CIC1Sin/add_1063_22 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_585 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20022 \CIC1Sin/add_1063_20 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_586 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20022 \CIC1Sin/add_1063_18 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_587 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20022 \CIC1Sin/add_1063_16 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_588 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20022 \CIC1Sin/add_1063_14 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_589 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20022 \CIC1Sin/add_1063_12 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_590 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20022 \CIC1Sin/add_1063_10 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_591 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20022 \CIC1Sin/add_1063_8 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_592 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20022 \CIC1Sin/add_1063_6 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_593 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20022 \CIC1Sin/add_1063_4 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_594 ( input B1, A1, B0, A0, output F1, FCO );
  wire   GNDI;

  ccu20025 \CIC1Sin/add_1063_2 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_595 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d4_i71 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d4_i70 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20021 \CIC1Sin/add_1064_37 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1());

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_596 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d4_i69 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d4_i68 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20021 \CIC1Sin/add_1064_35 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_597 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d4_i67 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d4_i66 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20021 \CIC1Sin/add_1064_33 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_598 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d4_i65 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d4_i64 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20021 \CIC1Sin/add_1064_31 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_599 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d4_i63 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d4_i62 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20021 \CIC1Sin/add_1064_29 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_600 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d4_i61 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d4_i60 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20021 \CIC1Sin/add_1064_27 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_601 ( input B0, A0, FCI, output F0 );
  wire   GNDI;

  ccu20003 \CIC1Sin/add_1043_37 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(), 
    .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_602 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1043_35 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_603 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1043_33 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_604 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d4_i59 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d4_i58 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20021 \CIC1Sin/add_1064_25 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_605 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1043_31 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_606 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1043_29 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_607 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1043_27 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_608 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d4_i57 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d4_i56 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20021 \CIC1Sin/add_1064_23 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_609 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d4_i55 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d4_i54 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20021 \CIC1Sin/add_1064_21 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_610 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1043_25 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_611 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1043_23 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_612 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1043_21 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_613 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d4_i53 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d4_i52 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20021 \CIC1Sin/add_1064_19 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_614 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1043_19 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_615 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1043_17 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_616 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1043_15 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_617 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d4_i51 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d4_i50 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20021 \CIC1Sin/add_1064_17 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_618 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d4_i49 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d4_i48 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20021 \CIC1Sin/add_1064_15 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_619 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1043_13 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_620 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1043_11 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_621 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1043_9 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_622 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d4_i47 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d4_i46 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20021 \CIC1Sin/add_1064_13 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_623 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1043_7 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_624 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1043_5 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_625 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1043_3 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_626 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d4_i45 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d4_i44 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20021 \CIC1Sin/add_1064_11 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_627 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d4_i43 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d4_i42 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20021 \CIC1Sin/add_1064_9 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_628 ( input B1, A1, output F1, FCO );
  wire   GNDI;

  ccu20023 \CIC1Sin/add_1043_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_629 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d6_i0_i71 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d6_i0_i70 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Sin/add_1044_37 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1());

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_630 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d6_i0_i69 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d6_i0_i68 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Sin/add_1044_35 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_631 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d6_i0_i67 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d6_i0_i66 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Sin/add_1044_33 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_632 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d6_i0_i65 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d6_i0_i64 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Sin/add_1044_31 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_633 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d6_i0_i63 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d6_i0_i62 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Sin/add_1044_29 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_634 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d6_i0_i61 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d6_i0_i60 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Sin/add_1044_27 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_635 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d6_i0_i59 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d6_i0_i58 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Sin/add_1044_25 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_636 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d6_i0_i57 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d6_i0_i56 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Sin/add_1044_23 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_637 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d6_i0_i55 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d6_i0_i54 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Sin/add_1044_21 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_638 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d6_i0_i53 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d6_i0_i52 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Sin/add_1044_19 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_639 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d6_i0_i51 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d6_i0_i50 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Sin/add_1044_17 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_640 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d6_i0_i49 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d6_i0_i48 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Sin/add_1044_15 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_641 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d6_i0_i47 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d6_i0_i46 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Sin/add_1044_13 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_642 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d6_i0_i45 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d6_i0_i44 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Sin/add_1044_11 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_643 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d6_i0_i43 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d6_i0_i42 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Sin/add_1044_9 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_644 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d6_i0_i41 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d6_i0_i40 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Sin/add_1044_7 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_645 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d4_i41 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d4_i40 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20021 \CIC1Sin/add_1064_7 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_646 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d6_i0_i39 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d6_i0_i38 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Sin/add_1044_5 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_647 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d6_i0_i37 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d6_i0_i36 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Sin/add_1044_3 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_648 ( input A1, output FCO );
  wire   GNDI;

  ccu20002 \CIC1Sin/add_1044_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_649 ( input B1, A1, B0, A0, FCI, output F0, F1 );
  wire   GNDI;

  ccu20022 \CIC1Sin/add_1048_36 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_650 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20022 \CIC1Sin/add_1048_34 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_651 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20022 \CIC1Sin/add_1048_32 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_652 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d4_i39 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d4_i38 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20021 \CIC1Sin/add_1064_5 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_653 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20022 \CIC1Sin/add_1048_30 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_654 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20022 \CIC1Sin/add_1048_28 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_655 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20022 \CIC1Sin/add_1048_26 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_656 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20022 \CIC1Sin/add_1048_24 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_657 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20022 \CIC1Sin/add_1048_22 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_658 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d4_i37 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d4_i36 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20021 \CIC1Sin/add_1064_3 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_659 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20022 \CIC1Sin/add_1048_20 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_660 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20022 \CIC1Sin/add_1048_18 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_661 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20022 \CIC1Sin/add_1048_16 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_662 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20022 \CIC1Sin/add_1048_14 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_663 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1103_9 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_664 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1103_29 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_665 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1103_25 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_666 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1103_27 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_667 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20022 \CIC1Sin/add_1048_12 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_668 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20022 \CIC1Sin/add_1048_10 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_669 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20022 \CIC1Sin/add_1048_8 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_670 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20022 \CIC1Sin/add_1048_6 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_671 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20022 \CIC1Sin/add_1048_4 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_672 ( input B1, A1, B0, A0, output F1, FCO );
  wire   GNDI;

  ccu20025 \CIC1Sin/add_1048_2 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_673 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d1_i71 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d1_i70 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20021 \CIC1Sin/add_1049_37 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1());

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_674 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d1_i69 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d1_i68 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20021 \CIC1Sin/add_1049_35 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_675 ( input A1, output FCO );
  wire   GNDI;

  ccu20002 \CIC1Sin/add_1064_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_676 ( input B1, A1, B0, A0, FCI, output F0, F1 );
  wire   GNDI;

  ccu20022 \CIC1Sin/add_1068_36 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_677 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20022 \CIC1Sin/add_1068_34 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_678 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20022 \CIC1Sin/add_1068_32 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_679 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20022 \CIC1Sin/add_1068_30 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_680 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20022 \CIC1Sin/add_1068_28 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_681 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20022 \CIC1Sin/add_1068_26 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_682 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20022 \CIC1Sin/add_1068_24 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_683 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20022 \CIC1Sin/add_1068_22 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_684 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20022 \CIC1Sin/add_1068_20 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_685 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20022 \CIC1Sin/add_1068_18 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_686 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20022 \CIC1Sin/add_1068_16 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_687 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20022 \CIC1Sin/add_1068_14 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_688 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20022 \CIC1Sin/add_1068_12 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_689 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20022 \CIC1Sin/add_1068_10 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_690 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20022 \CIC1Sin/add_1068_8 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_691 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20022 \CIC1Sin/add_1068_6 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_692 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20022 \CIC1Sin/add_1068_4 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_693 ( input B1, A1, B0, A0, output F1, FCO );
  wire   GNDI;

  ccu20025 \CIC1Sin/add_1068_2 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_694 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d5_i71 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d5_i70 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20021 \CIC1Sin/add_1069_37 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1());

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_695 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d5_i69 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d5_i68 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20021 \CIC1Sin/add_1069_35 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_696 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d5_i67 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d5_i66 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20021 \CIC1Sin/add_1069_33 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_697 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d5_i65 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d5_i64 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20021 \CIC1Sin/add_1069_31 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_698 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d5_i63 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d5_i62 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20021 \CIC1Sin/add_1069_29 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_699 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d1_i67 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d1_i66 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20021 \CIC1Sin/add_1049_33 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_700 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d5_i61 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d5_i60 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20021 \CIC1Sin/add_1069_27 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_701 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d5_i59 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d5_i58 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20021 \CIC1Sin/add_1069_25 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_702 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d1_i65 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d1_i64 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20021 \CIC1Sin/add_1049_31 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_703 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d1_i63 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d1_i62 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20021 \CIC1Sin/add_1049_29 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_704 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d5_i57 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d5_i56 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20021 \CIC1Sin/add_1069_23 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_705 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d5_i55 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d5_i54 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20021 \CIC1Sin/add_1069_21 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_706 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d5_i53 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d5_i52 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20021 \CIC1Sin/add_1069_19 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_707 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d5_i51 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d5_i50 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20021 \CIC1Sin/add_1069_17 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_708 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d5_i49 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d5_i48 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20021 \CIC1Sin/add_1069_15 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_709 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d5_i47 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d5_i46 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20021 \CIC1Sin/add_1069_13 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_710 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d5_i45 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d5_i44 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20021 \CIC1Sin/add_1069_11 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_711 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d5_i43 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d5_i42 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20021 \CIC1Sin/add_1069_9 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_712 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d5_i41 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d5_i40 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20021 \CIC1Sin/add_1069_7 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_713 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d5_i39 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d5_i38 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20021 \CIC1Sin/add_1069_5 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_714 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d5_i37 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d5_i36 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20021 \CIC1Sin/add_1069_3 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_715 ( input A1, output FCO );
  wire   GNDI;

  ccu20002 \CIC1Sin/add_1069_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_716 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d1_i61 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d1_i60 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20021 \CIC1Sin/add_1049_27 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_717 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d1_i59 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d1_i58 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20021 \CIC1Sin/add_1049_25 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_718 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d1_i57 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d1_i56 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20021 \CIC1Sin/add_1049_23 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_719 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d1_i55 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d1_i54 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20021 \CIC1Sin/add_1049_21 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_720 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d1_i53 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d1_i52 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20021 \CIC1Sin/add_1049_19 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_721 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d1_i51 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d1_i50 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20021 \CIC1Sin/add_1049_17 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_722 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d1_i49 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d1_i48 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20021 \CIC1Sin/add_1049_15 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_723 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d1_i47 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d1_i46 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20021 \CIC1Sin/add_1049_13 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_724 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d1_i45 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d1_i44 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20021 \CIC1Sin/add_1049_11 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ncoGen_SLICE_725 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \ncoGen/phase_accum_i63 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \ncoGen/phase_accum_i62 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 \ncoGen/phase_accum_63__I_0_12_64 ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1());

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ncoGen_SLICE_726 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \ncoGen/phase_accum_i61 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \ncoGen/phase_accum_i60 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 \ncoGen/phase_accum_63__I_0_12_62 ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ncoGen_SLICE_727 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \ncoGen/phase_accum_i59 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \ncoGen/phase_accum_i58 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 \ncoGen/phase_accum_63__I_0_12_60 ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ncoGen_SLICE_728 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \ncoGen/phase_accum_i57 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \ncoGen/phase_accum_i56 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 \ncoGen/phase_accum_63__I_0_12_58 ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ncoGen_SLICE_729 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \ncoGen/phase_accum_i55 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \ncoGen/phase_accum_i54 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 \ncoGen/phase_accum_63__I_0_12_56 ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ncoGen_SLICE_730 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \ncoGen/phase_accum_i53 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \ncoGen/phase_accum_i52 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 \ncoGen/phase_accum_63__I_0_12_54 ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ncoGen_SLICE_731 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \ncoGen/phase_accum_i51 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \ncoGen/phase_accum_i50 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 \ncoGen/phase_accum_63__I_0_12_52 ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ncoGen_SLICE_732 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \ncoGen/phase_accum_i49 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \ncoGen/phase_accum_i48 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 \ncoGen/phase_accum_63__I_0_12_50 ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ncoGen_SLICE_733 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \ncoGen/phase_accum_i47 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \ncoGen/phase_accum_i46 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 \ncoGen/phase_accum_63__I_0_12_48 ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ncoGen_SLICE_734 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \ncoGen/phase_accum_i45 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \ncoGen/phase_accum_i44 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 \ncoGen/phase_accum_63__I_0_12_46 ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ncoGen_SLICE_735 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \ncoGen/phase_accum_i43 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \ncoGen/phase_accum_i42 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 \ncoGen/phase_accum_63__I_0_12_44 ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ncoGen_SLICE_736 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \ncoGen/phase_accum_i41 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \ncoGen/phase_accum_i40 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 \ncoGen/phase_accum_63__I_0_12_42 ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ncoGen_SLICE_737 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \ncoGen/phase_accum_i39 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \ncoGen/phase_accum_i38 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 \ncoGen/phase_accum_63__I_0_12_40 ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ncoGen_SLICE_738 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \ncoGen/phase_accum_i37 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \ncoGen/phase_accum_i36 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 \ncoGen/phase_accum_63__I_0_12_38 ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ncoGen_SLICE_739 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \ncoGen/phase_accum_i35 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \ncoGen/phase_accum_i34 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 \ncoGen/phase_accum_63__I_0_12_36 ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ncoGen_SLICE_740 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \ncoGen/phase_accum_i33 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \ncoGen/phase_accum_i32 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 \ncoGen/phase_accum_63__I_0_12_34 ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ncoGen_SLICE_741 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \ncoGen/phase_accum_i31 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \ncoGen/phase_accum_i30 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 \ncoGen/phase_accum_63__I_0_12_32 ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ncoGen_SLICE_742 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \ncoGen/phase_accum_i29 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \ncoGen/phase_accum_i28 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 \ncoGen/phase_accum_63__I_0_12_30 ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ncoGen_SLICE_743 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \ncoGen/phase_accum_i27 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \ncoGen/phase_accum_i26 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 \ncoGen/phase_accum_63__I_0_12_28 ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ncoGen_SLICE_744 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \ncoGen/phase_accum_i25 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \ncoGen/phase_accum_i24 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 \ncoGen/phase_accum_63__I_0_12_26 ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ncoGen_SLICE_745 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \ncoGen/phase_accum_i23 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \ncoGen/phase_accum_i22 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 \ncoGen/phase_accum_63__I_0_12_24 ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ncoGen_SLICE_746 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \ncoGen/phase_accum_i21 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \ncoGen/phase_accum_i20 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 \ncoGen/phase_accum_63__I_0_12_22 ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ncoGen_SLICE_747 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \ncoGen/phase_accum_i19 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \ncoGen/phase_accum_i18 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 \ncoGen/phase_accum_63__I_0_12_20 ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ncoGen_SLICE_748 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \ncoGen/phase_accum_i17 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \ncoGen/phase_accum_i16 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 \ncoGen/phase_accum_63__I_0_12_18 ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ncoGen_SLICE_749 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \ncoGen/phase_accum_i15 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \ncoGen/phase_accum_i14 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 \ncoGen/phase_accum_63__I_0_12_16 ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ncoGen_SLICE_750 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \ncoGen/phase_accum_i13 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \ncoGen/phase_accum_i12 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 \ncoGen/phase_accum_63__I_0_12_14 ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ncoGen_SLICE_751 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \ncoGen/phase_accum_i11 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \ncoGen/phase_accum_i10 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 \ncoGen/phase_accum_63__I_0_12_12 ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ncoGen_SLICE_752 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \ncoGen/phase_accum_i9 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \ncoGen/phase_accum_i8 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 \ncoGen/phase_accum_63__I_0_12_10 ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ncoGen_SLICE_753 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \ncoGen/phase_accum_i7 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \ncoGen/phase_accum_i6 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 \ncoGen/phase_accum_63__I_0_12_8 ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ncoGen_SLICE_754 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \ncoGen/phase_accum_i5 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \ncoGen/phase_accum_i4 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 \ncoGen/phase_accum_63__I_0_12_6 ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ncoGen_SLICE_755 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \ncoGen/phase_accum_i3 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \ncoGen/phase_accum_i2 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 \ncoGen/phase_accum_63__I_0_12_4 ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ncoGen_SLICE_756 ( input B1, A1, B0, A0, DI1, CLK, output F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly;

  vmuxregsre \ncoGen/phase_accum_i1 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ccu20025 \ncoGen/phase_accum_63__I_0_12_2 ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), 
    .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_757 ( input B1, A1, B0, A0, FCI, output F0, F1 );
  wire   GNDI;

  ccu20022 \AMDemodulator1/add_457_13 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_758 ( input B1, A1, B0, A0, FCI, output F0, F1, 
    FCO );
  wire   GNDI;

  ccu20004 \AMDemodulator1/add_457_11 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_759 ( input C1, B1, A1, C0, B0, A0, FCI, output F0, 
    F1, FCO );
  wire   GNDI;

  ccu20028 \AMDemodulator1/add_457_9 ( .A0(A0), .B0(B0), .C0(C0), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(C1), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20028 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h6969;
  defparam inst1.INIT1 = 16'h6969;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module AMDemodulator1_SLICE_760 ( input C1, B1, A1, B0, A0, FCI, output F0, F1, 
    FCO );
  wire   GNDI;

  ccu20029 \AMDemodulator1/add_457_7 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(C1), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20029 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h5999;
  defparam inst1.INIT1 = 16'h6969;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module AMDemodulator1_SLICE_761 ( input C1, B1, A1, A0, FCI, output F0, F1, 
    FCO );
  wire   GNDI;

  ccu20030 \AMDemodulator1/add_457_5 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(C1), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20030 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h5aaa;
  defparam inst1.INIT1 = 16'h9696;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module AMDemodulator1_SLICE_762 ( input A1, B0, A0, FCI, output F1, FCO );
  wire   GNDI;

  ccu20031 \AMDemodulator1/add_457_3 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20031 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h5666;
  defparam inst1.INIT1 = 16'h5555;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module AMDemodulator1_SLICE_763 ( input A1, output FCO );
  wire   GNDI;

  ccu20019 \AMDemodulator1/add_457_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), 
    .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_764 ( input A1, B0, A0, FCI, output F1 );
  wire   GNDI;

  ccu20032 \AMDemodulator1/sub_78_add_2_18 ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), 
    .S1(F1), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20032 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h5999;
  defparam inst1.INIT1 = 16'h5555;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module AMDemodulator1_SLICE_765 ( input FCI, output F0 );
  wire   GNDI;

  ccu20033 \AMDemodulator1/add_3132_8 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (FCI => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20033 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h0fff;
  defparam inst1.INIT1 = 16'h0000;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module AMDemodulator1_SLICE_766 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \AMDemodulator1/sub_78_add_2_16 ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_767 ( input B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20034 \AMDemodulator1/add_3132_6 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20034 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h5666;
  defparam inst1.INIT1 = 16'h0fff;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module AMDemodulator1_SLICE_768 ( input A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20035 \AMDemodulator1/add_3132_4 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20035 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h5666;
  defparam inst1.INIT1 = 16'h0555;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module AMDemodulator1_SLICE_769 ( input B0, A0, output F1, FCO );
  wire   GNDI;

  ccu20036 \AMDemodulator1/add_3132_2 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20036 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h1000;
  defparam inst1.INIT1 = 16'h0fff;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module AMDemodulator1_SLICE_770 ( input A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20031 \AMDemodulator1/sub_78_add_2_14 ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), 
    .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_771 ( input B1, A1, B0, A0, FCI, output F0, F1 );
  wire   GNDI;

  ccu20022 \AMDemodulator1/add_417_17 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_772 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20022 \AMDemodulator1/sub_78_add_2_12 ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_773 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20022 \AMDemodulator1/sub_78_add_2_10 ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_774 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20022 \AMDemodulator1/sub_78_add_2_8 ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_775 ( input B0, A0, DI0, CLK, FCI, output F0, Q0 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly;

  vmuxregsre \AMDemodulator1/ISquare_i25 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ccu20037 \AMDemodulator1/MultResult1_23__I_0_26 ( .A0(A0), .B0(B0), 
    .C0(GNDI), .D0(GNDI), .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), 
    .S0(F0), .S1(), .CO1());

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ccu20037 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h5666;
  defparam inst1.INIT1 = 16'h0000;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module AMDemodulator1_SLICE_776 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \AMDemodulator1/ISquare_i24 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/ISquare_i23 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 \AMDemodulator1/MultResult1_23__I_0_24 ( .A0(A0), .B0(B0), 
    .C0(GNDI), .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_777 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \AMDemodulator1/ISquare_i22 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/ISquare_i21 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 \AMDemodulator1/MultResult1_23__I_0_22 ( .A0(A0), .B0(B0), 
    .C0(GNDI), .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_778 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \AMDemodulator1/ISquare_i20 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/ISquare_i19 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 \AMDemodulator1/MultResult1_23__I_0_20 ( .A0(A0), .B0(B0), 
    .C0(GNDI), .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_779 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \AMDemodulator1/ISquare_i18 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/ISquare_i17 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 \AMDemodulator1/MultResult1_23__I_0_18 ( .A0(A0), .B0(B0), 
    .C0(GNDI), .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_780 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \AMDemodulator1/ISquare_i16 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/ISquare_i15 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 \AMDemodulator1/MultResult1_23__I_0_16 ( .A0(A0), .B0(B0), 
    .C0(GNDI), .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_781 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \AMDemodulator1/ISquare_i14 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/ISquare_i13 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 \AMDemodulator1/MultResult1_23__I_0_14 ( .A0(A0), .B0(B0), 
    .C0(GNDI), .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_782 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \AMDemodulator1/ISquare_i12 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/ISquare_i11 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 \AMDemodulator1/MultResult1_23__I_0_12 ( .A0(A0), .B0(B0), 
    .C0(GNDI), .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_783 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \AMDemodulator1/ISquare_i10 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/ISquare_i9 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 \AMDemodulator1/MultResult1_23__I_0_10 ( .A0(A0), .B0(B0), 
    .C0(GNDI), .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_784 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \AMDemodulator1/ISquare_i8 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/ISquare_i7 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 \AMDemodulator1/MultResult1_23__I_0_8 ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_785 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \AMDemodulator1/ISquare_i6 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/ISquare_i5 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 \AMDemodulator1/MultResult1_23__I_0_6 ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_786 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \AMDemodulator1/ISquare_i4 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/ISquare_i3 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 \AMDemodulator1/MultResult1_23__I_0_4 ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_787 ( input B1, A1, B0, A0, DI1, CLK, output F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly;

  vmuxregsre \AMDemodulator1/ISquare_i2 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ccu20025 \AMDemodulator1/MultResult1_23__I_0_2 ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), 
    .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_788 ( input B1, A1, B0, A0, FCI, output F0, F1 );
  wire   GNDI;

  ccu20022 \AMDemodulator1/add_517_11 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_789 ( input B1, A1, C0, B0, A0, FCI, output F0, F1, 
    FCO );
  wire   GNDI;

  ccu20038 \AMDemodulator1/add_517_9 ( .A0(A0), .B0(B0), .C0(C0), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20038 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h6969;
  defparam inst1.INIT1 = 16'h5999;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module AMDemodulator1_SLICE_790 ( input C1, B1, A1, C0, B0, A0, FCI, output F0, 
    F1, FCO );
  wire   GNDI;

  ccu20028 \AMDemodulator1/add_517_7 ( .A0(A0), .B0(B0), .C0(C0), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(C1), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_791 ( input B1, A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20039 \AMDemodulator1/add_517_5 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20039 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h5aaa;
  defparam inst1.INIT1 = 16'h5999;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module AMDemodulator1_SLICE_792 ( input A1, B0, A0, FCI, output F1, FCO );
  wire   GNDI;

  ccu20031 \AMDemodulator1/add_517_3 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_793 ( input A1, output FCO );
  wire   GNDI;

  ccu20019 \AMDemodulator1/add_517_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), 
    .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_794 ( input B1, A1, B0, A0, FCI, output F0, F1, 
    FCO );
  wire   GNDI;

  ccu20004 \AMDemodulator1/add_417_15 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_795 ( input B1, A1, B0, A0, FCI, output F0, F1, 
    FCO );
  wire   GNDI;

  ccu20004 \AMDemodulator1/add_417_13 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_796 ( input C1, B1, A1, C0, B0, A0, FCI, output F0, 
    F1, FCO );
  wire   GNDI;

  ccu20028 \AMDemodulator1/add_417_11 ( .A0(A0), .B0(B0), .C0(C0), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(C1), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_797 ( input C1, B1, A1, B0, A0, FCI, output F0, F1, 
    FCO );
  wire   GNDI;

  ccu20029 \AMDemodulator1/add_417_9 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(C1), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_798 ( input C1, B1, A1, C0, B0, A0, FCI, output F0, 
    F1, FCO );
  wire   GNDI;

  ccu20040 \AMDemodulator1/add_417_7 ( .A0(A0), .B0(B0), .C0(C0), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(C1), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20040 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h9696;
  defparam inst1.INIT1 = 16'h9696;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module AMDemodulator1_SLICE_799 ( input C1, B1, A1, A0, FCI, output F0, F1, 
    FCO );
  wire   GNDI;

  ccu20030 \AMDemodulator1/add_417_5 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(C1), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_800 ( input A1, B0, A0, FCI, output F1, FCO );
  wire   GNDI;

  ccu20031 \AMDemodulator1/add_417_3 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_801 ( input A1, output FCO );
  wire   GNDI;

  ccu20019 \AMDemodulator1/add_417_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), 
    .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_802 ( input A1, B0, A0, FCI, output F1 );
  wire   GNDI;

  ccu20041 \AMDemodulator1/add_144_17 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(F1), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20041 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h5666;
  defparam inst1.INIT1 = 16'h5aaa;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module AMDemodulator1_SLICE_803 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20022 \AMDemodulator1/sub_78_add_2_6 ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_804 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20022 \AMDemodulator1/add_144_15 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_805 ( input A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20042 \AMDemodulator1/add_144_13 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20042 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h5999;
  defparam inst1.INIT1 = 16'h5aaa;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module AMDemodulator1_SLICE_806 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \AMDemodulator1/add_144_11 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_807 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \AMDemodulator1/add_144_9 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_808 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \AMDemodulator1/add_144_7 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_809 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \AMDemodulator1/add_144_5 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_810 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \AMDemodulator1/add_144_3 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_811 ( input B1, A1, A0, output FCO );
  wire   GNDI;

  ccu20043 \AMDemodulator1/add_144_1 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20043 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h5000;
  defparam inst1.INIT1 = 16'h5666;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module AMDemodulator1_SLICE_812 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20022 \AMDemodulator1/sub_78_add_2_4 ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_813 ( input B1, A1, A0, output FCO );
  wire   GNDI;

  ccu20044 \AMDemodulator1/sub_78_add_2_2 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20044 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h5000;
  defparam inst1.INIT1 = 16'h5999;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module AMDemodulator1_SLICE_814 ( input B1, A1, B0, A0, FCI, output F0, F1 );
  wire   GNDI;

  ccu20004 \AMDemodulator1/add_577_19 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_815 ( input B1, A1, B0, A0, FCI, output F0, F1, 
    FCO );
  wire   GNDI;

  ccu20004 \AMDemodulator1/add_577_17 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_816 ( input C1, B1, A1, C0, B0, A0, FCI, output F0, 
    F1, FCO );
  wire   GNDI;

  ccu20028 \AMDemodulator1/add_577_15 ( .A0(A0), .B0(B0), .C0(C0), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(C1), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_817 ( input C1, B1, A1, B0, A0, FCI, output F0, F1, 
    FCO );
  wire   GNDI;

  ccu20029 \AMDemodulator1/add_577_13 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(C1), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_818 ( input C1, B1, A1, C0, B0, A0, FCI, output F0, 
    F1, FCO );
  wire   GNDI;

  ccu20040 \AMDemodulator1/add_577_11 ( .A0(A0), .B0(B0), .C0(C0), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(C1), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_819 ( input C1, B1, A1, C0, B0, A0, FCI, output F0, 
    F1, FCO );
  wire   GNDI;

  ccu20040 \AMDemodulator1/add_577_9 ( .A0(A0), .B0(B0), .C0(C0), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(C1), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_820 ( input C1, B1, A1, C0, B0, A0, FCI, output F0, 
    F1, FCO );
  wire   GNDI;

  ccu20040 \AMDemodulator1/add_577_7 ( .A0(A0), .B0(B0), .C0(C0), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(C1), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_821 ( input C1, B1, A1, A0, FCI, output F0, F1, 
    FCO );
  wire   GNDI;

  ccu20030 \AMDemodulator1/add_577_5 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(C1), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_822 ( input A1, B0, A0, FCI, output F1, FCO );
  wire   GNDI;

  ccu20031 \AMDemodulator1/add_577_3 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_823 ( input A1, output FCO );
  wire   GNDI;

  ccu20019 \AMDemodulator1/add_577_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), 
    .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_824 ( input B1, A1, B0, A0, FCI, output F0, F1 );
  wire   GNDI;

  ccu20022 \AMDemodulator1/add_497_19 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_825 ( input B1, A1, B0, A0, FCI, output F0, F1, 
    FCO );
  wire   GNDI;

  ccu20004 \AMDemodulator1/add_497_17 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_826 ( input B1, A1, B0, A0, FCI, output F0, F1, 
    FCO );
  wire   GNDI;

  ccu20004 \AMDemodulator1/add_497_15 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_827 ( input B1, A1, C0, B0, A0, FCI, output F0, F1, 
    FCO );
  wire   GNDI;

  ccu20038 \AMDemodulator1/add_497_13 ( .A0(A0), .B0(B0), .C0(C0), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_828 ( input C1, B1, A1, C0, B0, A0, FCI, output F0, 
    F1, FCO );
  wire   GNDI;

  ccu20028 \AMDemodulator1/add_497_11 ( .A0(A0), .B0(B0), .C0(C0), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(C1), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_829 ( input B1, A1, C0, B0, A0, FCI, output F0, F1, 
    FCO );
  wire   GNDI;

  ccu20045 \AMDemodulator1/add_497_9 ( .A0(A0), .B0(B0), .C0(C0), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20045 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h9696;
  defparam inst1.INIT1 = 16'h5999;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module AMDemodulator1_SLICE_830 ( input C1, B1, A1, C0, B0, A0, FCI, output F0, 
    F1, FCO );
  wire   GNDI;

  ccu20040 \AMDemodulator1/add_497_7 ( .A0(A0), .B0(B0), .C0(C0), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(C1), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_831 ( input C1, B1, A1, A0, FCI, output F0, F1, 
    FCO );
  wire   GNDI;

  ccu20030 \AMDemodulator1/add_497_5 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(C1), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_832 ( input A1, B0, A0, FCI, output F1, FCO );
  wire   GNDI;

  ccu20031 \AMDemodulator1/add_497_3 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_833 ( input A1, output FCO );
  wire   GNDI;

  ccu20019 \AMDemodulator1/add_497_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), 
    .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_834 ( input B1, A1, B0, A0, FCI, output F0, F1 );
  wire   GNDI;

  ccu20004 \AMDemodulator1/add_617_19 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_835 ( input B1, A1, B0, A0, FCI, output F0, F1, 
    FCO );
  wire   GNDI;

  ccu20004 \AMDemodulator1/add_617_17 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_836 ( input B1, A1, C0, B0, A0, FCI, output F0, F1, 
    FCO );
  wire   GNDI;

  ccu20038 \AMDemodulator1/add_617_15 ( .A0(A0), .B0(B0), .C0(C0), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_837 ( input C1, B1, A1, C0, B0, A0, FCI, output F0, 
    F1, FCO );
  wire   GNDI;

  ccu20028 \AMDemodulator1/add_617_13 ( .A0(A0), .B0(B0), .C0(C0), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(C1), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_838 ( input B1, A1, C0, B0, A0, FCI, output F0, F1, 
    FCO );
  wire   GNDI;

  ccu20045 \AMDemodulator1/add_617_11 ( .A0(A0), .B0(B0), .C0(C0), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_839 ( input C1, B1, A1, C0, B0, A0, FCI, output F0, 
    F1, FCO );
  wire   GNDI;

  ccu20040 \AMDemodulator1/add_617_9 ( .A0(A0), .B0(B0), .C0(C0), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(C1), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_840 ( input C1, B1, A1, C0, B0, A0, FCI, output F0, 
    F1, FCO );
  wire   GNDI;

  ccu20040 \AMDemodulator1/add_617_7 ( .A0(A0), .B0(B0), .C0(C0), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(C1), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_841 ( input C1, B1, A1, A0, FCI, output F0, F1, 
    FCO );
  wire   GNDI;

  ccu20030 \AMDemodulator1/add_617_5 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(C1), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_842 ( input A1, B0, A0, FCI, output F1, FCO );
  wire   GNDI;

  ccu20031 \AMDemodulator1/add_617_3 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_843 ( input A1, output FCO );
  wire   GNDI;

  ccu20019 \AMDemodulator1/add_617_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), 
    .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_844 ( input B1, A1, B0, A0, FCI, output F0, F1 );
  wire   GNDI;

  ccu20004 \AMDemodulator1/add_657_19 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_845 ( input B1, A1, B0, A0, FCI, output F0, F1, 
    FCO );
  wire   GNDI;

  ccu20004 \AMDemodulator1/add_657_17 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_846 ( input B1, A1, B0, A0, FCI, output F0, F1, 
    FCO );
  wire   GNDI;

  ccu20004 \AMDemodulator1/add_657_15 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_847 ( input C1, B1, A1, C0, B0, A0, FCI, output F0, 
    F1, FCO );
  wire   GNDI;

  ccu20028 \AMDemodulator1/add_657_13 ( .A0(A0), .B0(B0), .C0(C0), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(C1), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_848 ( input C1, B1, A1, B0, A0, FCI, output F0, F1, 
    FCO );
  wire   GNDI;

  ccu20029 \AMDemodulator1/add_657_11 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(C1), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_849 ( input C1, B1, A1, C0, B0, A0, FCI, output F0, 
    F1, FCO );
  wire   GNDI;

  ccu20040 \AMDemodulator1/add_657_9 ( .A0(A0), .B0(B0), .C0(C0), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(C1), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_850 ( input C1, B1, A1, C0, B0, A0, FCI, output F0, 
    F1, FCO );
  wire   GNDI;

  ccu20040 \AMDemodulator1/add_657_7 ( .A0(A0), .B0(B0), .C0(C0), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(C1), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_851 ( input C1, B1, A1, A0, FCI, output F0, F1, 
    FCO );
  wire   GNDI;

  ccu20030 \AMDemodulator1/add_657_5 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(C1), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_852 ( input A1, B0, A0, FCI, output F1, FCO );
  wire   GNDI;

  ccu20031 \AMDemodulator1/add_657_3 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_853 ( input A1, output FCO );
  wire   GNDI;

  ccu20019 \AMDemodulator1/add_657_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), 
    .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_854 ( input B1, A1, B0, A0, FCI, output F0, F1 );
  wire   GNDI;

  ccu20004 \AMDemodulator1/add_537_19 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_855 ( input C1, B1, A1, C0, B0, A0, FCI, output F0, 
    F1, FCO );
  wire   GNDI;

  ccu20028 \AMDemodulator1/add_537_17 ( .A0(A0), .B0(B0), .C0(C0), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(C1), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_856 ( input C1, B1, A1, B0, A0, FCI, output F0, F1, 
    FCO );
  wire   GNDI;

  ccu20029 \AMDemodulator1/add_537_15 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(C1), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_857 ( input C1, B1, A1, C0, B0, A0, FCI, output F0, 
    F1, FCO );
  wire   GNDI;

  ccu20040 \AMDemodulator1/add_537_13 ( .A0(A0), .B0(B0), .C0(C0), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(C1), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_858 ( input C1, B1, A1, C0, B0, A0, FCI, output F0, 
    F1, FCO );
  wire   GNDI;

  ccu20040 \AMDemodulator1/add_537_11 ( .A0(A0), .B0(B0), .C0(C0), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(C1), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_859 ( input C1, B1, A1, C0, B0, A0, FCI, output F0, 
    F1, FCO );
  wire   GNDI;

  ccu20040 \AMDemodulator1/add_537_9 ( .A0(A0), .B0(B0), .C0(C0), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(C1), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_860 ( input C1, B1, A1, C0, B0, A0, FCI, output F0, 
    F1, FCO );
  wire   GNDI;

  ccu20040 \AMDemodulator1/add_537_7 ( .A0(A0), .B0(B0), .C0(C0), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(C1), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_861 ( input C1, B1, A1, A0, FCI, output F0, F1, 
    FCO );
  wire   GNDI;

  ccu20030 \AMDemodulator1/add_537_5 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(C1), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_862 ( input A1, B0, A0, FCI, output F1, FCO );
  wire   GNDI;

  ccu20031 \AMDemodulator1/add_537_3 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_863 ( input A1, output FCO );
  wire   GNDI;

  ccu20019 \AMDemodulator1/add_537_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), 
    .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_864 ( input B1, A1, B0, A0, FCI, output F0, F1 );
  wire   GNDI;

  ccu20004 \AMDemodulator1/add_557_19 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_865 ( input B1, A1, C0, B0, A0, FCI, output F0, F1, 
    FCO );
  wire   GNDI;

  ccu20038 \AMDemodulator1/add_557_17 ( .A0(A0), .B0(B0), .C0(C0), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_866 ( input C1, B1, A1, C0, B0, A0, FCI, output F0, 
    F1, FCO );
  wire   GNDI;

  ccu20028 \AMDemodulator1/add_557_15 ( .A0(A0), .B0(B0), .C0(C0), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(C1), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_867 ( input B1, A1, C0, B0, A0, FCI, output F0, F1, 
    FCO );
  wire   GNDI;

  ccu20045 \AMDemodulator1/add_557_13 ( .A0(A0), .B0(B0), .C0(C0), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_868 ( input C1, B1, A1, C0, B0, A0, FCI, output F0, 
    F1, FCO );
  wire   GNDI;

  ccu20040 \AMDemodulator1/add_557_11 ( .A0(A0), .B0(B0), .C0(C0), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(C1), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_869 ( input C1, B1, A1, C0, B0, A0, FCI, output F0, 
    F1, FCO );
  wire   GNDI;

  ccu20040 \AMDemodulator1/add_557_9 ( .A0(A0), .B0(B0), .C0(C0), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(C1), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_870 ( input C1, B1, A1, C0, B0, A0, FCI, output F0, 
    F1, FCO );
  wire   GNDI;

  ccu20040 \AMDemodulator1/add_557_7 ( .A0(A0), .B0(B0), .C0(C0), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(C1), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_871 ( input C1, B1, A1, A0, FCI, output F0, F1, 
    FCO );
  wire   GNDI;

  ccu20030 \AMDemodulator1/add_557_5 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(C1), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_872 ( input A1, B0, A0, FCI, output F1, FCO );
  wire   GNDI;

  ccu20031 \AMDemodulator1/add_557_3 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_873 ( input A1, output FCO );
  wire   GNDI;

  ccu20019 \AMDemodulator1/add_557_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), 
    .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_874 ( input B1, A1, B0, A0, FCI, output F0, F1 );
  wire   GNDI;

  ccu20022 \AMDemodulator1/add_437_15 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_875 ( input B1, A1, B0, A0, FCI, output F0, F1, 
    FCO );
  wire   GNDI;

  ccu20004 \AMDemodulator1/add_437_13 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_876 ( input B1, A1, C0, B0, A0, FCI, output F0, F1, 
    FCO );
  wire   GNDI;

  ccu20038 \AMDemodulator1/add_437_11 ( .A0(A0), .B0(B0), .C0(C0), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_877 ( input C1, B1, A1, C0, B0, A0, FCI, output F0, 
    F1, FCO );
  wire   GNDI;

  ccu20028 \AMDemodulator1/add_437_9 ( .A0(A0), .B0(B0), .C0(C0), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(C1), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_878 ( input B1, A1, C0, B0, A0, FCI, output F0, F1, 
    FCO );
  wire   GNDI;

  ccu20045 \AMDemodulator1/add_437_7 ( .A0(A0), .B0(B0), .C0(C0), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_879 ( input C1, B1, A1, A0, FCI, output F0, F1, 
    FCO );
  wire   GNDI;

  ccu20030 \AMDemodulator1/add_437_5 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(C1), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_880 ( input A1, B0, A0, FCI, output F1, FCO );
  wire   GNDI;

  ccu20031 \AMDemodulator1/add_437_3 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_881 ( input A1, output FCO );
  wire   GNDI;

  ccu20019 \AMDemodulator1/add_437_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), 
    .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_882 ( output FCO );
  wire   GNDI;

  alu2_mult \AMDemodulator1/Multiplier2/Multiplier_0_cin_lr_add_0 ( .A0(GNDI), 
    .A1(GNDI), .B0(GNDI), .B1(GNDI), .CI(), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_883 ( input FCI, output F0 );
  wire   GNDI;

  alu2_mult \AMDemodulator1/Multiplier2/Multiplier_0_Cadd_0_6 ( .A0(GNDI), 
    .A1(GNDI), .B0(GNDI), .B1(GNDI), .CI(FCI), .S0(F0), .S1(), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (FCI => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_884 ( output FCO );
  wire   GNDI;

  alu2_mult \AMDemodulator1/Multiplier2/Multiplier_0_cin_lr_add_2 ( .A0(GNDI), 
    .A1(GNDI), .B0(GNDI), .B1(GNDI), .CI(), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_885 ( input FCI, output F0 );
  wire   GNDI;

  alu2_mult \AMDemodulator1/Multiplier2/Multiplier_0_Cadd_2_6 ( .A0(GNDI), 
    .A1(GNDI), .B0(GNDI), .B1(GNDI), .CI(FCI), .S0(F0), .S1(), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (FCI => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_886 ( output FCO );
  wire   GNDI;

  alu2_mult \AMDemodulator1/Multiplier2/Multiplier_0_cin_lr_add_4 ( .A0(GNDI), 
    .A1(GNDI), .B0(GNDI), .B1(GNDI), .CI(), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_887 ( input FCI, output F0 );
  wire   GNDI;

  alu2_mult \AMDemodulator1/Multiplier2/Multiplier_0_Cadd_4_6 ( .A0(GNDI), 
    .A1(GNDI), .B0(GNDI), .B1(GNDI), .CI(FCI), .S0(F0), .S1(), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (FCI => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_888 ( output FCO );
  wire   GNDI;

  alu2_mult \AMDemodulator1/Multiplier2/Multiplier_0_cin_lr_add_6 ( .A0(GNDI), 
    .A1(GNDI), .B0(GNDI), .B1(GNDI), .CI(), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_889 ( input FCI, output F0 );
  wire   GNDI;

  alu2_mult \AMDemodulator1/Multiplier2/Multiplier_0_Cadd_6_6 ( .A0(GNDI), 
    .A1(GNDI), .B0(GNDI), .B1(GNDI), .CI(FCI), .S0(F0), .S1(), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (FCI => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_890 ( output FCO );
  wire   GNDI;

  alu2_mult \AMDemodulator1/Multiplier2/Multiplier_0_cin_lr_add_8 ( .A0(GNDI), 
    .A1(GNDI), .B0(GNDI), .B1(GNDI), .CI(), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_891 ( input FCI, output F0 );
  wire   GNDI;

  alu2_mult \AMDemodulator1/Multiplier2/Multiplier_0_Cadd_8_6 ( .A0(GNDI), 
    .A1(GNDI), .B0(GNDI), .B1(GNDI), .CI(FCI), .S0(F0), .S1(), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (FCI => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_892 ( output FCO );
  wire   GNDI;

  alu2_mult \AMDemodulator1/Multiplier2/Multiplier_0_cin_lr_add_10 ( .A0(GNDI), 
    .A1(GNDI), .B0(GNDI), .B1(GNDI), .CI(), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_893 ( input FCI, output F0 );
  wire   VCCI, GNDI;

  alu2_mult \AMDemodulator1/Multiplier2/Multiplier_0_Cadd_10_6 ( .A0(VCCI), 
    .A1(GNDI), .B0(GNDI), .B1(GNDI), .CI(FCI), .S0(F0), .S1(), .CO1());
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (FCI => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_894 ( input B1, A1, DI1, CLK, output 
    F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly;

  vmuxregsre \AMDemodulator1/Multiplier2/FF_49 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  alu2_mult \AMDemodulator1/Multiplier2/Cadd_Multiplier_0_0_1 ( .A0(GNDI), 
    .A1(A1), .B0(GNDI), .B1(B1), .CI(), .S0(), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_895 ( input B1, A1, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \AMDemodulator1/Multiplier2/FF_47 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier2/FF_48 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  alu2_mult \AMDemodulator1/Multiplier2/Multiplier_0_add_0_2 ( .A0(A0), 
    .A1(A1), .B0(B0), .B1(B1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_896 ( input B1, A1, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \AMDemodulator1/Multiplier2/FF_45 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier2/FF_46 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  alu2_mult \AMDemodulator1/Multiplier2/Multiplier_0_add_0_3 ( .A0(A0), 
    .A1(A1), .B0(B0), .B1(B1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_897 ( input B1, A1, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \AMDemodulator1/Multiplier2/FF_43 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier2/FF_44 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  alu2_mult \AMDemodulator1/Multiplier2/Multiplier_0_add_0_4 ( .A0(A0), 
    .A1(A1), .B0(B0), .B1(B1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_898 ( input B1, A1, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \AMDemodulator1/Multiplier2/FF_41 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier2/FF_42 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  alu2_mult \AMDemodulator1/Multiplier2/Multiplier_0_add_0_5 ( .A0(A0), 
    .A1(A1), .B0(B0), .B1(B1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_899 ( input B1, A1, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \AMDemodulator1/Multiplier2/FF_39 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier2/FF_40 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  alu2_mult \AMDemodulator1/Multiplier2/Multiplier_0_add_0_6 ( .A0(A0), 
    .A1(A1), .B0(B0), .B1(B1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_900 ( input A1, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \AMDemodulator1/Multiplier2/FF_37 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier2/FF_38 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  alu2_mult \AMDemodulator1/Multiplier2/Multiplier_0_add_0_7 ( .A0(A0), 
    .A1(A1), .B0(B0), .B1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_901 ( input A0, DI1, DI0, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \AMDemodulator1/Multiplier2/FF_35 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier2/FF_36 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  alu2_mult \AMDemodulator1/Multiplier2/Multiplier_0_add_0_8 ( .A0(A0), 
    .A1(GNDI), .B0(GNDI), .B1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_902 ( input DI0, CLK, FCI, output F0, 
    Q0 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly;

  vmuxregsre \AMDemodulator1/Multiplier2/FF_34 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  alu2_mult \AMDemodulator1/Multiplier2/Cadd_Multiplier_0_0_9 ( .A0(GNDI), 
    .A1(GNDI), .B0(GNDI), .B1(GNDI), .CI(FCI), .S0(F0), .S1(), .CO1());

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_903 ( input B1, A1, DI1, CLK, output 
    F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly;

  vmuxregsre \AMDemodulator1/Multiplier2/FF_31 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  alu2_mult \AMDemodulator1/Multiplier2/Cadd_Multiplier_0_1_1 ( .A0(GNDI), 
    .A1(A1), .B0(GNDI), .B1(B1), .CI(), .S0(), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_904 ( input B1, A1, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \AMDemodulator1/Multiplier2/FF_29 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier2/FF_30 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  alu2_mult \AMDemodulator1/Multiplier2/Multiplier_0_add_1_2 ( .A0(A0), 
    .A1(A1), .B0(B0), .B1(B1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_905 ( input B1, A1, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \AMDemodulator1/Multiplier2/FF_27 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier2/FF_28 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  alu2_mult \AMDemodulator1/Multiplier2/Multiplier_0_add_1_3 ( .A0(A0), 
    .A1(A1), .B0(B0), .B1(B1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_906 ( input B1, A1, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \AMDemodulator1/Multiplier2/FF_25 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier2/FF_26 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  alu2_mult \AMDemodulator1/Multiplier2/Multiplier_0_add_1_4 ( .A0(A0), 
    .A1(A1), .B0(B0), .B1(B1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_907 ( input B1, A1, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \AMDemodulator1/Multiplier2/FF_23 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier2/FF_24 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  alu2_mult \AMDemodulator1/Multiplier2/Multiplier_0_add_1_5 ( .A0(A0), 
    .A1(A1), .B0(B0), .B1(B1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_908 ( input B1, A1, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \AMDemodulator1/Multiplier2/FF_21 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier2/FF_22 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  alu2_mult \AMDemodulator1/Multiplier2/Multiplier_0_add_1_6 ( .A0(A0), 
    .A1(A1), .B0(B0), .B1(B1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_909 ( input A1, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \AMDemodulator1/Multiplier2/FF_19 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier2/FF_20 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  alu2_mult \AMDemodulator1/Multiplier2/Multiplier_0_add_1_7 ( .A0(A0), 
    .A1(A1), .B0(B0), .B1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_910 ( input A0, DI1, DI0, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \AMDemodulator1/Multiplier2/FF_17 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier2/FF_18 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  alu2_mult \AMDemodulator1/Multiplier2/Multiplier_0_add_1_8 ( .A0(A0), 
    .A1(GNDI), .B0(GNDI), .B1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_911 ( input DI0, CLK, FCI, output F0, 
    Q0 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly;

  vmuxregsre \AMDemodulator1/Multiplier2/FF_16 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  alu2_mult \AMDemodulator1/Multiplier2/Cadd_Multiplier_0_1_9 ( .A0(GNDI), 
    .A1(GNDI), .B0(GNDI), .B1(GNDI), .CI(FCI), .S0(F0), .S1(), .CO1());

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_912 ( input B1, A1, DI1, CLK, output 
    F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly;

  vmuxregsre \AMDemodulator1/Multiplier2/FF_13 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  alu2_mult \AMDemodulator1/Multiplier2/Cadd_Multiplier_0_2_1 ( .A0(GNDI), 
    .A1(A1), .B0(GNDI), .B1(B1), .CI(), .S0(), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_913 ( input B1, A1, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \AMDemodulator1/Multiplier2/FF_11 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier2/FF_12 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  alu2_mult \AMDemodulator1/Multiplier2/Multiplier_0_add_2_2 ( .A0(A0), 
    .A1(A1), .B0(B0), .B1(B1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_914 ( input B1, A1, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \AMDemodulator1/Multiplier2/FF_9 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier2/FF_10 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  alu2_mult \AMDemodulator1/Multiplier2/Multiplier_0_add_2_3 ( .A0(A0), 
    .A1(A1), .B0(B0), .B1(B1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_915 ( input B1, A1, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \AMDemodulator1/Multiplier2/FF_7 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier2/FF_8 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  alu2_mult \AMDemodulator1/Multiplier2/Multiplier_0_add_2_4 ( .A0(A0), 
    .A1(A1), .B0(B0), .B1(B1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_916 ( input B1, A1, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \AMDemodulator1/Multiplier2/FF_5 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier2/FF_6 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  alu2_mult \AMDemodulator1/Multiplier2/Multiplier_0_add_2_5 ( .A0(A0), 
    .A1(A1), .B0(B0), .B1(B1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_917 ( input B1, A1, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \AMDemodulator1/Multiplier2/FF_3 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier2/FF_4 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  alu2_mult \AMDemodulator1/Multiplier2/Multiplier_0_add_2_6 ( .A0(A0), 
    .A1(A1), .B0(B0), .B1(B1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_918 ( input A1, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \AMDemodulator1/Multiplier2/FF_1 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier2/FF_2 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  alu2_mult \AMDemodulator1/Multiplier2/Multiplier_0_add_2_7 ( .A0(A0), 
    .A1(A1), .B0(B0), .B1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_919 ( input A0, DI0, CLK, FCI, output 
    F0, Q0 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly;

  vmuxregsre \AMDemodulator1/Multiplier2/FF_0 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  alu2_mult \AMDemodulator1/Multiplier2/Multiplier_0_add_2_8 ( .A0(A0), 
    .A1(GNDI), .B0(GNDI), .B1(GNDI), .CI(FCI), .S0(F0), .S1(), .CO1());

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_920 ( input B1, A1, DI1, CLK, output 
    F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly;

  vmuxregsre \AMDemodulator1/Multiplier2/FF_71 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  alu2_mult \AMDemodulator1/Multiplier2/Cadd_Multiplier_0_3_1 ( .A0(GNDI), 
    .A1(A1), .B0(GNDI), .B1(B1), .CI(), .S0(), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_921 ( input B1, A1, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \AMDemodulator1/Multiplier2/FF_69 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier2/FF_70 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  alu2_mult \AMDemodulator1/Multiplier2/Multiplier_0_add_3_2 ( .A0(A0), 
    .A1(A1), .B0(B0), .B1(B1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_922 ( input B1, A1, B0, A0, DI0, CLK, 
    FCI, output F0, Q0, F1, FCO );
  wire   VCCI, GNDI, DI0_dly, CLK_dly;

  vmuxregsre \AMDemodulator1/Multiplier2/FF_68 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  alu2_mult \AMDemodulator1/Multiplier2/Multiplier_0_add_3_3 ( .A0(A0), 
    .A1(A1), .B0(B0), .B1(B1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_923 ( input B1, A1, B0, A0, FCI, 
    output F0, F1, FCO );

  alu2_mult \AMDemodulator1/Multiplier2/Multiplier_0_add_3_4 ( .A0(A0), 
    .A1(A1), .B0(B0), .B1(B1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_924 ( input B1, A1, B0, A0, FCI, 
    output F0, F1, FCO );

  alu2_mult \AMDemodulator1/Multiplier2/Multiplier_0_add_3_5 ( .A0(A0), 
    .A1(A1), .B0(B0), .B1(B1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_925 ( input B1, A1, B0, A0, FCI, 
    output F0, F1, FCO );

  alu2_mult \AMDemodulator1/Multiplier2/Multiplier_0_add_3_6 ( .A0(A0), 
    .A1(A1), .B0(B0), .B1(B1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_926 ( input B1, A1, B0, A0, FCI, 
    output F0, F1, FCO );

  alu2_mult \AMDemodulator1/Multiplier2/Multiplier_0_add_3_7 ( .A0(A0), 
    .A1(A1), .B0(B0), .B1(B1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_927 ( input B1, B0, A0, FCI, output F0, 
    F1, FCO );
  wire   GNDI;

  alu2_mult \AMDemodulator1/Multiplier2/Multiplier_0_add_3_8 ( .A0(A0), 
    .A1(GNDI), .B0(B0), .B1(B1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_928 ( input B1, B0, FCI, output F0, F1, 
    FCO );
  wire   GNDI;

  alu2_mult \AMDemodulator1/Multiplier2/Multiplier_0_add_3_9 ( .A0(GNDI), 
    .A1(GNDI), .B0(B0), .B1(B1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_929 ( input B0, FCI, output F0, F1, 
    FCO );
  wire   GNDI;

  alu2_mult \AMDemodulator1/Multiplier2/Multiplier_0_add_3_10 ( .A0(GNDI), 
    .A1(GNDI), .B0(B0), .B1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_930 ( input FCI, output F0 );
  wire   GNDI;

  alu2_mult \AMDemodulator1/Multiplier2/Cadd_Multiplier_0_3_11 ( .A0(GNDI), 
    .A1(GNDI), .B0(GNDI), .B1(GNDI), .CI(FCI), .S0(F0), .S1(), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (FCI => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_931 ( input B1, A1, DI1, CLK, output 
    F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly;

  vmuxregsre \AMDemodulator1/Multiplier2/FF_67 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  alu2_mult \AMDemodulator1/Multiplier2/Cadd_t_Multiplier_0_4_1 ( .A0(GNDI), 
    .A1(A1), .B0(GNDI), .B1(B1), .CI(), .S0(), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_932 ( input B1, A1, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \AMDemodulator1/Multiplier2/FF_65 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier2/FF_66 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  alu2_mult \AMDemodulator1/Multiplier2/t_Multiplier_0_add_4_2 ( .A0(A0), 
    .A1(A1), .B0(B0), .B1(B1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_933 ( input B1, A1, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \AMDemodulator1/Multiplier2/FF_63 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier2/FF_64 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  alu2_mult \AMDemodulator1/Multiplier2/t_Multiplier_0_add_4_3 ( .A0(A0), 
    .A1(A1), .B0(B0), .B1(B1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_934 ( input B1, A1, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \AMDemodulator1/Multiplier2/FF_61 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier2/FF_62 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  alu2_mult \AMDemodulator1/Multiplier2/t_Multiplier_0_add_4_4 ( .A0(A0), 
    .A1(A1), .B0(B0), .B1(B1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_935 ( input B1, A1, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \AMDemodulator1/Multiplier2/FF_59 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier2/FF_60 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  alu2_mult \AMDemodulator1/Multiplier2/t_Multiplier_0_add_4_5 ( .A0(A0), 
    .A1(A1), .B0(B0), .B1(B1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_936 ( input B1, A1, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \AMDemodulator1/Multiplier2/FF_57 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier2/FF_58 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  alu2_mult \AMDemodulator1/Multiplier2/t_Multiplier_0_add_4_6 ( .A0(A0), 
    .A1(A1), .B0(B0), .B1(B1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_937 ( input B1, A1, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \AMDemodulator1/Multiplier2/FF_55 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier2/FF_56 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  alu2_mult \AMDemodulator1/Multiplier2/t_Multiplier_0_add_4_7 ( .A0(A0), 
    .A1(A1), .B0(B0), .B1(B1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_938 ( input B1, A1, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \AMDemodulator1/Multiplier2/FF_53 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier2/FF_54 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  alu2_mult \AMDemodulator1/Multiplier2/t_Multiplier_0_add_4_8 ( .A0(A0), 
    .A1(A1), .B0(B0), .B1(B1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_939 ( input B0, A0, DI0, CLK, FCI, 
    output F0, Q0 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly;

  vmuxregsre \AMDemodulator1/Multiplier2/FF_52 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  alu2_mult \AMDemodulator1/Multiplier2/t_Multiplier_0_add_4_9 ( .A0(A0), 
    .A1(GNDI), .B0(B0), .B1(GNDI), .CI(FCI), .S0(F0), .S1(), .CO1());

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_940 ( input D1, C1, B1, A1, D0, C0, B0, 
    A0, DI0, CLK, FCI, output F0, Q0, F1, FCO );
  wire   VCCI, GNDI, DI0_dly, CLK_dly;

  vmuxregsre \AMDemodulator1/Multiplier2/FF_50 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  alu2_mult0046 \AMDemodulator1/Multiplier2/Multiplier_0_mult_0_0 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(C1), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module alu2_mult0046 ( input A0, A1, C0, C1, B0, B1, D0, D1, CI, output S0, S1, 
    CO1 );

  MULT2 INST01( .A0(A0), .A1(C0), .A2(A1), .A3(C1), .B0(B0), .B1(D0), .B2(B1), 
    .B3(D1), .CI(CI), .P0(S0), .P1(S1), .CO(CO1));
endmodule

module AMDemodulator1_Multiplier2_SLICE_941 ( input D1, C1, B1, A1, D0, C0, B0, 
    A0, FCI, output F0, F1, FCO );

  alu2_mult0046 \AMDemodulator1/Multiplier2/Multiplier_0_mult_0_1 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(C1), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_942 ( input D1, C1, B1, A1, D0, C0, B0, 
    A0, FCI, output F0, F1, FCO );

  alu2_mult0046 \AMDemodulator1/Multiplier2/Multiplier_0_mult_0_2 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(C1), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_943 ( input D1, C1, B1, A1, D0, C0, B0, 
    A0, FCI, output F0, F1, FCO );

  alu2_mult0046 \AMDemodulator1/Multiplier2/Multiplier_0_mult_0_3 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(C1), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_944 ( input D1, C1, B1, A1, D0, C0, B0, 
    A0, FCI, output F0, F1, FCO );

  alu2_mult0046 \AMDemodulator1/Multiplier2/Multiplier_0_mult_0_4 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(C1), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_945 ( input D1, C1, B1, A1, D0, C0, B0, 
    A0, FCI, output F0, F1, FCO );

  alu2_mult0046 \AMDemodulator1/Multiplier2/Multiplier_0_mult_0_5 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(C1), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_946 ( input D1, C1, B1, A1, D0, C0, B0, 
    A0, FCI, output F0, F1, FCO );

  alu2_mult0046 \AMDemodulator1/Multiplier2/Multiplier_0_mult_2_0 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(C1), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_947 ( input D1, C1, B1, A1, D0, C0, B0, 
    A0, FCI, output F0, F1, FCO );

  alu2_mult0046 \AMDemodulator1/Multiplier2/Multiplier_0_mult_2_1 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(C1), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_948 ( input D1, C1, B1, A1, D0, C0, B0, 
    A0, FCI, output F0, F1, FCO );

  alu2_mult0046 \AMDemodulator1/Multiplier2/Multiplier_0_mult_2_2 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(C1), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_949 ( input D1, C1, B1, A1, D0, C0, B0, 
    A0, FCI, output F0, F1, FCO );

  alu2_mult0046 \AMDemodulator1/Multiplier2/Multiplier_0_mult_2_3 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(C1), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_950 ( input D1, C1, B1, A1, D0, C0, B0, 
    A0, FCI, output F0, F1, FCO );

  alu2_mult0046 \AMDemodulator1/Multiplier2/Multiplier_0_mult_2_4 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(C1), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_951 ( input D1, B1, A1, D0, C0, B0, A0, 
    FCI, output F0, F1, FCO );
  wire   GNDI;

  alu2_mult0046 \AMDemodulator1/Multiplier2/Multiplier_0_mult_2_5 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(GNDI), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_952 ( input D1, C1, B1, A1, D0, C0, B0, 
    A0, DI0, CLK, FCI, output F0, Q0, F1, FCO );
  wire   VCCI, GNDI, DI0_dly, CLK_dly;

  vmuxregsre \AMDemodulator1/Multiplier2/FF_32 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  alu2_mult0046 \AMDemodulator1/Multiplier2/Multiplier_0_mult_4_0 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(C1), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_953 ( input D1, C1, B1, A1, D0, C0, B0, 
    A0, FCI, output F0, F1, FCO );

  alu2_mult0046 \AMDemodulator1/Multiplier2/Multiplier_0_mult_4_1 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(C1), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_954 ( input D1, C1, B1, A1, D0, C0, B0, 
    A0, FCI, output F0, F1, FCO );

  alu2_mult0046 \AMDemodulator1/Multiplier2/Multiplier_0_mult_4_2 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(C1), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_955 ( input D1, C1, B1, A1, D0, C0, B0, 
    A0, FCI, output F0, F1, FCO );

  alu2_mult0046 \AMDemodulator1/Multiplier2/Multiplier_0_mult_4_3 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(C1), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_956 ( input D1, C1, B1, A1, D0, C0, B0, 
    A0, FCI, output F0, F1, FCO );

  alu2_mult0046 \AMDemodulator1/Multiplier2/Multiplier_0_mult_4_4 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(C1), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_957 ( input D1, B1, A1, D0, C0, B0, A0, 
    FCI, output F0, F1, FCO );
  wire   GNDI;

  alu2_mult0046 \AMDemodulator1/Multiplier2/Multiplier_0_mult_4_5 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(GNDI), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_958 ( input D1, C1, B1, A1, D0, C0, B0, 
    A0, FCI, output F0, F1, FCO );

  alu2_mult0046 \AMDemodulator1/Multiplier2/Multiplier_0_mult_6_0 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(C1), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_959 ( input D1, C1, B1, A1, D0, C0, B0, 
    A0, FCI, output F0, F1, FCO );

  alu2_mult0046 \AMDemodulator1/Multiplier2/Multiplier_0_mult_6_1 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(C1), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_960 ( input D1, C1, B1, A1, D0, C0, B0, 
    A0, FCI, output F0, F1, FCO );

  alu2_mult0046 \AMDemodulator1/Multiplier2/Multiplier_0_mult_6_2 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(C1), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_961 ( input D1, C1, B1, A1, D0, C0, B0, 
    A0, FCI, output F0, F1, FCO );

  alu2_mult0046 \AMDemodulator1/Multiplier2/Multiplier_0_mult_6_3 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(C1), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_962 ( input D1, C1, B1, A1, D0, C0, B0, 
    A0, FCI, output F0, F1, FCO );

  alu2_mult0046 \AMDemodulator1/Multiplier2/Multiplier_0_mult_6_4 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(C1), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_963 ( input D1, B1, A1, D0, C0, B0, A0, 
    FCI, output F0, F1, FCO );
  wire   GNDI;

  alu2_mult0046 \AMDemodulator1/Multiplier2/Multiplier_0_mult_6_5 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(GNDI), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_964 ( input D1, C1, B1, A1, D0, C0, B0, 
    A0, DI0, CLK, FCI, output F0, Q0, F1, FCO );
  wire   VCCI, GNDI, DI0_dly, CLK_dly;

  vmuxregsre \AMDemodulator1/Multiplier2/FF_14 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  alu2_mult0046 \AMDemodulator1/Multiplier2/Multiplier_0_mult_8_0 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(C1), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_965 ( input D1, C1, B1, A1, D0, C0, B0, 
    A0, FCI, output F0, F1, FCO );

  alu2_mult0046 \AMDemodulator1/Multiplier2/Multiplier_0_mult_8_1 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(C1), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_966 ( input D1, C1, B1, A1, D0, C0, B0, 
    A0, FCI, output F0, F1, FCO );

  alu2_mult0046 \AMDemodulator1/Multiplier2/Multiplier_0_mult_8_2 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(C1), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_967 ( input D1, C1, B1, A1, D0, C0, B0, 
    A0, FCI, output F0, F1, FCO );

  alu2_mult0046 \AMDemodulator1/Multiplier2/Multiplier_0_mult_8_3 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(C1), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_968 ( input D1, C1, B1, A1, D0, C0, B0, 
    A0, FCI, output F0, F1, FCO );

  alu2_mult0046 \AMDemodulator1/Multiplier2/Multiplier_0_mult_8_4 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(C1), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_969 ( input D1, B1, A1, D0, C0, B0, A0, 
    FCI, output F0, F1, FCO );
  wire   GNDI;

  alu2_mult0046 \AMDemodulator1/Multiplier2/Multiplier_0_mult_8_5 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(GNDI), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_970 ( input D1, C1, B1, A1, D0, C0, B0, 
    A0, FCI, output F0, F1, FCO );

  alu2_mult0046 \AMDemodulator1/Multiplier2/Multiplier_0_mult_10_0 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(C1), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_971 ( input D1, C1, B1, A1, D0, C0, B0, 
    A0, FCI, output F0, F1, FCO );

  alu2_mult0046 \AMDemodulator1/Multiplier2/Multiplier_0_mult_10_1 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(C1), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_972 ( input D1, C1, B1, A1, D0, C0, B0, 
    A0, FCI, output F0, F1, FCO );

  alu2_mult0046 \AMDemodulator1/Multiplier2/Multiplier_0_mult_10_2 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(C1), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_973 ( input D1, C1, B1, A1, D0, C0, B0, 
    A0, FCI, output F0, F1, FCO );

  alu2_mult0046 \AMDemodulator1/Multiplier2/Multiplier_0_mult_10_3 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(C1), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_974 ( input D1, C1, B1, A1, D0, C0, B0, 
    A0, FCI, output F0, F1, FCO );

  alu2_mult0046 \AMDemodulator1/Multiplier2/Multiplier_0_mult_10_4 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(C1), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_975 ( input D1, B1, A1, D0, C0, B0, A0, 
    FCI, output F0, F1, FCO );
  wire   GNDI;

  alu2_mult0046 \AMDemodulator1/Multiplier2/Multiplier_0_mult_10_5 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(GNDI), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_976 ( output FCO );
  wire   GNDI;

  alu2_mult \AMDemodulator1/Multiplier1/Multiplier_0_cin_lr_add_0 ( .A0(GNDI), 
    .A1(GNDI), .B0(GNDI), .B1(GNDI), .CI(), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_977 ( input FCI, output F0 );
  wire   GNDI;

  alu2_mult \AMDemodulator1/Multiplier1/Multiplier_0_Cadd_0_6 ( .A0(GNDI), 
    .A1(GNDI), .B0(GNDI), .B1(GNDI), .CI(FCI), .S0(F0), .S1(), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (FCI => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_978 ( output FCO );
  wire   GNDI;

  alu2_mult \AMDemodulator1/Multiplier1/Multiplier_0_cin_lr_add_2 ( .A0(GNDI), 
    .A1(GNDI), .B0(GNDI), .B1(GNDI), .CI(), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_979 ( input FCI, output F0 );
  wire   GNDI;

  alu2_mult \AMDemodulator1/Multiplier1/Multiplier_0_Cadd_2_6 ( .A0(GNDI), 
    .A1(GNDI), .B0(GNDI), .B1(GNDI), .CI(FCI), .S0(F0), .S1(), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (FCI => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_980 ( output FCO );
  wire   GNDI;

  alu2_mult \AMDemodulator1/Multiplier1/Multiplier_0_cin_lr_add_4 ( .A0(GNDI), 
    .A1(GNDI), .B0(GNDI), .B1(GNDI), .CI(), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_981 ( input FCI, output F0 );
  wire   GNDI;

  alu2_mult \AMDemodulator1/Multiplier1/Multiplier_0_Cadd_4_6 ( .A0(GNDI), 
    .A1(GNDI), .B0(GNDI), .B1(GNDI), .CI(FCI), .S0(F0), .S1(), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (FCI => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_982 ( output FCO );
  wire   GNDI;

  alu2_mult \AMDemodulator1/Multiplier1/Multiplier_0_cin_lr_add_6 ( .A0(GNDI), 
    .A1(GNDI), .B0(GNDI), .B1(GNDI), .CI(), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_983 ( input FCI, output F0 );
  wire   GNDI;

  alu2_mult \AMDemodulator1/Multiplier1/Multiplier_0_Cadd_6_6 ( .A0(GNDI), 
    .A1(GNDI), .B0(GNDI), .B1(GNDI), .CI(FCI), .S0(F0), .S1(), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (FCI => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_984 ( output FCO );
  wire   GNDI;

  alu2_mult \AMDemodulator1/Multiplier1/Multiplier_0_cin_lr_add_8 ( .A0(GNDI), 
    .A1(GNDI), .B0(GNDI), .B1(GNDI), .CI(), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_985 ( input FCI, output F0 );
  wire   GNDI;

  alu2_mult \AMDemodulator1/Multiplier1/Multiplier_0_Cadd_8_6 ( .A0(GNDI), 
    .A1(GNDI), .B0(GNDI), .B1(GNDI), .CI(FCI), .S0(F0), .S1(), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (FCI => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_986 ( output FCO );
  wire   GNDI;

  alu2_mult \AMDemodulator1/Multiplier1/Multiplier_0_cin_lr_add_10 ( .A0(GNDI), 
    .A1(GNDI), .B0(GNDI), .B1(GNDI), .CI(), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_987 ( input FCI, output F0 );
  wire   VCCI, GNDI;

  alu2_mult \AMDemodulator1/Multiplier1/Multiplier_0_Cadd_10_6 ( .A0(VCCI), 
    .A1(GNDI), .B0(GNDI), .B1(GNDI), .CI(FCI), .S0(F0), .S1(), .CO1());
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (FCI => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_988 ( input B1, A1, DI1, CLK, output 
    F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly;

  vmuxregsre \AMDemodulator1/Multiplier1/FF_49 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  alu2_mult \AMDemodulator1/Multiplier1/Cadd_Multiplier_0_0_1 ( .A0(GNDI), 
    .A1(A1), .B0(GNDI), .B1(B1), .CI(), .S0(), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_989 ( input B1, A1, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \AMDemodulator1/Multiplier1/FF_47 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier1/FF_48 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  alu2_mult \AMDemodulator1/Multiplier1/Multiplier_0_add_0_2 ( .A0(A0), 
    .A1(A1), .B0(B0), .B1(B1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_990 ( input B1, A1, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \AMDemodulator1/Multiplier1/FF_45 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier1/FF_46 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  alu2_mult \AMDemodulator1/Multiplier1/Multiplier_0_add_0_3 ( .A0(A0), 
    .A1(A1), .B0(B0), .B1(B1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_991 ( input B1, A1, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \AMDemodulator1/Multiplier1/FF_43 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier1/FF_44 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  alu2_mult \AMDemodulator1/Multiplier1/Multiplier_0_add_0_4 ( .A0(A0), 
    .A1(A1), .B0(B0), .B1(B1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_992 ( input B1, A1, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \AMDemodulator1/Multiplier1/FF_41 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier1/FF_42 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  alu2_mult \AMDemodulator1/Multiplier1/Multiplier_0_add_0_5 ( .A0(A0), 
    .A1(A1), .B0(B0), .B1(B1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_993 ( input B1, A1, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \AMDemodulator1/Multiplier1/FF_39 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier1/FF_40 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  alu2_mult \AMDemodulator1/Multiplier1/Multiplier_0_add_0_6 ( .A0(A0), 
    .A1(A1), .B0(B0), .B1(B1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_994 ( input A1, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \AMDemodulator1/Multiplier1/FF_37 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier1/FF_38 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  alu2_mult \AMDemodulator1/Multiplier1/Multiplier_0_add_0_7 ( .A0(A0), 
    .A1(A1), .B0(B0), .B1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_995 ( input A0, DI1, DI0, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \AMDemodulator1/Multiplier1/FF_35 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier1/FF_36 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  alu2_mult \AMDemodulator1/Multiplier1/Multiplier_0_add_0_8 ( .A0(A0), 
    .A1(GNDI), .B0(GNDI), .B1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_996 ( input DI0, CLK, FCI, output F0, 
    Q0 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly;

  vmuxregsre \AMDemodulator1/Multiplier1/FF_34 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  alu2_mult \AMDemodulator1/Multiplier1/Cadd_Multiplier_0_0_9 ( .A0(GNDI), 
    .A1(GNDI), .B0(GNDI), .B1(GNDI), .CI(FCI), .S0(F0), .S1(), .CO1());

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_997 ( input B1, A1, DI1, CLK, output 
    F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly;

  vmuxregsre \AMDemodulator1/Multiplier1/FF_31 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  alu2_mult \AMDemodulator1/Multiplier1/Cadd_Multiplier_0_1_1 ( .A0(GNDI), 
    .A1(A1), .B0(GNDI), .B1(B1), .CI(), .S0(), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_998 ( input B1, A1, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \AMDemodulator1/Multiplier1/FF_29 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier1/FF_30 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  alu2_mult \AMDemodulator1/Multiplier1/Multiplier_0_add_1_2 ( .A0(A0), 
    .A1(A1), .B0(B0), .B1(B1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_999 ( input B1, A1, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \AMDemodulator1/Multiplier1/FF_27 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier1/FF_28 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  alu2_mult \AMDemodulator1/Multiplier1/Multiplier_0_add_1_3 ( .A0(A0), 
    .A1(A1), .B0(B0), .B1(B1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1000 ( input B1, A1, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \AMDemodulator1/Multiplier1/FF_25 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier1/FF_26 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  alu2_mult \AMDemodulator1/Multiplier1/Multiplier_0_add_1_4 ( .A0(A0), 
    .A1(A1), .B0(B0), .B1(B1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1001 ( input B1, A1, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \AMDemodulator1/Multiplier1/FF_23 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier1/FF_24 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  alu2_mult \AMDemodulator1/Multiplier1/Multiplier_0_add_1_5 ( .A0(A0), 
    .A1(A1), .B0(B0), .B1(B1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1002 ( input B1, A1, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \AMDemodulator1/Multiplier1/FF_21 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier1/FF_22 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  alu2_mult \AMDemodulator1/Multiplier1/Multiplier_0_add_1_6 ( .A0(A0), 
    .A1(A1), .B0(B0), .B1(B1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1003 ( input A1, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \AMDemodulator1/Multiplier1/FF_19 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier1/FF_20 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  alu2_mult \AMDemodulator1/Multiplier1/Multiplier_0_add_1_7 ( .A0(A0), 
    .A1(A1), .B0(B0), .B1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1004 ( input A0, DI1, DI0, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \AMDemodulator1/Multiplier1/FF_17 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier1/FF_18 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  alu2_mult \AMDemodulator1/Multiplier1/Multiplier_0_add_1_8 ( .A0(A0), 
    .A1(GNDI), .B0(GNDI), .B1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1005 ( input DI0, CLK, FCI, output F0, 
    Q0 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly;

  vmuxregsre \AMDemodulator1/Multiplier1/FF_16 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  alu2_mult \AMDemodulator1/Multiplier1/Cadd_Multiplier_0_1_9 ( .A0(GNDI), 
    .A1(GNDI), .B0(GNDI), .B1(GNDI), .CI(FCI), .S0(F0), .S1(), .CO1());

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1006 ( input B1, A1, DI1, CLK, output 
    F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly;

  vmuxregsre \AMDemodulator1/Multiplier1/FF_13 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  alu2_mult \AMDemodulator1/Multiplier1/Cadd_Multiplier_0_2_1 ( .A0(GNDI), 
    .A1(A1), .B0(GNDI), .B1(B1), .CI(), .S0(), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1007 ( input B1, A1, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \AMDemodulator1/Multiplier1/FF_11 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier1/FF_12 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  alu2_mult \AMDemodulator1/Multiplier1/Multiplier_0_add_2_2 ( .A0(A0), 
    .A1(A1), .B0(B0), .B1(B1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1008 ( input B1, A1, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \AMDemodulator1/Multiplier1/FF_9 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier1/FF_10 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  alu2_mult \AMDemodulator1/Multiplier1/Multiplier_0_add_2_3 ( .A0(A0), 
    .A1(A1), .B0(B0), .B1(B1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1009 ( input B1, A1, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \AMDemodulator1/Multiplier1/FF_7 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier1/FF_8 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  alu2_mult \AMDemodulator1/Multiplier1/Multiplier_0_add_2_4 ( .A0(A0), 
    .A1(A1), .B0(B0), .B1(B1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1010 ( input B1, A1, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \AMDemodulator1/Multiplier1/FF_5 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier1/FF_6 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  alu2_mult \AMDemodulator1/Multiplier1/Multiplier_0_add_2_5 ( .A0(A0), 
    .A1(A1), .B0(B0), .B1(B1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1011 ( input B1, A1, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \AMDemodulator1/Multiplier1/FF_3 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier1/FF_4 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  alu2_mult \AMDemodulator1/Multiplier1/Multiplier_0_add_2_6 ( .A0(A0), 
    .A1(A1), .B0(B0), .B1(B1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1012 ( input A1, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \AMDemodulator1/Multiplier1/FF_1 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier1/FF_2 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  alu2_mult \AMDemodulator1/Multiplier1/Multiplier_0_add_2_7 ( .A0(A0), 
    .A1(A1), .B0(B0), .B1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1013 ( input A0, DI0, CLK, FCI, 
    output F0, Q0 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly;

  vmuxregsre \AMDemodulator1/Multiplier1/FF_0 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  alu2_mult \AMDemodulator1/Multiplier1/Multiplier_0_add_2_8 ( .A0(A0), 
    .A1(GNDI), .B0(GNDI), .B1(GNDI), .CI(FCI), .S0(F0), .S1(), .CO1());

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1014 ( input B1, A1, DI1, CLK, output 
    F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly;

  vmuxregsre \AMDemodulator1/Multiplier1/FF_71 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  alu2_mult \AMDemodulator1/Multiplier1/Cadd_Multiplier_0_3_1 ( .A0(GNDI), 
    .A1(A1), .B0(GNDI), .B1(B1), .CI(), .S0(), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1015 ( input B1, A1, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \AMDemodulator1/Multiplier1/FF_69 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier1/FF_70 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  alu2_mult \AMDemodulator1/Multiplier1/Multiplier_0_add_3_2 ( .A0(A0), 
    .A1(A1), .B0(B0), .B1(B1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1016 ( input B1, A1, B0, A0, DI0, CLK, 
    FCI, output F0, Q0, F1, FCO );
  wire   VCCI, GNDI, DI0_dly, CLK_dly;

  vmuxregsre \AMDemodulator1/Multiplier1/FF_68 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  alu2_mult \AMDemodulator1/Multiplier1/Multiplier_0_add_3_3 ( .A0(A0), 
    .A1(A1), .B0(B0), .B1(B1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1017 ( input B1, A1, B0, A0, FCI, 
    output F0, F1, FCO );

  alu2_mult \AMDemodulator1/Multiplier1/Multiplier_0_add_3_4 ( .A0(A0), 
    .A1(A1), .B0(B0), .B1(B1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1018 ( input B1, A1, B0, A0, FCI, 
    output F0, F1, FCO );

  alu2_mult \AMDemodulator1/Multiplier1/Multiplier_0_add_3_5 ( .A0(A0), 
    .A1(A1), .B0(B0), .B1(B1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1019 ( input B1, A1, B0, A0, FCI, 
    output F0, F1, FCO );

  alu2_mult \AMDemodulator1/Multiplier1/Multiplier_0_add_3_6 ( .A0(A0), 
    .A1(A1), .B0(B0), .B1(B1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1020 ( input B1, A1, B0, A0, FCI, 
    output F0, F1, FCO );

  alu2_mult \AMDemodulator1/Multiplier1/Multiplier_0_add_3_7 ( .A0(A0), 
    .A1(A1), .B0(B0), .B1(B1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1021 ( input B1, B0, A0, FCI, output 
    F0, F1, FCO );
  wire   GNDI;

  alu2_mult \AMDemodulator1/Multiplier1/Multiplier_0_add_3_8 ( .A0(A0), 
    .A1(GNDI), .B0(B0), .B1(B1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1022 ( input B1, B0, FCI, output F0, 
    F1, FCO );
  wire   GNDI;

  alu2_mult \AMDemodulator1/Multiplier1/Multiplier_0_add_3_9 ( .A0(GNDI), 
    .A1(GNDI), .B0(B0), .B1(B1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1023 ( input B0, FCI, output F0, F1, 
    FCO );
  wire   GNDI;

  alu2_mult \AMDemodulator1/Multiplier1/Multiplier_0_add_3_10 ( .A0(GNDI), 
    .A1(GNDI), .B0(B0), .B1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1024 ( input FCI, output F0 );
  wire   GNDI;

  alu2_mult \AMDemodulator1/Multiplier1/Cadd_Multiplier_0_3_11 ( .A0(GNDI), 
    .A1(GNDI), .B0(GNDI), .B1(GNDI), .CI(FCI), .S0(F0), .S1(), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (FCI => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1025 ( input B1, A1, DI1, CLK, output 
    F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly;

  vmuxregsre \AMDemodulator1/Multiplier1/FF_67 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  alu2_mult \AMDemodulator1/Multiplier1/Cadd_t_Multiplier_0_4_1 ( .A0(GNDI), 
    .A1(A1), .B0(GNDI), .B1(B1), .CI(), .S0(), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1026 ( input B1, A1, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \AMDemodulator1/Multiplier1/FF_65 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier1/FF_66 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  alu2_mult \AMDemodulator1/Multiplier1/t_Multiplier_0_add_4_2 ( .A0(A0), 
    .A1(A1), .B0(B0), .B1(B1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1027 ( input B1, A1, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \AMDemodulator1/Multiplier1/FF_63 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier1/FF_64 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  alu2_mult \AMDemodulator1/Multiplier1/t_Multiplier_0_add_4_3 ( .A0(A0), 
    .A1(A1), .B0(B0), .B1(B1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1028 ( input B1, A1, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \AMDemodulator1/Multiplier1/FF_61 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier1/FF_62 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  alu2_mult \AMDemodulator1/Multiplier1/t_Multiplier_0_add_4_4 ( .A0(A0), 
    .A1(A1), .B0(B0), .B1(B1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1029 ( input B1, A1, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \AMDemodulator1/Multiplier1/FF_59 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier1/FF_60 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  alu2_mult \AMDemodulator1/Multiplier1/t_Multiplier_0_add_4_5 ( .A0(A0), 
    .A1(A1), .B0(B0), .B1(B1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1030 ( input B1, A1, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \AMDemodulator1/Multiplier1/FF_57 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier1/FF_58 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  alu2_mult \AMDemodulator1/Multiplier1/t_Multiplier_0_add_4_6 ( .A0(A0), 
    .A1(A1), .B0(B0), .B1(B1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1031 ( input B1, A1, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \AMDemodulator1/Multiplier1/FF_55 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier1/FF_56 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  alu2_mult \AMDemodulator1/Multiplier1/t_Multiplier_0_add_4_7 ( .A0(A0), 
    .A1(A1), .B0(B0), .B1(B1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1032 ( input B1, A1, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \AMDemodulator1/Multiplier1/FF_53 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier1/FF_54 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  alu2_mult \AMDemodulator1/Multiplier1/t_Multiplier_0_add_4_8 ( .A0(A0), 
    .A1(A1), .B0(B0), .B1(B1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1033 ( input B0, A0, DI0, CLK, FCI, 
    output F0, Q0 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly;

  vmuxregsre \AMDemodulator1/Multiplier1/FF_52 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  alu2_mult \AMDemodulator1/Multiplier1/t_Multiplier_0_add_4_9 ( .A0(A0), 
    .A1(GNDI), .B0(B0), .B1(GNDI), .CI(FCI), .S0(F0), .S1(), .CO1());

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1034 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, DI0, CLK, FCI, output F0, Q0, F1, FCO );
  wire   VCCI, GNDI, DI0_dly, CLK_dly;

  vmuxregsre \AMDemodulator1/Multiplier1/FF_50 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  alu2_mult0046 \AMDemodulator1/Multiplier1/Multiplier_0_mult_0_0 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(C1), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1035 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, FCI, output F0, F1, FCO );

  alu2_mult0046 \AMDemodulator1/Multiplier1/Multiplier_0_mult_0_1 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(C1), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1036 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, FCI, output F0, F1, FCO );

  alu2_mult0046 \AMDemodulator1/Multiplier1/Multiplier_0_mult_0_2 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(C1), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1037 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, FCI, output F0, F1, FCO );

  alu2_mult0046 \AMDemodulator1/Multiplier1/Multiplier_0_mult_0_3 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(C1), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1038 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, FCI, output F0, F1, FCO );

  alu2_mult0046 \AMDemodulator1/Multiplier1/Multiplier_0_mult_0_4 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(C1), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1039 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, FCI, output F0, F1, FCO );

  alu2_mult0046 \AMDemodulator1/Multiplier1/Multiplier_0_mult_0_5 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(C1), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1040 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, FCI, output F0, F1, FCO );

  alu2_mult0046 \AMDemodulator1/Multiplier1/Multiplier_0_mult_2_0 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(C1), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1041 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, FCI, output F0, F1, FCO );

  alu2_mult0046 \AMDemodulator1/Multiplier1/Multiplier_0_mult_2_1 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(C1), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1042 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, FCI, output F0, F1, FCO );

  alu2_mult0046 \AMDemodulator1/Multiplier1/Multiplier_0_mult_2_2 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(C1), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1043 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, FCI, output F0, F1, FCO );

  alu2_mult0046 \AMDemodulator1/Multiplier1/Multiplier_0_mult_2_3 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(C1), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1044 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, FCI, output F0, F1, FCO );

  alu2_mult0046 \AMDemodulator1/Multiplier1/Multiplier_0_mult_2_4 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(C1), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1045 ( input D1, B1, A1, D0, C0, B0, 
    A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  alu2_mult0046 \AMDemodulator1/Multiplier1/Multiplier_0_mult_2_5 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(GNDI), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1046 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, DI0, CLK, FCI, output F0, Q0, F1, FCO );
  wire   VCCI, GNDI, DI0_dly, CLK_dly;

  vmuxregsre \AMDemodulator1/Multiplier1/FF_32 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  alu2_mult0046 \AMDemodulator1/Multiplier1/Multiplier_0_mult_4_0 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(C1), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1047 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, FCI, output F0, F1, FCO );

  alu2_mult0046 \AMDemodulator1/Multiplier1/Multiplier_0_mult_4_1 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(C1), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1048 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, FCI, output F0, F1, FCO );

  alu2_mult0046 \AMDemodulator1/Multiplier1/Multiplier_0_mult_4_2 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(C1), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1049 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, FCI, output F0, F1, FCO );

  alu2_mult0046 \AMDemodulator1/Multiplier1/Multiplier_0_mult_4_3 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(C1), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1050 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, FCI, output F0, F1, FCO );

  alu2_mult0046 \AMDemodulator1/Multiplier1/Multiplier_0_mult_4_4 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(C1), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1051 ( input D1, B1, A1, D0, C0, B0, 
    A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  alu2_mult0046 \AMDemodulator1/Multiplier1/Multiplier_0_mult_4_5 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(GNDI), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1052 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, FCI, output F0, F1, FCO );

  alu2_mult0046 \AMDemodulator1/Multiplier1/Multiplier_0_mult_6_0 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(C1), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1053 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, FCI, output F0, F1, FCO );

  alu2_mult0046 \AMDemodulator1/Multiplier1/Multiplier_0_mult_6_1 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(C1), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1054 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, FCI, output F0, F1, FCO );

  alu2_mult0046 \AMDemodulator1/Multiplier1/Multiplier_0_mult_6_2 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(C1), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1055 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, FCI, output F0, F1, FCO );

  alu2_mult0046 \AMDemodulator1/Multiplier1/Multiplier_0_mult_6_3 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(C1), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1056 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, FCI, output F0, F1, FCO );

  alu2_mult0046 \AMDemodulator1/Multiplier1/Multiplier_0_mult_6_4 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(C1), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1057 ( input D1, B1, A1, D0, C0, B0, 
    A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  alu2_mult0046 \AMDemodulator1/Multiplier1/Multiplier_0_mult_6_5 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(GNDI), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1058 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, DI0, CLK, FCI, output F0, Q0, F1, FCO );
  wire   VCCI, GNDI, DI0_dly, CLK_dly;

  vmuxregsre \AMDemodulator1/Multiplier1/FF_14 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  alu2_mult0046 \AMDemodulator1/Multiplier1/Multiplier_0_mult_8_0 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(C1), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1059 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, FCI, output F0, F1, FCO );

  alu2_mult0046 \AMDemodulator1/Multiplier1/Multiplier_0_mult_8_1 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(C1), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1060 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, FCI, output F0, F1, FCO );

  alu2_mult0046 \AMDemodulator1/Multiplier1/Multiplier_0_mult_8_2 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(C1), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1061 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, FCI, output F0, F1, FCO );

  alu2_mult0046 \AMDemodulator1/Multiplier1/Multiplier_0_mult_8_3 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(C1), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1062 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, FCI, output F0, F1, FCO );

  alu2_mult0046 \AMDemodulator1/Multiplier1/Multiplier_0_mult_8_4 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(C1), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1063 ( input D1, B1, A1, D0, C0, B0, 
    A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  alu2_mult0046 \AMDemodulator1/Multiplier1/Multiplier_0_mult_8_5 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(GNDI), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1064 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, FCI, output F0, F1, FCO );

  alu2_mult0046 \AMDemodulator1/Multiplier1/Multiplier_0_mult_10_0 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(C1), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1065 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, FCI, output F0, F1, FCO );

  alu2_mult0046 \AMDemodulator1/Multiplier1/Multiplier_0_mult_10_1 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(C1), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1066 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, FCI, output F0, F1, FCO );

  alu2_mult0046 \AMDemodulator1/Multiplier1/Multiplier_0_mult_10_2 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(C1), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1067 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, FCI, output F0, F1, FCO );

  alu2_mult0046 \AMDemodulator1/Multiplier1/Multiplier_0_mult_10_3 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(C1), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1068 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, FCI, output F0, F1, FCO );

  alu2_mult0046 \AMDemodulator1/Multiplier1/Multiplier_0_mult_10_4 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(C1), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1069 ( input D1, B1, A1, D0, C0, B0, 
    A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  alu2_mult0046 \AMDemodulator1/Multiplier1/Multiplier_0_mult_10_5 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(GNDI), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1070 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20022 \CIC1Cos/add_1078_6 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1071 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20022 \CIC1Cos/add_1078_4 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1072 ( input B1, A1, B0, A0, output F1, FCO );
  wire   GNDI;

  ccu20025 \CIC1Cos/add_1078_2 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1073 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d5_i49 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d5_i48 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20021 \CIC1Cos/add_1094_15 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1074 ( input A1, output FCO );
  wire   GNDI;

  ccu20002 \CIC1Cos/add_1074_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1075 ( input B1, A1, B0, A0, FCI, output F0, F1 );
  wire   GNDI;

  ccu20022 \CIC1Cos/add_1078_36 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1076 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20022 \CIC1Cos/add_1078_32 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1077 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20022 \CIC1Cos/add_1078_34 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1078 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20022 \CIC1Cos/add_1078_20 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1079 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d5_i55 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d5_i54 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20021 \CIC1Cos/add_1094_21 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1080 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20022 \CIC1Cos/add_1078_18 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1081 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20022 \CIC1Cos/add_1078_16 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1082 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20022 \CIC1Cos/add_1078_14 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1083 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20022 \CIC1Cos/add_1078_12 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1084 ( input A1, output FCO );
  wire   GNDI;

  ccu20002 \CIC1Cos/add_1084_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1085 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20022 \CIC1Cos/add_1078_10 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1086 ( input B1, A1, B0, A0, FCI, output F0, F1 );
  wire   GNDI;

  ccu20022 \CIC1Cos/add_1088_36 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1087 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20022 \CIC1Cos/add_1078_8 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1088 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d2_i65 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d2_i64 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20021 \CIC1Cos/add_1079_31 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1089 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d5_i47 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d5_i46 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20021 \CIC1Cos/add_1094_13 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1090 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d5_i45 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d5_i44 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20021 \CIC1Cos/add_1094_11 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1091 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d5_i71 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d5_i70 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20021 \CIC1Cos/add_1094_37 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1());

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1092 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20022 \CIC1Cos/add_1088_34 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1093 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d2_i39 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d2_i38 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20021 \CIC1Cos/add_1079_5 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1094 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d2_i37 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d2_i36 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20021 \CIC1Cos/add_1079_3 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1095 ( input B1, A1, B0, A0, FCI, output F0, F1 );
  wire   GNDI;

  ccu20022 \CIC1Cos/add_1083_36 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1096 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20022 \CIC1Cos/add_1083_30 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1097 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20022 \CIC1Cos/add_1083_34 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1098 ( input A1, output FCO );
  wire   GNDI;

  ccu20002 \CIC1Cos/add_1079_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1099 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20022 \CIC1Cos/add_1083_32 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1100 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20022 \CIC1Cos/add_1083_28 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1101 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20022 \CIC1Cos/add_1088_32 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1102 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20022 \CIC1Cos/add_1088_30 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1103 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d5_i69 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d5_i68 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20021 \CIC1Cos/add_1094_35 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1104 ( input B0, A0, FCI, output F0 );
  wire   GNDI;

  ccu20003 \CIC1Cos/add_1108_37 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(), 
    .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1105 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20022 \CIC1Cos/add_1088_28 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1106 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20022 \CIC1Cos/add_1088_26 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1107 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20022 \CIC1Cos/add_1088_24 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1108 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d5_i67 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d5_i66 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20021 \CIC1Cos/add_1094_33 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1109 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20022 \CIC1Cos/add_1088_22 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1110 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d5_i65 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d5_i64 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20021 \CIC1Cos/add_1094_31 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1111 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20022 \CIC1Cos/add_1083_26 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1112 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20022 \CIC1Cos/add_1083_18 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1113 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d5_i43 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d5_i42 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20021 \CIC1Cos/add_1094_9 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1114 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d3_i71 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d3_i70 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20021 \CIC1Cos/add_1084_37 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1());

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1115 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d3_i69 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d3_i68 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20021 \CIC1Cos/add_1084_35 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1116 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d3_i65 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d3_i64 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20021 \CIC1Cos/add_1084_31 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1117 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d3_i63 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d3_i62 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20021 \CIC1Cos/add_1084_29 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1118 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d5_i63 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d5_i62 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20021 \CIC1Cos/add_1094_29 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1119 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d3_i67 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d3_i66 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20021 \CIC1Cos/add_1084_33 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1120 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d3_i61 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d3_i60 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20021 \CIC1Cos/add_1084_27 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1121 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d3_i53 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d3_i52 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20021 \CIC1Cos/add_1084_19 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1122 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d3_i41 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d3_i40 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20021 \CIC1Cos/add_1084_7 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1123 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20022 \CIC1Cos/add_1088_20 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1124 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d3_i39 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d3_i38 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20021 \CIC1Cos/add_1084_5 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1125 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d3_i51 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d3_i50 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20021 \CIC1Cos/add_1084_17 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1126 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d3_i37 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d3_i36 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20021 \CIC1Cos/add_1084_3 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1127 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d3_i49 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d3_i48 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20021 \CIC1Cos/add_1084_15 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1128 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d3_i59 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d3_i58 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20021 \CIC1Cos/add_1084_25 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1129 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d3_i47 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d3_i46 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20021 \CIC1Cos/add_1084_13 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1130 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d3_i45 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d3_i44 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20021 \CIC1Cos/add_1084_11 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1131 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d3_i57 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d3_i56 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20021 \CIC1Cos/add_1084_23 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1132 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d3_i43 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d3_i42 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20021 \CIC1Cos/add_1084_9 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1133 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d3_i55 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d3_i54 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20021 \CIC1Cos/add_1084_21 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1134 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d5_i41 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d5_i40 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20021 \CIC1Cos/add_1094_7 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1135 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d2_i43 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d2_i42 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20021 \CIC1Cos/add_1079_9 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1136 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d5_i39 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d5_i38 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20021 \CIC1Cos/add_1094_5 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1137 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d5_i37 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d5_i36 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20021 \CIC1Cos/add_1094_3 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1138 ( input A1, output FCO );
  wire   GNDI;

  ccu20002 \CIC1Cos/add_1094_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1139 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d2_i71 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d2_i70 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20021 \CIC1Cos/add_1079_37 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1());

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1140 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d2_i69 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d2_i68 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20021 \CIC1Cos/add_1079_35 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1141 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d2_i67 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d2_i66 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20021 \CIC1Cos/add_1079_33 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1142 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d2_i63 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d2_i62 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20021 \CIC1Cos/add_1079_29 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1143 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d5_i57 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d5_i56 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20021 \CIC1Cos/add_1094_23 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1144 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d5_i61 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d5_i60 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20021 \CIC1Cos/add_1094_27 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1145 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d2_i61 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d2_i60 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20021 \CIC1Cos/add_1079_27 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1146 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d2_i59 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d2_i58 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20021 \CIC1Cos/add_1079_25 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1147 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d2_i57 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d2_i56 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20021 \CIC1Cos/add_1079_23 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1148 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d2_i55 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d2_i54 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20021 \CIC1Cos/add_1079_21 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1149 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d2_i53 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d2_i52 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20021 \CIC1Cos/add_1079_19 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1150 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d5_i53 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d5_i52 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20021 \CIC1Cos/add_1094_19 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1151 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1108_35 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1152 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1108_33 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1153 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1108_31 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1154 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1108_29 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1155 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1108_27 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1156 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1108_25 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1157 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1108_23 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1158 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1108_21 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1159 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1108_19 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1160 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20022 \CIC1Cos/add_1083_6 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1161 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1108_17 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1162 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1108_15 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1163 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1108_13 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1164 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20022 \CIC1Cos/add_1088_18 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1165 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20022 \CIC1Cos/add_1088_16 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1166 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20022 \CIC1Cos/add_1083_4 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1167 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d5_i59 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d5_i58 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20021 \CIC1Cos/add_1094_25 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1168 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20022 \CIC1Cos/add_1088_14 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1169 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20022 \CIC1Cos/add_1083_16 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1170 ( input B1, A1, B0, A0, output F1, FCO );
  wire   GNDI;

  ccu20025 \CIC1Cos/add_1083_2 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1171 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20022 \CIC1Cos/add_1083_14 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1172 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20022 \CIC1Cos/add_1083_24 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1173 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20022 \CIC1Cos/add_1083_12 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1174 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20022 \CIC1Cos/add_1083_10 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1175 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20022 \CIC1Cos/add_1083_22 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1176 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20022 \CIC1Cos/add_1078_30 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1177 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20022 \CIC1Cos/add_1078_28 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1178 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d2_i51 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d2_i50 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20021 \CIC1Cos/add_1079_17 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1179 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20022 \CIC1Cos/add_1088_12 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1180 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d2_i47 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d2_i46 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20021 \CIC1Cos/add_1079_13 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1181 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d2_i45 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d2_i44 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20021 \CIC1Cos/add_1079_11 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1182 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d2_i49 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d2_i48 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20021 \CIC1Cos/add_1079_15 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1183 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20022 \CIC1Cos/add_1078_26 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1184 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20022 \CIC1Cos/add_1083_8 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1185 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20022 \CIC1Cos/add_1083_20 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1186 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20022 \CIC1Cos/add_1078_24 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1187 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20022 \CIC1Cos/add_1078_22 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1188 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20022 \CIC1Cos/add_1088_10 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1189 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20022 \CIC1Cos/add_1088_8 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1190 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20022 \CIC1Cos/add_1088_6 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1191 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20022 \CIC1Cos/add_1088_4 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1192 ( input B1, A1, B0, A0, output F1, FCO );
  wire   GNDI;

  ccu20025 \CIC1Cos/add_1088_2 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1193 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d4_i71 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d4_i70 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20021 \CIC1Cos/add_1089_37 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1());

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1194 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1108_11 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1195 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d4_i69 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d4_i68 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20021 \CIC1Cos/add_1089_35 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1196 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d4_i67 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d4_i66 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20021 \CIC1Cos/add_1089_33 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1197 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d4_i65 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d4_i64 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20021 \CIC1Cos/add_1089_31 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1198 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d4_i63 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d4_i62 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20021 \CIC1Cos/add_1089_29 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1199 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d4_i61 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d4_i60 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20021 \CIC1Cos/add_1089_27 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1200 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d4_i59 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d4_i58 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20021 \CIC1Cos/add_1089_25 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1201 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d4_i57 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d4_i56 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20021 \CIC1Cos/add_1089_23 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1202 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d4_i55 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d4_i54 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20021 \CIC1Cos/add_1089_21 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1203 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d4_i53 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d4_i52 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20021 \CIC1Cos/add_1089_19 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1204 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d4_i51 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d4_i50 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20021 \CIC1Cos/add_1089_17 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1205 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d4_i49 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d4_i48 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20021 \CIC1Cos/add_1089_15 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1206 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d4_i47 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d4_i46 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20021 \CIC1Cos/add_1089_13 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1207 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d4_i45 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d4_i44 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20021 \CIC1Cos/add_1089_11 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1208 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d4_i43 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d4_i42 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20021 \CIC1Cos/add_1089_9 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1209 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d4_i41 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d4_i40 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20021 \CIC1Cos/add_1089_7 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1210 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d4_i39 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d4_i38 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20021 \CIC1Cos/add_1089_5 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1211 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d4_i37 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d4_i36 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20021 \CIC1Cos/add_1089_3 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1212 ( input A1, output FCO );
  wire   GNDI;

  ccu20002 \CIC1Cos/add_1089_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1213 ( input B1, A1, B0, A0, FCI, output F0, F1 );
  wire   GNDI;

  ccu20022 \CIC1Cos/add_1093_36 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1214 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20022 \CIC1Cos/add_1093_34 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1215 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20022 \CIC1Cos/add_1093_32 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1216 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20022 \CIC1Cos/add_1093_30 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1217 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20022 \CIC1Cos/add_1093_28 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1218 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20022 \CIC1Cos/add_1093_26 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1219 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20022 \CIC1Cos/add_1093_24 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1220 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20022 \CIC1Cos/add_1093_22 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1221 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20022 \CIC1Cos/add_1093_20 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1222 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20022 \CIC1Cos/add_1093_18 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1223 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20022 \CIC1Cos/add_1093_16 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1224 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20022 \CIC1Cos/add_1093_14 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1225 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20022 \CIC1Cos/add_1093_12 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1226 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20022 \CIC1Cos/add_1093_10 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1227 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20022 \CIC1Cos/add_1093_8 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1228 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20022 \CIC1Cos/add_1093_6 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1229 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20022 \CIC1Cos/add_1093_4 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1230 ( input B1, A1, B0, A0, output F1, FCO );
  wire   GNDI;

  ccu20025 \CIC1Cos/add_1093_2 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1231 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1108_9 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1232 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1108_7 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1233 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1108_5 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1234 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1108_3 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1235 ( input B1, A1, output F1, FCO );
  wire   GNDI;

  ccu20023 \CIC1Cos/add_1108_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1236 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d6_i0_i71 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d6_i0_i70 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Cos/add_1109_37 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1());

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1237 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d6_i0_i69 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d6_i0_i68 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Cos/add_1109_35 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1238 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d6_i0_i67 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d6_i0_i66 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Cos/add_1109_33 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1239 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d6_i0_i65 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d6_i0_i64 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Cos/add_1109_31 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1240 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d6_i0_i63 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d6_i0_i62 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Cos/add_1109_29 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1241 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d6_i0_i61 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d6_i0_i60 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Cos/add_1109_27 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1242 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d6_i0_i59 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d6_i0_i58 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Cos/add_1109_25 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1243 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d6_i0_i57 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d6_i0_i56 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Cos/add_1109_23 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1244 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d6_i0_i55 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d6_i0_i54 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Cos/add_1109_21 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1245 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d6_i0_i53 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d6_i0_i52 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Cos/add_1109_19 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1246 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d6_i0_i51 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d6_i0_i50 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Cos/add_1109_17 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1247 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d6_i0_i49 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d6_i0_i48 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Cos/add_1109_15 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1248 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d6_i0_i47 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d6_i0_i46 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Cos/add_1109_13 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1249 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d6_i0_i45 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d6_i0_i44 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Cos/add_1109_11 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1250 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d6_i0_i43 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d6_i0_i42 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Cos/add_1109_9 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1251 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d6_i0_i41 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d6_i0_i40 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Cos/add_1109_7 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1252 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d6_i0_i39 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d6_i0_i38 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Cos/add_1109_5 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1253 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d6_i0_i37 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d6_i0_i36 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Cos/add_1109_3 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1254 ( input A1, output FCO );
  wire   GNDI;

  ccu20002 \CIC1Cos/add_1109_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1255 ( input B0, A0, FCI, output F0 );
  wire   GNDI;

  ccu20003 \CIC1Cos/add_1113_37 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(), 
    .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1256 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1113_35 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1257 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1113_33 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1258 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1113_31 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1259 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1113_29 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1260 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1113_27 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1261 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1113_25 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1262 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1113_23 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1263 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1113_21 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1264 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1113_19 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1265 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1113_17 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1266 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1113_15 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1267 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1113_13 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1268 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1113_11 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1269 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1113_9 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1270 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1113_7 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1271 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1113_5 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1272 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1113_3 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1273 ( input B1, A1, output F1, FCO );
  wire   GNDI;

  ccu20023 \CIC1Cos/add_1113_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1274 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d7_i0_i71 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d7_i0_i70 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Cos/add_1114_37 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1());

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1275 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d7_i0_i69 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d7_i0_i68 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Cos/add_1114_35 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1276 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d7_i0_i67 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d7_i0_i66 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Cos/add_1114_33 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1277 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d7_i0_i65 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d7_i0_i64 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Cos/add_1114_31 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1278 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d7_i0_i63 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d7_i0_i62 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Cos/add_1114_29 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1279 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d7_i0_i61 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d7_i0_i60 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Cos/add_1114_27 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1280 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d7_i0_i59 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d7_i0_i58 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Cos/add_1114_25 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1281 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d7_i0_i57 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d7_i0_i56 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Cos/add_1114_23 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1282 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d7_i0_i55 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d7_i0_i54 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Cos/add_1114_21 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1283 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d7_i0_i53 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d7_i0_i52 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Cos/add_1114_19 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1284 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d7_i0_i51 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d7_i0_i50 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Cos/add_1114_17 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1285 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d7_i0_i49 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d7_i0_i48 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Cos/add_1114_15 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1286 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d7_i0_i47 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d7_i0_i46 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Cos/add_1114_13 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1287 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d7_i0_i45 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d7_i0_i44 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Cos/add_1114_11 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1288 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d7_i0_i43 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d7_i0_i42 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Cos/add_1114_9 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1289 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d7_i0_i41 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d7_i0_i40 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Cos/add_1114_7 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1290 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d7_i0_i39 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d7_i0_i38 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Cos/add_1114_5 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1291 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d7_i0_i37 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d7_i0_i36 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Cos/add_1114_3 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1292 ( input A1, output FCO );
  wire   GNDI;

  ccu20002 \CIC1Cos/add_1114_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1293 ( input B0, A0, FCI, output F0 );
  wire   GNDI;

  ccu20003 \CIC1Cos/add_1118_37 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(), 
    .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1294 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1118_35 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1295 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1118_33 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1296 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1118_31 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1297 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1118_29 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1298 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1118_27 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1299 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1118_25 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1300 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1118_23 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1301 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1118_21 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1302 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1118_19 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1303 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1118_17 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1304 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1118_15 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1305 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1118_13 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1306 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1118_11 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1307 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1118_9 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1308 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1118_7 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1309 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1118_5 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1310 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1118_3 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1311 ( input B1, A1, output F1, FCO );
  wire   GNDI;

  ccu20023 \CIC1Cos/add_1118_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1312 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d8_i0_i71 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d8_i0_i70 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Cos/add_1119_37 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1());

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1313 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d8_i0_i69 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d8_i0_i68 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Cos/add_1119_35 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1314 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d8_i0_i67 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d8_i0_i66 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Cos/add_1119_33 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1315 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d8_i0_i65 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d8_i0_i64 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Cos/add_1119_31 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1316 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d8_i0_i63 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d8_i0_i62 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Cos/add_1119_29 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1317 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d8_i0_i61 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d8_i0_i60 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Cos/add_1119_27 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1318 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d8_i0_i59 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d8_i0_i58 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Cos/add_1119_25 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1319 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d8_i0_i57 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d8_i0_i56 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Cos/add_1119_23 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1320 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d8_i0_i55 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d8_i0_i54 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Cos/add_1119_21 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1321 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d8_i0_i53 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d8_i0_i52 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Cos/add_1119_19 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1322 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d8_i0_i51 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d8_i0_i50 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Cos/add_1119_17 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1323 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d8_i0_i49 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d8_i0_i48 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Cos/add_1119_15 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1324 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d8_i0_i47 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d8_i0_i46 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Cos/add_1119_13 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1325 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d8_i0_i45 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d8_i0_i44 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Cos/add_1119_11 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1326 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d8_i0_i43 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d8_i0_i42 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Cos/add_1119_9 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1327 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d8_i0_i41 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d8_i0_i40 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Cos/add_1119_7 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1328 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d8_i0_i39 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d8_i0_i38 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Cos/add_1119_5 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1329 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d8_i0_i37 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d8_i0_i36 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Cos/add_1119_3 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1330 ( input A1, output FCO );
  wire   GNDI;

  ccu20002 \CIC1Cos/add_1119_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1331 ( input B0, A0, FCI, output F0 );
  wire   GNDI;

  ccu20003 \CIC1Cos/add_1123_37 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(), 
    .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1332 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1123_35 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1333 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1123_33 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1334 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1123_31 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1335 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1123_29 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1336 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1123_27 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1337 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1123_25 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1338 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1123_23 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1339 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1123_21 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1340 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1123_19 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1341 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1123_17 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1342 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1123_15 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1343 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1123_13 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1344 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1123_11 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1345 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1123_9 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1346 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1123_7 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1347 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1123_5 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1348 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1123_3 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1349 ( input B1, A1, output F1, FCO );
  wire   GNDI;

  ccu20023 \CIC1Cos/add_1123_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1350 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d9_i0_i71 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d9_i0_i70 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Cos/add_1124_37 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1());

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1351 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d9_i0_i69 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d9_i0_i68 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Cos/add_1124_35 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1352 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d9_i0_i67 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d9_i0_i66 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Cos/add_1124_33 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1353 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d9_i0_i65 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d9_i0_i64 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Cos/add_1124_31 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1354 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d9_i0_i63 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d9_i0_i62 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Cos/add_1124_29 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1355 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d9_i0_i61 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d9_i0_i60 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Cos/add_1124_27 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1356 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d9_i0_i59 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d9_i0_i58 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Cos/add_1124_25 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1357 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d9_i0_i57 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d9_i0_i56 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Cos/add_1124_23 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1358 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d9_i0_i55 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d9_i0_i54 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Cos/add_1124_21 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1359 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d9_i0_i53 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d9_i0_i52 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Cos/add_1124_19 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1360 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d9_i0_i51 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d9_i0_i50 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Cos/add_1124_17 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1361 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d9_i0_i49 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d9_i0_i48 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Cos/add_1124_15 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1362 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d9_i0_i47 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d9_i0_i46 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Cos/add_1124_13 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1363 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d9_i0_i45 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d9_i0_i44 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Cos/add_1124_11 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1364 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d9_i0_i43 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d9_i0_i42 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Cos/add_1124_9 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1365 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d9_i0_i41 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d9_i0_i40 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Cos/add_1124_7 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1366 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d9_i0_i39 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d9_i0_i38 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Cos/add_1124_5 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1367 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d9_i0_i37 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d9_i0_i36 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Cos/add_1124_3 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1368 ( input A1, output FCO );
  wire   GNDI;

  ccu20002 \CIC1Cos/add_1124_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1369 ( input B0, A0, FCI, output F0 );
  wire   GNDI;

  ccu20003 \CIC1Cos/add_1128_37 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(), 
    .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1370 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1128_35 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1371 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1128_33 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1372 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1128_31 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1373 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1128_29 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1374 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1128_27 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1375 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1128_25 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1376 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1128_23 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1377 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1128_21 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1378 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1128_19 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1379 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1128_17 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1380 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1128_15 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1381 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1128_13 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1382 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1128_11 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1383 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1128_9 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1384 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1128_7 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1385 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1128_5 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1386 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1128_3 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1387 ( input B1, A1, output FCO );
  wire   GNDI;

  ccu20023 \CIC1Cos/add_1128_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1388 ( input B0, A0, FCI, output F0 );
  wire   GNDI;

  ccu20003 \CIC1Cos/add_1129_37 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(), 
    .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1389 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1129_35 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1390 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1129_33 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1391 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1129_31 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1392 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1129_29 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1393 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1129_27 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1394 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1129_25 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1395 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1129_23 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1396 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1129_21 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1397 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1129_19 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1398 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1129_17 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1399 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1129_15 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1400 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1129_13 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1401 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1129_11 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1402 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1129_9 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1403 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1129_7 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1404 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1129_5 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1405 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1129_3 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1406 ( input B1, A1, output FCO );
  wire   GNDI;

  ccu20005 \CIC1Cos/add_1129_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1407 ( input A0, DI0, LSR, CLK, FCI, output F0, Q0 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly, LSR_dly;

  vmuxregsre0006 \CIC1Cos/count__i15 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ccu20026 \CIC1Cos/add_10_17 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(), 
    .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1408 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0006 \CIC1Cos/count__i14 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0006 \CIC1Cos/count__i13 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20008 \CIC1Cos/add_10_15 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1409 ( input A1, A0, DI1, LSR, CLK, FCI, output F0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, LSR_dly;

  vmuxregsre0006 \CIC1Cos/count__i12 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ccu20008 \CIC1Cos/add_10_13 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1410 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0006 \CIC1Cos/count__i10 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0006 \CIC1Cos/count__i9 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20008 \CIC1Cos/add_10_11 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1411 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0006 \CIC1Cos/count__i8 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0006 \CIC1Cos/count__i7 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20008 \CIC1Cos/add_10_9 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1412 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0006 \CIC1Cos/count__i6 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0006 \CIC1Cos/count__i5 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20008 \CIC1Cos/add_10_7 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1413 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0006 \CIC1Cos/count__i4 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0006 \CIC1Cos/count__i3 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20008 \CIC1Cos/add_10_5 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1414 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0006 \CIC1Cos/count__i2 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0006 \CIC1Cos/count__i1 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20008 \CIC1Cos/add_10_3 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1415 ( input A1, output F1, FCO );
  wire   GNDI;

  ccu20011 \CIC1Cos/add_10_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1416 ( input FCI, output F0 );
  wire   GNDI;

  ccu20027 \CIC1Cos/add_1092_cout ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(), 
    .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (FCI => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1417 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d5_i35 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d5_i34 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 \CIC1Cos/add_1092_36 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1418 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d5_i33 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d5_i32 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 \CIC1Cos/add_1092_34 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1419 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d5_i31 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d5_i30 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 \CIC1Cos/add_1092_32 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1420 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d5_i29 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d5_i28 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 \CIC1Cos/add_1092_30 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1421 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d5_i27 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d5_i26 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 \CIC1Cos/add_1092_28 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1422 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d5_i25 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d5_i24 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 \CIC1Cos/add_1092_26 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1423 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d5_i23 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d5_i22 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 \CIC1Cos/add_1092_24 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1424 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d5_i21 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d5_i20 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 \CIC1Cos/add_1092_22 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1425 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d5_i19 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d5_i18 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 \CIC1Cos/add_1092_20 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1426 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d5_i17 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d5_i16 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 \CIC1Cos/add_1092_18 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1427 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d5_i15 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d5_i14 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 \CIC1Cos/add_1092_16 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1428 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d5_i13 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d5_i12 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 \CIC1Cos/add_1092_14 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1429 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d5_i11 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d5_i10 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 \CIC1Cos/add_1092_12 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1430 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d5_i9 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d5_i8 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 \CIC1Cos/add_1092_10 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1431 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d5_i7 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d5_i6 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 \CIC1Cos/add_1092_8 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1432 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d5_i5 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d5_i4 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 \CIC1Cos/add_1092_6 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1433 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d5_i3 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d5_i2 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 \CIC1Cos/add_1092_4 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1434 ( input B1, A1, B0, A0, DI1, CLK, output F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly;

  vmuxregsre \CIC1Cos/d5_i1 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ccu20025 \CIC1Cos/add_1092_2 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1435 ( input FCI, output F0 );
  wire   GNDI;

  ccu20027 \CIC1Cos/add_1087_cout ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(), 
    .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (FCI => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1436 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d4_i35 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d4_i34 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 \CIC1Cos/add_1087_36 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1437 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d4_i33 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d4_i32 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 \CIC1Cos/add_1087_34 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1438 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d4_i31 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d4_i30 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 \CIC1Cos/add_1087_32 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1439 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d4_i29 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d4_i28 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 \CIC1Cos/add_1087_30 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1440 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d4_i27 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d4_i26 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 \CIC1Cos/add_1087_28 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1441 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d4_i25 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d4_i24 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 \CIC1Cos/add_1087_26 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1442 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d4_i23 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d4_i22 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 \CIC1Cos/add_1087_24 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1443 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d4_i21 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d4_i20 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 \CIC1Cos/add_1087_22 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1444 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d4_i19 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d4_i18 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 \CIC1Cos/add_1087_20 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1445 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d4_i17 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d4_i16 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 \CIC1Cos/add_1087_18 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1446 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d4_i15 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d4_i14 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 \CIC1Cos/add_1087_16 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1447 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d4_i13 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d4_i12 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 \CIC1Cos/add_1087_14 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1448 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d4_i11 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d4_i10 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 \CIC1Cos/add_1087_12 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1449 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d4_i9 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d4_i8 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 \CIC1Cos/add_1087_10 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1450 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d4_i7 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d4_i6 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 \CIC1Cos/add_1087_8 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1451 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d4_i5 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d4_i4 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 \CIC1Cos/add_1087_6 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1452 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d4_i3 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d4_i2 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 \CIC1Cos/add_1087_4 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1453 ( input B1, A1, B0, A0, DI1, CLK, output F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly;

  vmuxregsre \CIC1Cos/d4_i1 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ccu20025 \CIC1Cos/add_1087_2 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1454 ( input FCI, output F0 );
  wire   GNDI;

  ccu20027 \CIC1Cos/add_1082_cout ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(), 
    .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (FCI => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1455 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d3_i35 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d3_i34 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 \CIC1Cos/add_1082_36 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1456 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d3_i33 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d3_i32 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 \CIC1Cos/add_1082_34 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1457 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d3_i31 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d3_i30 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 \CIC1Cos/add_1082_32 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1458 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d3_i29 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d3_i28 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 \CIC1Cos/add_1082_30 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1459 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d3_i27 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d3_i26 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 \CIC1Cos/add_1082_28 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1460 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d3_i25 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d3_i24 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 \CIC1Cos/add_1082_26 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1461 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d3_i23 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d3_i22 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 \CIC1Cos/add_1082_24 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1462 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d3_i21 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d3_i20 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 \CIC1Cos/add_1082_22 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1463 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d3_i19 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d3_i18 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 \CIC1Cos/add_1082_20 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1464 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d3_i17 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d3_i16 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 \CIC1Cos/add_1082_18 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1465 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d3_i15 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d3_i14 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 \CIC1Cos/add_1082_16 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1466 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d3_i13 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d3_i12 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 \CIC1Cos/add_1082_14 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1467 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d3_i11 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d3_i10 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 \CIC1Cos/add_1082_12 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1468 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d3_i9 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d3_i8 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 \CIC1Cos/add_1082_10 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1469 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d3_i7 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d3_i6 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 \CIC1Cos/add_1082_8 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1470 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d3_i5 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d3_i4 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 \CIC1Cos/add_1082_6 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1471 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d3_i3 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d3_i2 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 \CIC1Cos/add_1082_4 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1472 ( input B1, A1, B0, A0, DI1, CLK, output F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly;

  vmuxregsre \CIC1Cos/d3_i1 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ccu20025 \CIC1Cos/add_1082_2 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1473 ( input FCI, output F0 );
  wire   GNDI;

  ccu20027 \CIC1Cos/add_1077_cout ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(), 
    .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (FCI => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1474 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d2_i35 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d2_i34 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 \CIC1Cos/add_1077_36 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1475 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d2_i33 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d2_i32 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 \CIC1Cos/add_1077_34 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1476 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d2_i31 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d2_i30 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 \CIC1Cos/add_1077_32 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1477 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d2_i29 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d2_i28 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 \CIC1Cos/add_1077_30 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1478 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d2_i27 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d2_i26 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 \CIC1Cos/add_1077_28 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1479 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d2_i25 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d2_i24 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 \CIC1Cos/add_1077_26 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1480 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d2_i23 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d2_i22 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 \CIC1Cos/add_1077_24 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1481 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d2_i21 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d2_i20 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 \CIC1Cos/add_1077_22 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1482 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d2_i19 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d2_i18 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 \CIC1Cos/add_1077_20 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1483 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d2_i17 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d2_i16 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 \CIC1Cos/add_1077_18 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1484 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d2_i15 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d2_i14 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 \CIC1Cos/add_1077_16 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1485 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d2_i13 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d2_i12 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 \CIC1Cos/add_1077_14 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1486 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d2_i11 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d2_i10 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 \CIC1Cos/add_1077_12 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1487 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d2_i9 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d2_i8 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 \CIC1Cos/add_1077_10 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1488 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d2_i7 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d2_i6 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 \CIC1Cos/add_1077_8 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1489 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d2_i5 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d2_i4 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 \CIC1Cos/add_1077_6 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1490 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d2_i3 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d2_i2 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 \CIC1Cos/add_1077_4 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1491 ( input B1, A1, B0, A0, DI1, CLK, output F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly;

  vmuxregsre \CIC1Cos/d2_i1 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ccu20025 \CIC1Cos/add_1077_2 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1492 ( input FCI, output F0 );
  wire   GNDI;

  ccu20027 \CIC1Cos/add_1072_cout ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(), 
    .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (FCI => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1493 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d1_i35 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d1_i34 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 \CIC1Cos/add_1072_36 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1494 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d1_i33 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d1_i32 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 \CIC1Cos/add_1072_34 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1495 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d1_i31 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d1_i30 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 \CIC1Cos/add_1072_32 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1496 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d1_i29 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d1_i28 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 \CIC1Cos/add_1072_30 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1497 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d1_i27 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d1_i26 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 \CIC1Cos/add_1072_28 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1498 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d1_i25 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d1_i24 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 \CIC1Cos/add_1072_26 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1499 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d1_i23 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d1_i22 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 \CIC1Cos/add_1072_24 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1500 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d1_i21 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d1_i20 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 \CIC1Cos/add_1072_22 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1501 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d1_i19 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d1_i18 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 \CIC1Cos/add_1072_20 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1502 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d1_i17 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d1_i16 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 \CIC1Cos/add_1072_18 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1503 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d1_i15 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d1_i14 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 \CIC1Cos/add_1072_16 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1504 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d1_i13 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d1_i12 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 \CIC1Cos/add_1072_14 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1505 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d1_i11 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d1_i10 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 \CIC1Cos/add_1072_12 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1506 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d1_i9 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d1_i8 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 \CIC1Cos/add_1072_10 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1507 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d1_i7 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d1_i6 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 \CIC1Cos/add_1072_8 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1508 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d1_i5 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d1_i4 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 \CIC1Cos/add_1072_6 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1509 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d1_i3 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d1_i2 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 \CIC1Cos/add_1072_4 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1510 ( input B1, A1, B0, A0, DI1, CLK, output F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly;

  vmuxregsre \CIC1Cos/d1_i1 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ccu20025 \CIC1Cos/add_1072_2 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1511 ( input B0, A0, FCI, output F1 );
  wire   GNDI;

  ccu20003 \CIC1Cos/add_1127_37 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(F1), 
    .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F1) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1512 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1127_35 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1513 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1127_33 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1514 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1127_31 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1515 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1127_29 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1516 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1127_27 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1517 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1127_25 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1518 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1127_23 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1519 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1127_21 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1520 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1127_19 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1521 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1127_17 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1522 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1127_15 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1523 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1127_13 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1524 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1127_11 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1525 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1127_9 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1526 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1127_7 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1527 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1127_5 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1528 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1127_3 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1529 ( input B1, A1, output FCO );
  wire   GNDI;

  ccu20005 \CIC1Cos/add_1127_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1530 ( input B0, A0, DI0, CE, CLK, FCI, output F0, Q0, F1 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly, CE_dly;

  vmuxregsre \CIC1Cos/d9_i0_i35 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ccu20003 \CIC1Cos/add_1122_37 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1());

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1531 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d9_i0_i34 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d9_i0_i33 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Cos/add_1122_35 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1532 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d9_i0_i32 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d9_i0_i31 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Cos/add_1122_33 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1533 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d9_i0_i30 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d9_i0_i29 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Cos/add_1122_31 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1534 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d9_i0_i28 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d9_i0_i27 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Cos/add_1122_29 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1535 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d9_i0_i26 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d9_i0_i25 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Cos/add_1122_27 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1536 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d9_i0_i24 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d9_i0_i23 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Cos/add_1122_25 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1537 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d9_i0_i22 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d9_i0_i21 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Cos/add_1122_23 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1538 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d9_i0_i20 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d9_i0_i19 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Cos/add_1122_21 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1539 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d9_i0_i18 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d9_i0_i17 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Cos/add_1122_19 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1540 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d9_i0_i16 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d9_i0_i15 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Cos/add_1122_17 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1541 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d9_i0_i14 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d9_i0_i13 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Cos/add_1122_15 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1542 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d9_i0_i12 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d9_i0_i11 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Cos/add_1122_13 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1543 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d9_i0_i10 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d9_i0_i9 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Cos/add_1122_11 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1544 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d9_i0_i8 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d9_i0_i7 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Cos/add_1122_9 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1545 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d9_i0_i6 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d9_i0_i5 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Cos/add_1122_7 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1546 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d9_i0_i4 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d9_i0_i3 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Cos/add_1122_5 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1547 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d9_i0_i2 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d9_i0_i1 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Cos/add_1122_3 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1548 ( input B1, A1, DI1, CE, CLK, output F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, CE_dly;

  vmuxregsre \CIC1Cos/d9_i0_i0 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ccu20005 \CIC1Cos/add_1122_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1549 ( input B0, A0, DI0, CE, CLK, FCI, output F0, Q0, F1 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly, CE_dly;

  vmuxregsre \CIC1Cos/d8_i0_i35 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ccu20003 \CIC1Cos/add_1117_37 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1());

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1550 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d8_i0_i34 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d8_i0_i33 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Cos/add_1117_35 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1551 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d8_i0_i32 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d8_i0_i31 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Cos/add_1117_33 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1552 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d8_i0_i30 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d8_i0_i29 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Cos/add_1117_31 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1553 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d8_i0_i28 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d8_i0_i27 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Cos/add_1117_29 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1554 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d8_i0_i26 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d8_i0_i25 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Cos/add_1117_27 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1555 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d8_i0_i24 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d8_i0_i23 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Cos/add_1117_25 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1556 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d8_i0_i22 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d8_i0_i21 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Cos/add_1117_23 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1557 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d8_i0_i20 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d8_i0_i19 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Cos/add_1117_21 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1558 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d8_i0_i18 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d8_i0_i17 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Cos/add_1117_19 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1559 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d8_i0_i16 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d8_i0_i15 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Cos/add_1117_17 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1560 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d8_i0_i14 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d8_i0_i13 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Cos/add_1117_15 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1561 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d8_i0_i12 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d8_i0_i11 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Cos/add_1117_13 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1562 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d8_i0_i10 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d8_i0_i9 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Cos/add_1117_11 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1563 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d8_i0_i8 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d8_i0_i7 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Cos/add_1117_9 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1564 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d8_i0_i6 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d8_i0_i5 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Cos/add_1117_7 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1565 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d8_i0_i4 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d8_i0_i3 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Cos/add_1117_5 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1566 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d8_i0_i2 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d8_i0_i1 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Cos/add_1117_3 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1567 ( input B1, A1, DI1, CE, CLK, output F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, CE_dly;

  vmuxregsre \CIC1Cos/d8_i0_i0 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ccu20005 \CIC1Cos/add_1117_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1568 ( input B0, A0, DI0, CE, CLK, FCI, output F0, Q0, F1 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly, CE_dly;

  vmuxregsre \CIC1Cos/d7_i0_i35 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ccu20003 \CIC1Cos/add_1112_37 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1());

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1569 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d7_i0_i34 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d7_i0_i33 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Cos/add_1112_35 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1570 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d7_i0_i32 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d7_i0_i31 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Cos/add_1112_33 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1571 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d7_i0_i30 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d7_i0_i29 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Cos/add_1112_31 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1572 ( input B1, A1, B0, A0, DI0, CE, CLK, FCI, output F0, 
    Q0, F1, FCO );
  wire   VCCI, GNDI, DI0_dly, CLK_dly, CE_dly;

  vmuxregsre \CIC1Cos/d7_i0_i27 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ccu20004 \CIC1Cos/add_1112_29 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1573 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d7_i0_i26 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d7_i0_i25 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Cos/add_1112_27 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1574 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d7_i0_i24 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d7_i0_i23 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Cos/add_1112_25 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1575 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d7_i0_i22 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d7_i0_i21 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Cos/add_1112_23 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1576 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d7_i0_i20 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d7_i0_i19 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Cos/add_1112_21 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1577 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d7_i0_i18 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d7_i0_i17 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Cos/add_1112_19 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1578 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d7_i0_i16 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d7_i0_i15 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Cos/add_1112_17 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1579 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d7_i0_i14 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d7_i0_i13 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Cos/add_1112_15 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1580 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d7_i0_i12 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d7_i0_i11 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Cos/add_1112_13 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1581 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d7_i0_i10 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d7_i0_i9 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Cos/add_1112_11 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1582 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d7_i0_i8 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d7_i0_i7 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Cos/add_1112_9 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1583 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d7_i0_i6 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d7_i0_i5 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Cos/add_1112_7 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1584 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d7_i0_i4 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d7_i0_i3 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Cos/add_1112_5 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1585 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d7_i0_i2 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d7_i0_i1 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Cos/add_1112_3 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1586 ( input B1, A1, DI1, CE, CLK, output F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, CE_dly;

  vmuxregsre \CIC1Cos/d7_i0_i0 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ccu20005 \CIC1Cos/add_1112_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1587 ( input B0, A0, DI0, CE, CLK, FCI, output F0, Q0, F1 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly, CE_dly;

  vmuxregsre \CIC1Cos/d6_i0_i35 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ccu20003 \CIC1Cos/add_1107_37 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1());

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1588 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d6_i0_i34 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d6_i0_i33 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Cos/add_1107_35 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1589 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d6_i0_i32 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d6_i0_i31 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Cos/add_1107_33 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1590 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d6_i0_i30 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d6_i0_i29 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Cos/add_1107_31 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1591 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d6_i0_i28 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d6_i0_i27 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Cos/add_1107_29 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1592 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d6_i0_i26 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d6_i0_i25 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Cos/add_1107_27 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1593 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d6_i0_i24 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d6_i0_i23 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Cos/add_1107_25 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1594 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d6_i0_i22 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d6_i0_i21 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Cos/add_1107_23 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1595 ( input B1, A1, B0, A0, DI0, CE, CLK, FCI, output F0, 
    Q0, F1, FCO );
  wire   VCCI, GNDI, DI0_dly, CLK_dly, CE_dly;

  vmuxregsre \CIC1Cos/d6_i0_i19 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ccu20004 \CIC1Cos/add_1107_21 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1596 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d6_i0_i18 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d6_i0_i17 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Cos/add_1107_19 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1597 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d6_i0_i16 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d6_i0_i15 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Cos/add_1107_17 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1598 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d6_i0_i14 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d6_i0_i13 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Cos/add_1107_15 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1599 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d6_i0_i12 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d6_i0_i11 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Cos/add_1107_13 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1600 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d6_i0_i10 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d6_i0_i9 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Cos/add_1107_11 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1601 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d6_i0_i8 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d6_i0_i7 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Cos/add_1107_9 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1602 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d6_i0_i6 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d6_i0_i5 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Cos/add_1107_7 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1603 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d6_i0_i4 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d6_i0_i3 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Cos/add_1107_5 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1604 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d6_i0_i2 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d6_i0_i1 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Cos/add_1107_3 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1605 ( input B1, A1, DI1, CE, CLK, output F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, CE_dly;

  vmuxregsre \CIC1Cos/d6_i0_i0 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ccu20005 \CIC1Cos/add_1107_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1606 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d1_i37 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d1_i36 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20021 \CIC1Cos/add_1074_3 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1607 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d5_i51 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d5_i50 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20021 \CIC1Cos/add_1094_17 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1608 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d1_i45 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d1_i44 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20021 \CIC1Cos/add_1074_11 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1609 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d1_i71 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d1_i70 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20021 \CIC1Cos/add_1074_37 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1());

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1610 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d1_i69 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d1_i68 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20021 \CIC1Cos/add_1074_35 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1611 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d1_i67 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d1_i66 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20021 \CIC1Cos/add_1074_33 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1612 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d1_i65 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d1_i64 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20021 \CIC1Cos/add_1074_31 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1613 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d1_i63 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d1_i62 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20021 \CIC1Cos/add_1074_29 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1614 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d1_i61 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d1_i60 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20021 \CIC1Cos/add_1074_27 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1615 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d1_i59 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d1_i58 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20021 \CIC1Cos/add_1074_25 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1616 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d1_i57 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d1_i56 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20021 \CIC1Cos/add_1074_23 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1617 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d1_i55 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d1_i54 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20021 \CIC1Cos/add_1074_21 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1618 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d1_i53 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d1_i52 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20021 \CIC1Cos/add_1074_19 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1619 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d1_i51 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d1_i50 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20021 \CIC1Cos/add_1074_17 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1620 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d1_i43 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d1_i42 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20021 \CIC1Cos/add_1074_9 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1621 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d1_i41 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d1_i40 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20021 \CIC1Cos/add_1074_7 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1622 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d1_i39 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d1_i38 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20021 \CIC1Cos/add_1074_5 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1623 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d1_i49 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d1_i48 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20021 \CIC1Cos/add_1074_15 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1624 ( input B1, A1, B0, A0, FCI, output F0, F1 );
  wire   GNDI;

  ccu20022 \CIC1Cos/add_1073_36 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1625 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d1_i47 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d1_i46 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20021 \CIC1Cos/add_1074_13 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1626 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20022 \CIC1Cos/add_1073_34 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1627 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d2_i41 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d2_i40 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20021 \CIC1Cos/add_1079_7 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1628 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20022 \CIC1Cos/add_1073_32 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1629 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20022 \CIC1Cos/add_1073_30 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1630 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20022 \CIC1Cos/add_1073_28 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1631 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20022 \CIC1Cos/add_1073_26 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1632 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20022 \CIC1Cos/add_1073_24 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1633 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20022 \CIC1Cos/add_1073_22 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1634 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20022 \CIC1Cos/add_1073_20 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1635 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20022 \CIC1Cos/add_1073_18 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1636 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20022 \CIC1Cos/add_1073_16 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1637 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20022 \CIC1Cos/add_1073_14 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1638 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20022 \CIC1Cos/add_1073_12 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1639 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20022 \CIC1Cos/add_1073_10 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1640 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20022 \CIC1Cos/add_1073_8 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1641 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20022 \CIC1Cos/add_1073_6 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1642 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20022 \CIC1Cos/add_1073_4 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1643 ( input B1, A1, B0, A0, output F1, FCO );
  wire   GNDI;

  ccu20025 \CIC1Cos/add_1073_2 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1644 ( input B0, A0, DI0, CLK, output F0, Q0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly;

  lut4 \AMDemodulator1/i4608_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/ISquare_i1 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut4 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h6666) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module AMDemodulator1_SLICE_1645 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre \AMDemodulator1/MultDataB_i1 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/MultDataB_i0 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1646 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre \AMDemodulator1/MultDataB_i3 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/MultDataB_i2 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1647 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre \AMDemodulator1/MultDataB_i5 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/MultDataB_i4 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1648 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre \AMDemodulator1/MultDataB_i7 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/MultDataB_i6 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1649 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre \AMDemodulator1/MultDataB_i9 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/MultDataB_i8 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1650 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre \AMDemodulator1/MultDataB_i11 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/MultDataB_i10 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1651 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre \AMDemodulator1/MultDataC_i1 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/MultDataC_i0 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1652 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre \AMDemodulator1/MultDataC_i3 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/MultDataC_i2 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1653 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre \AMDemodulator1/MultDataC_i5 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/MultDataC_i4 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1654 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre \AMDemodulator1/MultDataC_i7 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/MultDataC_i6 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1655 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre \AMDemodulator1/MultDataC_i9 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/MultDataC_i8 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1656 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre \AMDemodulator1/MultDataC_i11 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/MultDataC_i10 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1657 ( input M1, M0, CLK, output Q0, 
    Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre \AMDemodulator1/Multiplier1/FF_74 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier1/FF_75 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1658 ( input M1, M0, CLK, output Q0, 
    Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre \AMDemodulator1/Multiplier1/FF_72 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier1/FF_73 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1659 ( input M1, M0, CLK, output Q0, 
    Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre \AMDemodulator1/Multiplier2/FF_74 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier2/FF_75 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1660 ( input M1, M0, CLK, output Q0, 
    Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre \AMDemodulator1/Multiplier2/FF_72 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier2/FF_73 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1661 ( input B0, A0, DI0, CLK, output 
    F0, Q0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly;

  lut40047 \AMDemodulator1/Multiplier1/AND2_t21 ( .A(A0), .B(B0), .C(GNDI), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier1/FF_33 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40047 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h8888) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module AMDemodulator1_Multiplier1_SLICE_1662 ( input B0, A0, DI0, CLK, output 
    F0, Q0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly;

  lut40047 \AMDemodulator1/Multiplier1/AND2_t15 ( .A(A0), .B(B0), .C(GNDI), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier1/FF_15 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1663 ( input M1, M0, CLK, output Q0, 
    Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre \AMDemodulator1/Multiplier1/FF_97 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier1/FF_98 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1664 ( input M1, M0, CLK, output Q0, 
    Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre \AMDemodulator1/Multiplier1/FF_95 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier1/FF_96 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1665 ( input M1, M0, CLK, output Q0, 
    Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre \AMDemodulator1/Multiplier1/FF_93 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier1/FF_94 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1666 ( input M1, M0, CLK, output Q0, 
    Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre \AMDemodulator1/Multiplier1/FF_91 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier1/FF_92 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1667 ( input M1, M0, CLK, output Q0, 
    Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre \AMDemodulator1/Multiplier1/FF_89 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier1/FF_90 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1669 ( input M1, M0, CLK, output Q0, 
    Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre \AMDemodulator1/Multiplier1/FF_86 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier1/FF_87 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1670 ( input M1, M0, CLK, output Q0, 
    Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre \AMDemodulator1/Multiplier1/FF_84 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier1/FF_85 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1671 ( input M1, M0, CLK, output Q0, 
    Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre \AMDemodulator1/Multiplier1/FF_82 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier1/FF_83 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1672 ( input M1, M0, CLK, output Q0, 
    Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre \AMDemodulator1/Multiplier1/FF_80 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier1/FF_81 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1673 ( input M1, M0, CLK, output Q0, 
    Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre \AMDemodulator1/Multiplier1/FF_78 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier1/FF_79 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1674 ( input M1, M0, CLK, output Q0, 
    Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre \AMDemodulator1/Multiplier1/FF_76 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier1/FF_77 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1675 ( input M0, CLK, output Q0 );
  wire   VCCI, GNDI, M0_dly, CLK_dly;

  vmuxregsre \AMDemodulator1/Multiplier1/FF_51 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1676 ( input B0, A0, DI0, CLK, output 
    F0, Q0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly;

  lut40047 \AMDemodulator1/Multiplier2/AND2_t21 ( .A(A0), .B(B0), .C(GNDI), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier2/FF_33 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1677 ( input B0, A0, DI0, CLK, output 
    F0, Q0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly;

  lut40047 \AMDemodulator1/Multiplier2/AND2_t15 ( .A(A0), .B(B0), .C(GNDI), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier2/FF_15 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1678 ( input M1, M0, CLK, output Q0, 
    Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre \AMDemodulator1/Multiplier2/FF_97 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier2/FF_98 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1679 ( input M1, M0, CLK, output Q0, 
    Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre \AMDemodulator1/Multiplier2/FF_95 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier2/FF_96 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1680 ( input M1, M0, CLK, output Q0, 
    Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre \AMDemodulator1/Multiplier2/FF_93 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier2/FF_94 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1681 ( input M1, M0, CLK, output Q0, 
    Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre \AMDemodulator1/Multiplier2/FF_91 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier2/FF_92 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1682 ( input M1, M0, CLK, output Q0, 
    Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre \AMDemodulator1/Multiplier2/FF_89 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier2/FF_90 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1684 ( input M1, M0, CLK, output Q0, 
    Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre \AMDemodulator1/Multiplier2/FF_86 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier2/FF_87 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1685 ( input M1, M0, CLK, output Q0, 
    Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre \AMDemodulator1/Multiplier2/FF_84 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier2/FF_85 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1686 ( input M1, M0, CLK, output Q0, 
    Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre \AMDemodulator1/Multiplier2/FF_82 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier2/FF_83 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1687 ( input M1, M0, CLK, output Q0, 
    Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre \AMDemodulator1/Multiplier2/FF_80 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier2/FF_81 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1688 ( input M1, M0, CLK, output Q0, 
    Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre \AMDemodulator1/Multiplier2/FF_78 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier2/FF_79 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1689 ( input M1, M0, CLK, output Q0, 
    Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre \AMDemodulator1/Multiplier2/FF_76 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier2/FF_77 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1690 ( input M0, CLK, output Q0 );
  wire   VCCI, GNDI, M0_dly, CLK_dly;

  vmuxregsre \AMDemodulator1/Multiplier2/FF_51 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1691 ( input A1, C0, B0, A0, DI1, DI0, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40048 \AMDemodulator1/d_out_d_11__I_10_1_lut ( .A(A1), .B(GNDI), .C(GNDI), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40049 \AMDemodulator1/mux_82_i1_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  vmuxregsre \AMDemodulator1/d_out_d__0_i2 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \AMDemodulator1/d_out_d__0_i1 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40048 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h5555) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40049 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h3535) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module AMDemodulator1_SLICE_1692 ( input A1, A0, DI1, DI0, CLK, output F0, Q0, 
    F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40048 \AMDemodulator1/d_out_d_11__I_8_1_lut ( .A(A1), .B(GNDI), .C(GNDI), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40048 \AMDemodulator1/d_out_d_11__I_9_1_lut ( .A(A0), .B(GNDI), .C(GNDI), 
    .D(GNDI), .Z(F0));
  vmuxregsre \AMDemodulator1/d_out_d__0_i4 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \AMDemodulator1/d_out_d__0_i3 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1693 ( input A1, A0, DI1, DI0, CLK, output F0, Q0, 
    F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40048 \AMDemodulator1/d_out_d_11__I_6_1_lut ( .A(A1), .B(GNDI), .C(GNDI), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40048 \AMDemodulator1/d_out_d_11__I_7_1_lut ( .A(A0), .B(GNDI), .C(GNDI), 
    .D(GNDI), .Z(F0));
  vmuxregsre \AMDemodulator1/d_out_d__0_i6 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \AMDemodulator1/d_out_d__0_i5 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1694 ( input A1, A0, DI1, DI0, CLK, output F0, Q0, 
    F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40048 \AMDemodulator1/d_out_d_11__I_4_1_lut ( .A(A1), .B(GNDI), .C(GNDI), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40048 \AMDemodulator1/d_out_d_11__I_5_1_lut ( .A(A0), .B(GNDI), .C(GNDI), 
    .D(GNDI), .Z(F0));
  vmuxregsre \AMDemodulator1/d_out_d__0_i8 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \AMDemodulator1/d_out_d__0_i7 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1695 ( input A1, A0, DI1, DI0, CLK, output F0, Q0, 
    F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40048 \AMDemodulator1/d_out_d_11__I_2_1_lut ( .A(A1), .B(GNDI), .C(GNDI), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40048 \AMDemodulator1/d_out_d_11__I_3_1_lut ( .A(A0), .B(GNDI), .C(GNDI), 
    .D(GNDI), .Z(F0));
  vmuxregsre \AMDemodulator1/d_out_d__0_i10 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \AMDemodulator1/d_out_d__0_i9 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1696 ( input D1, C1, B1, A1, B0, A0, DI0, LSR, CLK, 
    output F0, Q0, F1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, LSR_dly;

  lut40050 \CIC1Cos/i5306_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40051 \CIC1Cos/i2550_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0006 \CIC1Cos/count__i0 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40050 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h8000) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40051 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hBBBB) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module CIC1Cos_SLICE_1697 ( input D1, C1, B1, A1, B0, A0, DI0, LSR, CLK, 
    output F0, Q0, F1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, LSR_dly;

  lut40052 \CIC1Cos/i4_4_lut_adj_25 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40051 \CIC1Cos/i2604_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0006 \CIC1Cos/count__i11 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40052 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFFE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module CIC1Cos_SLICE_1698 ( input C0, B0, A0, DI0, CE, CLK, output F0, Q0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, CE_dly;

  lut40053 \CIC1Cos/mux_1240_i2_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d10__i2 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40053 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hCACA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module CIC1Cos_SLICE_1699 ( input C0, B0, A0, DI0, CE, CLK, output F0, Q0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, CE_dly;

  lut40053 \CIC1Cos/mux_1240_i3_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d10__i3 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1700 ( input B0, A0, DI0, CLK, output F0, Q0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly;

  lut4 \CIC1Cos/i4603_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d1_i0 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1701 ( input B0, A0, DI0, CLK, output F0, Q0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly;

  lut4 \CIC1Cos/i4604_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d2_i0 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1702 ( input B0, A0, DI0, CLK, output F0, Q0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly;

  lut4 \CIC1Cos/i4605_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d3_i0 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1703 ( input B0, A0, DI0, CLK, output F0, Q0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly;

  lut4 \CIC1Cos/i4606_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d4_i0 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1704 ( input B0, A0, DI0, CLK, output F0, Q0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly;

  lut4 \CIC1Cos/i4607_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d5_i0 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1705 ( input M0, CE, CLK, output Q0 );
  wire   VCCI, GNDI, M0_dly, CLK_dly, CE_dly;

  vmuxregsre \CIC1Cos/d6_i0_i20 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1706 ( input M0, CE, CLK, output Q0 );
  wire   VCCI, GNDI, M0_dly, CLK_dly, CE_dly;

  vmuxregsre \CIC1Cos/d7_i0_i28 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1707 ( input M0, CE, CLK, output Q0 );
  wire   VCCI, GNDI, M0_dly, CLK_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d6_i0_i0 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1708 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d6_i0_i2 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d6_i0_i1 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1709 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d6_i0_i4 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d6_i0_i3 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1710 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d6_i0_i6 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d6_i0_i5 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1711 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d6_i0_i8 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d6_i0_i7 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1712 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d6_i0_i10 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d6_i0_i9 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1713 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d6_i0_i12 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d6_i0_i11 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1714 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d6_i0_i14 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d6_i0_i13 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1715 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d6_i0_i16 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d6_i0_i15 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1716 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d6_i0_i18 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d6_i0_i17 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1717 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d6_i0_i20 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d6_i0_i19 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1718 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d6_i0_i22 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d6_i0_i21 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1719 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d6_i0_i24 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d6_i0_i23 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1720 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d6_i0_i26 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d6_i0_i25 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1721 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d6_i0_i28 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d6_i0_i27 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1722 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d6_i0_i30 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d6_i0_i29 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1723 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d6_i0_i32 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d6_i0_i31 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1724 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d6_i0_i34 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d6_i0_i33 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1725 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d6_i0_i36 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d6_i0_i35 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1726 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d6_i0_i38 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d6_i0_i37 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1727 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d6_i0_i40 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d6_i0_i39 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1728 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d6_i0_i42 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d6_i0_i41 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1729 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d6_i0_i44 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d6_i0_i43 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1730 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d6_i0_i46 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d6_i0_i45 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1731 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d6_i0_i48 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d6_i0_i47 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1732 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d6_i0_i50 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d6_i0_i49 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1733 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d6_i0_i52 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d6_i0_i51 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1734 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d6_i0_i54 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d6_i0_i53 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1735 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d6_i0_i56 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d6_i0_i55 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1736 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d6_i0_i58 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d6_i0_i57 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1737 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d6_i0_i60 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d6_i0_i59 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1738 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d6_i0_i62 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d6_i0_i61 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1739 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d6_i0_i64 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d6_i0_i63 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1740 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d6_i0_i66 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d6_i0_i65 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1741 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d6_i0_i68 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d6_i0_i67 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1742 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d6_i0_i70 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d6_i0_i69 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1743 ( input M0, CE, CLK, output Q0 );
  wire   VCCI, GNDI, M0_dly, CLK_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d6_i0_i71 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1744 ( input M0, CE, CLK, output Q0 );
  wire   VCCI, GNDI, M0_dly, CLK_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d7_i0_i0 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1745 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d7_i0_i2 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d7_i0_i1 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1746 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d7_i0_i4 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d7_i0_i3 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1747 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d7_i0_i6 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d7_i0_i5 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1748 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d7_i0_i8 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d7_i0_i7 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1749 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d7_i0_i10 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d7_i0_i9 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1750 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d7_i0_i12 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d7_i0_i11 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1751 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d7_i0_i14 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d7_i0_i13 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1752 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d7_i0_i16 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d7_i0_i15 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1753 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d7_i0_i18 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d7_i0_i17 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1754 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d7_i0_i20 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d7_i0_i19 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1755 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d7_i0_i22 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d7_i0_i21 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1756 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d7_i0_i24 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d7_i0_i23 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1757 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d7_i0_i26 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d7_i0_i25 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1758 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d7_i0_i28 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d7_i0_i27 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1759 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d7_i0_i30 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d7_i0_i29 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1760 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d7_i0_i32 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d7_i0_i31 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1761 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d7_i0_i34 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d7_i0_i33 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1762 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d7_i0_i36 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d7_i0_i35 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1763 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d7_i0_i38 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d7_i0_i37 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1764 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d7_i0_i40 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d7_i0_i39 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1765 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d7_i0_i42 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d7_i0_i41 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1766 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d7_i0_i44 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d7_i0_i43 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1767 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d7_i0_i46 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d7_i0_i45 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1768 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d7_i0_i48 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d7_i0_i47 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1769 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d7_i0_i50 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d7_i0_i49 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1770 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d7_i0_i52 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d7_i0_i51 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1771 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d7_i0_i54 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d7_i0_i53 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1772 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d7_i0_i56 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d7_i0_i55 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1773 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d7_i0_i58 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d7_i0_i57 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1774 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d7_i0_i60 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d7_i0_i59 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1775 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d7_i0_i62 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d7_i0_i61 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1776 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d7_i0_i64 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d7_i0_i63 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1777 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d7_i0_i66 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d7_i0_i65 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1778 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d7_i0_i68 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d7_i0_i67 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1779 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d7_i0_i70 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d7_i0_i69 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1780 ( input M0, CE, CLK, output Q0 );
  wire   VCCI, GNDI, M0_dly, CLK_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d7_i0_i71 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1781 ( input M0, CE, CLK, output Q0 );
  wire   VCCI, GNDI, M0_dly, CLK_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d8_i0_i0 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1782 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d8_i0_i2 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d8_i0_i1 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1783 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d8_i0_i4 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d8_i0_i3 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1784 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d8_i0_i6 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d8_i0_i5 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1785 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d8_i0_i8 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d8_i0_i7 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1786 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d8_i0_i10 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d8_i0_i9 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1787 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d8_i0_i12 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d8_i0_i11 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1788 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d8_i0_i14 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d8_i0_i13 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1789 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d8_i0_i16 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d8_i0_i15 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1790 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d8_i0_i18 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d8_i0_i17 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1791 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d8_i0_i20 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d8_i0_i19 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1792 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d8_i0_i22 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d8_i0_i21 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1793 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d8_i0_i24 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d8_i0_i23 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1794 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d8_i0_i26 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d8_i0_i25 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1795 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d8_i0_i28 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d8_i0_i27 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1796 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d8_i0_i30 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d8_i0_i29 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1797 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d8_i0_i32 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d8_i0_i31 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1798 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d8_i0_i34 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d8_i0_i33 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1799 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d8_i0_i36 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d8_i0_i35 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1800 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d8_i0_i38 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d8_i0_i37 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1801 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d8_i0_i40 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d8_i0_i39 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1802 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d8_i0_i42 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d8_i0_i41 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1803 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d8_i0_i44 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d8_i0_i43 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1804 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d8_i0_i46 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d8_i0_i45 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1805 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d8_i0_i48 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d8_i0_i47 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1806 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d8_i0_i50 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d8_i0_i49 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1807 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d8_i0_i52 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d8_i0_i51 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1808 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d8_i0_i54 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d8_i0_i53 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1809 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d8_i0_i56 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d8_i0_i55 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1810 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d8_i0_i58 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d8_i0_i57 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1811 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d8_i0_i60 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d8_i0_i59 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1812 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d8_i0_i62 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d8_i0_i61 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1813 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d8_i0_i64 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d8_i0_i63 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1814 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d8_i0_i66 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d8_i0_i65 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1815 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d8_i0_i68 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d8_i0_i67 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1816 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d8_i0_i70 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d8_i0_i69 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1817 ( input M0, CE, CLK, output Q0 );
  wire   VCCI, GNDI, M0_dly, CLK_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d8_i0_i71 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1818 ( input M0, CE, CLK, output Q0 );
  wire   VCCI, GNDI, M0_dly, CLK_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d9_i0_i0 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1819 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d9_i0_i2 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d9_i0_i1 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1820 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d9_i0_i4 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d9_i0_i3 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1821 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d9_i0_i6 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d9_i0_i5 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1822 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d9_i0_i8 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d9_i0_i7 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1823 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d9_i0_i10 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d9_i0_i9 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1824 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d9_i0_i12 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d9_i0_i11 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1825 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d9_i0_i14 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d9_i0_i13 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1826 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d9_i0_i16 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d9_i0_i15 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1827 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d9_i0_i18 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d9_i0_i17 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1828 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d9_i0_i20 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d9_i0_i19 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1829 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d9_i0_i22 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d9_i0_i21 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1830 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d9_i0_i24 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d9_i0_i23 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1831 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d9_i0_i26 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d9_i0_i25 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1832 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d9_i0_i28 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d9_i0_i27 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1833 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d9_i0_i30 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d9_i0_i29 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1834 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d9_i0_i32 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d9_i0_i31 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1835 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d9_i0_i34 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d9_i0_i33 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1836 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d9_i0_i36 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d9_i0_i35 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1837 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d9_i0_i38 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d9_i0_i37 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1838 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d9_i0_i40 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d9_i0_i39 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1839 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d9_i0_i42 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d9_i0_i41 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1840 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d9_i0_i44 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d9_i0_i43 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1841 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d9_i0_i46 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d9_i0_i45 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1842 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d9_i0_i48 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d9_i0_i47 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1843 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d9_i0_i50 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d9_i0_i49 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1844 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d9_i0_i52 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d9_i0_i51 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1845 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d9_i0_i54 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d9_i0_i53 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1846 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d9_i0_i56 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d9_i0_i55 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1847 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d9_i0_i58 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d9_i0_i57 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1848 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d9_i0_i60 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d9_i0_i59 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1849 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d9_i0_i62 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d9_i0_i61 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1850 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d9_i0_i64 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d9_i0_i63 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1851 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d9_i0_i66 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d9_i0_i65 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1852 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d9_i0_i68 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d9_i0_i67 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1853 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d9_i0_i70 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d9_i0_i69 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1854 ( input M0, CE, CLK, output Q0 );
  wire   VCCI, GNDI, M0_dly, CLK_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d9_i0_i71 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1855 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d_tmp_i0_i1 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d_tmp_i0_i0 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1856 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d_tmp_i0_i3 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d_tmp_i0_i2 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1857 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d_tmp_i0_i5 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d_tmp_i0_i4 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1858 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d_tmp_i0_i7 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d_tmp_i0_i6 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1859 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d_tmp_i0_i9 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d_tmp_i0_i8 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1860 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d_tmp_i0_i11 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d_tmp_i0_i10 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1861 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d_tmp_i0_i13 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d_tmp_i0_i12 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1862 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d_tmp_i0_i15 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d_tmp_i0_i14 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1863 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d_tmp_i0_i17 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d_tmp_i0_i16 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1864 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d_tmp_i0_i19 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d_tmp_i0_i18 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1865 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d_tmp_i0_i21 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d_tmp_i0_i20 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1866 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d_tmp_i0_i23 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d_tmp_i0_i22 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1867 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d_tmp_i0_i25 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d_tmp_i0_i24 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1868 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d_tmp_i0_i27 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d_tmp_i0_i26 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1869 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d_tmp_i0_i29 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d_tmp_i0_i28 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1870 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d_tmp_i0_i31 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d_tmp_i0_i30 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1871 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d_tmp_i0_i33 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d_tmp_i0_i32 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1872 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d_tmp_i0_i35 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d_tmp_i0_i34 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1873 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d_tmp_i0_i37 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d_tmp_i0_i36 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1874 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d_tmp_i0_i39 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d_tmp_i0_i38 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1875 ( input M0, CE, CLK, output Q0 );
  wire   VCCI, GNDI, M0_dly, CLK_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d_tmp_i0_i40 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1876 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d_tmp_i0_i42 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d_tmp_i0_i41 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1877 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d_tmp_i0_i44 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d_tmp_i0_i43 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1878 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d_tmp_i0_i46 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d_tmp_i0_i45 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1879 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d_tmp_i0_i48 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d_tmp_i0_i47 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1880 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d_tmp_i0_i50 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d_tmp_i0_i49 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1881 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d_tmp_i0_i52 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d_tmp_i0_i51 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1882 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d_tmp_i0_i54 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d_tmp_i0_i53 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1883 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d_tmp_i0_i56 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d_tmp_i0_i55 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1884 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d_tmp_i0_i58 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d_tmp_i0_i57 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1885 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d_tmp_i0_i60 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d_tmp_i0_i59 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1886 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d_tmp_i0_i62 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d_tmp_i0_i61 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1887 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d_tmp_i0_i64 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d_tmp_i0_i63 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1888 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d_tmp_i0_i66 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d_tmp_i0_i65 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1889 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d_tmp_i0_i68 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d_tmp_i0_i67 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1890 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d_tmp_i0_i70 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d_tmp_i0_i69 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1891 ( input M0, CE, CLK, output Q0 );
  wire   VCCI, GNDI, M0_dly, CLK_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d_tmp_i0_i71 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1892 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_tmp_i0_i1 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_tmp_i0_i0 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1893 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_tmp_i0_i3 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_tmp_i0_i2 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1894 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_tmp_i0_i5 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_tmp_i0_i4 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1895 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_tmp_i0_i7 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_tmp_i0_i6 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1896 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_tmp_i0_i9 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_tmp_i0_i8 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1897 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_tmp_i0_i11 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_tmp_i0_i10 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1898 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_tmp_i0_i13 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_tmp_i0_i12 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1899 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_tmp_i0_i15 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_tmp_i0_i14 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1900 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_tmp_i0_i17 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_tmp_i0_i16 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1901 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_tmp_i0_i19 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_tmp_i0_i18 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1902 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_tmp_i0_i21 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_tmp_i0_i20 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1903 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_tmp_i0_i23 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_tmp_i0_i22 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1904 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_tmp_i0_i25 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_tmp_i0_i24 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1905 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_tmp_i0_i27 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_tmp_i0_i26 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1906 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_tmp_i0_i29 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_tmp_i0_i28 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1907 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_tmp_i0_i31 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_tmp_i0_i30 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1908 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_tmp_i0_i33 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_tmp_i0_i32 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1909 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_tmp_i0_i35 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_tmp_i0_i34 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1910 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_tmp_i0_i37 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_tmp_i0_i36 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1911 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_tmp_i0_i39 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_tmp_i0_i38 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1912 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_tmp_i0_i41 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_tmp_i0_i40 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1913 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_tmp_i0_i43 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_tmp_i0_i42 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1914 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_tmp_i0_i45 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_tmp_i0_i44 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1915 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_tmp_i0_i47 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_tmp_i0_i46 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1916 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_tmp_i0_i49 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_tmp_i0_i48 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1917 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_tmp_i0_i51 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_tmp_i0_i50 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1918 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_tmp_i0_i53 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_tmp_i0_i52 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1919 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_tmp_i0_i55 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_tmp_i0_i54 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1920 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_tmp_i0_i57 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_tmp_i0_i56 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1921 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_tmp_i0_i59 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_tmp_i0_i58 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1922 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_tmp_i0_i61 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_tmp_i0_i60 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1923 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_tmp_i0_i63 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_tmp_i0_i62 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1924 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_tmp_i0_i65 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_tmp_i0_i64 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1925 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_tmp_i0_i67 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_tmp_i0_i66 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1926 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_tmp_i0_i69 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_tmp_i0_i68 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1927 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_tmp_i0_i71 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_tmp_i0_i70 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1928 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI0, M1, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly, M1_dly;

  lut40050 \CIC1Cos/i5308_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40054 \CIC1Cos/i5338_4_lut_rep_116 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre \CIC1Cos/v_comb_66_rep_119 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/v_comb_66_rep_118 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40054 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h2000) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module CIC1Cos_SLICE_1929 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre \CIC1Cos/v_comb_66_rep_121 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/v_comb_66_rep_120 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1930 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre \CIC1Cos/v_comb_66_rep_123 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/v_comb_66_rep_122 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1931 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre \CIC1Cos/v_comb_66_rep_125 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/v_comb_66_rep_124 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1932 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre \CIC1Cos/v_comb_66_rep_127 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/v_comb_66_rep_126 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1933 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre \CIC1Cos/v_comb_66_rep_129 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/v_comb_66_rep_128 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1934 ( input M0, CLK, output Q0 );
  wire   VCCI, GNDI, M0_dly, CLK_dly;

  vmuxregsre \CIC1Cos/v_comb_66_rep_130 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1935 ( input M0, CLK, output Q0 );
  wire   VCCI, GNDI, M0_dly, CLK_dly;

  vmuxregsre \CIC1Cos/v_comb_66 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_1936 ( input B0, A0, DI0, LSR, CLK, output F0, Q0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, LSR_dly;

  lut40051 \CIC1Sin/i1_2_lut_adj_40 ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0006 \CIC1Sin/count__i0 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_1937 ( input B0, A0, DI0, LSR, CLK, output F0, Q0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, LSR_dly;

  lut40051 \CIC1Sin/i1_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0006 \CIC1Sin/count__i11 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_1938 ( input C0, B0, A0, DI0, CE, CLK, output F0, Q0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, CE_dly;

  lut40053 \CIC1Sin/mux_1241_i2_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d10__i2 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_1939 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40053 \CIC1Sin/mux_1241_i8_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40053 \CIC1Sin/mux_1241_i3_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  vmuxregsre \CIC1Sin/d10__i8 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \CIC1Sin/d10__i3 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_1940 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40053 \CIC1Sin/mux_1241_i12_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40053 \CIC1Sin/mux_1241_i9_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  vmuxregsre \CIC1Sin/d10__i12 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \CIC1Sin/d10__i9 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_1941 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40053 \CIC1Sin/mux_1241_i14_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40053 \CIC1Sin/mux_1241_i13_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  vmuxregsre \CIC1Sin/d10__i14 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \CIC1Sin/d10__i13 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_1942 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40053 \CIC1Sin/mux_1241_i16_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40053 \CIC1Sin/mux_1241_i15_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  vmuxregsre \CIC1Sin/d10__i16 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \CIC1Sin/d10__i15 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_1943 ( input C0, B0, A0, DI0, CE, CLK, output F0, Q0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, CE_dly;

  lut40053 \CIC1Sin/mux_1241_i4_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d10__i4 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_1944 ( input C0, B0, A0, DI0, CE, CLK, output F0, Q0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, CE_dly;

  lut40053 \CIC1Sin/mux_1241_i5_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d10__i5 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_1945 ( input C0, B0, A0, DI0, CE, CLK, output F0, Q0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, CE_dly;

  lut40053 \CIC1Sin/mux_1241_i6_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d10__i6 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_1946 ( input C0, B0, A0, DI0, CE, CLK, output F0, Q0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, CE_dly;

  lut40053 \CIC1Sin/mux_1241_i7_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d10__i7 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_1947 ( input C0, B0, A0, DI0, CE, CLK, output F0, Q0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, CE_dly;

  lut40053 \CIC1Sin/mux_1241_i10_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d10__i10 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_1948 ( input C0, B0, A0, DI0, CE, CLK, output F0, Q0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, CE_dly;

  lut40053 \CIC1Sin/mux_1241_i11_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d10__i11 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_1949 ( input B0, A0, DI0, CLK, output F0, Q0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly;

  lut4 \CIC1Sin/i4595_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d1_i0 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_1950 ( input B0, A0, DI0, CLK, output F0, Q0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly;

  lut4 \CIC1Sin/i4599_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d2_i0 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_1951 ( input B0, A0, DI0, CLK, output F0, Q0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly;

  lut4 \CIC1Sin/i4600_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d3_i0 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_1952 ( input B0, A0, DI0, CLK, output F0, Q0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly;

  lut4 \CIC1Sin/i4601_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d4_i0 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_1953 ( input B0, A0, DI0, CLK, output F0, Q0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly;

  lut4 \CIC1Sin/i4602_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d5_i0 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_1954 ( input M0, CE, CLK, output Q0 );
  wire   VCCI, GNDI, M0_dly, CLK_dly, CE_dly;

  vmuxregsre \CIC1Sin/d6_i0_i20 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_1955 ( input M0, CE, CLK, output Q0 );
  wire   VCCI, GNDI, M0_dly, CLK_dly, CE_dly;

  vmuxregsre \CIC1Sin/d7_i0_i28 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_1956 ( input B0, A0, DI0, LSR, CLK, output F0, Q0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, LSR_dly;

  lut40047 \CIC1Sin/i1_2_lut_adj_42 ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0055 \CIC1Sin/d_clk_tmp_65 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module vmuxregsre0055 ( input D0, D1, SD, SP, CK, LSR, output Q );

  FL1P3JY INST01( .D0(D0), .D1(D1), .SP(SP), .CK(CK), .SD(SD), .PD(LSR), .Q(Q));
  defparam INST01.GSR = "DISABLED";
endmodule

module CIC1Sin_SLICE_1957 ( input M0, CE, CLK, output Q0 );
  wire   VCCI, GNDI, M0_dly, CLK_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d6_i0_i0 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_1958 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d6_i0_i2 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d6_i0_i1 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_1959 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d6_i0_i4 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d6_i0_i3 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_1960 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d6_i0_i6 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d6_i0_i5 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_1961 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d6_i0_i8 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d6_i0_i7 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_1962 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d6_i0_i10 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d6_i0_i9 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_1963 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d6_i0_i12 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d6_i0_i11 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_1964 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d6_i0_i14 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d6_i0_i13 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_1965 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d6_i0_i16 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d6_i0_i15 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_1966 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d6_i0_i18 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d6_i0_i17 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_1967 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d6_i0_i20 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d6_i0_i19 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_1968 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d6_i0_i22 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d6_i0_i21 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_1969 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d6_i0_i24 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d6_i0_i23 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_1970 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d6_i0_i26 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d6_i0_i25 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_1971 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d6_i0_i28 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d6_i0_i27 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_1972 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d6_i0_i30 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d6_i0_i29 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_1973 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d6_i0_i32 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d6_i0_i31 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_1974 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d6_i0_i34 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d6_i0_i33 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_1975 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d6_i0_i36 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d6_i0_i35 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_1976 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d6_i0_i38 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d6_i0_i37 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_1977 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d6_i0_i40 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d6_i0_i39 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_1978 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d6_i0_i42 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d6_i0_i41 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_1979 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d6_i0_i44 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d6_i0_i43 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_1980 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d6_i0_i46 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d6_i0_i45 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_1981 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d6_i0_i48 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d6_i0_i47 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_1982 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d6_i0_i50 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d6_i0_i49 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_1983 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d6_i0_i52 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d6_i0_i51 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_1984 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d6_i0_i54 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d6_i0_i53 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_1985 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d6_i0_i56 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d6_i0_i55 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_1986 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d6_i0_i58 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d6_i0_i57 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_1987 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d6_i0_i60 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d6_i0_i59 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_1988 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d6_i0_i62 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d6_i0_i61 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_1989 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d6_i0_i64 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d6_i0_i63 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_1990 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d6_i0_i66 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d6_i0_i65 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_1991 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d6_i0_i68 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d6_i0_i67 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_1992 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d6_i0_i70 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d6_i0_i69 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_1993 ( input M0, CE, CLK, output Q0 );
  wire   VCCI, GNDI, M0_dly, CLK_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d6_i0_i71 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_1994 ( input M0, CE, CLK, output Q0 );
  wire   VCCI, GNDI, M0_dly, CLK_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d7_i0_i0 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_1995 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d7_i0_i2 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d7_i0_i1 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_1996 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d7_i0_i4 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d7_i0_i3 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_1997 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d7_i0_i6 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d7_i0_i5 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_1998 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d7_i0_i8 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d7_i0_i7 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_1999 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d7_i0_i10 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d7_i0_i9 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2000 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d7_i0_i12 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d7_i0_i11 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2001 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d7_i0_i14 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d7_i0_i13 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2002 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d7_i0_i16 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d7_i0_i15 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2003 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d7_i0_i18 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d7_i0_i17 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2004 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d7_i0_i20 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d7_i0_i19 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2005 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d7_i0_i22 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d7_i0_i21 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2006 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d7_i0_i24 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d7_i0_i23 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2007 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d7_i0_i26 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d7_i0_i25 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2008 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d7_i0_i28 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d7_i0_i27 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2009 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d7_i0_i30 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d7_i0_i29 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2010 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d7_i0_i32 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d7_i0_i31 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2011 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d7_i0_i34 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d7_i0_i33 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2012 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d7_i0_i36 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d7_i0_i35 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2013 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d7_i0_i38 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d7_i0_i37 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2014 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d7_i0_i40 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d7_i0_i39 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2015 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d7_i0_i42 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d7_i0_i41 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2016 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d7_i0_i44 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d7_i0_i43 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2017 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d7_i0_i46 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d7_i0_i45 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2018 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d7_i0_i48 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d7_i0_i47 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2019 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d7_i0_i50 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d7_i0_i49 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2020 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d7_i0_i52 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d7_i0_i51 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2021 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d7_i0_i54 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d7_i0_i53 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2022 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d7_i0_i56 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d7_i0_i55 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2023 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d7_i0_i58 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d7_i0_i57 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2024 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d7_i0_i60 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d7_i0_i59 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2025 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d7_i0_i62 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d7_i0_i61 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2026 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d7_i0_i64 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d7_i0_i63 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2027 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d7_i0_i66 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d7_i0_i65 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2028 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d7_i0_i68 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d7_i0_i67 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2029 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d7_i0_i70 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d7_i0_i69 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2030 ( input M0, CE, CLK, output Q0 );
  wire   VCCI, GNDI, M0_dly, CLK_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d7_i0_i71 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2031 ( input M0, CE, CLK, output Q0 );
  wire   VCCI, GNDI, M0_dly, CLK_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d8_i0_i0 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2032 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d8_i0_i2 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d8_i0_i1 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2033 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d8_i0_i4 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d8_i0_i3 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2034 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d8_i0_i6 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d8_i0_i5 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2035 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d8_i0_i8 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d8_i0_i7 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2036 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d8_i0_i10 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d8_i0_i9 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2037 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d8_i0_i12 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d8_i0_i11 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2038 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d8_i0_i14 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d8_i0_i13 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2039 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d8_i0_i16 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d8_i0_i15 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2040 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d8_i0_i18 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d8_i0_i17 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2041 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d8_i0_i20 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d8_i0_i19 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2042 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d8_i0_i22 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d8_i0_i21 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2043 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d8_i0_i24 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d8_i0_i23 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2044 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d8_i0_i26 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d8_i0_i25 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2045 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d8_i0_i28 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d8_i0_i27 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2046 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d8_i0_i30 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d8_i0_i29 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2047 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d8_i0_i32 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d8_i0_i31 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2048 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d8_i0_i34 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d8_i0_i33 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2049 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d8_i0_i36 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d8_i0_i35 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2050 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d8_i0_i38 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d8_i0_i37 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2051 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d8_i0_i40 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d8_i0_i39 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2052 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d8_i0_i42 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d8_i0_i41 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2053 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d8_i0_i44 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d8_i0_i43 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2054 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d8_i0_i46 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d8_i0_i45 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2055 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d8_i0_i48 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d8_i0_i47 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2056 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d8_i0_i50 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d8_i0_i49 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2057 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d8_i0_i52 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d8_i0_i51 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2058 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d8_i0_i54 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d8_i0_i53 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2059 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d8_i0_i56 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d8_i0_i55 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2060 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d8_i0_i58 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d8_i0_i57 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2061 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d8_i0_i60 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d8_i0_i59 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2062 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d8_i0_i62 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d8_i0_i61 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2063 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d8_i0_i64 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d8_i0_i63 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2064 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d8_i0_i66 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d8_i0_i65 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2065 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d8_i0_i68 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d8_i0_i67 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2066 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d8_i0_i70 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d8_i0_i69 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2067 ( input M0, CE, CLK, output Q0 );
  wire   VCCI, GNDI, M0_dly, CLK_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d8_i0_i71 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2068 ( input M0, CE, CLK, output Q0 );
  wire   VCCI, GNDI, M0_dly, CLK_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d9_i0_i0 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2069 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d9_i0_i2 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d9_i0_i1 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2070 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d9_i0_i4 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d9_i0_i3 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2071 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d9_i0_i6 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d9_i0_i5 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2072 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d9_i0_i8 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d9_i0_i7 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2073 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d9_i0_i10 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d9_i0_i9 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2074 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d9_i0_i12 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d9_i0_i11 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2075 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d9_i0_i14 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d9_i0_i13 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2076 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d9_i0_i16 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d9_i0_i15 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2077 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d9_i0_i18 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d9_i0_i17 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2078 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d9_i0_i20 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d9_i0_i19 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2079 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d9_i0_i22 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d9_i0_i21 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2080 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d9_i0_i24 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d9_i0_i23 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2081 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d9_i0_i26 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d9_i0_i25 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2082 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d9_i0_i28 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d9_i0_i27 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2083 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d9_i0_i30 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d9_i0_i29 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2084 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d9_i0_i32 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d9_i0_i31 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2085 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d9_i0_i34 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d9_i0_i33 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2086 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d9_i0_i36 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d9_i0_i35 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2087 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d9_i0_i38 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d9_i0_i37 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2088 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d9_i0_i40 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d9_i0_i39 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2089 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d9_i0_i42 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d9_i0_i41 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2090 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d9_i0_i44 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d9_i0_i43 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2091 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d9_i0_i46 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d9_i0_i45 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2092 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d9_i0_i48 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d9_i0_i47 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2093 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d9_i0_i50 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d9_i0_i49 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2094 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d9_i0_i52 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d9_i0_i51 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2095 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d9_i0_i54 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d9_i0_i53 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2096 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d9_i0_i56 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d9_i0_i55 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2097 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d9_i0_i58 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d9_i0_i57 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2098 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d9_i0_i60 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d9_i0_i59 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2099 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d9_i0_i62 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d9_i0_i61 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2100 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d9_i0_i64 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d9_i0_i63 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2101 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d9_i0_i66 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d9_i0_i65 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2102 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d9_i0_i68 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d9_i0_i67 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2103 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d9_i0_i70 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d9_i0_i69 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2104 ( input M0, CE, CLK, output Q0 );
  wire   VCCI, GNDI, M0_dly, CLK_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d9_i0_i71 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2105 ( input M0, CE, CLK, output Q0 );
  wire   VCCI, GNDI, M0_dly, CLK_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d_tmp_i0_i0 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2106 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d_tmp_i0_i2 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d_tmp_i0_i1 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2107 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d_tmp_i0_i4 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d_tmp_i0_i3 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2108 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d_tmp_i0_i6 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d_tmp_i0_i5 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2109 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d_tmp_i0_i8 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d_tmp_i0_i7 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2110 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d_tmp_i0_i10 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d_tmp_i0_i9 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2111 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d_tmp_i0_i12 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d_tmp_i0_i11 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2112 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d_tmp_i0_i14 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d_tmp_i0_i13 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2113 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d_tmp_i0_i16 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d_tmp_i0_i15 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2114 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d_tmp_i0_i18 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d_tmp_i0_i17 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2115 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d_tmp_i0_i20 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d_tmp_i0_i19 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2116 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d_tmp_i0_i22 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d_tmp_i0_i21 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2117 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d_tmp_i0_i24 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d_tmp_i0_i23 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2118 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d_tmp_i0_i26 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d_tmp_i0_i25 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2119 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d_tmp_i0_i28 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d_tmp_i0_i27 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2120 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d_tmp_i0_i30 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d_tmp_i0_i29 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2121 ( input M0, CE, CLK, output Q0 );
  wire   VCCI, GNDI, M0_dly, CLK_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d_tmp_i0_i31 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2122 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d_tmp_i0_i33 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d_tmp_i0_i32 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2123 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d_tmp_i0_i35 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d_tmp_i0_i34 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2124 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d_tmp_i0_i37 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d_tmp_i0_i36 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2125 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d_tmp_i0_i39 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d_tmp_i0_i38 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2126 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d_tmp_i0_i41 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d_tmp_i0_i40 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2127 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d_tmp_i0_i43 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d_tmp_i0_i42 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2128 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d_tmp_i0_i45 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d_tmp_i0_i44 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2129 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d_tmp_i0_i47 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d_tmp_i0_i46 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2130 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d_tmp_i0_i49 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d_tmp_i0_i48 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2131 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d_tmp_i0_i51 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d_tmp_i0_i50 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2132 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d_tmp_i0_i53 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d_tmp_i0_i52 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2133 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d_tmp_i0_i55 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d_tmp_i0_i54 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2134 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d_tmp_i0_i57 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d_tmp_i0_i56 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2135 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d_tmp_i0_i59 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d_tmp_i0_i58 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2136 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d_tmp_i0_i61 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d_tmp_i0_i60 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2137 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d_tmp_i0_i63 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d_tmp_i0_i62 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2138 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d_tmp_i0_i65 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d_tmp_i0_i64 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2139 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d_tmp_i0_i67 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d_tmp_i0_i66 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2140 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d_tmp_i0_i69 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d_tmp_i0_i68 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2141 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d_tmp_i0_i71 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d_tmp_i0_i70 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2142 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_tmp_i0_i1 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_tmp_i0_i0 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2143 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_tmp_i0_i3 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_tmp_i0_i2 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2144 ( input M0, CE, CLK, output Q0 );
  wire   VCCI, GNDI, M0_dly, CLK_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_tmp_i0_i4 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2145 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_tmp_i0_i6 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_tmp_i0_i5 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2146 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_tmp_i0_i8 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_tmp_i0_i7 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2147 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_tmp_i0_i10 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_tmp_i0_i9 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2148 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_tmp_i0_i12 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_tmp_i0_i11 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2149 ( input M0, CE, CLK, output Q0 );
  wire   VCCI, GNDI, M0_dly, CLK_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_tmp_i0_i13 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2150 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_tmp_i0_i15 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_tmp_i0_i14 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2151 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_tmp_i0_i17 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_tmp_i0_i16 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2152 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_tmp_i0_i19 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_tmp_i0_i18 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2153 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_tmp_i0_i21 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_tmp_i0_i20 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2154 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_tmp_i0_i23 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_tmp_i0_i22 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2155 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_tmp_i0_i25 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_tmp_i0_i24 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2156 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_tmp_i0_i27 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_tmp_i0_i26 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2157 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_tmp_i0_i29 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_tmp_i0_i28 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2158 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_tmp_i0_i31 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_tmp_i0_i30 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2159 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_tmp_i0_i33 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_tmp_i0_i32 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2160 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_tmp_i0_i35 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_tmp_i0_i34 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2161 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_tmp_i0_i37 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_tmp_i0_i36 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2162 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_tmp_i0_i39 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_tmp_i0_i38 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2163 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_tmp_i0_i41 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_tmp_i0_i40 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2164 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_tmp_i0_i43 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_tmp_i0_i42 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2165 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_tmp_i0_i45 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_tmp_i0_i44 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2166 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_tmp_i0_i47 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_tmp_i0_i46 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2167 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_tmp_i0_i49 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_tmp_i0_i48 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2168 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_tmp_i0_i51 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_tmp_i0_i50 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2169 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_tmp_i0_i53 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_tmp_i0_i52 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2170 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_tmp_i0_i55 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_tmp_i0_i54 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2171 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_tmp_i0_i57 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_tmp_i0_i56 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2172 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_tmp_i0_i59 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_tmp_i0_i58 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2173 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_tmp_i0_i61 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_tmp_i0_i60 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2174 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_tmp_i0_i63 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_tmp_i0_i62 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2175 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_tmp_i0_i65 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_tmp_i0_i64 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2176 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_tmp_i0_i67 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_tmp_i0_i66 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2177 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_tmp_i0_i69 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_tmp_i0_i68 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2178 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_tmp_i0_i71 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_tmp_i0_i70 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2179 ( input C1, B1, A1, D0, C0, B0, A0, DI0, M1, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, M1_dly;

  lut40056 \CIC1Sin/i7_2_lut_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40050 \CIC1Sin/i13_4_lut_rep_100 ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre \CIC1Sin/v_comb_66_rep_103 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \CIC1Sin/v_comb_66_rep_102 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40056 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h1010) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module CIC1Sin_SLICE_2180 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre \CIC1Sin/v_comb_66_rep_105 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/v_comb_66_rep_104 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2181 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre \CIC1Sin/v_comb_66_rep_107 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/v_comb_66_rep_106 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2182 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre \CIC1Sin/v_comb_66_rep_109 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/v_comb_66_rep_108 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2183 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre \CIC1Sin/v_comb_66_rep_111 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/v_comb_66_rep_110 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2184 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre \CIC1Sin/v_comb_66_rep_113 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/v_comb_66_rep_112 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2185 ( input M0, CLK, output Q0 );
  wire   VCCI, GNDI, M0_dly, CLK_dly;

  vmuxregsre \CIC1Sin/v_comb_66_rep_114 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2186 ( input M0, CLK, output Q0 );
  wire   VCCI, GNDI, M0_dly, CLK_dly;

  vmuxregsre \CIC1Sin/v_comb_66 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_2187 ( input C1, B1, A1, C0, B0, A0, DI0, M0, CE, CLK, 
    output OFX0, Q0 );
  wire   GNDI, \CIC1Cos/SLICE_2187/CIC1Cos/SLICE_2187_K1_H1 , 
         \CIC1Cos/SLICE_2187/CIC1Cos/i5445/GATE_H0 , VCCI, DI0_dly, CLK_dly, 
         CE_dly;

  lut40057 \CIC1Cos/SLICE_2187_K1 ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(\CIC1Cos/SLICE_2187/CIC1Cos/SLICE_2187_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40058 \CIC1Cos/i5445/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\CIC1Cos/SLICE_2187/CIC1Cos/i5445/GATE_H0 ));
  vmuxregsre \CIC1Cos/d_out_i0_i0 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  selmux2 \CIC1Cos/SLICE_2187_K0K1MUX ( 
    .D0(\CIC1Cos/SLICE_2187/CIC1Cos/i5445/GATE_H0 ), 
    .D1(\CIC1Cos/SLICE_2187/CIC1Cos/SLICE_2187_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40057 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hE4E4) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40058 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hE2E2) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module selmux2 ( input D0, D1, SD, output Z );

  MUX21 INST1( .D0(D0), .D1(D1), .SD(SD), .Z(Z));
endmodule

module CIC1Cos_SLICE_2188 ( input C1, B1, A1, C0, B0, A0, DI0, M0, CE, CLK, 
    output OFX0, Q0 );
  wire   GNDI, \CIC1Cos/SLICE_2188/CIC1Cos/SLICE_2188_K1_H1 , 
         \CIC1Cos/SLICE_2188/CIC1Cos/i5449/GATE_H0 , VCCI, DI0_dly, CLK_dly, 
         CE_dly;

  lut40057 \CIC1Cos/SLICE_2188_K1 ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(\CIC1Cos/SLICE_2188/CIC1Cos/SLICE_2188_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40058 \CIC1Cos/i5449/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\CIC1Cos/SLICE_2188/CIC1Cos/i5449/GATE_H0 ));
  vmuxregsre \CIC1Cos/d_out_i0_i1 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  selmux2 \CIC1Cos/SLICE_2188_K0K1MUX ( 
    .D0(\CIC1Cos/SLICE_2188/CIC1Cos/i5449/GATE_H0 ), 
    .D1(\CIC1Cos/SLICE_2188/CIC1Cos/SLICE_2188_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_2189 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40059 \CIC1Sin/shift_right_31_i204_3_lut_4_lut_adj_30 ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40059 \CIC1Sin/shift_right_31_i203_3_lut_4_lut_adj_29 ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));
  vmuxregsre \CIC1Cos/d_out_i0_i3 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_out_i0_i2 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40059 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFE10) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_2190 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40059 \CIC1Sin/shift_right_31_i206_3_lut_4_lut_adj_32 ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40059 \CIC1Sin/shift_right_31_i205_3_lut_4_lut_adj_31 ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));
  vmuxregsre \CIC1Cos/d_out_i0_i5 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_out_i0_i4 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_2191 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40059 \CIC1Sin/shift_right_31_i208_3_lut_4_lut_adj_34 ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40059 \CIC1Sin/shift_right_31_i207_3_lut_4_lut_adj_33 ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));
  vmuxregsre \CIC1Cos/d_out_i0_i7 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_out_i0_i6 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_2192 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40059 \CIC1Sin/shift_right_31_i210_3_lut_4_lut_adj_36 ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40060 \CIC1Sin/shift_right_31_i141_3_lut_4_lut_adj_35 ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));
  vmuxregsre \CIC1Cos/d_out_i0_i9 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_out_i0_i8 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40060 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF1E0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_2193 ( input C1, B1, A1, C0, B0, A0, DI0, M0, CE, CLK, output 
    OFX0, Q0 );
  wire   GNDI, \SLICE_2193/SLICE_2193_K1_H1 , 
         \SLICE_2193/CIC1Sin/i5437/GATE_H0 , VCCI, DI0_dly, CLK_dly, CE_dly;

  lut40061 SLICE_2193_K1( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(\SLICE_2193/SLICE_2193_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40061 \CIC1Sin/i5437/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\SLICE_2193/CIC1Sin/i5437/GATE_H0 ));
  vmuxregsre \CIC1Cos/d_out_i0_i10 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  selmux2 SLICE_2193_K0K1MUX( .D0(\SLICE_2193/CIC1Sin/i5437/GATE_H0 ), 
    .D1(\SLICE_2193/SLICE_2193_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40061 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hD8D8) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_2194 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI0, CE, CLK, 
    output F0, Q0, F1 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40062 \CIC1Sin/shift_right_31_i140_3_lut_4_lut_adj_49 ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40059 \CIC1Sin/shift_right_31_i212_3_lut_4_lut_adj_37 ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));
  vmuxregsre \CIC1Cos/d_out_i0_i11 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40062 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF960) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module CIC1Sin_SLICE_2195 ( input C1, B1, A1, C0, B0, A0, DI0, M0, CE, CLK, 
    output OFX0, Q0 );
  wire   GNDI, \CIC1Sin/SLICE_2195/CIC1Sin/SLICE_2195_K1_H1 , 
         \CIC1Sin/SLICE_2195/CIC1Sin/i5443/GATE_H0 , VCCI, DI0_dly, CLK_dly, 
         CE_dly;

  lut40057 \CIC1Sin/SLICE_2195_K1 ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(\CIC1Sin/SLICE_2195/CIC1Sin/SLICE_2195_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40058 \CIC1Sin/i5443/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\CIC1Sin/SLICE_2195/CIC1Sin/i5443/GATE_H0 ));
  vmuxregsre \CIC1Sin/d_out_i0_i0 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  selmux2 \CIC1Sin/SLICE_2195_K0K1MUX ( 
    .D0(\CIC1Sin/SLICE_2195/CIC1Sin/i5443/GATE_H0 ), 
    .D1(\CIC1Sin/SLICE_2195/CIC1Sin/SLICE_2195_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2196 ( input C1, B1, A1, C0, B0, A0, DI0, M0, CE, CLK, 
    output OFX0, Q0 );
  wire   GNDI, \CIC1Sin/SLICE_2196/CIC1Sin/SLICE_2196_K1_H1 , 
         \CIC1Sin/SLICE_2196/CIC1Sin/i5441/GATE_H0 , VCCI, DI0_dly, CLK_dly, 
         CE_dly;

  lut40057 \CIC1Sin/SLICE_2196_K1 ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(\CIC1Sin/SLICE_2196/CIC1Sin/SLICE_2196_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40058 \CIC1Sin/i5441/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\CIC1Sin/SLICE_2196/CIC1Sin/i5441/GATE_H0 ));
  vmuxregsre \CIC1Sin/d_out_i0_i1 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  selmux2 \CIC1Sin/SLICE_2196_K0K1MUX ( 
    .D0(\CIC1Sin/SLICE_2196/CIC1Sin/i5441/GATE_H0 ), 
    .D1(\CIC1Sin/SLICE_2196/CIC1Sin/SLICE_2196_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2197 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40059 \CIC1Sin/shift_right_31_i204_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40059 \CIC1Sin/shift_right_31_i203_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  vmuxregsre \CIC1Sin/d_out_i0_i3 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_out_i0_i2 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2198 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40059 \CIC1Sin/shift_right_31_i206_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40059 \CIC1Sin/shift_right_31_i205_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  vmuxregsre \CIC1Sin/d_out_i0_i5 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_out_i0_i4 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2199 ( input M0, CLK, output Q0 );
  wire   VCCI, GNDI, M0_dly, CLK_dly;

  vmuxregsre \CIC1Sin/d_clk_67 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_2200 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre CICGain__i2( .D0(M1_dly), .D1(VCCI), .SD(GNDI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre CICGain__i1( .D0(M0_dly), .D1(VCCI), .SD(GNDI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_2201 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre \AMDemodulator1/d_out_i2 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/d_out_i1 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_2202 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre \AMDemodulator1/d_out_i4 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/d_out_i3 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_2203 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre \AMDemodulator1/d_out_i6 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/d_out_i5 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_2204 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre \AMDemodulator1/d_out_i8 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/d_out_i7 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_2205 ( input M0, CLK, output Q0 );
  wire   VCCI, GNDI, M0_dly, CLK_dly;

  vmuxregsre \AMDemodulator1/d_out_i9 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_2206 ( input M0, CLK, output Q0 );
  wire   VCCI, GNDI, M0_dly, CLK_dly;

  vmuxregsre \AMDemodulator1/d_out_i10 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SinCos1_SLICE_2208 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, 
    CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40063 \SinCos1/muxb_10/GATE ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40063 \SinCos1/muxb_11/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre \SinCos1/FF_10 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \SinCos1/FF_11 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40063 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h00CA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SinCos1_SLICE_2209 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, 
    CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40063 \SinCos1/muxb_8/GATE ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40063 \SinCos1/muxb_9/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre \SinCos1/FF_8 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \SinCos1/FF_9 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SinCos1_SLICE_2210 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, 
    CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40063 \SinCos1/muxb_6/GATE ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40063 \SinCos1/muxb_7/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre \SinCos1/FF_6 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \SinCos1/FF_7 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SinCos1_SLICE_2211 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, 
    CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40063 \SinCos1/muxb_4/GATE ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40063 \SinCos1/muxb_5/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre \SinCos1/FF_4 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \SinCos1/FF_5 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SinCos1_SLICE_2212 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, 
    CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40063 \SinCos1/muxb_2/GATE ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40063 \SinCos1/muxb_3/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre \SinCos1/FF_2 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \SinCos1/FF_3 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SinCos1_SLICE_2213 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, 
    CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40063 \SinCos1/muxb_0/GATE ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40063 \SinCos1/muxb_1/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre \SinCos1/FF_0 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \SinCos1/FF_1 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SinCos1_SLICE_2214 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, 
    CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40063 \SinCos1/muxb_23/GATE ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40063 \SinCos1/muxb_24/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre \SinCos1/FF_23 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \SinCos1/FF_24 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SinCos1_SLICE_2215 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, 
    CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40063 \SinCos1/muxb_21/GATE ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40063 \SinCos1/muxb_22/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre \SinCos1/FF_21 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \SinCos1/FF_22 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SinCos1_SLICE_2216 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, 
    CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40063 \SinCos1/muxb_19/GATE ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40063 \SinCos1/muxb_20/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre \SinCos1/FF_19 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \SinCos1/FF_20 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SinCos1_SLICE_2217 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, 
    CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40063 \SinCos1/muxb_17/GATE ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40063 \SinCos1/muxb_18/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre \SinCos1/FF_17 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \SinCos1/FF_18 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SinCos1_SLICE_2218 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, 
    CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40063 \SinCos1/muxb_15/GATE ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40063 \SinCos1/muxb_16/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre \SinCos1/FF_15 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \SinCos1/FF_16 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SinCos1_SLICE_2219 ( input C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40053 \SinCos1/muxb_13/GATE ( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40064 \SinCos1/muxb_14/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre \SinCos1/FF_13 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \SinCos1/FF_14 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40064 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFCA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module CIC1Sin_SLICE_2220 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40059 \CIC1Sin/shift_right_31_i208_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40059 \CIC1Sin/shift_right_31_i207_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  vmuxregsre \CIC1Sin/d_out_i0_i7 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_out_i0_i6 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2221 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40059 \CIC1Sin/shift_right_31_i210_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40060 \CIC1Sin/shift_right_31_i141_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  vmuxregsre \CIC1Sin/d_out_i0_i9 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_out_i0_i8 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2222 ( input C1, B1, A1, C0, B0, A0, DI0, M0, CE, CLK, 
    output OFX0, Q0 );
  wire   GNDI, \CIC1Sin/SLICE_2222/CIC1Sin/SLICE_2222_K1_H1 , 
         \CIC1Sin/SLICE_2222/CIC1Sin/i5439/GATE_H0 , VCCI, DI0_dly, CLK_dly, 
         CE_dly;

  lut40061 \CIC1Sin/SLICE_2222_K1 ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(\CIC1Sin/SLICE_2222/CIC1Sin/SLICE_2222_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40061 \CIC1Sin/i5439/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\CIC1Sin/SLICE_2222/CIC1Sin/i5439/GATE_H0 ));
  vmuxregsre \CIC1Sin/d_out_i0_i10 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  selmux2 \CIC1Sin/SLICE_2222_K0K1MUX ( 
    .D0(\CIC1Sin/SLICE_2222/CIC1Sin/i5439/GATE_H0 ), 
    .D1(\CIC1Sin/SLICE_2222/CIC1Sin/SLICE_2222_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2223 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI0, CE, CLK, 
    output F0, Q0, F1 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40062 \CIC1Sin/shift_right_31_i140_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40059 \CIC1Sin/shift_right_31_i212_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  vmuxregsre \CIC1Sin/d_out_i0_i11 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module Mixer1_SLICE_2225 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre0065 \Mixer1/RFInR1_13 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0065 \Mixer1/RFInR_14 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module vmuxregsre0065 ( input D0, D1, SD, SP, CK, LSR, output Q );

  FL1P3BX INST01( .D0(D0), .D1(D1), .SP(SP), .CK(CK), .SD(SD), .PD(LSR), .Q(Q));
  defparam INST01.GSR = "DISABLED";
endmodule

module Mixer1_SLICE_2226 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40053 \Mixer1/MixerOutCos_11__I_0_i2_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40053 \Mixer1/MixerOutCos_11__I_0_i1_3_lut ( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));
  vmuxregsre \Mixer1/MixerOutCos_i1 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \Mixer1/MixerOutCos_i0 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module Mixer1_SLICE_2227 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40053 \Mixer1/MixerOutCos_11__I_0_i4_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40053 \Mixer1/MixerOutCos_11__I_0_i3_3_lut ( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));
  vmuxregsre \Mixer1/MixerOutCos_i3 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \Mixer1/MixerOutCos_i2 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module Mixer1_SLICE_2228 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40053 \Mixer1/MixerOutCos_11__I_0_i6_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40053 \Mixer1/MixerOutCos_11__I_0_i5_3_lut ( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));
  vmuxregsre \Mixer1/MixerOutCos_i5 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \Mixer1/MixerOutCos_i4 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module Mixer1_SLICE_2229 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40053 \Mixer1/MixerOutCos_11__I_0_i8_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40053 \Mixer1/MixerOutCos_11__I_0_i7_3_lut ( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));
  vmuxregsre \Mixer1/MixerOutCos_i7 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \Mixer1/MixerOutCos_i6 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module Mixer1_SLICE_2230 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40053 \Mixer1/MixerOutCos_11__I_0_i10_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40053 \Mixer1/MixerOutCos_11__I_0_i9_3_lut ( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));
  vmuxregsre \Mixer1/MixerOutCos_i9 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \Mixer1/MixerOutCos_i8 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module Mixer1_SLICE_2231 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40053 \Mixer1/MixerOutCos_11__I_0_i12_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40053 \Mixer1/MixerOutCos_11__I_0_i11_3_lut ( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));
  vmuxregsre \Mixer1/MixerOutCos_i11 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \Mixer1/MixerOutCos_i10 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module Mixer1_SLICE_2232 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40053 \Mixer1/MixerOutSin_11__I_0_i2_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40053 \Mixer1/MixerOutSin_11__I_0_i1_3_lut ( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));
  vmuxregsre \Mixer1/MixerOutSin_i1 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \Mixer1/MixerOutSin_i0 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module Mixer1_SLICE_2233 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40053 \Mixer1/MixerOutSin_11__I_0_i4_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40053 \Mixer1/MixerOutSin_11__I_0_i3_3_lut ( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));
  vmuxregsre \Mixer1/MixerOutSin_i3 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \Mixer1/MixerOutSin_i2 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module Mixer1_SLICE_2234 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40053 \Mixer1/MixerOutSin_11__I_0_i6_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40053 \Mixer1/MixerOutSin_11__I_0_i5_3_lut ( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));
  vmuxregsre \Mixer1/MixerOutSin_i5 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \Mixer1/MixerOutSin_i4 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module Mixer1_SLICE_2235 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40053 \Mixer1/MixerOutSin_11__I_0_i8_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40053 \Mixer1/MixerOutSin_11__I_0_i7_3_lut ( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));
  vmuxregsre \Mixer1/MixerOutSin_i7 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \Mixer1/MixerOutSin_i6 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module Mixer1_SLICE_2236 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40053 \Mixer1/MixerOutSin_11__I_0_i10_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40053 \Mixer1/MixerOutSin_11__I_0_i9_3_lut ( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));
  vmuxregsre \Mixer1/MixerOutSin_i9 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \Mixer1/MixerOutSin_i8 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module Mixer1_SLICE_2237 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40053 \Mixer1/MixerOutSin_11__I_0_i12_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40053 \Mixer1/MixerOutSin_11__I_0_i11_3_lut ( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));
  vmuxregsre \Mixer1/MixerOutSin_i11 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \Mixer1/MixerOutSin_i10 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module PWM1_SLICE_2238 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \PWM1/DataInReg__i2 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \PWM1/DataInReg__i1 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module PWM1_SLICE_2239 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \PWM1/DataInReg__i4 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \PWM1/DataInReg__i3 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module PWM1_SLICE_2240 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \PWM1/DataInReg__i6 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \PWM1/DataInReg__i5 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module PWM1_SLICE_2241 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \PWM1/DataInReg__i8 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \PWM1/DataInReg__i7 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module PWM1_SLICE_2242 ( input M0, CE, CLK, output Q0 );
  wire   VCCI, GNDI, M0_dly, CLK_dly, CE_dly;

  vmuxregsre \PWM1/DataInReg__i9 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module PWM1_SLICE_2243 ( input A0, DI0, CE, CLK, output F0, Q0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, CE_dly;

  lut40048 \PWM1/i1151_1_lut ( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \PWM1/DataInReg__i10 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SinCos1_SLICE_2244 ( input B0, A0, DI0, CLK, output F0, Q0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly;

  lut4 \SinCos1/XOR2_t1 ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \SinCos1/FF_28 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SinCos1_SLICE_2247 ( input C1, B1, A1, D0, C0, B0, A0, DI0, CLK, 
    output F0, Q0, F1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly;

  lut40053 \SinCos1/muxb_53/GATE ( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40066 \SinCos1/AND2_t0 ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre \SinCos1/FF_26 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40066 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0100) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SinCos1_SLICE_2248 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre \SinCos1/FF_59 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \SinCos1/FF_61 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SinCos1_SLICE_2249 ( input M0, CLK, output Q0 );
  wire   VCCI, GNDI, M0_dly, CLK_dly;

  vmuxregsre \SinCos1/FF_57 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SinCos1_SLICE_2250 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, M1, M0, 
    FXB, FXA, CLK, output OFX0, Q1, OFX1 );
  wire   \SinCos1/SLICE_2250/SinCos1/triglut_1_0_13_1_H1 , 
         \SinCos1/SLICE_2250/SinCos1/SLICE_2250_K0_H0 , VCCI, GNDI, DI1_dly, 
         CLK_dly;

  lut40067 \SinCos1/triglut_1_0_13_1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SinCos1/SLICE_2250/SinCos1/triglut_1_0_13_1_H1 ));
  lut40068 \SinCos1/SLICE_2250_K0 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SinCos1/SLICE_2250/SinCos1/SLICE_2250_K0_H0 ));
  vmuxregsre \SinCos1/FF_42 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  selmux2 \SinCos1/SLICE_2250_K0K1MUX ( 
    .D0(\SinCos1/SLICE_2250/SinCos1/SLICE_2250_K0_H0 ), 
    .D1(\SinCos1/SLICE_2250/SinCos1/triglut_1_0_13_1_H1 ), .SD(M0), .Z(OFX0));
  selmux2 \SinCos1/SLICE_2250_FXMUX ( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40067 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h981F) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40068 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h433C) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SinCos1_SLICE_2251 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, M1, M0, 
    FXB, FXA, CLK, output OFX0, Q1, OFX1 );
  wire   \SinCos1/SLICE_2251/SinCos1/triglut_1_0_14_1_H1 , 
         \SinCos1/SLICE_2251/SinCos1/SLICE_2251_K0_H0 , VCCI, GNDI, DI1_dly, 
         CLK_dly;

  lut40069 \SinCos1/triglut_1_0_14_1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SinCos1/SLICE_2251/SinCos1/triglut_1_0_14_1_H1 ));
  lut40070 \SinCos1/SLICE_2251_K0 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SinCos1/SLICE_2251/SinCos1/SLICE_2251_K0_H0 ));
  vmuxregsre \SinCos1/FF_43 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  selmux2 \SinCos1/SLICE_2251_K0K1MUX ( 
    .D0(\SinCos1/SLICE_2251/SinCos1/SLICE_2251_K0_H0 ), 
    .D1(\SinCos1/SLICE_2251/SinCos1/triglut_1_0_14_1_H1 ), .SD(M0), .Z(OFX0));
  selmux2 \SinCos1/SLICE_2251_FXMUX ( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40069 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hA7F7) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40070 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h3657) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SinCos1_SLICE_2252 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, M1, M0, 
    FXB, FXA, CLK, output OFX0, Q1, OFX1 );
  wire   \SinCos1/SLICE_2252/SinCos1/triglut_1_0_15_1_H1 , 
         \SinCos1/SLICE_2252/SinCos1/SLICE_2252_K0_H0 , VCCI, GNDI, DI1_dly, 
         CLK_dly;

  lut40071 \SinCos1/triglut_1_0_15_1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SinCos1/SLICE_2252/SinCos1/triglut_1_0_15_1_H1 ));
  lut40072 \SinCos1/SLICE_2252_K0 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SinCos1/SLICE_2252/SinCos1/SLICE_2252_K0_H0 ));
  vmuxregsre \SinCos1/FF_44 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  selmux2 \SinCos1/SLICE_2252_K0K1MUX ( 
    .D0(\SinCos1/SLICE_2252/SinCos1/SLICE_2252_K0_H0 ), 
    .D1(\SinCos1/SLICE_2252/SinCos1/triglut_1_0_15_1_H1 ), .SD(M0), .Z(OFX0));
  selmux2 \SinCos1/SLICE_2252_FXMUX ( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40071 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h94B6) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40072 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h8846) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SinCos1_SLICE_2253 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, M1, M0, 
    FXB, FXA, CLK, output OFX0, Q1, OFX1 );
  wire   \SinCos1/SLICE_2253/SinCos1/triglut_1_0_16_1_H1 , 
         \SinCos1/SLICE_2253/SinCos1/SLICE_2253_K0_H0 , VCCI, GNDI, DI1_dly, 
         CLK_dly;

  lut40073 \SinCos1/triglut_1_0_16_1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SinCos1/SLICE_2253/SinCos1/triglut_1_0_16_1_H1 ));
  lut40074 \SinCos1/SLICE_2253_K0 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SinCos1/SLICE_2253/SinCos1/SLICE_2253_K0_H0 ));
  vmuxregsre \SinCos1/FF_45 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  selmux2 \SinCos1/SLICE_2253_K0K1MUX ( 
    .D0(\SinCos1/SLICE_2253/SinCos1/SLICE_2253_K0_H0 ), 
    .D1(\SinCos1/SLICE_2253/SinCos1/triglut_1_0_16_1_H1 ), .SD(M0), .Z(OFX0));
  selmux2 \SinCos1/SLICE_2253_FXMUX ( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40073 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hA0DD) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40074 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h2ADA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SinCos1_SLICE_2254 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, M1, M0, 
    FXB, FXA, CLK, output OFX0, Q1, OFX1 );
  wire   \SinCos1/SLICE_2254/SinCos1/triglut_1_0_17_1_H1 , 
         \SinCos1/SLICE_2254/SinCos1/SLICE_2254_K0_H0 , VCCI, GNDI, DI1_dly, 
         CLK_dly;

  lut40075 \SinCos1/triglut_1_0_17_1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SinCos1/SLICE_2254/SinCos1/triglut_1_0_17_1_H1 ));
  lut40076 \SinCos1/SLICE_2254_K0 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SinCos1/SLICE_2254/SinCos1/SLICE_2254_K0_H0 ));
  vmuxregsre \SinCos1/FF_46 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  selmux2 \SinCos1/SLICE_2254_K0K1MUX ( 
    .D0(\SinCos1/SLICE_2254/SinCos1/SLICE_2254_K0_H0 ), 
    .D1(\SinCos1/SLICE_2254/SinCos1/triglut_1_0_17_1_H1 ), .SD(M0), .Z(OFX0));
  selmux2 \SinCos1/SLICE_2254_FXMUX ( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40075 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hEC2A) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40076 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h227F) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SinCos1_SLICE_2255 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, M1, M0, 
    FXB, FXA, CLK, output OFX0, Q1, OFX1 );
  wire   \SinCos1/SLICE_2255/SinCos1/triglut_1_0_18_1_H1 , 
         \SinCos1/SLICE_2255/SinCos1/SLICE_2255_K0_H0 , VCCI, GNDI, DI1_dly, 
         CLK_dly;

  lut40077 \SinCos1/triglut_1_0_18_1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SinCos1/SLICE_2255/SinCos1/triglut_1_0_18_1_H1 ));
  lut40078 \SinCos1/SLICE_2255_K0 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SinCos1/SLICE_2255/SinCos1/SLICE_2255_K0_H0 ));
  vmuxregsre \SinCos1/FF_47 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  selmux2 \SinCos1/SLICE_2255_K0K1MUX ( 
    .D0(\SinCos1/SLICE_2255/SinCos1/SLICE_2255_K0_H0 ), 
    .D1(\SinCos1/SLICE_2255/SinCos1/triglut_1_0_18_1_H1 ), .SD(M0), .Z(OFX0));
  selmux2 \SinCos1/SLICE_2255_FXMUX ( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40077 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hBE22) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40078 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h6C33) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SinCos1_SLICE_2256 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, M1, M0, 
    FXB, FXA, CLK, output OFX0, Q1, OFX1 );
  wire   \SinCos1/SLICE_2256/SinCos1/triglut_1_0_19_1_H1 , 
         \SinCos1/SLICE_2256/SinCos1/SLICE_2256_K0_H0 , VCCI, GNDI, DI1_dly, 
         CLK_dly;

  lut40079 \SinCos1/triglut_1_0_19_1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SinCos1/SLICE_2256/SinCos1/triglut_1_0_19_1_H1 ));
  lut40080 \SinCos1/SLICE_2256_K0 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SinCos1/SLICE_2256/SinCos1/SLICE_2256_K0_H0 ));
  vmuxregsre \SinCos1/FF_48 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  selmux2 \SinCos1/SLICE_2256_K0K1MUX ( 
    .D0(\SinCos1/SLICE_2256/SinCos1/SLICE_2256_K0_H0 ), 
    .D1(\SinCos1/SLICE_2256/SinCos1/triglut_1_0_19_1_H1 ), .SD(M0), .Z(OFX0));
  selmux2 \SinCos1/SLICE_2256_FXMUX ( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40079 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hEF93) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40080 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h49F0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SinCos1_SLICE_2257 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, M1, M0, 
    FXB, FXA, CLK, output OFX0, Q1, OFX1 );
  wire   \SinCos1/SLICE_2257/SinCos1/triglut_1_0_20_1_H1 , 
         \SinCos1/SLICE_2257/SinCos1/SLICE_2257_K0_H0 , VCCI, GNDI, DI1_dly, 
         CLK_dly;

  lut40081 \SinCos1/triglut_1_0_20_1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SinCos1/SLICE_2257/SinCos1/triglut_1_0_20_1_H1 ));
  lut40082 \SinCos1/SLICE_2257_K0 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SinCos1/SLICE_2257/SinCos1/SLICE_2257_K0_H0 ));
  vmuxregsre \SinCos1/FF_49 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  selmux2 \SinCos1/SLICE_2257_K0K1MUX ( 
    .D0(\SinCos1/SLICE_2257/SinCos1/SLICE_2257_K0_H0 ), 
    .D1(\SinCos1/SLICE_2257/SinCos1/triglut_1_0_20_1_H1 ), .SD(M0), .Z(OFX0));
  selmux2 \SinCos1/SLICE_2257_FXMUX ( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40081 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hAFE9) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40082 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hDB3C) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SinCos1_SLICE_2258 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, M1, M0, 
    FXB, FXA, CLK, output OFX0, Q1, OFX1 );
  wire   \SinCos1/SLICE_2258/SinCos1/triglut_1_0_21_1_H1 , 
         \SinCos1/SLICE_2258/SinCos1/SLICE_2258_K0_H0 , VCCI, GNDI, DI1_dly, 
         CLK_dly;

  lut40083 \SinCos1/triglut_1_0_21_1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SinCos1/SLICE_2258/SinCos1/triglut_1_0_21_1_H1 ));
  lut40084 \SinCos1/SLICE_2258_K0 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SinCos1/SLICE_2258/SinCos1/SLICE_2258_K0_H0 ));
  vmuxregsre \SinCos1/FF_50 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  selmux2 \SinCos1/SLICE_2258_K0K1MUX ( 
    .D0(\SinCos1/SLICE_2258/SinCos1/SLICE_2258_K0_H0 ), 
    .D1(\SinCos1/SLICE_2258/SinCos1/triglut_1_0_21_1_H1 ), .SD(M0), .Z(OFX0));
  selmux2 \SinCos1/SLICE_2258_FXMUX ( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40083 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFAAB) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40084 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hA16A) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SinCos1_SLICE_2259 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, M1, M0, 
    FXB, FXA, CLK, output OFX0, Q1, OFX1 );
  wire   \SinCos1/SLICE_2259/SinCos1/triglut_1_0_22_1_H1 , 
         \SinCos1/SLICE_2259/SinCos1/SLICE_2259_K0_H0 , VCCI, GNDI, DI1_dly, 
         CLK_dly;

  lut40085 \SinCos1/triglut_1_0_22_1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SinCos1/SLICE_2259/SinCos1/triglut_1_0_22_1_H1 ));
  lut40086 \SinCos1/SLICE_2259_K0 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SinCos1/SLICE_2259/SinCos1/SLICE_2259_K0_H0 ));
  vmuxregsre \SinCos1/FF_51 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  selmux2 \SinCos1/SLICE_2259_K0K1MUX ( 
    .D0(\SinCos1/SLICE_2259/SinCos1/SLICE_2259_K0_H0 ), 
    .D1(\SinCos1/SLICE_2259/SinCos1/triglut_1_0_22_1_H1 ), .SD(M0), .Z(OFX0));
  selmux2 \SinCos1/SLICE_2259_FXMUX ( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40085 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFFE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40086 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h542A) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SinCos1_SLICE_2260 ( input DI1, M1, FXB, FXA, CLK, output OFX0, Q1, 
    OFX1 );
  wire   GNDI, \SinCos1/SLICE_2260/SinCos1/triglut_1_0_23_1_H0 , VCCI, DI1_dly, 
         CLK_dly;

  lut40087 \SinCos1/triglut_1_0_23_1 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(GNDI), 
    .Z(\SinCos1/SLICE_2260/SinCos1/triglut_1_0_23_1_H0 ));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \SinCos1/FF_52 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  selmux20088 \SinCos1/SLICE_2260_K0K1MUX ( 
    .D0(\SinCos1/SLICE_2260/SinCos1/triglut_1_0_23_1_H0 ), .Z(OFX0));
  selmux2 \SinCos1/SLICE_2260_FXMUX ( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (M1 => OFX1) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40087 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFFF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module selmux20088 ( input D0, output Z );

  BUFBA INST1( .A(D0), .Z(Z));
endmodule

module SinCos1_SLICE_2261 ( input CLK, output Q0, Q1 );
  wire   GNDI, VCCI;

  vmuxregsre \SinCos1/FF_54 ( .D0(GNDI), .D1(VCCI), .SD(GNDI), .SP(VCCI), 
    .CK(CLK), .LSR(GNDI), .Q(Q1));
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \SinCos1/FF_53 ( .D0(GNDI), .D1(VCCI), .SD(GNDI), .SP(VCCI), 
    .CK(CLK), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SinCos1_SLICE_2262 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, M1, M0, 
    FXB, FXA, CLK, output OFX0, Q1, OFX1 );
  wire   \SinCos1/SLICE_2262/SinCos1/triglut_1_0_0_1_H1 , 
         \SinCos1/SLICE_2262/SinCos1/SLICE_2262_K0_H0 , VCCI, GNDI, DI1_dly, 
         CLK_dly;

  lut40089 \SinCos1/triglut_1_0_0_1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SinCos1/SLICE_2262/SinCos1/triglut_1_0_0_1_H1 ));
  lut40090 \SinCos1/SLICE_2262_K0 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SinCos1/SLICE_2262/SinCos1/SLICE_2262_K0_H0 ));
  vmuxregsre \SinCos1/FF_29 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  selmux2 \SinCos1/SLICE_2262_K0K1MUX ( 
    .D0(\SinCos1/SLICE_2262/SinCos1/SLICE_2262_K0_H0 ), 
    .D1(\SinCos1/SLICE_2262/SinCos1/triglut_1_0_0_1_H1 ), .SD(M0), .Z(OFX0));
  selmux2 \SinCos1/SLICE_2262_FXMUX ( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40089 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h3CC2) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40090 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF819) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SinCos1_SLICE_2263 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, M1, M0, 
    FXB, FXA, CLK, output OFX0, Q1, OFX1 );
  wire   \SinCos1/SLICE_2263/SinCos1/triglut_1_0_1_1_H1 , 
         \SinCos1/SLICE_2263/SinCos1/SLICE_2263_K0_H0 , VCCI, GNDI, DI1_dly, 
         CLK_dly;

  lut40091 \SinCos1/triglut_1_0_1_1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SinCos1/SLICE_2263/SinCos1/triglut_1_0_1_1_H1 ));
  lut40092 \SinCos1/SLICE_2263_K0 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SinCos1/SLICE_2263/SinCos1/SLICE_2263_K0_H0 ));
  vmuxregsre \SinCos1/FF_30 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  selmux2 \SinCos1/SLICE_2263_K0K1MUX ( 
    .D0(\SinCos1/SLICE_2263/SinCos1/SLICE_2263_K0_H0 ), 
    .D1(\SinCos1/SLICE_2263/SinCos1/triglut_1_0_1_1_H1 ), .SD(M0), .Z(OFX0));
  selmux2 \SinCos1/SLICE_2263_FXMUX ( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40091 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hEA6C) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40092 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hEFE5) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SinCos1_SLICE_2264 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, M1, M0, 
    FXB, FXA, CLK, output OFX0, Q1, OFX1 );
  wire   \SinCos1/SLICE_2264/SinCos1/triglut_1_0_2_1_H1 , 
         \SinCos1/SLICE_2264/SinCos1/SLICE_2264_K0_H0 , VCCI, GNDI, DI1_dly, 
         CLK_dly;

  lut40093 \SinCos1/triglut_1_0_2_1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SinCos1/SLICE_2264/SinCos1/triglut_1_0_2_1_H1 ));
  lut40094 \SinCos1/SLICE_2264_K0 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SinCos1/SLICE_2264/SinCos1/SLICE_2264_K0_H0 ));
  vmuxregsre \SinCos1/FF_31 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  selmux2 \SinCos1/SLICE_2264_K0K1MUX ( 
    .D0(\SinCos1/SLICE_2264/SinCos1/SLICE_2264_K0_H0 ), 
    .D1(\SinCos1/SLICE_2264/SinCos1/triglut_1_0_2_1_H1 ), .SD(M0), .Z(OFX0));
  selmux2 \SinCos1/SLICE_2264_FXMUX ( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40093 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h6211) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40094 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h6D29) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SinCos1_SLICE_2265 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, M1, M0, 
    FXB, FXA, CLK, output OFX0, Q1, OFX1 );
  wire   \SinCos1/SLICE_2265/SinCos1/triglut_1_0_3_1_H1 , 
         \SinCos1/SLICE_2265/SinCos1/SLICE_2265_K0_H0 , VCCI, GNDI, DI1_dly, 
         CLK_dly;

  lut40095 \SinCos1/triglut_1_0_3_1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SinCos1/SLICE_2265/SinCos1/triglut_1_0_3_1_H1 ));
  lut40096 \SinCos1/SLICE_2265_K0 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SinCos1/SLICE_2265/SinCos1/SLICE_2265_K0_H0 ));
  vmuxregsre \SinCos1/FF_32 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  selmux2 \SinCos1/SLICE_2265_K0K1MUX ( 
    .D0(\SinCos1/SLICE_2265/SinCos1/SLICE_2265_K0_H0 ), 
    .D1(\SinCos1/SLICE_2265/SinCos1/triglut_1_0_3_1_H1 ), .SD(M0), .Z(OFX0));
  selmux2 \SinCos1/SLICE_2265_FXMUX ( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40095 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h5B54) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40096 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hBB05) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SinCos1_SLICE_2266 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, M1, M0, 
    FXB, FXA, CLK, output OFX0, Q1, OFX1 );
  wire   \SinCos1/SLICE_2266/SinCos1/triglut_1_0_4_1_H1 , 
         \SinCos1/SLICE_2266/SinCos1/SLICE_2266_K0_H0 , VCCI, GNDI, DI1_dly, 
         CLK_dly;

  lut40097 \SinCos1/triglut_1_0_4_1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SinCos1/SLICE_2266/SinCos1/triglut_1_0_4_1_H1 ));
  lut40098 \SinCos1/SLICE_2266_K0 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SinCos1/SLICE_2266/SinCos1/SLICE_2266_K0_H0 ));
  vmuxregsre \SinCos1/FF_33 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  selmux2 \SinCos1/SLICE_2266_K0K1MUX ( 
    .D0(\SinCos1/SLICE_2266/SinCos1/SLICE_2266_K0_H0 ), 
    .D1(\SinCos1/SLICE_2266/SinCos1/triglut_1_0_4_1_H1 ), .SD(M0), .Z(OFX0));
  selmux2 \SinCos1/SLICE_2266_FXMUX ( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40097 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFE44) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40098 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h5437) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SinCos1_SLICE_2267 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, M1, M0, 
    FXB, FXA, CLK, output OFX0, Q1, OFX1 );
  wire   \SinCos1/SLICE_2267/SinCos1/triglut_1_0_5_1_H1 , 
         \SinCos1/SLICE_2267/SinCos1/SLICE_2267_K0_H0 , VCCI, GNDI, DI1_dly, 
         CLK_dly;

  lut40099 \SinCos1/triglut_1_0_5_1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SinCos1/SLICE_2267/SinCos1/triglut_1_0_5_1_H1 ));
  lut40100 \SinCos1/SLICE_2267_K0 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SinCos1/SLICE_2267/SinCos1/SLICE_2267_K0_H0 ));
  vmuxregsre \SinCos1/FF_34 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  selmux2 \SinCos1/SLICE_2267_K0K1MUX ( 
    .D0(\SinCos1/SLICE_2267/SinCos1/SLICE_2267_K0_H0 ), 
    .D1(\SinCos1/SLICE_2267/SinCos1/triglut_1_0_5_1_H1 ), .SD(M0), .Z(OFX0));
  selmux2 \SinCos1/SLICE_2267_FXMUX ( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40099 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hCC36) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40100 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h447D) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SinCos1_SLICE_2268 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, M1, M0, 
    FXB, FXA, CLK, output OFX0, Q1, OFX1 );
  wire   \SinCos1/SLICE_2268/SinCos1/triglut_1_0_6_1_H1 , 
         \SinCos1/SLICE_2268/SinCos1/SLICE_2268_K0_H0 , VCCI, GNDI, DI1_dly, 
         CLK_dly;

  lut40101 \SinCos1/triglut_1_0_6_1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SinCos1/SLICE_2268/SinCos1/triglut_1_0_6_1_H1 ));
  lut40102 \SinCos1/SLICE_2268_K0 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SinCos1/SLICE_2268/SinCos1/SLICE_2268_K0_H0 ));
  vmuxregsre \SinCos1/FF_35 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  selmux2 \SinCos1/SLICE_2268_K0K1MUX ( 
    .D0(\SinCos1/SLICE_2268/SinCos1/SLICE_2268_K0_H0 ), 
    .D1(\SinCos1/SLICE_2268/SinCos1/triglut_1_0_6_1_H1 ), .SD(M0), .Z(OFX0));
  selmux2 \SinCos1/SLICE_2268_FXMUX ( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40101 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0F92) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40102 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hC9F7) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SinCos1_SLICE_2269 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, M1, M0, 
    FXB, FXA, CLK, output OFX0, Q1, OFX1 );
  wire   \SinCos1/SLICE_2269/SinCos1/triglut_1_0_7_1_H1 , 
         \SinCos1/SLICE_2269/SinCos1/SLICE_2269_K0_H0 , VCCI, GNDI, DI1_dly, 
         CLK_dly;

  lut40103 \SinCos1/triglut_1_0_7_1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SinCos1/SLICE_2269/SinCos1/triglut_1_0_7_1_H1 ));
  lut40104 \SinCos1/SLICE_2269_K0 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SinCos1/SLICE_2269/SinCos1/SLICE_2269_K0_H0 ));
  vmuxregsre \SinCos1/FF_36 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  selmux2 \SinCos1/SLICE_2269_K0K1MUX ( 
    .D0(\SinCos1/SLICE_2269/SinCos1/SLICE_2269_K0_H0 ), 
    .D1(\SinCos1/SLICE_2269/SinCos1/triglut_1_0_7_1_H1 ), .SD(M0), .Z(OFX0));
  selmux2 \SinCos1/SLICE_2269_FXMUX ( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40103 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h3CDB) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40104 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h97F5) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SinCos1_SLICE_2270 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, M1, M0, 
    FXB, FXA, CLK, output OFX0, Q1, OFX1 );
  wire   \SinCos1/SLICE_2270/SinCos1/triglut_1_0_8_1_H1 , 
         \SinCos1/SLICE_2270/SinCos1/SLICE_2270_K0_H0 , VCCI, GNDI, DI1_dly, 
         CLK_dly;

  lut40105 \SinCos1/triglut_1_0_8_1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SinCos1/SLICE_2270/SinCos1/triglut_1_0_8_1_H1 ));
  lut40106 \SinCos1/SLICE_2270_K0 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SinCos1/SLICE_2270/SinCos1/SLICE_2270_K0_H0 ));
  vmuxregsre \SinCos1/FF_37 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  selmux2 \SinCos1/SLICE_2270_K0K1MUX ( 
    .D0(\SinCos1/SLICE_2270/SinCos1/SLICE_2270_K0_H0 ), 
    .D1(\SinCos1/SLICE_2270/SinCos1/triglut_1_0_8_1_H1 ), .SD(M0), .Z(OFX0));
  selmux2 \SinCos1/SLICE_2270_FXMUX ( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40105 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h5685) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40106 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hD55F) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SinCos1_SLICE_2271 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, M1, M0, 
    FXB, FXA, CLK, output OFX0, Q1, OFX1 );
  wire   \SinCos1/SLICE_2271/SinCos1/triglut_1_0_9_1_H1 , 
         \SinCos1/SLICE_2271/SinCos1/SLICE_2271_K0_H0 , VCCI, GNDI, DI1_dly, 
         CLK_dly;

  lut40086 \SinCos1/triglut_1_0_9_1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SinCos1/SLICE_2271/SinCos1/triglut_1_0_9_1_H1 ));
  lut40107 \SinCos1/SLICE_2271_K0 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SinCos1/SLICE_2271/SinCos1/SLICE_2271_K0_H0 ));
  vmuxregsre \SinCos1/FF_38 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  selmux2 \SinCos1/SLICE_2271_K0K1MUX ( 
    .D0(\SinCos1/SLICE_2271/SinCos1/SLICE_2271_K0_H0 ), 
    .D1(\SinCos1/SLICE_2271/SinCos1/triglut_1_0_9_1_H1 ), .SD(M0), .Z(OFX0));
  selmux2 \SinCos1/SLICE_2271_FXMUX ( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40107 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h7FFF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SinCos1_SLICE_2272 ( input D1, C1, B1, A1, DI1, M1, M0, FXB, FXA, CLK, 
    output OFX0, Q1, OFX1 );
  wire   \SinCos1/SLICE_2272/SinCos1/triglut_1_0_10_1_H1 , GNDI, 
         \SinCos1/SLICE_2272/SinCos1/SLICE_2272_K0_H0 , VCCI, DI1_dly, CLK_dly;

  lut40108 \SinCos1/triglut_1_0_10_1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SinCos1/SLICE_2272/SinCos1/triglut_1_0_10_1_H1 ));
  lut40087 \SinCos1/SLICE_2272_K0 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(GNDI), 
    .Z(\SinCos1/SLICE_2272/SinCos1/SLICE_2272_K0_H0 ));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \SinCos1/FF_39 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  selmux2 \SinCos1/SLICE_2272_K0K1MUX ( 
    .D0(\SinCos1/SLICE_2272/SinCos1/SLICE_2272_K0_H0 ), 
    .D1(\SinCos1/SLICE_2272/SinCos1/triglut_1_0_10_1_H1 ), .SD(M0), .Z(OFX0));
  selmux2 \SinCos1/SLICE_2272_FXMUX ( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40108 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0155) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SinCos1_SLICE_2273 ( input DI1, M1, FXB, FXA, CLK, output OFX0, Q1, 
    OFX1 );
  wire   GNDI, \SinCos1/SLICE_2273/SinCos1/triglut_1_0_11_1_H0 , VCCI, DI1_dly, 
         CLK_dly;

  lut40109 \SinCos1/triglut_1_0_11_1 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(GNDI), 
    .Z(\SinCos1/SLICE_2273/SinCos1/triglut_1_0_11_1_H0 ));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \SinCos1/FF_40 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  selmux20088 \SinCos1/SLICE_2273_K0K1MUX ( 
    .D0(\SinCos1/SLICE_2273/SinCos1/triglut_1_0_11_1_H0 ), .Z(OFX0));
  selmux2 \SinCos1/SLICE_2273_FXMUX ( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (M1 => OFX1) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40109 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0000) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SinCos1_SLICE_2274 ( input CLK, output Q0 );
  wire   GNDI, VCCI;

  vmuxregsre \SinCos1/FF_41 ( .D0(GNDI), .D1(VCCI), .SD(GNDI), .SP(VCCI), 
    .CK(CLK), .LSR(GNDI), .Q(Q0));
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SinCos1_SLICE_2275 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre \SinCos1/FF_55 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \SinCos1/FF_27 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_2276 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40053 \CIC1Cos/mux_1240_i5_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40053 \CIC1Cos/mux_1240_i4_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  vmuxregsre \CIC1Cos/d10__i5 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \CIC1Cos/d10__i4 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_2277 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40053 \CIC1Cos/mux_1240_i7_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40053 \CIC1Cos/mux_1240_i6_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  vmuxregsre \CIC1Cos/d10__i7 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \CIC1Cos/d10__i6 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_2278 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40053 \CIC1Cos/mux_1240_i9_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40053 \CIC1Cos/mux_1240_i8_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  vmuxregsre \CIC1Cos/d10__i9 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \CIC1Cos/d10__i8 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_2279 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40053 \CIC1Cos/mux_1240_i11_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40053 \CIC1Cos/mux_1240_i10_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  vmuxregsre \CIC1Cos/d10__i11 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \CIC1Cos/d10__i10 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_2280 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40053 \CIC1Cos/mux_1240_i13_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40053 \CIC1Cos/mux_1240_i12_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  vmuxregsre \CIC1Cos/d10__i13 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \CIC1Cos/d10__i12 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_2281 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40053 \CIC1Cos/mux_1240_i15_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40053 \CIC1Cos/mux_1240_i14_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  vmuxregsre \CIC1Cos/d10__i15 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \CIC1Cos/d10__i14 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_2282 ( input C0, B0, A0, DI0, CE, CLK, output F0, Q0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, CE_dly;

  lut40053 \CIC1Cos/mux_1240_i16_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d10__i16 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ncoGen_SLICE_2284 ( input B0, A0, DI0, CLK, output F0, Q0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly;

  lut4 \ncoGen/i4596_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \ncoGen/phase_accum_i0 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module uart_rx1_SLICE_2285 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \uart_rx1/o_Rx_Byte_i1 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \uart_rx1/o_Rx_Byte_i0 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module uart_rx1_SLICE_2286 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \uart_rx1/o_Rx_Byte_i3 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \uart_rx1/o_Rx_Byte_i2 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module uart_rx1_SLICE_2287 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \uart_rx1/o_Rx_Byte_i5 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \uart_rx1/o_Rx_Byte_i4 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module uart_rx1_SLICE_2288 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \uart_rx1/o_Rx_Byte_i7 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \uart_rx1/o_Rx_Byte_i6 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_2289 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre o_Rx_Byte_i2( .D0(M1_dly), .D1(VCCI), .SD(GNDI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre o_Rx_Byte_i0( .D0(M0_dly), .D1(VCCI), .SD(GNDI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_2290 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre o_Rx_Byte_i4( .D0(M1_dly), .D1(VCCI), .SD(GNDI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre o_Rx_Byte_i3( .D0(M0_dly), .D1(VCCI), .SD(GNDI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_2291 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre o_Rx_Byte_i6( .D0(M1_dly), .D1(VCCI), .SD(GNDI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre o_Rx_Byte_i5( .D0(M0_dly), .D1(VCCI), .SD(GNDI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module uart_rx1_SLICE_2294 ( input A0, DI0, LSR, CLK, output F0, Q0 );
  wire   GNDI, VCCI, LSR_NOTIN, DI0_dly, CLK_dly, LSR_dly;

  lut40048 \uart_rx1/r_Rx_DV_last_I_0_1_lut ( .A(A0), .B(GNDI), .C(GNDI), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0006 \uart_rx1/o_Rx_DV_59 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter LSR_INVERTERIN( .I(LSR_dly), .Z(LSR_NOTIN));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_2295 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre phase_inc_carrGen1_i1( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre phase_inc_carrGen1_i0( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_2296 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre phase_inc_carrGen1_i3( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre phase_inc_carrGen1_i2( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_2297 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre phase_inc_carrGen1_i5( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre phase_inc_carrGen1_i4( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_2298 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre phase_inc_carrGen1_i7( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre phase_inc_carrGen1_i6( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_2299 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre phase_inc_carrGen1_i9( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre phase_inc_carrGen1_i8( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_2300 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre phase_inc_carrGen1_i11( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre phase_inc_carrGen1_i10( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_2301 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre phase_inc_carrGen1_i13( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre phase_inc_carrGen1_i12( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_2302 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre phase_inc_carrGen1_i15( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre phase_inc_carrGen1_i14( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_2303 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre phase_inc_carrGen1_i17( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre phase_inc_carrGen1_i16( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_2304 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre phase_inc_carrGen1_i19( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre phase_inc_carrGen1_i18( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_2305 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre phase_inc_carrGen1_i21( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre phase_inc_carrGen1_i20( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_2306 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre phase_inc_carrGen1_i23( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre phase_inc_carrGen1_i22( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_2307 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre phase_inc_carrGen1_i25( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre phase_inc_carrGen1_i24( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_2308 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre phase_inc_carrGen1_i27( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre phase_inc_carrGen1_i26( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_2309 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre phase_inc_carrGen1_i29( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre phase_inc_carrGen1_i28( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_2310 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre phase_inc_carrGen1_i31( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre phase_inc_carrGen1_i30( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_2311 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre phase_inc_carrGen1_i33( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre phase_inc_carrGen1_i32( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_2312 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre phase_inc_carrGen1_i35( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre phase_inc_carrGen1_i34( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_2313 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre phase_inc_carrGen1_i37( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre phase_inc_carrGen1_i36( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_2314 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre phase_inc_carrGen1_i39( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre phase_inc_carrGen1_i38( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_2315 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre phase_inc_carrGen1_i41( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre phase_inc_carrGen1_i40( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_2316 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre phase_inc_carrGen1_i43( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre phase_inc_carrGen1_i42( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_2317 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre phase_inc_carrGen1_i45( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre phase_inc_carrGen1_i44( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_2318 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre phase_inc_carrGen1_i47( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre phase_inc_carrGen1_i46( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_2319 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre phase_inc_carrGen1_i49( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre phase_inc_carrGen1_i48( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_2320 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre phase_inc_carrGen1_i51( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre phase_inc_carrGen1_i50( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_2321 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre phase_inc_carrGen1_i53( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre phase_inc_carrGen1_i52( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_2322 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre phase_inc_carrGen1_i55( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre phase_inc_carrGen1_i54( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_2323 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre phase_inc_carrGen1_i57( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre phase_inc_carrGen1_i56( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_2324 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre phase_inc_carrGen1_i59( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre phase_inc_carrGen1_i58( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_2325 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre phase_inc_carrGen1_i61( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre phase_inc_carrGen1_i60( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_2326 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre phase_inc_carrGen1_i63( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre phase_inc_carrGen1_i62( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_2327 ( input M0, CE, CLK, output Q0 );
  wire   VCCI, GNDI, M0_dly, CLK_dly, CE_dly;

  vmuxregsre phase_inc_carrGen_i0_i1( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module uart_rx1_SLICE_2328 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, 
    CE, CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40110 \uart_rx1/i2_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40111 \uart_rx1/i2_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre \uart_rx1/r_Bit_Index_i1 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \uart_rx1/r_Bit_Index_i0 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40110 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h4800) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40111 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0E00) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module uart_rx1_SLICE_2329 ( input C1, B1, A1, D0, C0, B0, A0, DI0, CE, CLK, 
    output F0, Q0, F1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, CE_dly;

  lut40112 \uart_rx1/r_Bit_Index_2__bdd_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40054 \uart_rx1/i4_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre \uart_rx1/r_Bit_Index_i2 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40112 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h6A6A) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module uart_rx1_SLICE_2330 ( input M0, CE, CLK, output Q0 );
  wire   VCCI, GNDI, M0_dly, CLK_dly, CE_dly;

  vmuxregsre \uart_rx1/r_Rx_Byte_i0 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module uart_rx1_SLICE_2331 ( input M0, CE, CLK, output Q0 );
  wire   VCCI, GNDI, M0_dly, CLK_dly, CE_dly;

  vmuxregsre \uart_rx1/r_Rx_Byte_i1 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module uart_rx1_SLICE_2332 ( input M0, CE, CLK, output Q0 );
  wire   VCCI, GNDI, M0_dly, CLK_dly, CE_dly;

  vmuxregsre \uart_rx1/r_Rx_Byte_i2 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module uart_rx1_SLICE_2333 ( input M0, CE, CLK, output Q0 );
  wire   VCCI, GNDI, M0_dly, CLK_dly, CE_dly;

  vmuxregsre \uart_rx1/r_Rx_Byte_i3 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module uart_rx1_SLICE_2334 ( input M0, CE, CLK, output Q0 );
  wire   VCCI, GNDI, M0_dly, CLK_dly, CE_dly;

  vmuxregsre \uart_rx1/r_Rx_Byte_i4 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module uart_rx1_SLICE_2335 ( input M0, CE, CLK, output Q0 );
  wire   VCCI, GNDI, M0_dly, CLK_dly, CE_dly;

  vmuxregsre \uart_rx1/r_Rx_Byte_i5 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module uart_rx1_SLICE_2336 ( input M0, CE, CLK, output Q0 );
  wire   VCCI, GNDI, M0_dly, CLK_dly, CE_dly;

  vmuxregsre \uart_rx1/r_Rx_Byte_i6 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module uart_rx1_SLICE_2337 ( input M0, CE, CLK, output Q0 );
  wire   VCCI, GNDI, M0_dly, CLK_dly, CE_dly;

  vmuxregsre \uart_rx1/r_Rx_Byte_i7 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module uart_rx1_SLICE_2338 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI0, CE, 
    CLK, output F0, Q0, F1 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40052 \uart_rx1/i1_4_lut_adj_51 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40111 \uart_rx1/i5377_2_lut_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre \uart_rx1/r_Rx_DV_64 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module uart_rx1_SLICE_2339 ( input M0, CLK, output Q0 );
  wire   VCCI, GNDI, M0_dly, CLK_dly;

  vmuxregsre \uart_rx1/r_Rx_DV_last_60 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module uart_rx1_SLICE_2341 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre0065 \uart_rx1/r_Rx_Data_62 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0065 \uart_rx1/r_Rx_Data_R_61 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module uart_rx1_SLICE_2342 ( input D1, C1, B1, A1, C0, B0, A0, DI0, M0, LSR, 
    CLK, output OFX0, Q0 );
  wire   \uart_rx1/SLICE_2342/uart_rx1/SLICE_2342_K1_H1 , GNDI, 
         \uart_rx1/SLICE_2342/uart_rx1/i5409/GATE_H0 , VCCI, DI0_dly, CLK_dly, 
         LSR_dly;

  lut40113 \uart_rx1/SLICE_2342_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\uart_rx1/SLICE_2342/uart_rx1/SLICE_2342_K1_H1 ));
  lut40114 \uart_rx1/i5409/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\uart_rx1/SLICE_2342/uart_rx1/i5409/GATE_H0 ));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0006 \uart_rx1/r_SM_Main_i0 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  selmux2 \uart_rx1/SLICE_2342_K0K1MUX ( 
    .D0(\uart_rx1/SLICE_2342/uart_rx1/i5409/GATE_H0 ), 
    .D1(\uart_rx1/SLICE_2342/uart_rx1/SLICE_2342_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40113 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h5602) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40114 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hA3A3) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module uart_rx1_SLICE_2343 ( input C1, B1, A1, C0, B0, A0, DI0, M0, LSR, CLK, 
    output OFX0, Q0 );
  wire   GNDI, \uart_rx1/SLICE_2343/uart_rx1/SLICE_2343_K1_H1 , 
         \uart_rx1/SLICE_2343/uart_rx1/i5435/GATE_H0 , VCCI, DI0_dly, CLK_dly, 
         LSR_dly;

  lut40115 \uart_rx1/SLICE_2343_K1 ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(\uart_rx1/SLICE_2343/uart_rx1/SLICE_2343_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40116 \uart_rx1/i5435/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\uart_rx1/SLICE_2343/uart_rx1/i5435/GATE_H0 ));
  vmuxregsre0006 \uart_rx1/r_SM_Main_i1 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  selmux2 \uart_rx1/SLICE_2343_K0K1MUX ( 
    .D0(\uart_rx1/SLICE_2343/uart_rx1/i5435/GATE_H0 ), 
    .D1(\uart_rx1/SLICE_2343/uart_rx1/SLICE_2343_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40115 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h5757) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40116 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h1010) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module uart_rx1_SLICE_2344 ( input D1, C1, B1, A1, B0, A0, DI0, LSR, CLK, 
    output F0, Q0, F1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, LSR_dly;

  lut40117 \uart_rx1/i2772_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40118 \uart_rx1/i1_2_lut_rep_88 ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0006 \uart_rx1/r_SM_Main_i2 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40117 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hC8C0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40118 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hEEEE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module i5447_SLICE_2345 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, output 
    OFX0 );
  wire   \i5447/SLICE_2345/i5447/SLICE_2345_K1_H1 , 
         \i5447/SLICE_2345/i5447/GATE_H0 ;

  lut40119 \i5447/SLICE_2345_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\i5447/SLICE_2345/i5447/SLICE_2345_K1_H1 ));
  lut40120 \i5447/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\i5447/SLICE_2345/i5447/GATE_H0 ));
  selmux2 \i5447/SLICE_2345_K0K1MUX ( .D0(\i5447/SLICE_2345/i5447/GATE_H0 ), 
    .D1(\i5447/SLICE_2345/i5447/SLICE_2345_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40119 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h5400) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40120 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h5010) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SinCos1_SLICE_2346 ( input C1, B1, A1, D0, C0, B0, A0, output OFX0, F1 );
  wire   GNDI, \SinCos1/SLICE_2346/SinCos1/triglut_1_0_23_0_H0 ;

  lut40053 \SinCos1/muxb_56/GATE ( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40121 \SinCos1/triglut_1_0_23_0 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SinCos1/SLICE_2346/SinCos1/triglut_1_0_23_0_H0 ));
  selmux20088 \SinCos1/SLICE_2346_K0K1MUX ( 
    .D0(\SinCos1/SLICE_2346/SinCos1/triglut_1_0_23_0_H0 ), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40121 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF800) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SinCos1_SLICE_2347 ( input C1, B1, A1, D0, C0, B0, A0, M0, output OFX0 );
  wire   GNDI, \SinCos1/SLICE_2347/SinCos1/SLICE_2347_K1_H1 , 
         \SinCos1/SLICE_2347/SinCos1/triglut_1_0_22_0_H0 ;

  lut40122 \SinCos1/SLICE_2347_K1 ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(\SinCos1/SLICE_2347/SinCos1/SLICE_2347_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40123 \SinCos1/triglut_1_0_22_0 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SinCos1/SLICE_2347/SinCos1/triglut_1_0_22_0_H0 ));
  selmux2 \SinCos1/SLICE_2347_K0K1MUX ( 
    .D0(\SinCos1/SLICE_2347/SinCos1/triglut_1_0_22_0_H0 ), 
    .D1(\SinCos1/SLICE_2347/SinCos1/SLICE_2347_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40122 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFEFE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40123 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h502A) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SinCos1_SLICE_2348 ( input C1, B1, A1, D0, C0, B0, A0, M0, output OFX0 );
  wire   GNDI, \SinCos1/SLICE_2348/SinCos1/SLICE_2348_K1_H1 , 
         \SinCos1/SLICE_2348/SinCos1/triglut_1_0_21_0_H0 ;

  lut40124 \SinCos1/SLICE_2348_K1 ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(\SinCos1/SLICE_2348/SinCos1/SLICE_2348_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40125 \SinCos1/triglut_1_0_21_0 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SinCos1/SLICE_2348/SinCos1/triglut_1_0_21_0_H0 ));
  selmux2 \SinCos1/SLICE_2348_K0K1MUX ( 
    .D0(\SinCos1/SLICE_2348/SinCos1/triglut_1_0_21_0_H0 ), 
    .D1(\SinCos1/SLICE_2348/SinCos1/SLICE_2348_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40124 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hEBEB) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40125 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hA56A) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SinCos1_SLICE_2349 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, output 
    OFX0 );
  wire   \SinCos1/SLICE_2349/SinCos1/SLICE_2349_K1_H1 , 
         \SinCos1/SLICE_2349/SinCos1/triglut_1_0_20_0_H0 ;

  lut40126 \SinCos1/SLICE_2349_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SinCos1/SLICE_2349/SinCos1/SLICE_2349_K1_H1 ));
  lut40127 \SinCos1/triglut_1_0_20_0 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SinCos1/SLICE_2349/SinCos1/triglut_1_0_20_0_H0 ));
  selmux2 \SinCos1/SLICE_2349_K0K1MUX ( 
    .D0(\SinCos1/SLICE_2349/SinCos1/triglut_1_0_20_0_H0 ), 
    .D1(\SinCos1/SLICE_2349/SinCos1/SLICE_2349_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40126 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hAFAD) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40127 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h4D30) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SinCos1_SLICE_2350 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, output 
    OFX0 );
  wire   \SinCos1/SLICE_2350/SinCos1/SLICE_2350_K1_H1 , 
         \SinCos1/SLICE_2350/SinCos1/triglut_1_0_19_0_H0 ;

  lut40128 \SinCos1/SLICE_2350_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SinCos1/SLICE_2350/SinCos1/SLICE_2350_K1_H1 ));
  lut40129 \SinCos1/triglut_1_0_19_0 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SinCos1/SLICE_2350/SinCos1/triglut_1_0_19_0_H0 ));
  selmux2 \SinCos1/SLICE_2350_K0K1MUX ( 
    .D0(\SinCos1/SLICE_2350/SinCos1/triglut_1_0_19_0_H0 ), 
    .D1(\SinCos1/SLICE_2350/SinCos1/SLICE_2350_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40128 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hAEC6) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40129 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h9E3C) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SinCos1_SLICE_2351 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, output 
    OFX0 );
  wire   \SinCos1/SLICE_2351/SinCos1/SLICE_2351_K1_H1 , 
         \SinCos1/SLICE_2351/SinCos1/triglut_1_0_18_0_H0 ;

  lut40130 \SinCos1/SLICE_2351_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SinCos1/SLICE_2351/SinCos1/SLICE_2351_K1_H1 ));
  lut40131 \SinCos1/triglut_1_0_18_0 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SinCos1/SLICE_2351/SinCos1/triglut_1_0_18_0_H0 ));
  selmux2 \SinCos1/SLICE_2351_K0K1MUX ( 
    .D0(\SinCos1/SLICE_2351/SinCos1/triglut_1_0_18_0_H0 ), 
    .D1(\SinCos1/SLICE_2351/SinCos1/SLICE_2351_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40130 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hE977) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40131 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h464C) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SinCos1_SLICE_2352 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, output 
    OFX0 );
  wire   \SinCos1/SLICE_2352/SinCos1/SLICE_2352_K1_H1 , 
         \SinCos1/SLICE_2352/SinCos1/triglut_1_0_17_0_H0 ;

  lut40132 \SinCos1/SLICE_2352_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SinCos1/SLICE_2352/SinCos1/SLICE_2352_K1_H1 ));
  lut40133 \SinCos1/triglut_1_0_17_0 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SinCos1/SLICE_2352/SinCos1/triglut_1_0_17_0_H0 ));
  selmux2 \SinCos1/SLICE_2352_K0K1MUX ( 
    .D0(\SinCos1/SLICE_2352/SinCos1/triglut_1_0_17_0_H0 ), 
    .D1(\SinCos1/SLICE_2352/SinCos1/SLICE_2352_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40132 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hE600) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40133 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF782) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SinCos1_SLICE_2353 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, output 
    OFX0 );
  wire   \SinCos1/SLICE_2353/SinCos1/SLICE_2353_K1_H1 , 
         \SinCos1/SLICE_2353/SinCos1/triglut_1_0_16_0_H0 ;

  lut40134 \SinCos1/SLICE_2353_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SinCos1/SLICE_2353/SinCos1/SLICE_2353_K1_H1 ));
  lut40135 \SinCos1/triglut_1_0_16_0 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SinCos1/SLICE_2353/SinCos1/triglut_1_0_16_0_H0 ));
  selmux2 \SinCos1/SLICE_2353_K0K1MUX ( 
    .D0(\SinCos1/SLICE_2353/SinCos1/triglut_1_0_16_0_H0 ), 
    .D1(\SinCos1/SLICE_2353/SinCos1/SLICE_2353_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40134 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hDE7D) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40135 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h80D8) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SinCos1_SLICE_2354 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, output 
    OFX0 );
  wire   \SinCos1/SLICE_2354/SinCos1/SLICE_2354_K1_H1 , 
         \SinCos1/SLICE_2354/SinCos1/triglut_1_0_15_0_H0 ;

  lut40136 \SinCos1/SLICE_2354_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SinCos1/SLICE_2354/SinCos1/SLICE_2354_K1_H1 ));
  lut40137 \SinCos1/triglut_1_0_15_0 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SinCos1/SLICE_2354/SinCos1/triglut_1_0_15_0_H0 ));
  selmux2 \SinCos1/SLICE_2354_K0K1MUX ( 
    .D0(\SinCos1/SLICE_2354/SinCos1/triglut_1_0_15_0_H0 ), 
    .D1(\SinCos1/SLICE_2354/SinCos1/SLICE_2354_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40136 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hB556) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40137 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h88EC) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SinCos1_SLICE_2355 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, output 
    OFX0 );
  wire   \SinCos1/SLICE_2355/SinCos1/SLICE_2355_K1_H1 , 
         \SinCos1/SLICE_2355/SinCos1/triglut_1_0_14_0_H0 ;

  lut40138 \SinCos1/SLICE_2355_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SinCos1/SLICE_2355/SinCos1/SLICE_2355_K1_H1 ));
  lut40139 \SinCos1/triglut_1_0_14_0 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SinCos1/SLICE_2355/SinCos1/triglut_1_0_14_0_H0 ));
  selmux2 \SinCos1/SLICE_2355_K0K1MUX ( 
    .D0(\SinCos1/SLICE_2355/SinCos1/triglut_1_0_14_0_H0 ), 
    .D1(\SinCos1/SLICE_2355/SinCos1/SLICE_2355_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40138 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF990) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40139 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF600) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SinCos1_SLICE_2356 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, output 
    OFX0 );
  wire   \SinCos1/SLICE_2356/SinCos1/SLICE_2356_K1_H1 , 
         \SinCos1/SLICE_2356/SinCos1/triglut_1_0_13_0_H0 ;

  lut40140 \SinCos1/SLICE_2356_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SinCos1/SLICE_2356/SinCos1/SLICE_2356_K1_H1 ));
  lut40141 \SinCos1/triglut_1_0_13_0 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SinCos1/SLICE_2356/SinCos1/triglut_1_0_13_0_H0 ));
  selmux2 \SinCos1/SLICE_2356_K0K1MUX ( 
    .D0(\SinCos1/SLICE_2356/SinCos1/triglut_1_0_13_0_H0 ), 
    .D1(\SinCos1/SLICE_2356/SinCos1/SLICE_2356_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40140 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h47D4) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40141 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hB0F0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SinCos1_SLICE_2357 ( input D0, C0, B0, A0, M0, output OFX0 );
  wire   GNDI, \SinCos1/SLICE_2357/SinCos1/SLICE_2357_K1_H1 , 
         \SinCos1/SLICE_2357/SinCos1/triglut_1_0_11_0_H0 ;

  lut40109 \SinCos1/SLICE_2357_K1 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(GNDI), 
    .Z(\SinCos1/SLICE_2357/SinCos1/SLICE_2357_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40142 \SinCos1/triglut_1_0_11_0 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SinCos1/SLICE_2357/SinCos1/triglut_1_0_11_0_H0 ));
  selmux2 \SinCos1/SLICE_2357_K0K1MUX ( 
    .D0(\SinCos1/SLICE_2357/SinCos1/triglut_1_0_11_0_H0 ), 
    .D1(\SinCos1/SLICE_2357/SinCos1/SLICE_2357_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40142 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0001) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SinCos1_SLICE_2358 ( input C1, B1, A1, D0, C0, B0, A0, M0, output OFX0 );
  wire   GNDI, \SinCos1/SLICE_2358/SinCos1/SLICE_2358_K1_H1 , 
         \SinCos1/SLICE_2358/SinCos1/triglut_1_0_10_0_H0 ;

  lut40143 \SinCos1/SLICE_2358_K1 ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(\SinCos1/SLICE_2358/SinCos1/SLICE_2358_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40085 \SinCos1/triglut_1_0_10_0 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SinCos1/SLICE_2358/SinCos1/triglut_1_0_10_0_H0 ));
  selmux2 \SinCos1/SLICE_2358_K0K1MUX ( 
    .D0(\SinCos1/SLICE_2358/SinCos1/triglut_1_0_10_0_H0 ), 
    .D1(\SinCos1/SLICE_2358/SinCos1/SLICE_2358_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40143 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h1515) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SinCos1_SLICE_2359 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, output 
    OFX0 );
  wire   \SinCos1/SLICE_2359/SinCos1/SLICE_2359_K1_H1 , 
         \SinCos1/SLICE_2359/SinCos1/triglut_1_0_9_0_H0 ;

  lut40123 \SinCos1/SLICE_2359_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SinCos1/SLICE_2359/SinCos1/SLICE_2359_K1_H1 ));
  lut40144 \SinCos1/triglut_1_0_9_0 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SinCos1/SLICE_2359/SinCos1/triglut_1_0_9_0_H0 ));
  selmux2 \SinCos1/SLICE_2359_K0K1MUX ( 
    .D0(\SinCos1/SLICE_2359/SinCos1/triglut_1_0_9_0_H0 ), 
    .D1(\SinCos1/SLICE_2359/SinCos1/SLICE_2359_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40144 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h7FFE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SinCos1_SLICE_2360 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, output 
    OFX0 );
  wire   \SinCos1/SLICE_2360/SinCos1/SLICE_2360_K1_H1 , 
         \SinCos1/SLICE_2360/SinCos1/triglut_1_0_8_0_H0 ;

  lut40145 \SinCos1/SLICE_2360_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SinCos1/SLICE_2360/SinCos1/SLICE_2360_K1_H1 ));
  lut40146 \SinCos1/triglut_1_0_8_0 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SinCos1/SLICE_2360/SinCos1/triglut_1_0_8_0_H0 ));
  selmux2 \SinCos1/SLICE_2360_K0K1MUX ( 
    .D0(\SinCos1/SLICE_2360/SinCos1/triglut_1_0_8_0_H0 ), 
    .D1(\SinCos1/SLICE_2360/SinCos1/SLICE_2360_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40145 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h5A97) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40146 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hD57E) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SinCos1_SLICE_2361 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, output 
    OFX0 );
  wire   \SinCos1/SLICE_2361/SinCos1/SLICE_2361_K1_H1 , 
         \SinCos1/SLICE_2361/SinCos1/triglut_1_0_7_0_H0 ;

  lut40147 \SinCos1/SLICE_2361_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SinCos1/SLICE_2361/SinCos1/SLICE_2361_K1_H1 ));
  lut40148 \SinCos1/triglut_1_0_7_0 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SinCos1/SLICE_2361/SinCos1/triglut_1_0_7_0_H0 ));
  selmux2 \SinCos1/SLICE_2361_K0K1MUX ( 
    .D0(\SinCos1/SLICE_2361/SinCos1/triglut_1_0_7_0_H0 ), 
    .D1(\SinCos1/SLICE_2361/SinCos1/SLICE_2361_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40147 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h32C9) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40148 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hD7D4) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SinCos1_SLICE_2362 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, output 
    OFX0 );
  wire   \SinCos1/SLICE_2362/SinCos1/SLICE_2362_K1_H1 , 
         \SinCos1/SLICE_2362/SinCos1/triglut_1_0_6_0_H0 ;

  lut40149 \SinCos1/SLICE_2362_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SinCos1/SLICE_2362/SinCos1/SLICE_2362_K1_H1 ));
  lut40150 \SinCos1/triglut_1_0_6_0 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SinCos1/SLICE_2362/SinCos1/triglut_1_0_6_0_H0 ));
  selmux2 \SinCos1/SLICE_2362_K0K1MUX ( 
    .D0(\SinCos1/SLICE_2362/SinCos1/triglut_1_0_6_0_H0 ), 
    .D1(\SinCos1/SLICE_2362/SinCos1/SLICE_2362_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40149 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF1E4) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40150 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h8DD6) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SinCos1_SLICE_2363 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, output 
    OFX0 );
  wire   \SinCos1/SLICE_2363/SinCos1/SLICE_2363_K1_H1 , 
         \SinCos1/SLICE_2363/SinCos1/triglut_1_0_5_0_H0 ;

  lut40151 \SinCos1/SLICE_2363_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SinCos1/SLICE_2363/SinCos1/SLICE_2363_K1_H1 ));
  lut40152 \SinCos1/triglut_1_0_5_0 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SinCos1/SLICE_2363/SinCos1/triglut_1_0_5_0_H0 ));
  selmux2 \SinCos1/SLICE_2363_K0K1MUX ( 
    .D0(\SinCos1/SLICE_2363/SinCos1/triglut_1_0_5_0_H0 ), 
    .D1(\SinCos1/SLICE_2363/SinCos1/SLICE_2363_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40151 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hC989) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40152 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hBA5E) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SinCos1_SLICE_2364 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, output 
    OFX0 );
  wire   \SinCos1/SLICE_2364/SinCos1/SLICE_2364_K1_H1 , 
         \SinCos1/SLICE_2364/SinCos1/triglut_1_0_4_0_H0 ;

  lut40153 \SinCos1/SLICE_2364_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SinCos1/SLICE_2364/SinCos1/SLICE_2364_K1_H1 ));
  lut40154 \SinCos1/triglut_1_0_4_0 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SinCos1/SLICE_2364/SinCos1/triglut_1_0_4_0_H0 ));
  selmux2 \SinCos1/SLICE_2364_K0K1MUX ( 
    .D0(\SinCos1/SLICE_2364/SinCos1/triglut_1_0_4_0_H0 ), 
    .D1(\SinCos1/SLICE_2364/SinCos1/SLICE_2364_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40153 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h07BE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40154 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h019C) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SinCos1_SLICE_2365 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, output 
    OFX0 );
  wire   \SinCos1/SLICE_2365/SinCos1/SLICE_2365_K1_H1 , 
         \SinCos1/SLICE_2365/SinCos1/triglut_1_0_3_0_H0 ;

  lut40155 \SinCos1/SLICE_2365_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SinCos1/SLICE_2365/SinCos1/SLICE_2365_K1_H1 ));
  lut40156 \SinCos1/triglut_1_0_3_0 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SinCos1/SLICE_2365/SinCos1/triglut_1_0_3_0_H0 ));
  selmux2 \SinCos1/SLICE_2365_K0K1MUX ( 
    .D0(\SinCos1/SLICE_2365/SinCos1/triglut_1_0_3_0_H0 ), 
    .D1(\SinCos1/SLICE_2365/SinCos1/SLICE_2365_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40155 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h6C05) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40156 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF9EC) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SinCos1_SLICE_2366 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, output 
    OFX0 );
  wire   \SinCos1/SLICE_2366/SinCos1/SLICE_2366_K1_H1 , 
         \SinCos1/SLICE_2366/SinCos1/triglut_1_0_2_0_H0 ;

  lut40157 \SinCos1/SLICE_2366_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SinCos1/SLICE_2366/SinCos1/SLICE_2366_K1_H1 ));
  lut40158 \SinCos1/triglut_1_0_2_0 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SinCos1/SLICE_2366/SinCos1/triglut_1_0_2_0_H0 ));
  selmux2 \SinCos1/SLICE_2366_K0K1MUX ( 
    .D0(\SinCos1/SLICE_2366/SinCos1/triglut_1_0_2_0_H0 ), 
    .D1(\SinCos1/SLICE_2366/SinCos1/SLICE_2366_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40157 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hDC44) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40158 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hAAB6) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SinCos1_SLICE_2367 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, output 
    OFX0 );
  wire   \SinCos1/SLICE_2367/SinCos1/SLICE_2367_K1_H1 , 
         \SinCos1/SLICE_2367/SinCos1/triglut_1_0_1_0_H0 ;

  lut40159 \SinCos1/SLICE_2367_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SinCos1/SLICE_2367/SinCos1/SLICE_2367_K1_H1 ));
  lut40160 \SinCos1/triglut_1_0_1_0 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SinCos1/SLICE_2367/SinCos1/triglut_1_0_1_0_H0 ));
  selmux2 \SinCos1/SLICE_2367_K0K1MUX ( 
    .D0(\SinCos1/SLICE_2367/SinCos1/triglut_1_0_1_0_H0 ), 
    .D1(\SinCos1/SLICE_2367/SinCos1/SLICE_2367_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40159 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h01BC) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40160 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h267C) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SinCos1_SLICE_2368 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, output 
    OFX0 );
  wire   \SinCos1/SLICE_2368/SinCos1/SLICE_2368_K1_H1 , 
         \SinCos1/SLICE_2368/SinCos1/triglut_1_0_0_0_H0 ;

  lut40161 \SinCos1/SLICE_2368_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SinCos1/SLICE_2368/SinCos1/SLICE_2368_K1_H1 ));
  lut40162 \SinCos1/triglut_1_0_0_0 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SinCos1/SLICE_2368/SinCos1/triglut_1_0_0_0_H0 ));
  selmux2 \SinCos1/SLICE_2368_K0K1MUX ( 
    .D0(\SinCos1/SLICE_2368/SinCos1/triglut_1_0_0_0_H0 ), 
    .D1(\SinCos1/SLICE_2368/SinCos1/SLICE_2368_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40161 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h3C34) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40162 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hAF88) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_2369 ( input D1, C1, B1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40163 n12962_bdd_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40164 mux_747_i2_3_lut( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40163 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hCA00) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40164 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hC5C5) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_2370 ( input D1, C1, B1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40165 mux_322_i4_3_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40166 i1_3_lut( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40165 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFB40) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40166 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h4040) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_2371 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40167 i5381_4_lut_rep_131( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40168 i5351_3_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40167 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h5040) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40168 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hB0F0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_2372 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40169 i1944_3_lut_4_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40170 i1_3_lut_rep_89_3_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40169 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h3130) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40170 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0020) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module CIC1Sin_SLICE_2373 ( input D1, C1, B1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40062 \CIC1Sin/shift_right_31_i134_3_lut_4_lut_adj_27 ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40053 \CIC1Sin/shift_right_31_i64_3_lut ( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_2374 ( input C1, B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40053 \CIC1Cos/shift_right_31_i67_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40062 \CIC1Sin/shift_right_31_i137_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_2375 ( input C1, B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40053 \CIC1Cos/shift_right_31_i68_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40062 \CIC1Sin/shift_right_31_i138_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2376 ( input D1, C1, B1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40062 \CIC1Sin/shift_right_31_i135_3_lut_4_lut_adj_26 ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40053 \CIC1Sin/shift_right_31_i65_3_lut ( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_2377 ( input C1, B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40053 \CIC1Cos/shift_right_31_i65_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40062 \CIC1Sin/shift_right_31_i135_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2378 ( input D1, C1, B1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40062 \CIC1Sin/shift_right_31_i136_3_lut_4_lut_adj_47 ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40053 \CIC1Sin/shift_right_31_i66_3_lut ( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_2379 ( input C1, B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40053 \CIC1Cos/shift_right_31_i66_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40062 \CIC1Sin/shift_right_31_i136_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_2380 ( input C1, B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40053 \CIC1Cos/shift_right_31_i63_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40062 \CIC1Sin/shift_right_31_i133_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_2381 ( input C1, B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40053 \CIC1Cos/shift_right_31_i64_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40062 \CIC1Sin/shift_right_31_i134_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_2382 ( input C1, B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40053 \CIC1Cos/shift_right_31_i61_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40062 \CIC1Sin/shift_right_31_i131_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2383 ( input D1, C1, B1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40062 \CIC1Sin/shift_right_31_i138_3_lut_4_lut_adj_44 ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40053 \CIC1Sin/shift_right_31_i68_3_lut ( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_2384 ( input C1, B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40053 \CIC1Cos/shift_right_31_i62_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40062 \CIC1Sin/shift_right_31_i132_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2385 ( input C1, B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40053 \CIC1Sin/shift_right_31_i61_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40062 \CIC1Sin/shift_right_31_i131_3_lut_4_lut_adj_28 ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2386 ( input D1, C1, B1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40062 \CIC1Sin/shift_right_31_i137_3_lut_4_lut_adj_45 ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40053 \CIC1Sin/shift_right_31_i67_3_lut_rep_97 ( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2387 ( input C1, B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40053 \CIC1Sin/shift_right_31_i63_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40062 \CIC1Sin/shift_right_31_i133_3_lut_4_lut_adj_46 ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2388 ( input D1, C1, B1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40062 \CIC1Sin/shift_right_31_i132_3_lut_4_lut_adj_48 ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40053 \CIC1Sin/shift_right_31_i62_3_lut ( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_2389 ( input C1, B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40056 i356_2_lut_3_lut_3_lut( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40171 mux_322_i41_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40171 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hCFCA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_2390 ( input B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40047 i1_2_lut_rep_86( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40172 i1977_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40172 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hCAC0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module PWM1_SLICE_2391 ( input B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40118 \PWM1/i2_2_lut ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40173 \PWM1/i5392_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40173 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0001) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_2392 ( input D1, C1, B1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40171 mux_322_i8_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40174 i2658_3_lut_3_lut( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40174 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hB1B1) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_2393 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40175 mux_322_i52_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40176 i1794_3_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40175 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hC0CA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40176 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF404) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_2394 ( input C1, B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40177 i345_2_lut_rep_82_3_lut( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40175 mux_322_i39_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40177 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0808) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_2395 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40171 mux_322_i46_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40176 i1784_3_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_2396 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40176 i1776_3_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40171 mux_322_i40_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_2397 ( input C1, B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40174 i2660_3_lut_3_lut( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40171 mux_322_i16_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_2398 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40176 i1770_3_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40171 mux_322_i37_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_2399 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40171 mux_322_i55_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40178 i1800_3_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40178 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFB0B) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_2400 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40179 i1772_3_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40175 mux_322_i38_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40179 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF707) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_2401 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40180 i1766_3_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40171 mux_322_i35_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40180 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF808) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_2402 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40176 i1768_3_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40171 mux_322_i36_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_2403 ( input C1, B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40181 i2659_3_lut_3_lut( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40175 mux_322_i13_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40181 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hE4E4) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_2404 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40178 i1762_3_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40175 mux_322_i33_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_2405 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40178 i1764_3_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40171 mux_322_i34_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_2406 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40176 i1724_3_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40171 mux_322_i11_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_2407 ( input D1, C1, B1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40163 n12953_bdd_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40056 o_Rx_Byte_4__bdd_3_lut_5459( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_2408 ( input B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40047 i2716_2_lut( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40171 mux_322_i12_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_2409 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40180 i1758_3_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40175 mux_322_i31_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_2410 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40180 i1720_3_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40171 mux_322_i9_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_2411 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40179 i1722_3_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40171 mux_322_i10_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_2412 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, CLK, output F0, 
    Q0, F1 );
  wire   VCCI, GNDI, M0_dly, CLK_dly;

  lut40182 i1_2_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40173 i5389_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre o_Rx_Byte_i7( .D0(M0_dly), .D1(VCCI), .SD(GNDI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40182 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF7FF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_2413 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40171 mux_322_i48_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40178 i1788_3_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_2414 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40176 i1714_3_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40175 mux_322_i5_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_2415 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40176 i1760_3_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40171 mux_322_i32_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_2416 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40180 i1716_3_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40171 mux_322_i6_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_2417 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40176 i1754_3_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40175 mux_322_i29_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_2418 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, CLK, output F0, 
    Q0, F1 );
  wire   VCCI, GNDI, M0_dly, CLK_dly;

  lut40183 i2332_2_lut_4_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40184 mux_322_i2_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre o_Rx_Byte_i3_rep_98( .D0(M0_dly), .D1(VCCI), .SD(GNDI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40183 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hDCCC) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40184 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hCFC5) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_2419 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40175 mux_322_i44_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40178 i1782_3_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_2420 ( input B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40051 i2723_2_lut( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40175 mux_322_i30_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_2421 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40180 i1750_3_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40175 mux_322_i27_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module uart_rx1_SLICE_2422 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40185 \uart_rx1/i1_2_lut_rep_81_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40186 \uart_rx1/i5357_2_lut_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40185 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFF1) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40186 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0002) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module uart_rx1_SLICE_2423 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40187 \uart_rx1/i1_2_lut_rep_84_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40173 \uart_rx1/i5354_2_lut_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40187 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hBBBF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module uart_rx1_SLICE_2424 ( input C1, B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40188 \uart_rx1/i5112_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40189 \uart_rx1/i1_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40188 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hC8C8) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40189 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFF7) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module uart_rx1_SLICE_2425 ( input B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40047 \uart_rx1/i1_2_lut_rep_90 ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40190 \uart_rx1/i5368_2_lut_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40190 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h1000) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module uart_rx1_SLICE_2426 ( input D1, C1, B1, A1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40191 \uart_rx1/i5360_2_lut_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40051 \uart_rx1/i1_2_lut_adj_50 ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40191 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0100) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module uart_rx1_SLICE_2427 ( input D1, C1, B1, A1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40192 \uart_rx1/i5386_2_lut_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40051 \uart_rx1/i1_2_lut_rep_95 ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40192 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h00E0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module uart_rx1_SLICE_2428 ( input B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40047 \uart_rx1/i1_2_lut_adj_53 ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40193 \uart_rx1/i5384_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40193 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h5455) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module uart_rx1_SLICE_2429 ( input B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40118 \uart_rx1/i1_2_lut_adj_58 ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40193 \uart_rx1/i5344_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_2430 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40179 i1752_3_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40171 mux_322_i28_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_2431 ( input C1, B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40194 i1_3_lut_rep_92( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40167 i5381_4_lut_rep_132( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40194 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF7F7) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_2432 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, CLK, output F0, 
    Q0, F1 );
  wire   VCCI, GNDI, M0_dly, CLK_dly;

  lut40195 i1_2_lut_rep_87_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40196 i5373_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre o_Rx_DV_40( .D0(M0_dly), .D1(VCCI), .SD(GNDI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40195 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0800) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40196 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0A2A) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_2433 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40197 i1_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40167 i5381_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40197 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0012) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_2434 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40178 i1746_3_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40175 mux_322_i25_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_2435 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40198 mux_322_i3_4_lut_4_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40170 i1_4_lut_adj_59( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40198 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h4505) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_2436 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40171 mux_322_i24_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40176 i1744_3_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_2437 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40180 i1748_3_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40175 mux_322_i26_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_2438 ( input C1, B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40174 i2661_3_lut_3_lut( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40171 mux_322_i23_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_2439 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40175 mux_322_i61_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40178 i1810_3_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_2440 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40179 i1740_3_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40171 mux_322_i21_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_2441 ( input B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40047 i2722_2_lut( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40171 mux_322_i22_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_2442 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40178 i1736_3_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40175 mux_322_i19_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_2443 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40176 i1732_3_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40171 mux_322_i17_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_2444 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40180 i1730_3_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40171 mux_322_i15_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_2445 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40175 mux_322_i59_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40178 i1806_3_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_2446 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40175 mux_322_i60_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40178 i1808_3_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_2447 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40175 mux_322_i43_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40180 i1780_3_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_2448 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40179 i1798_3_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40175 mux_322_i54_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_2449 ( input B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40047 i2725_2_lut( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40171 mux_322_i51_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_2450 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40175 mux_322_i49_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40180 i1790_3_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_2451 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40175 mux_322_i47_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40179 i1786_3_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_2452 ( input B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40051 i2730_2_lut( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40175 mux_322_i57_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_2453 ( input B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40047 i2731_2_lut( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40171 mux_322_i58_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_2454 ( input B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40047 i2670_2_lut( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40171 mux_322_i56_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_2455 ( input B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40047 i2669_2_lut( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40171 mux_322_i50_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SinCos1_SLICE_2456 ( input D1, C1, B1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40052 \SinCos1/LUT4_1 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40053 \SinCos1/muxb_57/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2457 ( input D1, C1, B1, A1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40050 \CIC1Sin/i12_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40047 \CIC1Sin/i3_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2458 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40052 \CIC1Sin/i13_4_lut_adj_43 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40052 \CIC1Sin/i9_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2459 ( input D1, C1, B1, A1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40052 \CIC1Sin/i11_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40118 \CIC1Sin/i7_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2460 ( input D1, C1, B1, A1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40050 \CIC1Sin/i13_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40047 \CIC1Sin/i2_2_lut_adj_38 ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2461 ( input D1, C1, B1, A1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40050 \CIC1Sin/i13_4_lut_rep_99 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40051 \CIC1Sin/i1_2_lut_adj_39 ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_2462 ( input B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40051 i2668_2_lut( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40175 mux_322_i45_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_2463 ( input D1, C1, B1, A1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40054 \CIC1Cos/i5338_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40047 \CIC1Cos/i5302_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_2464 ( input B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40051 \CIC1Cos/i1_2_lut ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40199 \CIC1Cos/i4_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40199 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFEF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module CIC1Cos_SLICE_2465 ( input B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40200 \CIC1Cos/i5370_2_lut ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40054 \CIC1Cos/i5338_4_lut_rep_115 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40200 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hDDDD) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module CIC1Cos_SLICE_2466 ( input C1, B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40201 \CIC1Cos/i1_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40052 \CIC1Cos/i6_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40201 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFEFE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module uart_rx1_SLICE_2467 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40202 \uart_rx1/i5362_2_lut_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40170 \uart_rx1/i5366_2_lut_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40202 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0010) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_2468 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, CLK, output F0, 
    Q0, F1 );
  wire   VCCI, GNDI, M0_dly, CLK_dly;

  lut40203 n2644_bdd_4_lut_5395_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40204 n2644_bdd_4_lut_5398( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre o_Rx_Byte_i1( .D0(M0_dly), .D1(VCCI), .SD(GNDI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40203 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h4000) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40204 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0004) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module uart_rx1_SLICE_2469 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40205 \uart_rx1/i21_4_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40206 \uart_rx1/i1_4_lut_adj_54 ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40205 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h2505) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40206 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h5011) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module uart_rx1_SLICE_2470 ( input C1, B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40207 \uart_rx1/i2_2_lut_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40173 \uart_rx1/i5335_2_lut_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40207 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h8080) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_2471 ( input C1, B1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40208 mux_747_i22_3_lut_3_lut( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40053 mux_747_i3_3_lut( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40208 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h7474) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module uart_rx1_SLICE_2472 ( input B1, A1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40118 \uart_rx1/i1_2_lut_adj_56 ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40118 \uart_rx1/i1_2_lut_adj_57 ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), 
    .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module uart_rx1_SLICE_2473 ( input B1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40118 \uart_rx1/i1_2_lut_adj_52 ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40201 \uart_rx1/i1_3_lut_adj_55 ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module PWM1_SLICE_2474 ( input B1, A1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40118 \PWM1/i5_2_lut ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40118 \PWM1/i1_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2475 ( input B1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40118 \CIC1Sin/i75_2_lut_rep_91 ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40056 \CIC1Sin/i1_2_lut_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_2476 ( input B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40209 i1_2_lut_rep_94( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40054 i1_4_lut_adj_60( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40209 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h2222) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module CIC1Sin_SLICE_2477 ( input D1, C1, B1, A1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40050 \CIC1Sin/i10_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40118 \CIC1Sin/i2_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2478 ( input B1, A1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40051 \CIC1Sin/i5_2_lut ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40118 \CIC1Sin/i6_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module uart_rx1_SLICE_2479 ( input C1, B1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40207 \uart_rx1/i5310_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40201 \uart_rx1/i1_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SinCos1_SLICE_2480 ( input C1, B1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40053 \SinCos1/muxb_55/GATE ( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40053 \SinCos1/muxb_54/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module PWM1_SLICE_2481 ( input D0, C0, B0, A0, output F0 );

  lut40052 \PWM1/i7_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_2482 ( input D0, C0, B0, A0, output F0 );

  lut40176 i1774_3_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_2483 ( input B0, A0, output F0 );
  wire   GNDI;

  lut40051 i2576_2_lut( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_2484 ( input D0, C0, B0, A0, output F0 );

  lut40172 i1971_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_2485 ( input D0, C0, B0, A0, output F0 );

  lut40210 i1969_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40210 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hCACF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module uart_rx1_SLICE_2486 ( input B0, A0, output F0 );
  wire   GNDI;

  lut40209 \uart_rx1/i1_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module uart_rx1_SLICE_2487 ( input C0, B0, A0, output F0 );
  wire   GNDI;

  lut40211 \uart_rx1/i2756_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40211 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hECEC) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module uart_rx1_SLICE_2488 ( input D0, C0, B0, A0, output F0 );

  lut40202 \uart_rx1/i5364_2_lut_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module uart_rx1_SLICE_2489 ( input C0, B0, A0, output F0 );
  wire   GNDI;

  lut40212 \uart_rx1/i5347_2_lut_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40212 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hDFDF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_2490 ( input B0, A0, output F0 );
  wire   GNDI;

  lut40118 i1_2_lut( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_2491 ( input D0, C0, B0, A0, output F0 );

  lut40213 o_Rx_Byte_4__bdd_4_lut_5405( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40213 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0445) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_2492 ( input D0, C0, B0, A0, output F0 );

  lut40172 i1975_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_2493 ( input D0, C0, B0, A0, output F0 );

  lut40172 i1973_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_2494 ( input C0, B0, A0, output F0 );
  wire   GNDI;

  lut40174 i2662_3_lut_3_lut( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_2495 ( input A0, output F0 );
  wire   GNDI;

  lut40048 PWMOut_I_0_1_lut( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_2496 ( input D0, C0, B0, A0, output F0 );

  lut40172 i1983_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_2497 ( input D0, C0, B0, A0, output F0 );

  lut40172 i1985_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_2498 ( input D0, C0, B0, A0, output F0 );

  lut40172 i1981_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_2499 ( input D0, C0, B0, A0, output F0 );

  lut40172 i1979_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SinCos1_SLICE_2500 ( input C0, B0, A0, M0, CLK, output F0, Q0 );
  wire   GNDI, VCCI, M0_dly, CLK_dly;

  lut40053 \SinCos1/muxb_52/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \SinCos1/FF_56 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SinCos1_muxb_39_SLICE_2501 ( input C0, B0, A0, output F0 );
  wire   GNDI;

  lut40053 \SinCos1/muxb_39/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2502 ( input C0, B0, A0, output F0 );
  wire   GNDI;

  lut40053 \CIC1Sin/shift_right_31_i70_3_lut ( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2503 ( input B0, A0, output F0 );
  wire   GNDI;

  lut4 \CIC1Sin/i4654_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2504 ( input B0, A0, output F0 );
  wire   GNDI;

  lut4 \CIC1Sin/i4651_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2505 ( input B0, A0, output F0 );
  wire   GNDI;

  lut4 \CIC1Sin/i4648_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2506 ( input B0, A0, output F0 );
  wire   GNDI;

  lut40118 \CIC1Sin/i73_2_lut_rep_96 ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2507 ( input B0, A0, output F0 );
  wire   GNDI;

  lut4 \CIC1Sin/i4660_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2508 ( input B0, A0, output F0 );
  wire   GNDI;

  lut4 \CIC1Sin/i4657_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_2509 ( input B0, A0, output F0 );
  wire   GNDI;

  lut40214 i2572_2_lut_2_lut( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40214 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h4444) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_2510 ( input B0, A0, output F0 );
  wire   GNDI;

  lut40047 i2585_2_lut( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module ncoGen_SLICE_2511 ( input A0, output F0 );
  wire   GNDI;

  lut40048 \ncoGen/phase_accum_63__I_0_13_1_lut ( .A(A0), .B(GNDI), .C(GNDI), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_2512 ( input A0, output F0 );
  wire   GNDI;

  lut40048 \AMDemodulator1/d_out_d_11__I_0_1_lut ( .A(A0), .B(GNDI), .C(GNDI), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_2513 ( input B0, A0, output F0 );
  wire   GNDI;

  lut40215 \AMDemodulator1/i4675_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40215 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h9999) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module AMDemodulator1_SLICE_2514 ( input A0, output F0 );
  wire   GNDI;

  lut40048 \AMDemodulator1/d_out_d_11__I_1_1_lut ( .A(A0), .B(GNDI), .C(GNDI), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_2515 ( input A0, output F0 );
  wire   GNDI;

  lut40048 \AMDemodulator1/i1332_1_lut ( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_2516 ( input B0, A0, output F0 );
  wire   GNDI;

  lut40216 \AMDemodulator1/Multiplier2/ND2_t25 ( .A(A0), .B(B0), .C(GNDI), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40216 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h7777) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module AMDemodulator1_Multiplier2_SLICE_2517 ( input B0, A0, output F0 );
  wire   GNDI;

  lut40047 \AMDemodulator1/Multiplier2/AND2_t24 ( .A(A0), .B(B0), .C(GNDI), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_2518 ( input B0, A0, output F0 );
  wire   GNDI;

  lut40216 \AMDemodulator1/Multiplier2/ND2_t22 ( .A(A0), .B(B0), .C(GNDI), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_2519 ( input B0, A0, output F0 );
  wire   GNDI;

  lut40216 \AMDemodulator1/Multiplier2/ND2_t19 ( .A(A0), .B(B0), .C(GNDI), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_2520 ( input B0, A0, output F0 );
  wire   GNDI;

  lut40047 \AMDemodulator1/Multiplier2/AND2_t18 ( .A(A0), .B(B0), .C(GNDI), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_2521 ( input B0, A0, output F0 );
  wire   GNDI;

  lut40216 \AMDemodulator1/Multiplier2/ND2_t16 ( .A(A0), .B(B0), .C(GNDI), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_2522 ( input B0, A0, output F0 );
  wire   GNDI;

  lut40216 \AMDemodulator1/Multiplier2/ND2_t13 ( .A(A0), .B(B0), .C(GNDI), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_2523 ( input B0, A0, output F0 );
  wire   GNDI;

  lut40047 \AMDemodulator1/Multiplier2/AND2_t12 ( .A(A0), .B(B0), .C(GNDI), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_2524 ( input B0, A0, output F0 );
  wire   GNDI;

  lut40216 \AMDemodulator1/Multiplier2/ND2_t10 ( .A(A0), .B(B0), .C(GNDI), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_2525 ( input B0, A0, output F0 );
  wire   GNDI;

  lut40216 \AMDemodulator1/Multiplier2/ND2_t9 ( .A(A0), .B(B0), .C(GNDI), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_2526 ( input B0, A0, output F0 );
  wire   GNDI;

  lut40216 \AMDemodulator1/Multiplier2/ND2_t8 ( .A(A0), .B(B0), .C(GNDI), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_2527 ( input B0, A0, output F0 );
  wire   GNDI;

  lut40216 \AMDemodulator1/Multiplier2/ND2_t7 ( .A(A0), .B(B0), .C(GNDI), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_2528 ( input B0, A0, output F0 );
  wire   GNDI;

  lut40216 \AMDemodulator1/Multiplier2/ND2_t6 ( .A(A0), .B(B0), .C(GNDI), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_2529 ( input B0, A0, output F0 );
  wire   GNDI;

  lut40216 \AMDemodulator1/Multiplier2/ND2_t5 ( .A(A0), .B(B0), .C(GNDI), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_2530 ( input B0, A0, output F0 );
  wire   GNDI;

  lut40216 \AMDemodulator1/Multiplier2/ND2_t4 ( .A(A0), .B(B0), .C(GNDI), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_2531 ( input B0, A0, output F0 );
  wire   GNDI;

  lut40216 \AMDemodulator1/Multiplier2/ND2_t3 ( .A(A0), .B(B0), .C(GNDI), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_2532 ( input B0, A0, output F0 );
  wire   GNDI;

  lut40216 \AMDemodulator1/Multiplier2/ND2_t2 ( .A(A0), .B(B0), .C(GNDI), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_2533 ( input B0, A0, output F0 );
  wire   GNDI;

  lut40216 \AMDemodulator1/Multiplier2/ND2_t1 ( .A(A0), .B(B0), .C(GNDI), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_2534 ( input B0, A0, output F0 );
  wire   GNDI;

  lut40216 \AMDemodulator1/Multiplier2/ND2_t0 ( .A(A0), .B(B0), .C(GNDI), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_2535 ( input B0, A0, output F0 );
  wire   GNDI;

  lut40216 \AMDemodulator1/Multiplier2/ND2_t26 ( .A(A0), .B(B0), .C(GNDI), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_2536 ( input B0, A0, output F0 );
  wire   GNDI;

  lut40216 \AMDemodulator1/Multiplier2/ND2_t23 ( .A(A0), .B(B0), .C(GNDI), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_2537 ( input B0, A0, output F0 );
  wire   GNDI;

  lut40216 \AMDemodulator1/Multiplier2/ND2_t20 ( .A(A0), .B(B0), .C(GNDI), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_2538 ( input B0, A0, output F0 );
  wire   GNDI;

  lut40216 \AMDemodulator1/Multiplier2/ND2_t17 ( .A(A0), .B(B0), .C(GNDI), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_2539 ( input B0, A0, M0, CLK, output 
    F0, Q0 );
  wire   GNDI, VCCI, M0_dly, CLK_dly;

  lut40216 \AMDemodulator1/Multiplier2/ND2_t14 ( .A(A0), .B(B0), .C(GNDI), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier2/FF_88 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_2540 ( input B0, A0, output F0 );
  wire   GNDI;

  lut40216 \AMDemodulator1/Multiplier2/ND2_t11 ( .A(A0), .B(B0), .C(GNDI), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_2541 ( input B0, A0, output F0 );
  wire   GNDI;

  lut40216 \AMDemodulator1/Multiplier1/ND2_t25 ( .A(A0), .B(B0), .C(GNDI), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_2542 ( input B0, A0, output F0 );
  wire   GNDI;

  lut40047 \AMDemodulator1/Multiplier1/AND2_t24 ( .A(A0), .B(B0), .C(GNDI), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_2543 ( input B0, A0, output F0 );
  wire   GNDI;

  lut40216 \AMDemodulator1/Multiplier1/ND2_t22 ( .A(A0), .B(B0), .C(GNDI), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_2544 ( input B0, A0, output F0 );
  wire   GNDI;

  lut40216 \AMDemodulator1/Multiplier1/ND2_t19 ( .A(A0), .B(B0), .C(GNDI), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_2545 ( input B0, A0, output F0 );
  wire   GNDI;

  lut40047 \AMDemodulator1/Multiplier1/AND2_t18 ( .A(A0), .B(B0), .C(GNDI), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_2546 ( input B0, A0, output F0 );
  wire   GNDI;

  lut40216 \AMDemodulator1/Multiplier1/ND2_t16 ( .A(A0), .B(B0), .C(GNDI), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_2547 ( input B0, A0, output F0 );
  wire   GNDI;

  lut40216 \AMDemodulator1/Multiplier1/ND2_t13 ( .A(A0), .B(B0), .C(GNDI), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_2548 ( input B0, A0, output F0 );
  wire   GNDI;

  lut40047 \AMDemodulator1/Multiplier1/AND2_t12 ( .A(A0), .B(B0), .C(GNDI), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_2549 ( input B0, A0, output F0 );
  wire   GNDI;

  lut40216 \AMDemodulator1/Multiplier1/ND2_t10 ( .A(A0), .B(B0), .C(GNDI), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_2550 ( input B0, A0, output F0 );
  wire   GNDI;

  lut40216 \AMDemodulator1/Multiplier1/ND2_t9 ( .A(A0), .B(B0), .C(GNDI), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_2551 ( input B0, A0, output F0 );
  wire   GNDI;

  lut40216 \AMDemodulator1/Multiplier1/ND2_t8 ( .A(A0), .B(B0), .C(GNDI), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_2552 ( input B0, A0, output F0 );
  wire   GNDI;

  lut40216 \AMDemodulator1/Multiplier1/ND2_t7 ( .A(A0), .B(B0), .C(GNDI), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_2553 ( input B0, A0, output F0 );
  wire   GNDI;

  lut40216 \AMDemodulator1/Multiplier1/ND2_t6 ( .A(A0), .B(B0), .C(GNDI), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_2554 ( input B0, A0, output F0 );
  wire   GNDI;

  lut40216 \AMDemodulator1/Multiplier1/ND2_t5 ( .A(A0), .B(B0), .C(GNDI), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_2555 ( input B0, A0, output F0 );
  wire   GNDI;

  lut40216 \AMDemodulator1/Multiplier1/ND2_t4 ( .A(A0), .B(B0), .C(GNDI), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_2556 ( input B0, A0, output F0 );
  wire   GNDI;

  lut40216 \AMDemodulator1/Multiplier1/ND2_t3 ( .A(A0), .B(B0), .C(GNDI), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_2557 ( input B0, A0, output F0 );
  wire   GNDI;

  lut40216 \AMDemodulator1/Multiplier1/ND2_t2 ( .A(A0), .B(B0), .C(GNDI), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_2558 ( input B0, A0, output F0 );
  wire   GNDI;

  lut40216 \AMDemodulator1/Multiplier1/ND2_t1 ( .A(A0), .B(B0), .C(GNDI), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_2559 ( input B0, A0, output F0 );
  wire   GNDI;

  lut40216 \AMDemodulator1/Multiplier1/ND2_t0 ( .A(A0), .B(B0), .C(GNDI), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_2560 ( input B0, A0, output F0 );
  wire   GNDI;

  lut40216 \AMDemodulator1/Multiplier1/ND2_t26 ( .A(A0), .B(B0), .C(GNDI), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_2561 ( input B0, A0, output F0 );
  wire   GNDI;

  lut40216 \AMDemodulator1/Multiplier1/ND2_t23 ( .A(A0), .B(B0), .C(GNDI), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_2562 ( input B0, A0, output F0 );
  wire   GNDI;

  lut40216 \AMDemodulator1/Multiplier1/ND2_t20 ( .A(A0), .B(B0), .C(GNDI), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_2563 ( input B0, A0, output F0 );
  wire   GNDI;

  lut40216 \AMDemodulator1/Multiplier1/ND2_t17 ( .A(A0), .B(B0), .C(GNDI), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_2564 ( input B0, A0, M0, CLK, output 
    F0, Q0 );
  wire   GNDI, VCCI, M0_dly, CLK_dly;

  lut40216 \AMDemodulator1/Multiplier1/ND2_t14 ( .A(A0), .B(B0), .C(GNDI), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier1/FF_88 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_2565 ( input B0, A0, output F0 );
  wire   GNDI;

  lut40216 \AMDemodulator1/Multiplier1/ND2_t11 ( .A(A0), .B(B0), .C(GNDI), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_2566 ( input B0, A0, output F0 );
  wire   GNDI;

  lut4 \CIC1Cos/i4642_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_2567 ( input B0, A0, output F0 );
  wire   GNDI;

  lut4 \CIC1Cos/i4639_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_2568 ( input B0, A0, output F0 );
  wire   GNDI;

  lut40118 \CIC1Cos/i2_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_2569 ( input C0, B0, A0, output F0 );
  wire   GNDI;

  lut40053 \CIC1Cos/shift_right_31_i70_3_lut ( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_2570 ( input B0, A0, output F0 );
  wire   GNDI;

  lut4 \CIC1Cos/i4645_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_2571 ( input B0, A0, output F0 );
  wire   GNDI;

  lut4 \CIC1Cos/i4633_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_2572 ( input B0, A0, output F0 );
  wire   GNDI;

  lut4 \CIC1Cos/i4636_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_2573 ( input D0, C0, B0, A0, output F0 );

  lut40052 \CIC1Cos/i5_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_2574 ( output F0 );
  wire   GNDI;

  lut40087 i2( .A(GNDI), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
  endspecify

endmodule

module SLICE_2575 ( output F0 );
  wire   GNDI;

  lut40109 i1( .A(GNDI), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
  endspecify

endmodule

module MYLED_6_ ( input PADDO, output MYLED6 );
  wire   GNDI;

  xo2iobuf MYLED_pad_6( .I(PADDO), .T(GNDI), .PAD(MYLED6));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => MYLED6) = (0:0:0,0:0:0);
  endspecify

endmodule

module xo2iobuf ( input I, T, output PAD );

  OBZPD INST5( .I(I), .T(T), .O(PAD));
endmodule

module MYLED_5_ ( input PADDO, output MYLED5 );
  wire   GNDI;

  xo2iobuf MYLED_pad_5( .I(PADDO), .T(GNDI), .PAD(MYLED5));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => MYLED5) = (0:0:0,0:0:0);
  endspecify

endmodule

module MYLED_7_ ( input PADDO, output MYLED7 );
  wire   GNDI;

  xo2iobuf MYLED_pad_7( .I(PADDO), .T(GNDI), .PAD(MYLED7));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => MYLED7) = (0:0:0,0:0:0);
  endspecify

endmodule

module o_Tx_Serial ( input PADDO, output o_Tx_Serial );
  wire   GNDI;

  xo2iobuf0217 o_Tx_Serial_pad( .I(PADDO), .T(GNDI), .PAD(o_Tx_Serial));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => o_Tx_Serial) = (0:0:0,0:0:0);
  endspecify

endmodule

module xo2iobuf0217 ( input I, T, output PAD );

  OBZPU INST5( .I(I), .T(T), .O(PAD));
endmodule

module MYLED_4_ ( input PADDO, output MYLED4 );
  wire   GNDI;

  xo2iobuf MYLED_pad_4( .I(PADDO), .T(GNDI), .PAD(MYLED4));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => MYLED4) = (0:0:0,0:0:0);
  endspecify

endmodule

module MYLED_3_ ( input PADDO, output MYLED3 );
  wire   GNDI;

  xo2iobuf MYLED_pad_3( .I(PADDO), .T(GNDI), .PAD(MYLED3));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => MYLED3) = (0:0:0,0:0:0);
  endspecify

endmodule

module MYLED_2_ ( input PADDO, output MYLED2 );
  wire   GNDI;

  xo2iobuf MYLED_pad_2( .I(PADDO), .T(GNDI), .PAD(MYLED2));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => MYLED2) = (0:0:0,0:0:0);
  endspecify

endmodule

module MYLED_1_ ( input PADDO, output MYLED1 );
  wire   GNDI;

  xo2iobuf MYLED_pad_1( .I(PADDO), .T(GNDI), .PAD(MYLED1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => MYLED1) = (0:0:0,0:0:0);
  endspecify

endmodule

module MYLED_0_ ( input PADDO, output MYLED0 );
  wire   GNDI;

  xo2iobuf MYLED_pad_0( .I(PADDO), .T(GNDI), .PAD(MYLED0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => MYLED0) = (0:0:0,0:0:0);
  endspecify

endmodule

module XOut ( input PADDO, output XOut );
  wire   GNDI;

  xo2iobuf0218 XOut_pad( .I(PADDO), .T(GNDI), .PAD(XOut));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => XOut) = (0:0:0,0:0:0);
  endspecify

endmodule

module xo2iobuf0218 ( input I, T, output PAD );

  OBZPD INST5( .I(I), .T(T), .O(PAD));
endmodule

module DiffOut ( input PADDO, output DiffOut );
  wire   GNDI;

  xo2iobuf0218 DiffOut_pad( .I(PADDO), .T(GNDI), .PAD(DiffOut));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => DiffOut) = (0:0:0,0:0:0);
  endspecify

endmodule

module PWMOut ( input PADDO, output PWMOut );
  wire   GNDI;

  xo2iobuf0218 PWMOut_pad( .I(PADDO), .T(GNDI), .PAD(PWMOut));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => PWMOut) = (0:0:0,0:0:0);
  endspecify

endmodule

module PWMOutP1 ( input PADDO, output PWMOutP1 );
  wire   GNDI;

  xo2iobuf0218 PWMOutP1_pad( .I(PADDO), .T(GNDI), .PAD(PWMOutP1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => PWMOutP1) = (0:0:0,0:0:0);
  endspecify

endmodule

module PWMOutP2 ( input PADDO, output PWMOutP2 );
  wire   GNDI;

  xo2iobuf0218 PWMOutP2_pad( .I(PADDO), .T(GNDI), .PAD(PWMOutP2));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => PWMOutP2) = (0:0:0,0:0:0);
  endspecify

endmodule

module PWMOutP3 ( input PADDO, output PWMOutP3 );
  wire   GNDI;

  xo2iobuf0218 PWMOutP3_pad( .I(PADDO), .T(GNDI), .PAD(PWMOutP3));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => PWMOutP3) = (0:0:0,0:0:0);
  endspecify

endmodule

module PWMOutP4 ( input PADDO, output PWMOutP4 );
  wire   GNDI;

  xo2iobuf0218 PWMOutP4_pad( .I(PADDO), .T(GNDI), .PAD(PWMOutP4));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => PWMOutP4) = (0:0:0,0:0:0);
  endspecify

endmodule

module PWMOutN1 ( input PADDO, output PWMOutN1 );
  wire   GNDI;

  xo2iobuf0218 PWMOutN1_pad( .I(PADDO), .T(GNDI), .PAD(PWMOutN1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => PWMOutN1) = (0:0:0,0:0:0);
  endspecify

endmodule

module PWMOutN2 ( input PADDO, output PWMOutN2 );
  wire   GNDI;

  xo2iobuf0218 PWMOutN2_pad( .I(PADDO), .T(GNDI), .PAD(PWMOutN2));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => PWMOutN2) = (0:0:0,0:0:0);
  endspecify

endmodule

module PWMOutN3 ( input PADDO, output PWMOutN3 );
  wire   GNDI;

  xo2iobuf0218 PWMOutN3_pad( .I(PADDO), .T(GNDI), .PAD(PWMOutN3));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => PWMOutN3) = (0:0:0,0:0:0);
  endspecify

endmodule

module PWMOutN4 ( input PADDO, output PWMOutN4 );
  wire   GNDI;

  xo2iobuf0218 PWMOutN4_pad( .I(PADDO), .T(GNDI), .PAD(PWMOutN4));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => PWMOutN4) = (0:0:0,0:0:0);
  endspecify

endmodule

module sinGen ( input PADDO, output sinGen );
  wire   GNDI;

  xo2iobuf0218 sinGen_pad( .I(PADDO), .T(GNDI), .PAD(sinGen));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => sinGen) = (0:0:0,0:0:0);
  endspecify

endmodule

module sin_out ( input PADDO, output sin_out );
  wire   GNDI;

  xo2iobuf0218 sin_out_pad( .I(PADDO), .T(GNDI), .PAD(sin_out));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => sin_out) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC_out_clkSin ( input PADDO, output CIC_out_clkSin );
  wire   GNDI;

  xo2iobuf0218 CIC_out_clkSin_pad( .I(PADDO), .T(GNDI), .PAD(CIC_out_clkSin));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => CIC_out_clkSin) = (0:0:0,0:0:0);
  endspecify

endmodule

module i_Rx_Serial ( output PADDI, input i_Rx_Serial );

  xo2iobuf0219 i_Rx_Serial_pad( .Z(PADDI), .PAD(i_Rx_Serial));

  specify
    (i_Rx_Serial => PADDI) = (0:0:0,0:0:0);
    $width (posedge i_Rx_Serial, 0:0:0);
    $width (negedge i_Rx_Serial, 0:0:0);
  endspecify

endmodule

module xo2iobuf0219 ( output Z, input PAD );

  IBPD INST1( .I(PAD), .O(Z));
endmodule

module RFIn ( output PADDI, input RFIn );

  xo2iobuf0220 RFIn_pad( .Z(PADDI), .PAD(RFIn));

  specify
    (RFIn => PADDI) = (0:0:0,0:0:0);
    $width (posedge RFIn, 0:0:0);
    $width (negedge RFIn, 0:0:0);
  endspecify

endmodule

module xo2iobuf0220 ( output Z, input PAD );

  IB INST1( .I(PAD), .O(Z));
endmodule

module OSCH_inst ( output OSC );
  wire   GNDI;

  OSCH_B OSCH_inst_OSCH( .STDBY(GNDI), .OSC(OSC), .SEDSTDBY());
  gnd DRIVEGND( .PWR0(GNDI));
endmodule

module OSCH_B ( input STDBY, output OSC, SEDSTDBY );

  OSCH INST10( .STDBY(STDBY), .SEDSTDBY(SEDSTDBY), .OSC(OSC));
  defparam INST10.NOM_FREQ = "88.67";
endmodule
