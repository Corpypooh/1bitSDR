// qsys_block_mm_interconnect_0.v

// This file was auto-generated from altera_merlin_interconnect_wrapper_hw.tcl.  If you edit it your changes
// will probably be lost.
// 
// Generated using ACDS version 13.1 182 at 2020.05.21.10:07:12

`timescale 1 ps / 1 ps
module qsys_block_mm_interconnect_0 (
		input  wire        clock_clk_clk,                                //                              clock_clk.clk
		input  wire        NIOS_reset_n_reset_bridge_in_reset_reset,     //     NIOS_reset_n_reset_bridge_in_reset.reset
		input  wire        ps2_clock_sreset_reset_bridge_in_reset_reset, // ps2_clock_sreset_reset_bridge_in_reset.reset
		input  wire [23:0] NIOS_data_master_address,                     //                       NIOS_data_master.address
		output wire        NIOS_data_master_waitrequest,                 //                                       .waitrequest
		input  wire [3:0]  NIOS_data_master_byteenable,                  //                                       .byteenable
		input  wire        NIOS_data_master_read,                        //                                       .read
		output wire [31:0] NIOS_data_master_readdata,                    //                                       .readdata
		input  wire        NIOS_data_master_write,                       //                                       .write
		input  wire [31:0] NIOS_data_master_writedata,                   //                                       .writedata
		input  wire        NIOS_data_master_debugaccess,                 //                                       .debugaccess
		input  wire [23:0] NIOS_instruction_master_address,              //                NIOS_instruction_master.address
		output wire        NIOS_instruction_master_waitrequest,          //                                       .waitrequest
		input  wire        NIOS_instruction_master_read,                 //                                       .read
		output wire [31:0] NIOS_instruction_master_readdata,             //                                       .readdata
		output wire [1:0]  cic_gain_s1_address,                          //                            cic_gain_s1.address
		output wire        cic_gain_s1_write,                            //                                       .write
		input  wire [31:0] cic_gain_s1_readdata,                         //                                       .readdata
		output wire [31:0] cic_gain_s1_writedata,                        //                                       .writedata
		output wire        cic_gain_s1_chipselect,                       //                                       .chipselect
		output wire [0:0]  jtag_uart_avalon_jtag_slave_address,          //            jtag_uart_avalon_jtag_slave.address
		output wire        jtag_uart_avalon_jtag_slave_write,            //                                       .write
		output wire        jtag_uart_avalon_jtag_slave_read,             //                                       .read
		input  wire [31:0] jtag_uart_avalon_jtag_slave_readdata,         //                                       .readdata
		output wire [31:0] jtag_uart_avalon_jtag_slave_writedata,        //                                       .writedata
		input  wire        jtag_uart_avalon_jtag_slave_waitrequest,      //                                       .waitrequest
		output wire        jtag_uart_avalon_jtag_slave_chipselect,       //                                       .chipselect
		output wire [8:0]  NIOS_jtag_debug_module_address,               //                 NIOS_jtag_debug_module.address
		output wire        NIOS_jtag_debug_module_write,                 //                                       .write
		output wire        NIOS_jtag_debug_module_read,                  //                                       .read
		input  wire [31:0] NIOS_jtag_debug_module_readdata,              //                                       .readdata
		output wire [31:0] NIOS_jtag_debug_module_writedata,             //                                       .writedata
		output wire [3:0]  NIOS_jtag_debug_module_byteenable,            //                                       .byteenable
		input  wire        NIOS_jtag_debug_module_waitrequest,           //                                       .waitrequest
		output wire        NIOS_jtag_debug_module_debugaccess,           //                                       .debugaccess
		output wire [11:0] onchip_ram_s1_address,                        //                          onchip_ram_s1.address
		output wire        onchip_ram_s1_write,                          //                                       .write
		input  wire [31:0] onchip_ram_s1_readdata,                       //                                       .readdata
		output wire [31:0] onchip_ram_s1_writedata,                      //                                       .writedata
		output wire [3:0]  onchip_ram_s1_byteenable,                     //                                       .byteenable
		output wire        onchip_ram_s1_chipselect,                     //                                       .chipselect
		output wire        onchip_ram_s1_clken,                          //                                       .clken
		output wire [1:0]  phase_increment_s1_address,                   //                     phase_increment_s1.address
		output wire        phase_increment_s1_write,                     //                                       .write
		input  wire [31:0] phase_increment_s1_readdata,                  //                                       .readdata
		output wire [31:0] phase_increment_s1_writedata,                 //                                       .writedata
		output wire        phase_increment_s1_chipselect,                //                                       .chipselect
		output wire [3:0]  ps2_slave_address,                            //                              ps2_slave.address
		output wire        ps2_slave_write,                              //                                       .write
		output wire        ps2_slave_read,                               //                                       .read
		input  wire [31:0] ps2_slave_readdata,                           //                                       .readdata
		output wire [31:0] ps2_slave_writedata,                          //                                       .writedata
		input  wire        ps2_slave_waitrequest,                        //                                       .waitrequest
		output wire [21:0] sdram_s1_address,                             //                               sdram_s1.address
		output wire        sdram_s1_write,                               //                                       .write
		output wire        sdram_s1_read,                                //                                       .read
		input  wire [15:0] sdram_s1_readdata,                            //                                       .readdata
		output wire [15:0] sdram_s1_writedata,                           //                                       .writedata
		output wire [1:0]  sdram_s1_byteenable,                          //                                       .byteenable
		input  wire        sdram_s1_readdatavalid,                       //                                       .readdatavalid
		input  wire        sdram_s1_waitrequest,                         //                                       .waitrequest
		output wire        sdram_s1_chipselect                           //                                       .chipselect
	);

	wire          nios_instruction_master_translator_avalon_universal_master_0_waitrequest;                         // NIOS_instruction_master_translator_avalon_universal_master_0_agent:av_waitrequest -> NIOS_instruction_master_translator:uav_waitrequest
	wire    [2:0] nios_instruction_master_translator_avalon_universal_master_0_burstcount;                          // NIOS_instruction_master_translator:uav_burstcount -> NIOS_instruction_master_translator_avalon_universal_master_0_agent:av_burstcount
	wire   [31:0] nios_instruction_master_translator_avalon_universal_master_0_writedata;                           // NIOS_instruction_master_translator:uav_writedata -> NIOS_instruction_master_translator_avalon_universal_master_0_agent:av_writedata
	wire   [23:0] nios_instruction_master_translator_avalon_universal_master_0_address;                             // NIOS_instruction_master_translator:uav_address -> NIOS_instruction_master_translator_avalon_universal_master_0_agent:av_address
	wire          nios_instruction_master_translator_avalon_universal_master_0_lock;                                // NIOS_instruction_master_translator:uav_lock -> NIOS_instruction_master_translator_avalon_universal_master_0_agent:av_lock
	wire          nios_instruction_master_translator_avalon_universal_master_0_write;                               // NIOS_instruction_master_translator:uav_write -> NIOS_instruction_master_translator_avalon_universal_master_0_agent:av_write
	wire          nios_instruction_master_translator_avalon_universal_master_0_read;                                // NIOS_instruction_master_translator:uav_read -> NIOS_instruction_master_translator_avalon_universal_master_0_agent:av_read
	wire   [31:0] nios_instruction_master_translator_avalon_universal_master_0_readdata;                            // NIOS_instruction_master_translator_avalon_universal_master_0_agent:av_readdata -> NIOS_instruction_master_translator:uav_readdata
	wire          nios_instruction_master_translator_avalon_universal_master_0_debugaccess;                         // NIOS_instruction_master_translator:uav_debugaccess -> NIOS_instruction_master_translator_avalon_universal_master_0_agent:av_debugaccess
	wire    [3:0] nios_instruction_master_translator_avalon_universal_master_0_byteenable;                          // NIOS_instruction_master_translator:uav_byteenable -> NIOS_instruction_master_translator_avalon_universal_master_0_agent:av_byteenable
	wire          nios_instruction_master_translator_avalon_universal_master_0_readdatavalid;                       // NIOS_instruction_master_translator_avalon_universal_master_0_agent:av_readdatavalid -> NIOS_instruction_master_translator:uav_readdatavalid
	wire          rsp_xbar_mux_src_endofpacket;                                                                     // rsp_xbar_mux:src_endofpacket -> NIOS_instruction_master_translator_avalon_universal_master_0_agent:rp_endofpacket
	wire          rsp_xbar_mux_src_valid;                                                                           // rsp_xbar_mux:src_valid -> NIOS_instruction_master_translator_avalon_universal_master_0_agent:rp_valid
	wire          rsp_xbar_mux_src_startofpacket;                                                                   // rsp_xbar_mux:src_startofpacket -> NIOS_instruction_master_translator_avalon_universal_master_0_agent:rp_startofpacket
	wire   [99:0] rsp_xbar_mux_src_data;                                                                            // rsp_xbar_mux:src_data -> NIOS_instruction_master_translator_avalon_universal_master_0_agent:rp_data
	wire    [6:0] rsp_xbar_mux_src_channel;                                                                         // rsp_xbar_mux:src_channel -> NIOS_instruction_master_translator_avalon_universal_master_0_agent:rp_channel
	wire          rsp_xbar_mux_src_ready;                                                                           // NIOS_instruction_master_translator_avalon_universal_master_0_agent:rp_ready -> rsp_xbar_mux:src_ready
	wire          nios_data_master_translator_avalon_universal_master_0_waitrequest;                                // NIOS_data_master_translator_avalon_universal_master_0_agent:av_waitrequest -> NIOS_data_master_translator:uav_waitrequest
	wire    [2:0] nios_data_master_translator_avalon_universal_master_0_burstcount;                                 // NIOS_data_master_translator:uav_burstcount -> NIOS_data_master_translator_avalon_universal_master_0_agent:av_burstcount
	wire   [31:0] nios_data_master_translator_avalon_universal_master_0_writedata;                                  // NIOS_data_master_translator:uav_writedata -> NIOS_data_master_translator_avalon_universal_master_0_agent:av_writedata
	wire   [23:0] nios_data_master_translator_avalon_universal_master_0_address;                                    // NIOS_data_master_translator:uav_address -> NIOS_data_master_translator_avalon_universal_master_0_agent:av_address
	wire          nios_data_master_translator_avalon_universal_master_0_lock;                                       // NIOS_data_master_translator:uav_lock -> NIOS_data_master_translator_avalon_universal_master_0_agent:av_lock
	wire          nios_data_master_translator_avalon_universal_master_0_write;                                      // NIOS_data_master_translator:uav_write -> NIOS_data_master_translator_avalon_universal_master_0_agent:av_write
	wire          nios_data_master_translator_avalon_universal_master_0_read;                                       // NIOS_data_master_translator:uav_read -> NIOS_data_master_translator_avalon_universal_master_0_agent:av_read
	wire   [31:0] nios_data_master_translator_avalon_universal_master_0_readdata;                                   // NIOS_data_master_translator_avalon_universal_master_0_agent:av_readdata -> NIOS_data_master_translator:uav_readdata
	wire          nios_data_master_translator_avalon_universal_master_0_debugaccess;                                // NIOS_data_master_translator:uav_debugaccess -> NIOS_data_master_translator_avalon_universal_master_0_agent:av_debugaccess
	wire    [3:0] nios_data_master_translator_avalon_universal_master_0_byteenable;                                 // NIOS_data_master_translator:uav_byteenable -> NIOS_data_master_translator_avalon_universal_master_0_agent:av_byteenable
	wire          nios_data_master_translator_avalon_universal_master_0_readdatavalid;                              // NIOS_data_master_translator_avalon_universal_master_0_agent:av_readdatavalid -> NIOS_data_master_translator:uav_readdatavalid
	wire          rsp_xbar_mux_001_src_endofpacket;                                                                 // rsp_xbar_mux_001:src_endofpacket -> NIOS_data_master_translator_avalon_universal_master_0_agent:rp_endofpacket
	wire          rsp_xbar_mux_001_src_valid;                                                                       // rsp_xbar_mux_001:src_valid -> NIOS_data_master_translator_avalon_universal_master_0_agent:rp_valid
	wire          rsp_xbar_mux_001_src_startofpacket;                                                               // rsp_xbar_mux_001:src_startofpacket -> NIOS_data_master_translator_avalon_universal_master_0_agent:rp_startofpacket
	wire   [99:0] rsp_xbar_mux_001_src_data;                                                                        // rsp_xbar_mux_001:src_data -> NIOS_data_master_translator_avalon_universal_master_0_agent:rp_data
	wire    [6:0] rsp_xbar_mux_001_src_channel;                                                                     // rsp_xbar_mux_001:src_channel -> NIOS_data_master_translator_avalon_universal_master_0_agent:rp_channel
	wire          rsp_xbar_mux_001_src_ready;                                                                       // NIOS_data_master_translator_avalon_universal_master_0_agent:rp_ready -> rsp_xbar_mux_001:src_ready
	wire          nios_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_waitrequest;                  // NIOS_jtag_debug_module_translator:uav_waitrequest -> NIOS_jtag_debug_module_translator_avalon_universal_slave_0_agent:m0_waitrequest
	wire    [2:0] nios_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_burstcount;                   // NIOS_jtag_debug_module_translator_avalon_universal_slave_0_agent:m0_burstcount -> NIOS_jtag_debug_module_translator:uav_burstcount
	wire   [31:0] nios_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_writedata;                    // NIOS_jtag_debug_module_translator_avalon_universal_slave_0_agent:m0_writedata -> NIOS_jtag_debug_module_translator:uav_writedata
	wire   [23:0] nios_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_address;                      // NIOS_jtag_debug_module_translator_avalon_universal_slave_0_agent:m0_address -> NIOS_jtag_debug_module_translator:uav_address
	wire          nios_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_write;                        // NIOS_jtag_debug_module_translator_avalon_universal_slave_0_agent:m0_write -> NIOS_jtag_debug_module_translator:uav_write
	wire          nios_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_lock;                         // NIOS_jtag_debug_module_translator_avalon_universal_slave_0_agent:m0_lock -> NIOS_jtag_debug_module_translator:uav_lock
	wire          nios_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_read;                         // NIOS_jtag_debug_module_translator_avalon_universal_slave_0_agent:m0_read -> NIOS_jtag_debug_module_translator:uav_read
	wire   [31:0] nios_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_readdata;                     // NIOS_jtag_debug_module_translator:uav_readdata -> NIOS_jtag_debug_module_translator_avalon_universal_slave_0_agent:m0_readdata
	wire          nios_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_readdatavalid;                // NIOS_jtag_debug_module_translator:uav_readdatavalid -> NIOS_jtag_debug_module_translator_avalon_universal_slave_0_agent:m0_readdatavalid
	wire          nios_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_debugaccess;                  // NIOS_jtag_debug_module_translator_avalon_universal_slave_0_agent:m0_debugaccess -> NIOS_jtag_debug_module_translator:uav_debugaccess
	wire    [3:0] nios_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_byteenable;                   // NIOS_jtag_debug_module_translator_avalon_universal_slave_0_agent:m0_byteenable -> NIOS_jtag_debug_module_translator:uav_byteenable
	wire          nios_jtag_debug_module_translator_avalon_universal_slave_0_agent_rf_source_endofpacket;           // NIOS_jtag_debug_module_translator_avalon_universal_slave_0_agent:rf_source_endofpacket -> NIOS_jtag_debug_module_translator_avalon_universal_slave_0_agent_rsp_fifo:in_endofpacket
	wire          nios_jtag_debug_module_translator_avalon_universal_slave_0_agent_rf_source_valid;                 // NIOS_jtag_debug_module_translator_avalon_universal_slave_0_agent:rf_source_valid -> NIOS_jtag_debug_module_translator_avalon_universal_slave_0_agent_rsp_fifo:in_valid
	wire          nios_jtag_debug_module_translator_avalon_universal_slave_0_agent_rf_source_startofpacket;         // NIOS_jtag_debug_module_translator_avalon_universal_slave_0_agent:rf_source_startofpacket -> NIOS_jtag_debug_module_translator_avalon_universal_slave_0_agent_rsp_fifo:in_startofpacket
	wire  [100:0] nios_jtag_debug_module_translator_avalon_universal_slave_0_agent_rf_source_data;                  // NIOS_jtag_debug_module_translator_avalon_universal_slave_0_agent:rf_source_data -> NIOS_jtag_debug_module_translator_avalon_universal_slave_0_agent_rsp_fifo:in_data
	wire          nios_jtag_debug_module_translator_avalon_universal_slave_0_agent_rf_source_ready;                 // NIOS_jtag_debug_module_translator_avalon_universal_slave_0_agent_rsp_fifo:in_ready -> NIOS_jtag_debug_module_translator_avalon_universal_slave_0_agent:rf_source_ready
	wire          nios_jtag_debug_module_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket;        // NIOS_jtag_debug_module_translator_avalon_universal_slave_0_agent_rsp_fifo:out_endofpacket -> NIOS_jtag_debug_module_translator_avalon_universal_slave_0_agent:rf_sink_endofpacket
	wire          nios_jtag_debug_module_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid;              // NIOS_jtag_debug_module_translator_avalon_universal_slave_0_agent_rsp_fifo:out_valid -> NIOS_jtag_debug_module_translator_avalon_universal_slave_0_agent:rf_sink_valid
	wire          nios_jtag_debug_module_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket;      // NIOS_jtag_debug_module_translator_avalon_universal_slave_0_agent_rsp_fifo:out_startofpacket -> NIOS_jtag_debug_module_translator_avalon_universal_slave_0_agent:rf_sink_startofpacket
	wire  [100:0] nios_jtag_debug_module_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data;               // NIOS_jtag_debug_module_translator_avalon_universal_slave_0_agent_rsp_fifo:out_data -> NIOS_jtag_debug_module_translator_avalon_universal_slave_0_agent:rf_sink_data
	wire          nios_jtag_debug_module_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready;              // NIOS_jtag_debug_module_translator_avalon_universal_slave_0_agent:rf_sink_ready -> NIOS_jtag_debug_module_translator_avalon_universal_slave_0_agent_rsp_fifo:out_ready
	wire          nios_jtag_debug_module_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid;            // NIOS_jtag_debug_module_translator_avalon_universal_slave_0_agent:rdata_fifo_src_valid -> NIOS_jtag_debug_module_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_valid
	wire   [33:0] nios_jtag_debug_module_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data;             // NIOS_jtag_debug_module_translator_avalon_universal_slave_0_agent:rdata_fifo_src_data -> NIOS_jtag_debug_module_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_data
	wire          nios_jtag_debug_module_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready;            // NIOS_jtag_debug_module_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_ready -> NIOS_jtag_debug_module_translator_avalon_universal_slave_0_agent:rdata_fifo_src_ready
	wire          cmd_xbar_mux_src_endofpacket;                                                                     // cmd_xbar_mux:src_endofpacket -> NIOS_jtag_debug_module_translator_avalon_universal_slave_0_agent:cp_endofpacket
	wire          cmd_xbar_mux_src_valid;                                                                           // cmd_xbar_mux:src_valid -> NIOS_jtag_debug_module_translator_avalon_universal_slave_0_agent:cp_valid
	wire          cmd_xbar_mux_src_startofpacket;                                                                   // cmd_xbar_mux:src_startofpacket -> NIOS_jtag_debug_module_translator_avalon_universal_slave_0_agent:cp_startofpacket
	wire   [99:0] cmd_xbar_mux_src_data;                                                                            // cmd_xbar_mux:src_data -> NIOS_jtag_debug_module_translator_avalon_universal_slave_0_agent:cp_data
	wire    [6:0] cmd_xbar_mux_src_channel;                                                                         // cmd_xbar_mux:src_channel -> NIOS_jtag_debug_module_translator_avalon_universal_slave_0_agent:cp_channel
	wire          cmd_xbar_mux_src_ready;                                                                           // NIOS_jtag_debug_module_translator_avalon_universal_slave_0_agent:cp_ready -> cmd_xbar_mux:src_ready
	wire          onchip_ram_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest;                           // onchip_ram_s1_translator:uav_waitrequest -> onchip_ram_s1_translator_avalon_universal_slave_0_agent:m0_waitrequest
	wire    [2:0] onchip_ram_s1_translator_avalon_universal_slave_0_agent_m0_burstcount;                            // onchip_ram_s1_translator_avalon_universal_slave_0_agent:m0_burstcount -> onchip_ram_s1_translator:uav_burstcount
	wire   [31:0] onchip_ram_s1_translator_avalon_universal_slave_0_agent_m0_writedata;                             // onchip_ram_s1_translator_avalon_universal_slave_0_agent:m0_writedata -> onchip_ram_s1_translator:uav_writedata
	wire   [23:0] onchip_ram_s1_translator_avalon_universal_slave_0_agent_m0_address;                               // onchip_ram_s1_translator_avalon_universal_slave_0_agent:m0_address -> onchip_ram_s1_translator:uav_address
	wire          onchip_ram_s1_translator_avalon_universal_slave_0_agent_m0_write;                                 // onchip_ram_s1_translator_avalon_universal_slave_0_agent:m0_write -> onchip_ram_s1_translator:uav_write
	wire          onchip_ram_s1_translator_avalon_universal_slave_0_agent_m0_lock;                                  // onchip_ram_s1_translator_avalon_universal_slave_0_agent:m0_lock -> onchip_ram_s1_translator:uav_lock
	wire          onchip_ram_s1_translator_avalon_universal_slave_0_agent_m0_read;                                  // onchip_ram_s1_translator_avalon_universal_slave_0_agent:m0_read -> onchip_ram_s1_translator:uav_read
	wire   [31:0] onchip_ram_s1_translator_avalon_universal_slave_0_agent_m0_readdata;                              // onchip_ram_s1_translator:uav_readdata -> onchip_ram_s1_translator_avalon_universal_slave_0_agent:m0_readdata
	wire          onchip_ram_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid;                         // onchip_ram_s1_translator:uav_readdatavalid -> onchip_ram_s1_translator_avalon_universal_slave_0_agent:m0_readdatavalid
	wire          onchip_ram_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess;                           // onchip_ram_s1_translator_avalon_universal_slave_0_agent:m0_debugaccess -> onchip_ram_s1_translator:uav_debugaccess
	wire    [3:0] onchip_ram_s1_translator_avalon_universal_slave_0_agent_m0_byteenable;                            // onchip_ram_s1_translator_avalon_universal_slave_0_agent:m0_byteenable -> onchip_ram_s1_translator:uav_byteenable
	wire          onchip_ram_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket;                    // onchip_ram_s1_translator_avalon_universal_slave_0_agent:rf_source_endofpacket -> onchip_ram_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_endofpacket
	wire          onchip_ram_s1_translator_avalon_universal_slave_0_agent_rf_source_valid;                          // onchip_ram_s1_translator_avalon_universal_slave_0_agent:rf_source_valid -> onchip_ram_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_valid
	wire          onchip_ram_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket;                  // onchip_ram_s1_translator_avalon_universal_slave_0_agent:rf_source_startofpacket -> onchip_ram_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_startofpacket
	wire  [100:0] onchip_ram_s1_translator_avalon_universal_slave_0_agent_rf_source_data;                           // onchip_ram_s1_translator_avalon_universal_slave_0_agent:rf_source_data -> onchip_ram_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_data
	wire          onchip_ram_s1_translator_avalon_universal_slave_0_agent_rf_source_ready;                          // onchip_ram_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_ready -> onchip_ram_s1_translator_avalon_universal_slave_0_agent:rf_source_ready
	wire          onchip_ram_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket;                 // onchip_ram_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_endofpacket -> onchip_ram_s1_translator_avalon_universal_slave_0_agent:rf_sink_endofpacket
	wire          onchip_ram_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid;                       // onchip_ram_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_valid -> onchip_ram_s1_translator_avalon_universal_slave_0_agent:rf_sink_valid
	wire          onchip_ram_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket;               // onchip_ram_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_startofpacket -> onchip_ram_s1_translator_avalon_universal_slave_0_agent:rf_sink_startofpacket
	wire  [100:0] onchip_ram_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data;                        // onchip_ram_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_data -> onchip_ram_s1_translator_avalon_universal_slave_0_agent:rf_sink_data
	wire          onchip_ram_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready;                       // onchip_ram_s1_translator_avalon_universal_slave_0_agent:rf_sink_ready -> onchip_ram_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_ready
	wire          onchip_ram_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid;                     // onchip_ram_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_valid -> onchip_ram_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_valid
	wire   [33:0] onchip_ram_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data;                      // onchip_ram_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_data -> onchip_ram_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_data
	wire          onchip_ram_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready;                     // onchip_ram_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_ready -> onchip_ram_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_ready
	wire          sdram_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest;                                // sdram_s1_translator:uav_waitrequest -> sdram_s1_translator_avalon_universal_slave_0_agent:m0_waitrequest
	wire    [1:0] sdram_s1_translator_avalon_universal_slave_0_agent_m0_burstcount;                                 // sdram_s1_translator_avalon_universal_slave_0_agent:m0_burstcount -> sdram_s1_translator:uav_burstcount
	wire   [15:0] sdram_s1_translator_avalon_universal_slave_0_agent_m0_writedata;                                  // sdram_s1_translator_avalon_universal_slave_0_agent:m0_writedata -> sdram_s1_translator:uav_writedata
	wire   [23:0] sdram_s1_translator_avalon_universal_slave_0_agent_m0_address;                                    // sdram_s1_translator_avalon_universal_slave_0_agent:m0_address -> sdram_s1_translator:uav_address
	wire          sdram_s1_translator_avalon_universal_slave_0_agent_m0_write;                                      // sdram_s1_translator_avalon_universal_slave_0_agent:m0_write -> sdram_s1_translator:uav_write
	wire          sdram_s1_translator_avalon_universal_slave_0_agent_m0_lock;                                       // sdram_s1_translator_avalon_universal_slave_0_agent:m0_lock -> sdram_s1_translator:uav_lock
	wire          sdram_s1_translator_avalon_universal_slave_0_agent_m0_read;                                       // sdram_s1_translator_avalon_universal_slave_0_agent:m0_read -> sdram_s1_translator:uav_read
	wire   [15:0] sdram_s1_translator_avalon_universal_slave_0_agent_m0_readdata;                                   // sdram_s1_translator:uav_readdata -> sdram_s1_translator_avalon_universal_slave_0_agent:m0_readdata
	wire          sdram_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid;                              // sdram_s1_translator:uav_readdatavalid -> sdram_s1_translator_avalon_universal_slave_0_agent:m0_readdatavalid
	wire          sdram_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess;                                // sdram_s1_translator_avalon_universal_slave_0_agent:m0_debugaccess -> sdram_s1_translator:uav_debugaccess
	wire    [1:0] sdram_s1_translator_avalon_universal_slave_0_agent_m0_byteenable;                                 // sdram_s1_translator_avalon_universal_slave_0_agent:m0_byteenable -> sdram_s1_translator:uav_byteenable
	wire          sdram_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket;                         // sdram_s1_translator_avalon_universal_slave_0_agent:rf_source_endofpacket -> sdram_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_endofpacket
	wire          sdram_s1_translator_avalon_universal_slave_0_agent_rf_source_valid;                               // sdram_s1_translator_avalon_universal_slave_0_agent:rf_source_valid -> sdram_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_valid
	wire          sdram_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket;                       // sdram_s1_translator_avalon_universal_slave_0_agent:rf_source_startofpacket -> sdram_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_startofpacket
	wire   [82:0] sdram_s1_translator_avalon_universal_slave_0_agent_rf_source_data;                                // sdram_s1_translator_avalon_universal_slave_0_agent:rf_source_data -> sdram_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_data
	wire          sdram_s1_translator_avalon_universal_slave_0_agent_rf_source_ready;                               // sdram_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_ready -> sdram_s1_translator_avalon_universal_slave_0_agent:rf_source_ready
	wire          sdram_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket;                      // sdram_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_endofpacket -> sdram_s1_translator_avalon_universal_slave_0_agent:rf_sink_endofpacket
	wire          sdram_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid;                            // sdram_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_valid -> sdram_s1_translator_avalon_universal_slave_0_agent:rf_sink_valid
	wire          sdram_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket;                    // sdram_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_startofpacket -> sdram_s1_translator_avalon_universal_slave_0_agent:rf_sink_startofpacket
	wire   [82:0] sdram_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data;                             // sdram_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_data -> sdram_s1_translator_avalon_universal_slave_0_agent:rf_sink_data
	wire          sdram_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready;                            // sdram_s1_translator_avalon_universal_slave_0_agent:rf_sink_ready -> sdram_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_ready
	wire          sdram_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid;                          // sdram_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_valid -> sdram_s1_translator_avalon_universal_slave_0_agent_rdata_fifo:in_valid
	wire   [17:0] sdram_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data;                           // sdram_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_data -> sdram_s1_translator_avalon_universal_slave_0_agent_rdata_fifo:in_data
	wire          sdram_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready;                          // sdram_s1_translator_avalon_universal_slave_0_agent_rdata_fifo:in_ready -> sdram_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_ready
	wire          sdram_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_out_valid;                          // sdram_s1_translator_avalon_universal_slave_0_agent_rdata_fifo:out_valid -> sdram_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_valid
	wire   [17:0] sdram_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_out_data;                           // sdram_s1_translator_avalon_universal_slave_0_agent_rdata_fifo:out_data -> sdram_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_data
	wire          sdram_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_out_ready;                          // sdram_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_ready -> sdram_s1_translator_avalon_universal_slave_0_agent_rdata_fifo:out_ready
	wire          jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_waitrequest;             // jtag_uart_avalon_jtag_slave_translator:uav_waitrequest -> jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:m0_waitrequest
	wire    [2:0] jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_burstcount;              // jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:m0_burstcount -> jtag_uart_avalon_jtag_slave_translator:uav_burstcount
	wire   [31:0] jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_writedata;               // jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:m0_writedata -> jtag_uart_avalon_jtag_slave_translator:uav_writedata
	wire   [23:0] jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_address;                 // jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:m0_address -> jtag_uart_avalon_jtag_slave_translator:uav_address
	wire          jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_write;                   // jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:m0_write -> jtag_uart_avalon_jtag_slave_translator:uav_write
	wire          jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_lock;                    // jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:m0_lock -> jtag_uart_avalon_jtag_slave_translator:uav_lock
	wire          jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_read;                    // jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:m0_read -> jtag_uart_avalon_jtag_slave_translator:uav_read
	wire   [31:0] jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_readdata;                // jtag_uart_avalon_jtag_slave_translator:uav_readdata -> jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:m0_readdata
	wire          jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_readdatavalid;           // jtag_uart_avalon_jtag_slave_translator:uav_readdatavalid -> jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:m0_readdatavalid
	wire          jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_debugaccess;             // jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:m0_debugaccess -> jtag_uart_avalon_jtag_slave_translator:uav_debugaccess
	wire    [3:0] jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_byteenable;              // jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:m0_byteenable -> jtag_uart_avalon_jtag_slave_translator:uav_byteenable
	wire          jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rf_source_endofpacket;      // jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:rf_source_endofpacket -> jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:in_endofpacket
	wire          jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rf_source_valid;            // jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:rf_source_valid -> jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:in_valid
	wire          jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rf_source_startofpacket;    // jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:rf_source_startofpacket -> jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:in_startofpacket
	wire  [100:0] jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rf_source_data;             // jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:rf_source_data -> jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:in_data
	wire          jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rf_source_ready;            // jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:in_ready -> jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:rf_source_ready
	wire          jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket;   // jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:out_endofpacket -> jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:rf_sink_endofpacket
	wire          jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid;         // jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:out_valid -> jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:rf_sink_valid
	wire          jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket; // jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:out_startofpacket -> jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:rf_sink_startofpacket
	wire  [100:0] jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data;          // jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:out_data -> jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:rf_sink_data
	wire          jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready;         // jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:rf_sink_ready -> jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:out_ready
	wire          jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid;       // jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:rdata_fifo_src_valid -> jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_valid
	wire   [33:0] jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data;        // jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:rdata_fifo_src_data -> jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_data
	wire          jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready;       // jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_ready -> jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:rdata_fifo_src_ready
	wire          cmd_xbar_mux_003_src_endofpacket;                                                                 // cmd_xbar_mux_003:src_endofpacket -> jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:cp_endofpacket
	wire          cmd_xbar_mux_003_src_valid;                                                                       // cmd_xbar_mux_003:src_valid -> jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:cp_valid
	wire          cmd_xbar_mux_003_src_startofpacket;                                                               // cmd_xbar_mux_003:src_startofpacket -> jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:cp_startofpacket
	wire   [99:0] cmd_xbar_mux_003_src_data;                                                                        // cmd_xbar_mux_003:src_data -> jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:cp_data
	wire    [6:0] cmd_xbar_mux_003_src_channel;                                                                     // cmd_xbar_mux_003:src_channel -> jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:cp_channel
	wire          cmd_xbar_mux_003_src_ready;                                                                       // jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:cp_ready -> cmd_xbar_mux_003:src_ready
	wire          phase_increment_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest;                      // phase_increment_s1_translator:uav_waitrequest -> phase_increment_s1_translator_avalon_universal_slave_0_agent:m0_waitrequest
	wire    [2:0] phase_increment_s1_translator_avalon_universal_slave_0_agent_m0_burstcount;                       // phase_increment_s1_translator_avalon_universal_slave_0_agent:m0_burstcount -> phase_increment_s1_translator:uav_burstcount
	wire   [31:0] phase_increment_s1_translator_avalon_universal_slave_0_agent_m0_writedata;                        // phase_increment_s1_translator_avalon_universal_slave_0_agent:m0_writedata -> phase_increment_s1_translator:uav_writedata
	wire   [23:0] phase_increment_s1_translator_avalon_universal_slave_0_agent_m0_address;                          // phase_increment_s1_translator_avalon_universal_slave_0_agent:m0_address -> phase_increment_s1_translator:uav_address
	wire          phase_increment_s1_translator_avalon_universal_slave_0_agent_m0_write;                            // phase_increment_s1_translator_avalon_universal_slave_0_agent:m0_write -> phase_increment_s1_translator:uav_write
	wire          phase_increment_s1_translator_avalon_universal_slave_0_agent_m0_lock;                             // phase_increment_s1_translator_avalon_universal_slave_0_agent:m0_lock -> phase_increment_s1_translator:uav_lock
	wire          phase_increment_s1_translator_avalon_universal_slave_0_agent_m0_read;                             // phase_increment_s1_translator_avalon_universal_slave_0_agent:m0_read -> phase_increment_s1_translator:uav_read
	wire   [31:0] phase_increment_s1_translator_avalon_universal_slave_0_agent_m0_readdata;                         // phase_increment_s1_translator:uav_readdata -> phase_increment_s1_translator_avalon_universal_slave_0_agent:m0_readdata
	wire          phase_increment_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid;                    // phase_increment_s1_translator:uav_readdatavalid -> phase_increment_s1_translator_avalon_universal_slave_0_agent:m0_readdatavalid
	wire          phase_increment_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess;                      // phase_increment_s1_translator_avalon_universal_slave_0_agent:m0_debugaccess -> phase_increment_s1_translator:uav_debugaccess
	wire    [3:0] phase_increment_s1_translator_avalon_universal_slave_0_agent_m0_byteenable;                       // phase_increment_s1_translator_avalon_universal_slave_0_agent:m0_byteenable -> phase_increment_s1_translator:uav_byteenable
	wire          phase_increment_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket;               // phase_increment_s1_translator_avalon_universal_slave_0_agent:rf_source_endofpacket -> phase_increment_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_endofpacket
	wire          phase_increment_s1_translator_avalon_universal_slave_0_agent_rf_source_valid;                     // phase_increment_s1_translator_avalon_universal_slave_0_agent:rf_source_valid -> phase_increment_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_valid
	wire          phase_increment_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket;             // phase_increment_s1_translator_avalon_universal_slave_0_agent:rf_source_startofpacket -> phase_increment_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_startofpacket
	wire  [100:0] phase_increment_s1_translator_avalon_universal_slave_0_agent_rf_source_data;                      // phase_increment_s1_translator_avalon_universal_slave_0_agent:rf_source_data -> phase_increment_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_data
	wire          phase_increment_s1_translator_avalon_universal_slave_0_agent_rf_source_ready;                     // phase_increment_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_ready -> phase_increment_s1_translator_avalon_universal_slave_0_agent:rf_source_ready
	wire          phase_increment_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket;            // phase_increment_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_endofpacket -> phase_increment_s1_translator_avalon_universal_slave_0_agent:rf_sink_endofpacket
	wire          phase_increment_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid;                  // phase_increment_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_valid -> phase_increment_s1_translator_avalon_universal_slave_0_agent:rf_sink_valid
	wire          phase_increment_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket;          // phase_increment_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_startofpacket -> phase_increment_s1_translator_avalon_universal_slave_0_agent:rf_sink_startofpacket
	wire  [100:0] phase_increment_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data;                   // phase_increment_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_data -> phase_increment_s1_translator_avalon_universal_slave_0_agent:rf_sink_data
	wire          phase_increment_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready;                  // phase_increment_s1_translator_avalon_universal_slave_0_agent:rf_sink_ready -> phase_increment_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_ready
	wire          phase_increment_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid;                // phase_increment_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_valid -> phase_increment_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_valid
	wire   [33:0] phase_increment_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data;                 // phase_increment_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_data -> phase_increment_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_data
	wire          phase_increment_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready;                // phase_increment_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_ready -> phase_increment_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_ready
	wire          cmd_xbar_mux_004_src_endofpacket;                                                                 // cmd_xbar_mux_004:src_endofpacket -> phase_increment_s1_translator_avalon_universal_slave_0_agent:cp_endofpacket
	wire          cmd_xbar_mux_004_src_valid;                                                                       // cmd_xbar_mux_004:src_valid -> phase_increment_s1_translator_avalon_universal_slave_0_agent:cp_valid
	wire          cmd_xbar_mux_004_src_startofpacket;                                                               // cmd_xbar_mux_004:src_startofpacket -> phase_increment_s1_translator_avalon_universal_slave_0_agent:cp_startofpacket
	wire   [99:0] cmd_xbar_mux_004_src_data;                                                                        // cmd_xbar_mux_004:src_data -> phase_increment_s1_translator_avalon_universal_slave_0_agent:cp_data
	wire    [6:0] cmd_xbar_mux_004_src_channel;                                                                     // cmd_xbar_mux_004:src_channel -> phase_increment_s1_translator_avalon_universal_slave_0_agent:cp_channel
	wire          cmd_xbar_mux_004_src_ready;                                                                       // phase_increment_s1_translator_avalon_universal_slave_0_agent:cp_ready -> cmd_xbar_mux_004:src_ready
	wire          cic_gain_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest;                             // cic_gain_s1_translator:uav_waitrequest -> cic_gain_s1_translator_avalon_universal_slave_0_agent:m0_waitrequest
	wire    [2:0] cic_gain_s1_translator_avalon_universal_slave_0_agent_m0_burstcount;                              // cic_gain_s1_translator_avalon_universal_slave_0_agent:m0_burstcount -> cic_gain_s1_translator:uav_burstcount
	wire   [31:0] cic_gain_s1_translator_avalon_universal_slave_0_agent_m0_writedata;                               // cic_gain_s1_translator_avalon_universal_slave_0_agent:m0_writedata -> cic_gain_s1_translator:uav_writedata
	wire   [23:0] cic_gain_s1_translator_avalon_universal_slave_0_agent_m0_address;                                 // cic_gain_s1_translator_avalon_universal_slave_0_agent:m0_address -> cic_gain_s1_translator:uav_address
	wire          cic_gain_s1_translator_avalon_universal_slave_0_agent_m0_write;                                   // cic_gain_s1_translator_avalon_universal_slave_0_agent:m0_write -> cic_gain_s1_translator:uav_write
	wire          cic_gain_s1_translator_avalon_universal_slave_0_agent_m0_lock;                                    // cic_gain_s1_translator_avalon_universal_slave_0_agent:m0_lock -> cic_gain_s1_translator:uav_lock
	wire          cic_gain_s1_translator_avalon_universal_slave_0_agent_m0_read;                                    // cic_gain_s1_translator_avalon_universal_slave_0_agent:m0_read -> cic_gain_s1_translator:uav_read
	wire   [31:0] cic_gain_s1_translator_avalon_universal_slave_0_agent_m0_readdata;                                // cic_gain_s1_translator:uav_readdata -> cic_gain_s1_translator_avalon_universal_slave_0_agent:m0_readdata
	wire          cic_gain_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid;                           // cic_gain_s1_translator:uav_readdatavalid -> cic_gain_s1_translator_avalon_universal_slave_0_agent:m0_readdatavalid
	wire          cic_gain_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess;                             // cic_gain_s1_translator_avalon_universal_slave_0_agent:m0_debugaccess -> cic_gain_s1_translator:uav_debugaccess
	wire    [3:0] cic_gain_s1_translator_avalon_universal_slave_0_agent_m0_byteenable;                              // cic_gain_s1_translator_avalon_universal_slave_0_agent:m0_byteenable -> cic_gain_s1_translator:uav_byteenable
	wire          cic_gain_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket;                      // cic_gain_s1_translator_avalon_universal_slave_0_agent:rf_source_endofpacket -> cic_gain_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_endofpacket
	wire          cic_gain_s1_translator_avalon_universal_slave_0_agent_rf_source_valid;                            // cic_gain_s1_translator_avalon_universal_slave_0_agent:rf_source_valid -> cic_gain_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_valid
	wire          cic_gain_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket;                    // cic_gain_s1_translator_avalon_universal_slave_0_agent:rf_source_startofpacket -> cic_gain_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_startofpacket
	wire  [100:0] cic_gain_s1_translator_avalon_universal_slave_0_agent_rf_source_data;                             // cic_gain_s1_translator_avalon_universal_slave_0_agent:rf_source_data -> cic_gain_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_data
	wire          cic_gain_s1_translator_avalon_universal_slave_0_agent_rf_source_ready;                            // cic_gain_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_ready -> cic_gain_s1_translator_avalon_universal_slave_0_agent:rf_source_ready
	wire          cic_gain_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket;                   // cic_gain_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_endofpacket -> cic_gain_s1_translator_avalon_universal_slave_0_agent:rf_sink_endofpacket
	wire          cic_gain_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid;                         // cic_gain_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_valid -> cic_gain_s1_translator_avalon_universal_slave_0_agent:rf_sink_valid
	wire          cic_gain_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket;                 // cic_gain_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_startofpacket -> cic_gain_s1_translator_avalon_universal_slave_0_agent:rf_sink_startofpacket
	wire  [100:0] cic_gain_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data;                          // cic_gain_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_data -> cic_gain_s1_translator_avalon_universal_slave_0_agent:rf_sink_data
	wire          cic_gain_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready;                         // cic_gain_s1_translator_avalon_universal_slave_0_agent:rf_sink_ready -> cic_gain_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_ready
	wire          cic_gain_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid;                       // cic_gain_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_valid -> cic_gain_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_valid
	wire   [33:0] cic_gain_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data;                        // cic_gain_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_data -> cic_gain_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_data
	wire          cic_gain_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready;                       // cic_gain_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_ready -> cic_gain_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_ready
	wire          cmd_xbar_mux_005_src_endofpacket;                                                                 // cmd_xbar_mux_005:src_endofpacket -> cic_gain_s1_translator_avalon_universal_slave_0_agent:cp_endofpacket
	wire          cmd_xbar_mux_005_src_valid;                                                                       // cmd_xbar_mux_005:src_valid -> cic_gain_s1_translator_avalon_universal_slave_0_agent:cp_valid
	wire          cmd_xbar_mux_005_src_startofpacket;                                                               // cmd_xbar_mux_005:src_startofpacket -> cic_gain_s1_translator_avalon_universal_slave_0_agent:cp_startofpacket
	wire   [99:0] cmd_xbar_mux_005_src_data;                                                                        // cmd_xbar_mux_005:src_data -> cic_gain_s1_translator_avalon_universal_slave_0_agent:cp_data
	wire    [6:0] cmd_xbar_mux_005_src_channel;                                                                     // cmd_xbar_mux_005:src_channel -> cic_gain_s1_translator_avalon_universal_slave_0_agent:cp_channel
	wire          cmd_xbar_mux_005_src_ready;                                                                       // cic_gain_s1_translator_avalon_universal_slave_0_agent:cp_ready -> cmd_xbar_mux_005:src_ready
	wire          ps2_slave_translator_avalon_universal_slave_0_agent_m0_waitrequest;                               // ps2_slave_translator:uav_waitrequest -> ps2_slave_translator_avalon_universal_slave_0_agent:m0_waitrequest
	wire    [2:0] ps2_slave_translator_avalon_universal_slave_0_agent_m0_burstcount;                                // ps2_slave_translator_avalon_universal_slave_0_agent:m0_burstcount -> ps2_slave_translator:uav_burstcount
	wire   [31:0] ps2_slave_translator_avalon_universal_slave_0_agent_m0_writedata;                                 // ps2_slave_translator_avalon_universal_slave_0_agent:m0_writedata -> ps2_slave_translator:uav_writedata
	wire   [23:0] ps2_slave_translator_avalon_universal_slave_0_agent_m0_address;                                   // ps2_slave_translator_avalon_universal_slave_0_agent:m0_address -> ps2_slave_translator:uav_address
	wire          ps2_slave_translator_avalon_universal_slave_0_agent_m0_write;                                     // ps2_slave_translator_avalon_universal_slave_0_agent:m0_write -> ps2_slave_translator:uav_write
	wire          ps2_slave_translator_avalon_universal_slave_0_agent_m0_lock;                                      // ps2_slave_translator_avalon_universal_slave_0_agent:m0_lock -> ps2_slave_translator:uav_lock
	wire          ps2_slave_translator_avalon_universal_slave_0_agent_m0_read;                                      // ps2_slave_translator_avalon_universal_slave_0_agent:m0_read -> ps2_slave_translator:uav_read
	wire   [31:0] ps2_slave_translator_avalon_universal_slave_0_agent_m0_readdata;                                  // ps2_slave_translator:uav_readdata -> ps2_slave_translator_avalon_universal_slave_0_agent:m0_readdata
	wire          ps2_slave_translator_avalon_universal_slave_0_agent_m0_readdatavalid;                             // ps2_slave_translator:uav_readdatavalid -> ps2_slave_translator_avalon_universal_slave_0_agent:m0_readdatavalid
	wire          ps2_slave_translator_avalon_universal_slave_0_agent_m0_debugaccess;                               // ps2_slave_translator_avalon_universal_slave_0_agent:m0_debugaccess -> ps2_slave_translator:uav_debugaccess
	wire    [3:0] ps2_slave_translator_avalon_universal_slave_0_agent_m0_byteenable;                                // ps2_slave_translator_avalon_universal_slave_0_agent:m0_byteenable -> ps2_slave_translator:uav_byteenable
	wire          ps2_slave_translator_avalon_universal_slave_0_agent_rf_source_endofpacket;                        // ps2_slave_translator_avalon_universal_slave_0_agent:rf_source_endofpacket -> ps2_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:in_endofpacket
	wire          ps2_slave_translator_avalon_universal_slave_0_agent_rf_source_valid;                              // ps2_slave_translator_avalon_universal_slave_0_agent:rf_source_valid -> ps2_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:in_valid
	wire          ps2_slave_translator_avalon_universal_slave_0_agent_rf_source_startofpacket;                      // ps2_slave_translator_avalon_universal_slave_0_agent:rf_source_startofpacket -> ps2_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:in_startofpacket
	wire  [100:0] ps2_slave_translator_avalon_universal_slave_0_agent_rf_source_data;                               // ps2_slave_translator_avalon_universal_slave_0_agent:rf_source_data -> ps2_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:in_data
	wire          ps2_slave_translator_avalon_universal_slave_0_agent_rf_source_ready;                              // ps2_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:in_ready -> ps2_slave_translator_avalon_universal_slave_0_agent:rf_source_ready
	wire          ps2_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket;                     // ps2_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:out_endofpacket -> ps2_slave_translator_avalon_universal_slave_0_agent:rf_sink_endofpacket
	wire          ps2_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid;                           // ps2_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:out_valid -> ps2_slave_translator_avalon_universal_slave_0_agent:rf_sink_valid
	wire          ps2_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket;                   // ps2_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:out_startofpacket -> ps2_slave_translator_avalon_universal_slave_0_agent:rf_sink_startofpacket
	wire  [100:0] ps2_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data;                            // ps2_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:out_data -> ps2_slave_translator_avalon_universal_slave_0_agent:rf_sink_data
	wire          ps2_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready;                           // ps2_slave_translator_avalon_universal_slave_0_agent:rf_sink_ready -> ps2_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:out_ready
	wire          ps2_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid;                         // ps2_slave_translator_avalon_universal_slave_0_agent:rdata_fifo_src_valid -> ps2_slave_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_valid
	wire   [33:0] ps2_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data;                          // ps2_slave_translator_avalon_universal_slave_0_agent:rdata_fifo_src_data -> ps2_slave_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_data
	wire          ps2_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready;                         // ps2_slave_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_ready -> ps2_slave_translator_avalon_universal_slave_0_agent:rdata_fifo_src_ready
	wire          cmd_xbar_mux_006_src_endofpacket;                                                                 // cmd_xbar_mux_006:src_endofpacket -> ps2_slave_translator_avalon_universal_slave_0_agent:cp_endofpacket
	wire          cmd_xbar_mux_006_src_valid;                                                                       // cmd_xbar_mux_006:src_valid -> ps2_slave_translator_avalon_universal_slave_0_agent:cp_valid
	wire          cmd_xbar_mux_006_src_startofpacket;                                                               // cmd_xbar_mux_006:src_startofpacket -> ps2_slave_translator_avalon_universal_slave_0_agent:cp_startofpacket
	wire   [99:0] cmd_xbar_mux_006_src_data;                                                                        // cmd_xbar_mux_006:src_data -> ps2_slave_translator_avalon_universal_slave_0_agent:cp_data
	wire    [6:0] cmd_xbar_mux_006_src_channel;                                                                     // cmd_xbar_mux_006:src_channel -> ps2_slave_translator_avalon_universal_slave_0_agent:cp_channel
	wire          cmd_xbar_mux_006_src_ready;                                                                       // ps2_slave_translator_avalon_universal_slave_0_agent:cp_ready -> cmd_xbar_mux_006:src_ready
	wire          nios_instruction_master_translator_avalon_universal_master_0_agent_cp_endofpacket;                // NIOS_instruction_master_translator_avalon_universal_master_0_agent:cp_endofpacket -> addr_router:sink_endofpacket
	wire          nios_instruction_master_translator_avalon_universal_master_0_agent_cp_valid;                      // NIOS_instruction_master_translator_avalon_universal_master_0_agent:cp_valid -> addr_router:sink_valid
	wire          nios_instruction_master_translator_avalon_universal_master_0_agent_cp_startofpacket;              // NIOS_instruction_master_translator_avalon_universal_master_0_agent:cp_startofpacket -> addr_router:sink_startofpacket
	wire   [99:0] nios_instruction_master_translator_avalon_universal_master_0_agent_cp_data;                       // NIOS_instruction_master_translator_avalon_universal_master_0_agent:cp_data -> addr_router:sink_data
	wire          nios_instruction_master_translator_avalon_universal_master_0_agent_cp_ready;                      // addr_router:sink_ready -> NIOS_instruction_master_translator_avalon_universal_master_0_agent:cp_ready
	wire          addr_router_src_endofpacket;                                                                      // addr_router:src_endofpacket -> cmd_xbar_demux:sink_endofpacket
	wire          addr_router_src_valid;                                                                            // addr_router:src_valid -> cmd_xbar_demux:sink_valid
	wire          addr_router_src_startofpacket;                                                                    // addr_router:src_startofpacket -> cmd_xbar_demux:sink_startofpacket
	wire   [99:0] addr_router_src_data;                                                                             // addr_router:src_data -> cmd_xbar_demux:sink_data
	wire    [6:0] addr_router_src_channel;                                                                          // addr_router:src_channel -> cmd_xbar_demux:sink_channel
	wire          addr_router_src_ready;                                                                            // cmd_xbar_demux:sink_ready -> addr_router:src_ready
	wire          nios_data_master_translator_avalon_universal_master_0_agent_cp_endofpacket;                       // NIOS_data_master_translator_avalon_universal_master_0_agent:cp_endofpacket -> addr_router_001:sink_endofpacket
	wire          nios_data_master_translator_avalon_universal_master_0_agent_cp_valid;                             // NIOS_data_master_translator_avalon_universal_master_0_agent:cp_valid -> addr_router_001:sink_valid
	wire          nios_data_master_translator_avalon_universal_master_0_agent_cp_startofpacket;                     // NIOS_data_master_translator_avalon_universal_master_0_agent:cp_startofpacket -> addr_router_001:sink_startofpacket
	wire   [99:0] nios_data_master_translator_avalon_universal_master_0_agent_cp_data;                              // NIOS_data_master_translator_avalon_universal_master_0_agent:cp_data -> addr_router_001:sink_data
	wire          nios_data_master_translator_avalon_universal_master_0_agent_cp_ready;                             // addr_router_001:sink_ready -> NIOS_data_master_translator_avalon_universal_master_0_agent:cp_ready
	wire          addr_router_001_src_endofpacket;                                                                  // addr_router_001:src_endofpacket -> cmd_xbar_demux_001:sink_endofpacket
	wire          addr_router_001_src_valid;                                                                        // addr_router_001:src_valid -> cmd_xbar_demux_001:sink_valid
	wire          addr_router_001_src_startofpacket;                                                                // addr_router_001:src_startofpacket -> cmd_xbar_demux_001:sink_startofpacket
	wire   [99:0] addr_router_001_src_data;                                                                         // addr_router_001:src_data -> cmd_xbar_demux_001:sink_data
	wire    [6:0] addr_router_001_src_channel;                                                                      // addr_router_001:src_channel -> cmd_xbar_demux_001:sink_channel
	wire          addr_router_001_src_ready;                                                                        // cmd_xbar_demux_001:sink_ready -> addr_router_001:src_ready
	wire          nios_jtag_debug_module_translator_avalon_universal_slave_0_agent_rp_endofpacket;                  // NIOS_jtag_debug_module_translator_avalon_universal_slave_0_agent:rp_endofpacket -> id_router:sink_endofpacket
	wire          nios_jtag_debug_module_translator_avalon_universal_slave_0_agent_rp_valid;                        // NIOS_jtag_debug_module_translator_avalon_universal_slave_0_agent:rp_valid -> id_router:sink_valid
	wire          nios_jtag_debug_module_translator_avalon_universal_slave_0_agent_rp_startofpacket;                // NIOS_jtag_debug_module_translator_avalon_universal_slave_0_agent:rp_startofpacket -> id_router:sink_startofpacket
	wire   [99:0] nios_jtag_debug_module_translator_avalon_universal_slave_0_agent_rp_data;                         // NIOS_jtag_debug_module_translator_avalon_universal_slave_0_agent:rp_data -> id_router:sink_data
	wire          nios_jtag_debug_module_translator_avalon_universal_slave_0_agent_rp_ready;                        // id_router:sink_ready -> NIOS_jtag_debug_module_translator_avalon_universal_slave_0_agent:rp_ready
	wire          id_router_src_endofpacket;                                                                        // id_router:src_endofpacket -> rsp_xbar_demux:sink_endofpacket
	wire          id_router_src_valid;                                                                              // id_router:src_valid -> rsp_xbar_demux:sink_valid
	wire          id_router_src_startofpacket;                                                                      // id_router:src_startofpacket -> rsp_xbar_demux:sink_startofpacket
	wire   [99:0] id_router_src_data;                                                                               // id_router:src_data -> rsp_xbar_demux:sink_data
	wire    [6:0] id_router_src_channel;                                                                            // id_router:src_channel -> rsp_xbar_demux:sink_channel
	wire          id_router_src_ready;                                                                              // rsp_xbar_demux:sink_ready -> id_router:src_ready
	wire          onchip_ram_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket;                           // onchip_ram_s1_translator_avalon_universal_slave_0_agent:rp_endofpacket -> id_router_001:sink_endofpacket
	wire          onchip_ram_s1_translator_avalon_universal_slave_0_agent_rp_valid;                                 // onchip_ram_s1_translator_avalon_universal_slave_0_agent:rp_valid -> id_router_001:sink_valid
	wire          onchip_ram_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket;                         // onchip_ram_s1_translator_avalon_universal_slave_0_agent:rp_startofpacket -> id_router_001:sink_startofpacket
	wire   [99:0] onchip_ram_s1_translator_avalon_universal_slave_0_agent_rp_data;                                  // onchip_ram_s1_translator_avalon_universal_slave_0_agent:rp_data -> id_router_001:sink_data
	wire          onchip_ram_s1_translator_avalon_universal_slave_0_agent_rp_ready;                                 // id_router_001:sink_ready -> onchip_ram_s1_translator_avalon_universal_slave_0_agent:rp_ready
	wire          id_router_001_src_endofpacket;                                                                    // id_router_001:src_endofpacket -> rsp_xbar_demux_001:sink_endofpacket
	wire          id_router_001_src_valid;                                                                          // id_router_001:src_valid -> rsp_xbar_demux_001:sink_valid
	wire          id_router_001_src_startofpacket;                                                                  // id_router_001:src_startofpacket -> rsp_xbar_demux_001:sink_startofpacket
	wire   [99:0] id_router_001_src_data;                                                                           // id_router_001:src_data -> rsp_xbar_demux_001:sink_data
	wire    [6:0] id_router_001_src_channel;                                                                        // id_router_001:src_channel -> rsp_xbar_demux_001:sink_channel
	wire          id_router_001_src_ready;                                                                          // rsp_xbar_demux_001:sink_ready -> id_router_001:src_ready
	wire          jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rp_endofpacket;             // jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:rp_endofpacket -> id_router_003:sink_endofpacket
	wire          jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rp_valid;                   // jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:rp_valid -> id_router_003:sink_valid
	wire          jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rp_startofpacket;           // jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:rp_startofpacket -> id_router_003:sink_startofpacket
	wire   [99:0] jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rp_data;                    // jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:rp_data -> id_router_003:sink_data
	wire          jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rp_ready;                   // id_router_003:sink_ready -> jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:rp_ready
	wire          phase_increment_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket;                      // phase_increment_s1_translator_avalon_universal_slave_0_agent:rp_endofpacket -> id_router_004:sink_endofpacket
	wire          phase_increment_s1_translator_avalon_universal_slave_0_agent_rp_valid;                            // phase_increment_s1_translator_avalon_universal_slave_0_agent:rp_valid -> id_router_004:sink_valid
	wire          phase_increment_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket;                    // phase_increment_s1_translator_avalon_universal_slave_0_agent:rp_startofpacket -> id_router_004:sink_startofpacket
	wire   [99:0] phase_increment_s1_translator_avalon_universal_slave_0_agent_rp_data;                             // phase_increment_s1_translator_avalon_universal_slave_0_agent:rp_data -> id_router_004:sink_data
	wire          phase_increment_s1_translator_avalon_universal_slave_0_agent_rp_ready;                            // id_router_004:sink_ready -> phase_increment_s1_translator_avalon_universal_slave_0_agent:rp_ready
	wire          id_router_004_src_endofpacket;                                                                    // id_router_004:src_endofpacket -> rsp_xbar_demux_004:sink_endofpacket
	wire          id_router_004_src_valid;                                                                          // id_router_004:src_valid -> rsp_xbar_demux_004:sink_valid
	wire          id_router_004_src_startofpacket;                                                                  // id_router_004:src_startofpacket -> rsp_xbar_demux_004:sink_startofpacket
	wire   [99:0] id_router_004_src_data;                                                                           // id_router_004:src_data -> rsp_xbar_demux_004:sink_data
	wire    [6:0] id_router_004_src_channel;                                                                        // id_router_004:src_channel -> rsp_xbar_demux_004:sink_channel
	wire          id_router_004_src_ready;                                                                          // rsp_xbar_demux_004:sink_ready -> id_router_004:src_ready
	wire          cic_gain_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket;                             // cic_gain_s1_translator_avalon_universal_slave_0_agent:rp_endofpacket -> id_router_005:sink_endofpacket
	wire          cic_gain_s1_translator_avalon_universal_slave_0_agent_rp_valid;                                   // cic_gain_s1_translator_avalon_universal_slave_0_agent:rp_valid -> id_router_005:sink_valid
	wire          cic_gain_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket;                           // cic_gain_s1_translator_avalon_universal_slave_0_agent:rp_startofpacket -> id_router_005:sink_startofpacket
	wire   [99:0] cic_gain_s1_translator_avalon_universal_slave_0_agent_rp_data;                                    // cic_gain_s1_translator_avalon_universal_slave_0_agent:rp_data -> id_router_005:sink_data
	wire          cic_gain_s1_translator_avalon_universal_slave_0_agent_rp_ready;                                   // id_router_005:sink_ready -> cic_gain_s1_translator_avalon_universal_slave_0_agent:rp_ready
	wire          id_router_005_src_endofpacket;                                                                    // id_router_005:src_endofpacket -> rsp_xbar_demux_005:sink_endofpacket
	wire          id_router_005_src_valid;                                                                          // id_router_005:src_valid -> rsp_xbar_demux_005:sink_valid
	wire          id_router_005_src_startofpacket;                                                                  // id_router_005:src_startofpacket -> rsp_xbar_demux_005:sink_startofpacket
	wire   [99:0] id_router_005_src_data;                                                                           // id_router_005:src_data -> rsp_xbar_demux_005:sink_data
	wire    [6:0] id_router_005_src_channel;                                                                        // id_router_005:src_channel -> rsp_xbar_demux_005:sink_channel
	wire          id_router_005_src_ready;                                                                          // rsp_xbar_demux_005:sink_ready -> id_router_005:src_ready
	wire          ps2_slave_translator_avalon_universal_slave_0_agent_rp_endofpacket;                               // ps2_slave_translator_avalon_universal_slave_0_agent:rp_endofpacket -> id_router_006:sink_endofpacket
	wire          ps2_slave_translator_avalon_universal_slave_0_agent_rp_valid;                                     // ps2_slave_translator_avalon_universal_slave_0_agent:rp_valid -> id_router_006:sink_valid
	wire          ps2_slave_translator_avalon_universal_slave_0_agent_rp_startofpacket;                             // ps2_slave_translator_avalon_universal_slave_0_agent:rp_startofpacket -> id_router_006:sink_startofpacket
	wire   [99:0] ps2_slave_translator_avalon_universal_slave_0_agent_rp_data;                                      // ps2_slave_translator_avalon_universal_slave_0_agent:rp_data -> id_router_006:sink_data
	wire          ps2_slave_translator_avalon_universal_slave_0_agent_rp_ready;                                     // id_router_006:sink_ready -> ps2_slave_translator_avalon_universal_slave_0_agent:rp_ready
	wire          id_router_006_src_endofpacket;                                                                    // id_router_006:src_endofpacket -> rsp_xbar_demux_006:sink_endofpacket
	wire          id_router_006_src_valid;                                                                          // id_router_006:src_valid -> rsp_xbar_demux_006:sink_valid
	wire          id_router_006_src_startofpacket;                                                                  // id_router_006:src_startofpacket -> rsp_xbar_demux_006:sink_startofpacket
	wire   [99:0] id_router_006_src_data;                                                                           // id_router_006:src_data -> rsp_xbar_demux_006:sink_data
	wire    [6:0] id_router_006_src_channel;                                                                        // id_router_006:src_channel -> rsp_xbar_demux_006:sink_channel
	wire          id_router_006_src_ready;                                                                          // rsp_xbar_demux_006:sink_ready -> id_router_006:src_ready
	wire          cmd_xbar_demux_src0_endofpacket;                                                                  // cmd_xbar_demux:src0_endofpacket -> cmd_xbar_mux:sink0_endofpacket
	wire          cmd_xbar_demux_src0_valid;                                                                        // cmd_xbar_demux:src0_valid -> cmd_xbar_mux:sink0_valid
	wire          cmd_xbar_demux_src0_startofpacket;                                                                // cmd_xbar_demux:src0_startofpacket -> cmd_xbar_mux:sink0_startofpacket
	wire   [99:0] cmd_xbar_demux_src0_data;                                                                         // cmd_xbar_demux:src0_data -> cmd_xbar_mux:sink0_data
	wire    [6:0] cmd_xbar_demux_src0_channel;                                                                      // cmd_xbar_demux:src0_channel -> cmd_xbar_mux:sink0_channel
	wire          cmd_xbar_demux_src0_ready;                                                                        // cmd_xbar_mux:sink0_ready -> cmd_xbar_demux:src0_ready
	wire          cmd_xbar_demux_src1_endofpacket;                                                                  // cmd_xbar_demux:src1_endofpacket -> cmd_xbar_mux_001:sink0_endofpacket
	wire          cmd_xbar_demux_src1_valid;                                                                        // cmd_xbar_demux:src1_valid -> cmd_xbar_mux_001:sink0_valid
	wire          cmd_xbar_demux_src1_startofpacket;                                                                // cmd_xbar_demux:src1_startofpacket -> cmd_xbar_mux_001:sink0_startofpacket
	wire   [99:0] cmd_xbar_demux_src1_data;                                                                         // cmd_xbar_demux:src1_data -> cmd_xbar_mux_001:sink0_data
	wire    [6:0] cmd_xbar_demux_src1_channel;                                                                      // cmd_xbar_demux:src1_channel -> cmd_xbar_mux_001:sink0_channel
	wire          cmd_xbar_demux_src1_ready;                                                                        // cmd_xbar_mux_001:sink0_ready -> cmd_xbar_demux:src1_ready
	wire          cmd_xbar_demux_src2_endofpacket;                                                                  // cmd_xbar_demux:src2_endofpacket -> cmd_xbar_mux_002:sink0_endofpacket
	wire          cmd_xbar_demux_src2_valid;                                                                        // cmd_xbar_demux:src2_valid -> cmd_xbar_mux_002:sink0_valid
	wire          cmd_xbar_demux_src2_startofpacket;                                                                // cmd_xbar_demux:src2_startofpacket -> cmd_xbar_mux_002:sink0_startofpacket
	wire   [99:0] cmd_xbar_demux_src2_data;                                                                         // cmd_xbar_demux:src2_data -> cmd_xbar_mux_002:sink0_data
	wire    [6:0] cmd_xbar_demux_src2_channel;                                                                      // cmd_xbar_demux:src2_channel -> cmd_xbar_mux_002:sink0_channel
	wire          cmd_xbar_demux_src2_ready;                                                                        // cmd_xbar_mux_002:sink0_ready -> cmd_xbar_demux:src2_ready
	wire          cmd_xbar_demux_001_src0_endofpacket;                                                              // cmd_xbar_demux_001:src0_endofpacket -> cmd_xbar_mux:sink1_endofpacket
	wire          cmd_xbar_demux_001_src0_valid;                                                                    // cmd_xbar_demux_001:src0_valid -> cmd_xbar_mux:sink1_valid
	wire          cmd_xbar_demux_001_src0_startofpacket;                                                            // cmd_xbar_demux_001:src0_startofpacket -> cmd_xbar_mux:sink1_startofpacket
	wire   [99:0] cmd_xbar_demux_001_src0_data;                                                                     // cmd_xbar_demux_001:src0_data -> cmd_xbar_mux:sink1_data
	wire    [6:0] cmd_xbar_demux_001_src0_channel;                                                                  // cmd_xbar_demux_001:src0_channel -> cmd_xbar_mux:sink1_channel
	wire          cmd_xbar_demux_001_src0_ready;                                                                    // cmd_xbar_mux:sink1_ready -> cmd_xbar_demux_001:src0_ready
	wire          cmd_xbar_demux_001_src1_endofpacket;                                                              // cmd_xbar_demux_001:src1_endofpacket -> cmd_xbar_mux_001:sink1_endofpacket
	wire          cmd_xbar_demux_001_src1_valid;                                                                    // cmd_xbar_demux_001:src1_valid -> cmd_xbar_mux_001:sink1_valid
	wire          cmd_xbar_demux_001_src1_startofpacket;                                                            // cmd_xbar_demux_001:src1_startofpacket -> cmd_xbar_mux_001:sink1_startofpacket
	wire   [99:0] cmd_xbar_demux_001_src1_data;                                                                     // cmd_xbar_demux_001:src1_data -> cmd_xbar_mux_001:sink1_data
	wire    [6:0] cmd_xbar_demux_001_src1_channel;                                                                  // cmd_xbar_demux_001:src1_channel -> cmd_xbar_mux_001:sink1_channel
	wire          cmd_xbar_demux_001_src1_ready;                                                                    // cmd_xbar_mux_001:sink1_ready -> cmd_xbar_demux_001:src1_ready
	wire          cmd_xbar_demux_001_src2_endofpacket;                                                              // cmd_xbar_demux_001:src2_endofpacket -> cmd_xbar_mux_002:sink1_endofpacket
	wire          cmd_xbar_demux_001_src2_valid;                                                                    // cmd_xbar_demux_001:src2_valid -> cmd_xbar_mux_002:sink1_valid
	wire          cmd_xbar_demux_001_src2_startofpacket;                                                            // cmd_xbar_demux_001:src2_startofpacket -> cmd_xbar_mux_002:sink1_startofpacket
	wire   [99:0] cmd_xbar_demux_001_src2_data;                                                                     // cmd_xbar_demux_001:src2_data -> cmd_xbar_mux_002:sink1_data
	wire    [6:0] cmd_xbar_demux_001_src2_channel;                                                                  // cmd_xbar_demux_001:src2_channel -> cmd_xbar_mux_002:sink1_channel
	wire          cmd_xbar_demux_001_src2_ready;                                                                    // cmd_xbar_mux_002:sink1_ready -> cmd_xbar_demux_001:src2_ready
	wire          cmd_xbar_demux_001_src3_endofpacket;                                                              // cmd_xbar_demux_001:src3_endofpacket -> cmd_xbar_mux_003:sink0_endofpacket
	wire          cmd_xbar_demux_001_src3_valid;                                                                    // cmd_xbar_demux_001:src3_valid -> cmd_xbar_mux_003:sink0_valid
	wire          cmd_xbar_demux_001_src3_startofpacket;                                                            // cmd_xbar_demux_001:src3_startofpacket -> cmd_xbar_mux_003:sink0_startofpacket
	wire   [99:0] cmd_xbar_demux_001_src3_data;                                                                     // cmd_xbar_demux_001:src3_data -> cmd_xbar_mux_003:sink0_data
	wire    [6:0] cmd_xbar_demux_001_src3_channel;                                                                  // cmd_xbar_demux_001:src3_channel -> cmd_xbar_mux_003:sink0_channel
	wire          cmd_xbar_demux_001_src3_ready;                                                                    // cmd_xbar_mux_003:sink0_ready -> cmd_xbar_demux_001:src3_ready
	wire          cmd_xbar_demux_001_src4_endofpacket;                                                              // cmd_xbar_demux_001:src4_endofpacket -> cmd_xbar_mux_004:sink0_endofpacket
	wire          cmd_xbar_demux_001_src4_valid;                                                                    // cmd_xbar_demux_001:src4_valid -> cmd_xbar_mux_004:sink0_valid
	wire          cmd_xbar_demux_001_src4_startofpacket;                                                            // cmd_xbar_demux_001:src4_startofpacket -> cmd_xbar_mux_004:sink0_startofpacket
	wire   [99:0] cmd_xbar_demux_001_src4_data;                                                                     // cmd_xbar_demux_001:src4_data -> cmd_xbar_mux_004:sink0_data
	wire    [6:0] cmd_xbar_demux_001_src4_channel;                                                                  // cmd_xbar_demux_001:src4_channel -> cmd_xbar_mux_004:sink0_channel
	wire          cmd_xbar_demux_001_src4_ready;                                                                    // cmd_xbar_mux_004:sink0_ready -> cmd_xbar_demux_001:src4_ready
	wire          cmd_xbar_demux_001_src5_endofpacket;                                                              // cmd_xbar_demux_001:src5_endofpacket -> cmd_xbar_mux_005:sink0_endofpacket
	wire          cmd_xbar_demux_001_src5_valid;                                                                    // cmd_xbar_demux_001:src5_valid -> cmd_xbar_mux_005:sink0_valid
	wire          cmd_xbar_demux_001_src5_startofpacket;                                                            // cmd_xbar_demux_001:src5_startofpacket -> cmd_xbar_mux_005:sink0_startofpacket
	wire   [99:0] cmd_xbar_demux_001_src5_data;                                                                     // cmd_xbar_demux_001:src5_data -> cmd_xbar_mux_005:sink0_data
	wire    [6:0] cmd_xbar_demux_001_src5_channel;                                                                  // cmd_xbar_demux_001:src5_channel -> cmd_xbar_mux_005:sink0_channel
	wire          cmd_xbar_demux_001_src5_ready;                                                                    // cmd_xbar_mux_005:sink0_ready -> cmd_xbar_demux_001:src5_ready
	wire          cmd_xbar_demux_001_src6_endofpacket;                                                              // cmd_xbar_demux_001:src6_endofpacket -> cmd_xbar_mux_006:sink0_endofpacket
	wire          cmd_xbar_demux_001_src6_valid;                                                                    // cmd_xbar_demux_001:src6_valid -> cmd_xbar_mux_006:sink0_valid
	wire          cmd_xbar_demux_001_src6_startofpacket;                                                            // cmd_xbar_demux_001:src6_startofpacket -> cmd_xbar_mux_006:sink0_startofpacket
	wire   [99:0] cmd_xbar_demux_001_src6_data;                                                                     // cmd_xbar_demux_001:src6_data -> cmd_xbar_mux_006:sink0_data
	wire    [6:0] cmd_xbar_demux_001_src6_channel;                                                                  // cmd_xbar_demux_001:src6_channel -> cmd_xbar_mux_006:sink0_channel
	wire          cmd_xbar_demux_001_src6_ready;                                                                    // cmd_xbar_mux_006:sink0_ready -> cmd_xbar_demux_001:src6_ready
	wire          rsp_xbar_demux_src1_endofpacket;                                                                  // rsp_xbar_demux:src1_endofpacket -> rsp_xbar_mux_001:sink0_endofpacket
	wire          rsp_xbar_demux_src1_valid;                                                                        // rsp_xbar_demux:src1_valid -> rsp_xbar_mux_001:sink0_valid
	wire          rsp_xbar_demux_src1_startofpacket;                                                                // rsp_xbar_demux:src1_startofpacket -> rsp_xbar_mux_001:sink0_startofpacket
	wire   [99:0] rsp_xbar_demux_src1_data;                                                                         // rsp_xbar_demux:src1_data -> rsp_xbar_mux_001:sink0_data
	wire    [6:0] rsp_xbar_demux_src1_channel;                                                                      // rsp_xbar_demux:src1_channel -> rsp_xbar_mux_001:sink0_channel
	wire          rsp_xbar_demux_src1_ready;                                                                        // rsp_xbar_mux_001:sink0_ready -> rsp_xbar_demux:src1_ready
	wire          rsp_xbar_demux_001_src1_endofpacket;                                                              // rsp_xbar_demux_001:src1_endofpacket -> rsp_xbar_mux_001:sink1_endofpacket
	wire          rsp_xbar_demux_001_src1_valid;                                                                    // rsp_xbar_demux_001:src1_valid -> rsp_xbar_mux_001:sink1_valid
	wire          rsp_xbar_demux_001_src1_startofpacket;                                                            // rsp_xbar_demux_001:src1_startofpacket -> rsp_xbar_mux_001:sink1_startofpacket
	wire   [99:0] rsp_xbar_demux_001_src1_data;                                                                     // rsp_xbar_demux_001:src1_data -> rsp_xbar_mux_001:sink1_data
	wire    [6:0] rsp_xbar_demux_001_src1_channel;                                                                  // rsp_xbar_demux_001:src1_channel -> rsp_xbar_mux_001:sink1_channel
	wire          rsp_xbar_demux_001_src1_ready;                                                                    // rsp_xbar_mux_001:sink1_ready -> rsp_xbar_demux_001:src1_ready
	wire          rsp_xbar_demux_002_src0_endofpacket;                                                              // rsp_xbar_demux_002:src0_endofpacket -> rsp_xbar_mux:sink2_endofpacket
	wire          rsp_xbar_demux_002_src0_valid;                                                                    // rsp_xbar_demux_002:src0_valid -> rsp_xbar_mux:sink2_valid
	wire          rsp_xbar_demux_002_src0_startofpacket;                                                            // rsp_xbar_demux_002:src0_startofpacket -> rsp_xbar_mux:sink2_startofpacket
	wire   [99:0] rsp_xbar_demux_002_src0_data;                                                                     // rsp_xbar_demux_002:src0_data -> rsp_xbar_mux:sink2_data
	wire    [6:0] rsp_xbar_demux_002_src0_channel;                                                                  // rsp_xbar_demux_002:src0_channel -> rsp_xbar_mux:sink2_channel
	wire          rsp_xbar_demux_002_src0_ready;                                                                    // rsp_xbar_mux:sink2_ready -> rsp_xbar_demux_002:src0_ready
	wire          rsp_xbar_demux_002_src1_endofpacket;                                                              // rsp_xbar_demux_002:src1_endofpacket -> rsp_xbar_mux_001:sink2_endofpacket
	wire          rsp_xbar_demux_002_src1_valid;                                                                    // rsp_xbar_demux_002:src1_valid -> rsp_xbar_mux_001:sink2_valid
	wire          rsp_xbar_demux_002_src1_startofpacket;                                                            // rsp_xbar_demux_002:src1_startofpacket -> rsp_xbar_mux_001:sink2_startofpacket
	wire   [99:0] rsp_xbar_demux_002_src1_data;                                                                     // rsp_xbar_demux_002:src1_data -> rsp_xbar_mux_001:sink2_data
	wire    [6:0] rsp_xbar_demux_002_src1_channel;                                                                  // rsp_xbar_demux_002:src1_channel -> rsp_xbar_mux_001:sink2_channel
	wire          rsp_xbar_demux_002_src1_ready;                                                                    // rsp_xbar_mux_001:sink2_ready -> rsp_xbar_demux_002:src1_ready
	wire          rsp_xbar_demux_003_src0_endofpacket;                                                              // rsp_xbar_demux_003:src0_endofpacket -> rsp_xbar_mux_001:sink3_endofpacket
	wire          rsp_xbar_demux_003_src0_valid;                                                                    // rsp_xbar_demux_003:src0_valid -> rsp_xbar_mux_001:sink3_valid
	wire          rsp_xbar_demux_003_src0_startofpacket;                                                            // rsp_xbar_demux_003:src0_startofpacket -> rsp_xbar_mux_001:sink3_startofpacket
	wire   [99:0] rsp_xbar_demux_003_src0_data;                                                                     // rsp_xbar_demux_003:src0_data -> rsp_xbar_mux_001:sink3_data
	wire    [6:0] rsp_xbar_demux_003_src0_channel;                                                                  // rsp_xbar_demux_003:src0_channel -> rsp_xbar_mux_001:sink3_channel
	wire          rsp_xbar_demux_003_src0_ready;                                                                    // rsp_xbar_mux_001:sink3_ready -> rsp_xbar_demux_003:src0_ready
	wire          rsp_xbar_demux_004_src0_endofpacket;                                                              // rsp_xbar_demux_004:src0_endofpacket -> rsp_xbar_mux_001:sink4_endofpacket
	wire          rsp_xbar_demux_004_src0_valid;                                                                    // rsp_xbar_demux_004:src0_valid -> rsp_xbar_mux_001:sink4_valid
	wire          rsp_xbar_demux_004_src0_startofpacket;                                                            // rsp_xbar_demux_004:src0_startofpacket -> rsp_xbar_mux_001:sink4_startofpacket
	wire   [99:0] rsp_xbar_demux_004_src0_data;                                                                     // rsp_xbar_demux_004:src0_data -> rsp_xbar_mux_001:sink4_data
	wire    [6:0] rsp_xbar_demux_004_src0_channel;                                                                  // rsp_xbar_demux_004:src0_channel -> rsp_xbar_mux_001:sink4_channel
	wire          rsp_xbar_demux_004_src0_ready;                                                                    // rsp_xbar_mux_001:sink4_ready -> rsp_xbar_demux_004:src0_ready
	wire          rsp_xbar_demux_005_src0_endofpacket;                                                              // rsp_xbar_demux_005:src0_endofpacket -> rsp_xbar_mux_001:sink5_endofpacket
	wire          rsp_xbar_demux_005_src0_valid;                                                                    // rsp_xbar_demux_005:src0_valid -> rsp_xbar_mux_001:sink5_valid
	wire          rsp_xbar_demux_005_src0_startofpacket;                                                            // rsp_xbar_demux_005:src0_startofpacket -> rsp_xbar_mux_001:sink5_startofpacket
	wire   [99:0] rsp_xbar_demux_005_src0_data;                                                                     // rsp_xbar_demux_005:src0_data -> rsp_xbar_mux_001:sink5_data
	wire    [6:0] rsp_xbar_demux_005_src0_channel;                                                                  // rsp_xbar_demux_005:src0_channel -> rsp_xbar_mux_001:sink5_channel
	wire          rsp_xbar_demux_005_src0_ready;                                                                    // rsp_xbar_mux_001:sink5_ready -> rsp_xbar_demux_005:src0_ready
	wire          rsp_xbar_demux_006_src0_endofpacket;                                                              // rsp_xbar_demux_006:src0_endofpacket -> rsp_xbar_mux_001:sink6_endofpacket
	wire          rsp_xbar_demux_006_src0_valid;                                                                    // rsp_xbar_demux_006:src0_valid -> rsp_xbar_mux_001:sink6_valid
	wire          rsp_xbar_demux_006_src0_startofpacket;                                                            // rsp_xbar_demux_006:src0_startofpacket -> rsp_xbar_mux_001:sink6_startofpacket
	wire   [99:0] rsp_xbar_demux_006_src0_data;                                                                     // rsp_xbar_demux_006:src0_data -> rsp_xbar_mux_001:sink6_data
	wire    [6:0] rsp_xbar_demux_006_src0_channel;                                                                  // rsp_xbar_demux_006:src0_channel -> rsp_xbar_mux_001:sink6_channel
	wire          rsp_xbar_demux_006_src0_ready;                                                                    // rsp_xbar_mux_001:sink6_ready -> rsp_xbar_demux_006:src0_ready
	wire          id_router_002_src_endofpacket;                                                                    // id_router_002:src_endofpacket -> width_adapter:in_endofpacket
	wire          id_router_002_src_valid;                                                                          // id_router_002:src_valid -> width_adapter:in_valid
	wire          id_router_002_src_startofpacket;                                                                  // id_router_002:src_startofpacket -> width_adapter:in_startofpacket
	wire   [81:0] id_router_002_src_data;                                                                           // id_router_002:src_data -> width_adapter:in_data
	wire    [6:0] id_router_002_src_channel;                                                                        // id_router_002:src_channel -> width_adapter:in_channel
	wire          id_router_002_src_ready;                                                                          // width_adapter:in_ready -> id_router_002:src_ready
	wire          width_adapter_src_endofpacket;                                                                    // width_adapter:out_endofpacket -> rsp_xbar_demux_002:sink_endofpacket
	wire          width_adapter_src_valid;                                                                          // width_adapter:out_valid -> rsp_xbar_demux_002:sink_valid
	wire          width_adapter_src_startofpacket;                                                                  // width_adapter:out_startofpacket -> rsp_xbar_demux_002:sink_startofpacket
	wire   [99:0] width_adapter_src_data;                                                                           // width_adapter:out_data -> rsp_xbar_demux_002:sink_data
	wire          width_adapter_src_ready;                                                                          // rsp_xbar_demux_002:sink_ready -> width_adapter:out_ready
	wire    [6:0] width_adapter_src_channel;                                                                        // width_adapter:out_channel -> rsp_xbar_demux_002:sink_channel
	wire          cmd_xbar_mux_002_src_endofpacket;                                                                 // cmd_xbar_mux_002:src_endofpacket -> width_adapter_001:in_endofpacket
	wire          cmd_xbar_mux_002_src_valid;                                                                       // cmd_xbar_mux_002:src_valid -> width_adapter_001:in_valid
	wire          cmd_xbar_mux_002_src_startofpacket;                                                               // cmd_xbar_mux_002:src_startofpacket -> width_adapter_001:in_startofpacket
	wire   [99:0] cmd_xbar_mux_002_src_data;                                                                        // cmd_xbar_mux_002:src_data -> width_adapter_001:in_data
	wire    [6:0] cmd_xbar_mux_002_src_channel;                                                                     // cmd_xbar_mux_002:src_channel -> width_adapter_001:in_channel
	wire          cmd_xbar_mux_002_src_ready;                                                                       // width_adapter_001:in_ready -> cmd_xbar_mux_002:src_ready
	wire          width_adapter_001_src_endofpacket;                                                                // width_adapter_001:out_endofpacket -> burst_adapter:sink0_endofpacket
	wire          width_adapter_001_src_valid;                                                                      // width_adapter_001:out_valid -> burst_adapter:sink0_valid
	wire          width_adapter_001_src_startofpacket;                                                              // width_adapter_001:out_startofpacket -> burst_adapter:sink0_startofpacket
	wire   [81:0] width_adapter_001_src_data;                                                                       // width_adapter_001:out_data -> burst_adapter:sink0_data
	wire          width_adapter_001_src_ready;                                                                      // burst_adapter:sink0_ready -> width_adapter_001:out_ready
	wire    [6:0] width_adapter_001_src_channel;                                                                    // width_adapter_001:out_channel -> burst_adapter:sink0_channel
	wire          cmd_xbar_mux_001_src_endofpacket;                                                                 // cmd_xbar_mux_001:src_endofpacket -> pipeline_stage:in_endofpacket
	wire          cmd_xbar_mux_001_src_valid;                                                                       // cmd_xbar_mux_001:src_valid -> pipeline_stage:in_valid
	wire          cmd_xbar_mux_001_src_startofpacket;                                                               // cmd_xbar_mux_001:src_startofpacket -> pipeline_stage:in_startofpacket
	wire   [99:0] cmd_xbar_mux_001_src_data;                                                                        // cmd_xbar_mux_001:src_data -> pipeline_stage:in_data
	wire    [6:0] cmd_xbar_mux_001_src_channel;                                                                     // cmd_xbar_mux_001:src_channel -> pipeline_stage:in_channel
	wire          cmd_xbar_mux_001_src_ready;                                                                       // pipeline_stage:in_ready -> cmd_xbar_mux_001:src_ready
	wire          pipeline_stage_source0_endofpacket;                                                               // pipeline_stage:out_endofpacket -> onchip_ram_s1_translator_avalon_universal_slave_0_agent:cp_endofpacket
	wire          pipeline_stage_source0_valid;                                                                     // pipeline_stage:out_valid -> onchip_ram_s1_translator_avalon_universal_slave_0_agent:cp_valid
	wire          pipeline_stage_source0_startofpacket;                                                             // pipeline_stage:out_startofpacket -> onchip_ram_s1_translator_avalon_universal_slave_0_agent:cp_startofpacket
	wire   [99:0] pipeline_stage_source0_data;                                                                      // pipeline_stage:out_data -> onchip_ram_s1_translator_avalon_universal_slave_0_agent:cp_data
	wire    [6:0] pipeline_stage_source0_channel;                                                                   // pipeline_stage:out_channel -> onchip_ram_s1_translator_avalon_universal_slave_0_agent:cp_channel
	wire          pipeline_stage_source0_ready;                                                                     // onchip_ram_s1_translator_avalon_universal_slave_0_agent:cp_ready -> pipeline_stage:out_ready
	wire          burst_adapter_source0_endofpacket;                                                                // burst_adapter:source0_endofpacket -> pipeline_stage_001:in_endofpacket
	wire          burst_adapter_source0_valid;                                                                      // burst_adapter:source0_valid -> pipeline_stage_001:in_valid
	wire          burst_adapter_source0_startofpacket;                                                              // burst_adapter:source0_startofpacket -> pipeline_stage_001:in_startofpacket
	wire   [81:0] burst_adapter_source0_data;                                                                       // burst_adapter:source0_data -> pipeline_stage_001:in_data
	wire          burst_adapter_source0_ready;                                                                      // pipeline_stage_001:in_ready -> burst_adapter:source0_ready
	wire    [6:0] burst_adapter_source0_channel;                                                                    // burst_adapter:source0_channel -> pipeline_stage_001:in_channel
	wire          pipeline_stage_001_source0_endofpacket;                                                           // pipeline_stage_001:out_endofpacket -> sdram_s1_translator_avalon_universal_slave_0_agent:cp_endofpacket
	wire          pipeline_stage_001_source0_valid;                                                                 // pipeline_stage_001:out_valid -> sdram_s1_translator_avalon_universal_slave_0_agent:cp_valid
	wire          pipeline_stage_001_source0_startofpacket;                                                         // pipeline_stage_001:out_startofpacket -> sdram_s1_translator_avalon_universal_slave_0_agent:cp_startofpacket
	wire   [81:0] pipeline_stage_001_source0_data;                                                                  // pipeline_stage_001:out_data -> sdram_s1_translator_avalon_universal_slave_0_agent:cp_data
	wire    [6:0] pipeline_stage_001_source0_channel;                                                               // pipeline_stage_001:out_channel -> sdram_s1_translator_avalon_universal_slave_0_agent:cp_channel
	wire          pipeline_stage_001_source0_ready;                                                                 // sdram_s1_translator_avalon_universal_slave_0_agent:cp_ready -> pipeline_stage_001:out_ready
	wire          rsp_xbar_demux_001_src0_endofpacket;                                                              // rsp_xbar_demux_001:src0_endofpacket -> pipeline_stage_002:in_endofpacket
	wire          rsp_xbar_demux_001_src0_valid;                                                                    // rsp_xbar_demux_001:src0_valid -> pipeline_stage_002:in_valid
	wire          rsp_xbar_demux_001_src0_startofpacket;                                                            // rsp_xbar_demux_001:src0_startofpacket -> pipeline_stage_002:in_startofpacket
	wire   [99:0] rsp_xbar_demux_001_src0_data;                                                                     // rsp_xbar_demux_001:src0_data -> pipeline_stage_002:in_data
	wire    [6:0] rsp_xbar_demux_001_src0_channel;                                                                  // rsp_xbar_demux_001:src0_channel -> pipeline_stage_002:in_channel
	wire          rsp_xbar_demux_001_src0_ready;                                                                    // pipeline_stage_002:in_ready -> rsp_xbar_demux_001:src0_ready
	wire          pipeline_stage_002_source0_endofpacket;                                                           // pipeline_stage_002:out_endofpacket -> rsp_xbar_mux:sink1_endofpacket
	wire          pipeline_stage_002_source0_valid;                                                                 // pipeline_stage_002:out_valid -> rsp_xbar_mux:sink1_valid
	wire          pipeline_stage_002_source0_startofpacket;                                                         // pipeline_stage_002:out_startofpacket -> rsp_xbar_mux:sink1_startofpacket
	wire   [99:0] pipeline_stage_002_source0_data;                                                                  // pipeline_stage_002:out_data -> rsp_xbar_mux:sink1_data
	wire    [6:0] pipeline_stage_002_source0_channel;                                                               // pipeline_stage_002:out_channel -> rsp_xbar_mux:sink1_channel
	wire          pipeline_stage_002_source0_ready;                                                                 // rsp_xbar_mux:sink1_ready -> pipeline_stage_002:out_ready
	wire          rsp_xbar_demux_src0_endofpacket;                                                                  // rsp_xbar_demux:src0_endofpacket -> pipeline_stage_003:in_endofpacket
	wire          rsp_xbar_demux_src0_valid;                                                                        // rsp_xbar_demux:src0_valid -> pipeline_stage_003:in_valid
	wire          rsp_xbar_demux_src0_startofpacket;                                                                // rsp_xbar_demux:src0_startofpacket -> pipeline_stage_003:in_startofpacket
	wire   [99:0] rsp_xbar_demux_src0_data;                                                                         // rsp_xbar_demux:src0_data -> pipeline_stage_003:in_data
	wire    [6:0] rsp_xbar_demux_src0_channel;                                                                      // rsp_xbar_demux:src0_channel -> pipeline_stage_003:in_channel
	wire          rsp_xbar_demux_src0_ready;                                                                        // pipeline_stage_003:in_ready -> rsp_xbar_demux:src0_ready
	wire          pipeline_stage_003_source0_endofpacket;                                                           // pipeline_stage_003:out_endofpacket -> rsp_xbar_mux:sink0_endofpacket
	wire          pipeline_stage_003_source0_valid;                                                                 // pipeline_stage_003:out_valid -> rsp_xbar_mux:sink0_valid
	wire          pipeline_stage_003_source0_startofpacket;                                                         // pipeline_stage_003:out_startofpacket -> rsp_xbar_mux:sink0_startofpacket
	wire   [99:0] pipeline_stage_003_source0_data;                                                                  // pipeline_stage_003:out_data -> rsp_xbar_mux:sink0_data
	wire    [6:0] pipeline_stage_003_source0_channel;                                                               // pipeline_stage_003:out_channel -> rsp_xbar_mux:sink0_channel
	wire          pipeline_stage_003_source0_ready;                                                                 // rsp_xbar_mux:sink0_ready -> pipeline_stage_003:out_ready
	wire          sdram_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket;                                // sdram_s1_translator_avalon_universal_slave_0_agent:rp_endofpacket -> pipeline_stage_004:in_endofpacket
	wire          sdram_s1_translator_avalon_universal_slave_0_agent_rp_valid;                                      // sdram_s1_translator_avalon_universal_slave_0_agent:rp_valid -> pipeline_stage_004:in_valid
	wire          sdram_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket;                              // sdram_s1_translator_avalon_universal_slave_0_agent:rp_startofpacket -> pipeline_stage_004:in_startofpacket
	wire   [81:0] sdram_s1_translator_avalon_universal_slave_0_agent_rp_data;                                       // sdram_s1_translator_avalon_universal_slave_0_agent:rp_data -> pipeline_stage_004:in_data
	wire          sdram_s1_translator_avalon_universal_slave_0_agent_rp_ready;                                      // pipeline_stage_004:in_ready -> sdram_s1_translator_avalon_universal_slave_0_agent:rp_ready
	wire          pipeline_stage_004_source0_endofpacket;                                                           // pipeline_stage_004:out_endofpacket -> id_router_002:sink_endofpacket
	wire          pipeline_stage_004_source0_valid;                                                                 // pipeline_stage_004:out_valid -> id_router_002:sink_valid
	wire          pipeline_stage_004_source0_startofpacket;                                                         // pipeline_stage_004:out_startofpacket -> id_router_002:sink_startofpacket
	wire   [81:0] pipeline_stage_004_source0_data;                                                                  // pipeline_stage_004:out_data -> id_router_002:sink_data
	wire          pipeline_stage_004_source0_ready;                                                                 // id_router_002:sink_ready -> pipeline_stage_004:out_ready
	wire          id_router_003_src_endofpacket;                                                                    // id_router_003:src_endofpacket -> pipeline_stage_005:in_endofpacket
	wire          id_router_003_src_valid;                                                                          // id_router_003:src_valid -> pipeline_stage_005:in_valid
	wire          id_router_003_src_startofpacket;                                                                  // id_router_003:src_startofpacket -> pipeline_stage_005:in_startofpacket
	wire   [99:0] id_router_003_src_data;                                                                           // id_router_003:src_data -> pipeline_stage_005:in_data
	wire    [6:0] id_router_003_src_channel;                                                                        // id_router_003:src_channel -> pipeline_stage_005:in_channel
	wire          id_router_003_src_ready;                                                                          // pipeline_stage_005:in_ready -> id_router_003:src_ready
	wire          pipeline_stage_005_source0_endofpacket;                                                           // pipeline_stage_005:out_endofpacket -> rsp_xbar_demux_003:sink_endofpacket
	wire          pipeline_stage_005_source0_valid;                                                                 // pipeline_stage_005:out_valid -> rsp_xbar_demux_003:sink_valid
	wire          pipeline_stage_005_source0_startofpacket;                                                         // pipeline_stage_005:out_startofpacket -> rsp_xbar_demux_003:sink_startofpacket
	wire   [99:0] pipeline_stage_005_source0_data;                                                                  // pipeline_stage_005:out_data -> rsp_xbar_demux_003:sink_data
	wire    [6:0] pipeline_stage_005_source0_channel;                                                               // pipeline_stage_005:out_channel -> rsp_xbar_demux_003:sink_channel
	wire          pipeline_stage_005_source0_ready;                                                                 // rsp_xbar_demux_003:sink_ready -> pipeline_stage_005:out_ready

	altera_merlin_master_translator #(
		.AV_ADDRESS_W                (24),
		.AV_DATA_W                   (32),
		.AV_BURSTCOUNT_W             (1),
		.AV_BYTEENABLE_W             (4),
		.UAV_ADDRESS_W               (24),
		.UAV_BURSTCOUNT_W            (3),
		.USE_READ                    (1),
		.USE_WRITE                   (0),
		.USE_BEGINBURSTTRANSFER      (0),
		.USE_BEGINTRANSFER           (0),
		.USE_CHIPSELECT              (0),
		.USE_BURSTCOUNT              (0),
		.USE_READDATAVALID           (0),
		.USE_WAITREQUEST             (1),
		.USE_READRESPONSE            (0),
		.USE_WRITERESPONSE           (0),
		.AV_SYMBOLS_PER_WORD         (4),
		.AV_ADDRESS_SYMBOLS          (1),
		.AV_BURSTCOUNT_SYMBOLS       (0),
		.AV_CONSTANT_BURST_BEHAVIOR  (0),
		.UAV_CONSTANT_BURST_BEHAVIOR (0),
		.AV_LINEWRAPBURSTS           (1),
		.AV_REGISTERINCOMINGSIGNALS  (0)
	) nios_instruction_master_translator (
		.clk                      (clock_clk_clk),                                                              //                       clk.clk
		.reset                    (NIOS_reset_n_reset_bridge_in_reset_reset),                                   //                     reset.reset
		.uav_address              (nios_instruction_master_translator_avalon_universal_master_0_address),       // avalon_universal_master_0.address
		.uav_burstcount           (nios_instruction_master_translator_avalon_universal_master_0_burstcount),    //                          .burstcount
		.uav_read                 (nios_instruction_master_translator_avalon_universal_master_0_read),          //                          .read
		.uav_write                (nios_instruction_master_translator_avalon_universal_master_0_write),         //                          .write
		.uav_waitrequest          (nios_instruction_master_translator_avalon_universal_master_0_waitrequest),   //                          .waitrequest
		.uav_readdatavalid        (nios_instruction_master_translator_avalon_universal_master_0_readdatavalid), //                          .readdatavalid
		.uav_byteenable           (nios_instruction_master_translator_avalon_universal_master_0_byteenable),    //                          .byteenable
		.uav_readdata             (nios_instruction_master_translator_avalon_universal_master_0_readdata),      //                          .readdata
		.uav_writedata            (nios_instruction_master_translator_avalon_universal_master_0_writedata),     //                          .writedata
		.uav_lock                 (nios_instruction_master_translator_avalon_universal_master_0_lock),          //                          .lock
		.uav_debugaccess          (nios_instruction_master_translator_avalon_universal_master_0_debugaccess),   //                          .debugaccess
		.av_address               (NIOS_instruction_master_address),                                            //      avalon_anti_master_0.address
		.av_waitrequest           (NIOS_instruction_master_waitrequest),                                        //                          .waitrequest
		.av_read                  (NIOS_instruction_master_read),                                               //                          .read
		.av_readdata              (NIOS_instruction_master_readdata),                                           //                          .readdata
		.av_burstcount            (1'b1),                                                                       //               (terminated)
		.av_byteenable            (4'b1111),                                                                    //               (terminated)
		.av_beginbursttransfer    (1'b0),                                                                       //               (terminated)
		.av_begintransfer         (1'b0),                                                                       //               (terminated)
		.av_chipselect            (1'b0),                                                                       //               (terminated)
		.av_readdatavalid         (),                                                                           //               (terminated)
		.av_write                 (1'b0),                                                                       //               (terminated)
		.av_writedata             (32'b00000000000000000000000000000000),                                       //               (terminated)
		.av_lock                  (1'b0),                                                                       //               (terminated)
		.av_debugaccess           (1'b0),                                                                       //               (terminated)
		.uav_clken                (),                                                                           //               (terminated)
		.av_clken                 (1'b1),                                                                       //               (terminated)
		.uav_response             (2'b00),                                                                      //               (terminated)
		.av_response              (),                                                                           //               (terminated)
		.uav_writeresponserequest (),                                                                           //               (terminated)
		.uav_writeresponsevalid   (1'b0),                                                                       //               (terminated)
		.av_writeresponserequest  (1'b0),                                                                       //               (terminated)
		.av_writeresponsevalid    ()                                                                            //               (terminated)
	);

	altera_merlin_master_translator #(
		.AV_ADDRESS_W                (24),
		.AV_DATA_W                   (32),
		.AV_BURSTCOUNT_W             (1),
		.AV_BYTEENABLE_W             (4),
		.UAV_ADDRESS_W               (24),
		.UAV_BURSTCOUNT_W            (3),
		.USE_READ                    (1),
		.USE_WRITE                   (1),
		.USE_BEGINBURSTTRANSFER      (0),
		.USE_BEGINTRANSFER           (0),
		.USE_CHIPSELECT              (0),
		.USE_BURSTCOUNT              (0),
		.USE_READDATAVALID           (0),
		.USE_WAITREQUEST             (1),
		.USE_READRESPONSE            (0),
		.USE_WRITERESPONSE           (0),
		.AV_SYMBOLS_PER_WORD         (4),
		.AV_ADDRESS_SYMBOLS          (1),
		.AV_BURSTCOUNT_SYMBOLS       (0),
		.AV_CONSTANT_BURST_BEHAVIOR  (0),
		.UAV_CONSTANT_BURST_BEHAVIOR (0),
		.AV_LINEWRAPBURSTS           (0),
		.AV_REGISTERINCOMINGSIGNALS  (1)
	) nios_data_master_translator (
		.clk                      (clock_clk_clk),                                                       //                       clk.clk
		.reset                    (NIOS_reset_n_reset_bridge_in_reset_reset),                            //                     reset.reset
		.uav_address              (nios_data_master_translator_avalon_universal_master_0_address),       // avalon_universal_master_0.address
		.uav_burstcount           (nios_data_master_translator_avalon_universal_master_0_burstcount),    //                          .burstcount
		.uav_read                 (nios_data_master_translator_avalon_universal_master_0_read),          //                          .read
		.uav_write                (nios_data_master_translator_avalon_universal_master_0_write),         //                          .write
		.uav_waitrequest          (nios_data_master_translator_avalon_universal_master_0_waitrequest),   //                          .waitrequest
		.uav_readdatavalid        (nios_data_master_translator_avalon_universal_master_0_readdatavalid), //                          .readdatavalid
		.uav_byteenable           (nios_data_master_translator_avalon_universal_master_0_byteenable),    //                          .byteenable
		.uav_readdata             (nios_data_master_translator_avalon_universal_master_0_readdata),      //                          .readdata
		.uav_writedata            (nios_data_master_translator_avalon_universal_master_0_writedata),     //                          .writedata
		.uav_lock                 (nios_data_master_translator_avalon_universal_master_0_lock),          //                          .lock
		.uav_debugaccess          (nios_data_master_translator_avalon_universal_master_0_debugaccess),   //                          .debugaccess
		.av_address               (NIOS_data_master_address),                                            //      avalon_anti_master_0.address
		.av_waitrequest           (NIOS_data_master_waitrequest),                                        //                          .waitrequest
		.av_byteenable            (NIOS_data_master_byteenable),                                         //                          .byteenable
		.av_read                  (NIOS_data_master_read),                                               //                          .read
		.av_readdata              (NIOS_data_master_readdata),                                           //                          .readdata
		.av_write                 (NIOS_data_master_write),                                              //                          .write
		.av_writedata             (NIOS_data_master_writedata),                                          //                          .writedata
		.av_debugaccess           (NIOS_data_master_debugaccess),                                        //                          .debugaccess
		.av_burstcount            (1'b1),                                                                //               (terminated)
		.av_beginbursttransfer    (1'b0),                                                                //               (terminated)
		.av_begintransfer         (1'b0),                                                                //               (terminated)
		.av_chipselect            (1'b0),                                                                //               (terminated)
		.av_readdatavalid         (),                                                                    //               (terminated)
		.av_lock                  (1'b0),                                                                //               (terminated)
		.uav_clken                (),                                                                    //               (terminated)
		.av_clken                 (1'b1),                                                                //               (terminated)
		.uav_response             (2'b00),                                                               //               (terminated)
		.av_response              (),                                                                    //               (terminated)
		.uav_writeresponserequest (),                                                                    //               (terminated)
		.uav_writeresponsevalid   (1'b0),                                                                //               (terminated)
		.av_writeresponserequest  (1'b0),                                                                //               (terminated)
		.av_writeresponsevalid    ()                                                                     //               (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (9),
		.AV_DATA_W                      (32),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (4),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (24),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (1),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) nios_jtag_debug_module_translator (
		.clk                      (clock_clk_clk),                                                                     //                      clk.clk
		.reset                    (NIOS_reset_n_reset_bridge_in_reset_reset),                                          //                    reset.reset
		.uav_address              (nios_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount           (nios_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_burstcount),    //                         .burstcount
		.uav_read                 (nios_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_read),          //                         .read
		.uav_write                (nios_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_write),         //                         .write
		.uav_waitrequest          (nios_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid        (nios_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable           (nios_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata             (nios_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_readdata),      //                         .readdata
		.uav_writedata            (nios_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_writedata),     //                         .writedata
		.uav_lock                 (nios_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_lock),          //                         .lock
		.uav_debugaccess          (nios_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_debugaccess),   //                         .debugaccess
		.av_address               (NIOS_jtag_debug_module_address),                                                    //      avalon_anti_slave_0.address
		.av_write                 (NIOS_jtag_debug_module_write),                                                      //                         .write
		.av_read                  (NIOS_jtag_debug_module_read),                                                       //                         .read
		.av_readdata              (NIOS_jtag_debug_module_readdata),                                                   //                         .readdata
		.av_writedata             (NIOS_jtag_debug_module_writedata),                                                  //                         .writedata
		.av_byteenable            (NIOS_jtag_debug_module_byteenable),                                                 //                         .byteenable
		.av_waitrequest           (NIOS_jtag_debug_module_waitrequest),                                                //                         .waitrequest
		.av_debugaccess           (NIOS_jtag_debug_module_debugaccess),                                                //                         .debugaccess
		.av_begintransfer         (),                                                                                  //              (terminated)
		.av_beginbursttransfer    (),                                                                                  //              (terminated)
		.av_burstcount            (),                                                                                  //              (terminated)
		.av_readdatavalid         (1'b0),                                                                              //              (terminated)
		.av_writebyteenable       (),                                                                                  //              (terminated)
		.av_lock                  (),                                                                                  //              (terminated)
		.av_chipselect            (),                                                                                  //              (terminated)
		.av_clken                 (),                                                                                  //              (terminated)
		.uav_clken                (1'b0),                                                                              //              (terminated)
		.av_outputenable          (),                                                                                  //              (terminated)
		.uav_response             (),                                                                                  //              (terminated)
		.av_response              (2'b00),                                                                             //              (terminated)
		.uav_writeresponserequest (1'b0),                                                                              //              (terminated)
		.uav_writeresponsevalid   (),                                                                                  //              (terminated)
		.av_writeresponserequest  (),                                                                                  //              (terminated)
		.av_writeresponsevalid    (1'b0)                                                                               //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (12),
		.AV_DATA_W                      (32),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (4),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (24),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (1),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (0),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (0),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) onchip_ram_s1_translator (
		.clk                      (clock_clk_clk),                                                            //                      clk.clk
		.reset                    (NIOS_reset_n_reset_bridge_in_reset_reset),                                 //                    reset.reset
		.uav_address              (onchip_ram_s1_translator_avalon_universal_slave_0_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount           (onchip_ram_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),    //                         .burstcount
		.uav_read                 (onchip_ram_s1_translator_avalon_universal_slave_0_agent_m0_read),          //                         .read
		.uav_write                (onchip_ram_s1_translator_avalon_universal_slave_0_agent_m0_write),         //                         .write
		.uav_waitrequest          (onchip_ram_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid        (onchip_ram_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable           (onchip_ram_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata             (onchip_ram_s1_translator_avalon_universal_slave_0_agent_m0_readdata),      //                         .readdata
		.uav_writedata            (onchip_ram_s1_translator_avalon_universal_slave_0_agent_m0_writedata),     //                         .writedata
		.uav_lock                 (onchip_ram_s1_translator_avalon_universal_slave_0_agent_m0_lock),          //                         .lock
		.uav_debugaccess          (onchip_ram_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),   //                         .debugaccess
		.av_address               (onchip_ram_s1_address),                                                    //      avalon_anti_slave_0.address
		.av_write                 (onchip_ram_s1_write),                                                      //                         .write
		.av_readdata              (onchip_ram_s1_readdata),                                                   //                         .readdata
		.av_writedata             (onchip_ram_s1_writedata),                                                  //                         .writedata
		.av_byteenable            (onchip_ram_s1_byteenable),                                                 //                         .byteenable
		.av_chipselect            (onchip_ram_s1_chipselect),                                                 //                         .chipselect
		.av_clken                 (onchip_ram_s1_clken),                                                      //                         .clken
		.av_read                  (),                                                                         //              (terminated)
		.av_begintransfer         (),                                                                         //              (terminated)
		.av_beginbursttransfer    (),                                                                         //              (terminated)
		.av_burstcount            (),                                                                         //              (terminated)
		.av_readdatavalid         (1'b0),                                                                     //              (terminated)
		.av_waitrequest           (1'b0),                                                                     //              (terminated)
		.av_writebyteenable       (),                                                                         //              (terminated)
		.av_lock                  (),                                                                         //              (terminated)
		.uav_clken                (1'b0),                                                                     //              (terminated)
		.av_debugaccess           (),                                                                         //              (terminated)
		.av_outputenable          (),                                                                         //              (terminated)
		.uav_response             (),                                                                         //              (terminated)
		.av_response              (2'b00),                                                                    //              (terminated)
		.uav_writeresponserequest (1'b0),                                                                     //              (terminated)
		.uav_writeresponsevalid   (),                                                                         //              (terminated)
		.av_writeresponserequest  (),                                                                         //              (terminated)
		.av_writeresponsevalid    (1'b0)                                                                      //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (22),
		.AV_DATA_W                      (16),
		.UAV_DATA_W                     (16),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (2),
		.UAV_BYTEENABLE_W               (2),
		.UAV_ADDRESS_W                  (24),
		.UAV_BURSTCOUNT_W               (2),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (1),
		.USE_WAITREQUEST                (1),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (2),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) sdram_s1_translator (
		.clk                      (clock_clk_clk),                                                       //                      clk.clk
		.reset                    (NIOS_reset_n_reset_bridge_in_reset_reset),                            //                    reset.reset
		.uav_address              (sdram_s1_translator_avalon_universal_slave_0_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount           (sdram_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),    //                         .burstcount
		.uav_read                 (sdram_s1_translator_avalon_universal_slave_0_agent_m0_read),          //                         .read
		.uav_write                (sdram_s1_translator_avalon_universal_slave_0_agent_m0_write),         //                         .write
		.uav_waitrequest          (sdram_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid        (sdram_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable           (sdram_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata             (sdram_s1_translator_avalon_universal_slave_0_agent_m0_readdata),      //                         .readdata
		.uav_writedata            (sdram_s1_translator_avalon_universal_slave_0_agent_m0_writedata),     //                         .writedata
		.uav_lock                 (sdram_s1_translator_avalon_universal_slave_0_agent_m0_lock),          //                         .lock
		.uav_debugaccess          (sdram_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),   //                         .debugaccess
		.av_address               (sdram_s1_address),                                                    //      avalon_anti_slave_0.address
		.av_write                 (sdram_s1_write),                                                      //                         .write
		.av_read                  (sdram_s1_read),                                                       //                         .read
		.av_readdata              (sdram_s1_readdata),                                                   //                         .readdata
		.av_writedata             (sdram_s1_writedata),                                                  //                         .writedata
		.av_byteenable            (sdram_s1_byteenable),                                                 //                         .byteenable
		.av_readdatavalid         (sdram_s1_readdatavalid),                                              //                         .readdatavalid
		.av_waitrequest           (sdram_s1_waitrequest),                                                //                         .waitrequest
		.av_chipselect            (sdram_s1_chipselect),                                                 //                         .chipselect
		.av_begintransfer         (),                                                                    //              (terminated)
		.av_beginbursttransfer    (),                                                                    //              (terminated)
		.av_burstcount            (),                                                                    //              (terminated)
		.av_writebyteenable       (),                                                                    //              (terminated)
		.av_lock                  (),                                                                    //              (terminated)
		.av_clken                 (),                                                                    //              (terminated)
		.uav_clken                (1'b0),                                                                //              (terminated)
		.av_debugaccess           (),                                                                    //              (terminated)
		.av_outputenable          (),                                                                    //              (terminated)
		.uav_response             (),                                                                    //              (terminated)
		.av_response              (2'b00),                                                               //              (terminated)
		.uav_writeresponserequest (1'b0),                                                                //              (terminated)
		.uav_writeresponsevalid   (),                                                                    //              (terminated)
		.av_writeresponserequest  (),                                                                    //              (terminated)
		.av_writeresponsevalid    (1'b0)                                                                 //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (1),
		.AV_DATA_W                      (32),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (1),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (24),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (1),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) jtag_uart_avalon_jtag_slave_translator (
		.clk                      (clock_clk_clk),                                                                          //                      clk.clk
		.reset                    (NIOS_reset_n_reset_bridge_in_reset_reset),                                               //                    reset.reset
		.uav_address              (jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount           (jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_burstcount),    //                         .burstcount
		.uav_read                 (jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_read),          //                         .read
		.uav_write                (jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_write),         //                         .write
		.uav_waitrequest          (jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid        (jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable           (jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata             (jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_readdata),      //                         .readdata
		.uav_writedata            (jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_writedata),     //                         .writedata
		.uav_lock                 (jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_lock),          //                         .lock
		.uav_debugaccess          (jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_debugaccess),   //                         .debugaccess
		.av_address               (jtag_uart_avalon_jtag_slave_address),                                                    //      avalon_anti_slave_0.address
		.av_write                 (jtag_uart_avalon_jtag_slave_write),                                                      //                         .write
		.av_read                  (jtag_uart_avalon_jtag_slave_read),                                                       //                         .read
		.av_readdata              (jtag_uart_avalon_jtag_slave_readdata),                                                   //                         .readdata
		.av_writedata             (jtag_uart_avalon_jtag_slave_writedata),                                                  //                         .writedata
		.av_waitrequest           (jtag_uart_avalon_jtag_slave_waitrequest),                                                //                         .waitrequest
		.av_chipselect            (jtag_uart_avalon_jtag_slave_chipselect),                                                 //                         .chipselect
		.av_begintransfer         (),                                                                                       //              (terminated)
		.av_beginbursttransfer    (),                                                                                       //              (terminated)
		.av_burstcount            (),                                                                                       //              (terminated)
		.av_byteenable            (),                                                                                       //              (terminated)
		.av_readdatavalid         (1'b0),                                                                                   //              (terminated)
		.av_writebyteenable       (),                                                                                       //              (terminated)
		.av_lock                  (),                                                                                       //              (terminated)
		.av_clken                 (),                                                                                       //              (terminated)
		.uav_clken                (1'b0),                                                                                   //              (terminated)
		.av_debugaccess           (),                                                                                       //              (terminated)
		.av_outputenable          (),                                                                                       //              (terminated)
		.uav_response             (),                                                                                       //              (terminated)
		.av_response              (2'b00),                                                                                  //              (terminated)
		.uav_writeresponserequest (1'b0),                                                                                   //              (terminated)
		.uav_writeresponsevalid   (),                                                                                       //              (terminated)
		.av_writeresponserequest  (),                                                                                       //              (terminated)
		.av_writeresponsevalid    (1'b0)                                                                                    //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (2),
		.AV_DATA_W                      (32),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (1),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (24),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (0),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) phase_increment_s1_translator (
		.clk                      (clock_clk_clk),                                                                 //                      clk.clk
		.reset                    (NIOS_reset_n_reset_bridge_in_reset_reset),                                      //                    reset.reset
		.uav_address              (phase_increment_s1_translator_avalon_universal_slave_0_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount           (phase_increment_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),    //                         .burstcount
		.uav_read                 (phase_increment_s1_translator_avalon_universal_slave_0_agent_m0_read),          //                         .read
		.uav_write                (phase_increment_s1_translator_avalon_universal_slave_0_agent_m0_write),         //                         .write
		.uav_waitrequest          (phase_increment_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid        (phase_increment_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable           (phase_increment_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata             (phase_increment_s1_translator_avalon_universal_slave_0_agent_m0_readdata),      //                         .readdata
		.uav_writedata            (phase_increment_s1_translator_avalon_universal_slave_0_agent_m0_writedata),     //                         .writedata
		.uav_lock                 (phase_increment_s1_translator_avalon_universal_slave_0_agent_m0_lock),          //                         .lock
		.uav_debugaccess          (phase_increment_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),   //                         .debugaccess
		.av_address               (phase_increment_s1_address),                                                    //      avalon_anti_slave_0.address
		.av_write                 (phase_increment_s1_write),                                                      //                         .write
		.av_readdata              (phase_increment_s1_readdata),                                                   //                         .readdata
		.av_writedata             (phase_increment_s1_writedata),                                                  //                         .writedata
		.av_chipselect            (phase_increment_s1_chipselect),                                                 //                         .chipselect
		.av_read                  (),                                                                              //              (terminated)
		.av_begintransfer         (),                                                                              //              (terminated)
		.av_beginbursttransfer    (),                                                                              //              (terminated)
		.av_burstcount            (),                                                                              //              (terminated)
		.av_byteenable            (),                                                                              //              (terminated)
		.av_readdatavalid         (1'b0),                                                                          //              (terminated)
		.av_waitrequest           (1'b0),                                                                          //              (terminated)
		.av_writebyteenable       (),                                                                              //              (terminated)
		.av_lock                  (),                                                                              //              (terminated)
		.av_clken                 (),                                                                              //              (terminated)
		.uav_clken                (1'b0),                                                                          //              (terminated)
		.av_debugaccess           (),                                                                              //              (terminated)
		.av_outputenable          (),                                                                              //              (terminated)
		.uav_response             (),                                                                              //              (terminated)
		.av_response              (2'b00),                                                                         //              (terminated)
		.uav_writeresponserequest (1'b0),                                                                          //              (terminated)
		.uav_writeresponsevalid   (),                                                                              //              (terminated)
		.av_writeresponserequest  (),                                                                              //              (terminated)
		.av_writeresponsevalid    (1'b0)                                                                           //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (2),
		.AV_DATA_W                      (32),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (1),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (24),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (0),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) cic_gain_s1_translator (
		.clk                      (clock_clk_clk),                                                          //                      clk.clk
		.reset                    (NIOS_reset_n_reset_bridge_in_reset_reset),                               //                    reset.reset
		.uav_address              (cic_gain_s1_translator_avalon_universal_slave_0_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount           (cic_gain_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),    //                         .burstcount
		.uav_read                 (cic_gain_s1_translator_avalon_universal_slave_0_agent_m0_read),          //                         .read
		.uav_write                (cic_gain_s1_translator_avalon_universal_slave_0_agent_m0_write),         //                         .write
		.uav_waitrequest          (cic_gain_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid        (cic_gain_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable           (cic_gain_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata             (cic_gain_s1_translator_avalon_universal_slave_0_agent_m0_readdata),      //                         .readdata
		.uav_writedata            (cic_gain_s1_translator_avalon_universal_slave_0_agent_m0_writedata),     //                         .writedata
		.uav_lock                 (cic_gain_s1_translator_avalon_universal_slave_0_agent_m0_lock),          //                         .lock
		.uav_debugaccess          (cic_gain_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),   //                         .debugaccess
		.av_address               (cic_gain_s1_address),                                                    //      avalon_anti_slave_0.address
		.av_write                 (cic_gain_s1_write),                                                      //                         .write
		.av_readdata              (cic_gain_s1_readdata),                                                   //                         .readdata
		.av_writedata             (cic_gain_s1_writedata),                                                  //                         .writedata
		.av_chipselect            (cic_gain_s1_chipselect),                                                 //                         .chipselect
		.av_read                  (),                                                                       //              (terminated)
		.av_begintransfer         (),                                                                       //              (terminated)
		.av_beginbursttransfer    (),                                                                       //              (terminated)
		.av_burstcount            (),                                                                       //              (terminated)
		.av_byteenable            (),                                                                       //              (terminated)
		.av_readdatavalid         (1'b0),                                                                   //              (terminated)
		.av_waitrequest           (1'b0),                                                                   //              (terminated)
		.av_writebyteenable       (),                                                                       //              (terminated)
		.av_lock                  (),                                                                       //              (terminated)
		.av_clken                 (),                                                                       //              (terminated)
		.uav_clken                (1'b0),                                                                   //              (terminated)
		.av_debugaccess           (),                                                                       //              (terminated)
		.av_outputenable          (),                                                                       //              (terminated)
		.uav_response             (),                                                                       //              (terminated)
		.av_response              (2'b00),                                                                  //              (terminated)
		.uav_writeresponserequest (1'b0),                                                                   //              (terminated)
		.uav_writeresponsevalid   (),                                                                       //              (terminated)
		.av_writeresponserequest  (),                                                                       //              (terminated)
		.av_writeresponsevalid    (1'b0)                                                                    //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (4),
		.AV_DATA_W                      (32),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (4),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (24),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (1),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) ps2_slave_translator (
		.clk                      (clock_clk_clk),                                                        //                      clk.clk
		.reset                    (NIOS_reset_n_reset_bridge_in_reset_reset),                             //                    reset.reset
		.uav_address              (ps2_slave_translator_avalon_universal_slave_0_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount           (ps2_slave_translator_avalon_universal_slave_0_agent_m0_burstcount),    //                         .burstcount
		.uav_read                 (ps2_slave_translator_avalon_universal_slave_0_agent_m0_read),          //                         .read
		.uav_write                (ps2_slave_translator_avalon_universal_slave_0_agent_m0_write),         //                         .write
		.uav_waitrequest          (ps2_slave_translator_avalon_universal_slave_0_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid        (ps2_slave_translator_avalon_universal_slave_0_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable           (ps2_slave_translator_avalon_universal_slave_0_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata             (ps2_slave_translator_avalon_universal_slave_0_agent_m0_readdata),      //                         .readdata
		.uav_writedata            (ps2_slave_translator_avalon_universal_slave_0_agent_m0_writedata),     //                         .writedata
		.uav_lock                 (ps2_slave_translator_avalon_universal_slave_0_agent_m0_lock),          //                         .lock
		.uav_debugaccess          (ps2_slave_translator_avalon_universal_slave_0_agent_m0_debugaccess),   //                         .debugaccess
		.av_address               (ps2_slave_address),                                                    //      avalon_anti_slave_0.address
		.av_write                 (ps2_slave_write),                                                      //                         .write
		.av_read                  (ps2_slave_read),                                                       //                         .read
		.av_readdata              (ps2_slave_readdata),                                                   //                         .readdata
		.av_writedata             (ps2_slave_writedata),                                                  //                         .writedata
		.av_waitrequest           (ps2_slave_waitrequest),                                                //                         .waitrequest
		.av_begintransfer         (),                                                                     //              (terminated)
		.av_beginbursttransfer    (),                                                                     //              (terminated)
		.av_burstcount            (),                                                                     //              (terminated)
		.av_byteenable            (),                                                                     //              (terminated)
		.av_readdatavalid         (1'b0),                                                                 //              (terminated)
		.av_writebyteenable       (),                                                                     //              (terminated)
		.av_lock                  (),                                                                     //              (terminated)
		.av_chipselect            (),                                                                     //              (terminated)
		.av_clken                 (),                                                                     //              (terminated)
		.uav_clken                (1'b0),                                                                 //              (terminated)
		.av_debugaccess           (),                                                                     //              (terminated)
		.av_outputenable          (),                                                                     //              (terminated)
		.uav_response             (),                                                                     //              (terminated)
		.av_response              (2'b00),                                                                //              (terminated)
		.uav_writeresponserequest (1'b0),                                                                 //              (terminated)
		.uav_writeresponsevalid   (),                                                                     //              (terminated)
		.av_writeresponserequest  (),                                                                     //              (terminated)
		.av_writeresponsevalid    (1'b0)                                                                  //              (terminated)
	);

	altera_merlin_master_agent #(
		.PKT_PROTECTION_H          (90),
		.PKT_PROTECTION_L          (88),
		.PKT_BEGIN_BURST           (79),
		.PKT_BURSTWRAP_H           (71),
		.PKT_BURSTWRAP_L           (69),
		.PKT_BURST_SIZE_H          (74),
		.PKT_BURST_SIZE_L          (72),
		.PKT_BURST_TYPE_H          (76),
		.PKT_BURST_TYPE_L          (75),
		.PKT_BYTE_CNT_H            (68),
		.PKT_BYTE_CNT_L            (66),
		.PKT_ADDR_H                (59),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (60),
		.PKT_TRANS_POSTED          (61),
		.PKT_TRANS_WRITE           (62),
		.PKT_TRANS_READ            (63),
		.PKT_TRANS_LOCK            (64),
		.PKT_TRANS_EXCLUSIVE       (65),
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_SRC_ID_H              (83),
		.PKT_SRC_ID_L              (81),
		.PKT_DEST_ID_H             (86),
		.PKT_DEST_ID_L             (84),
		.PKT_THREAD_ID_H           (87),
		.PKT_THREAD_ID_L           (87),
		.PKT_CACHE_H               (94),
		.PKT_CACHE_L               (91),
		.PKT_DATA_SIDEBAND_H       (78),
		.PKT_DATA_SIDEBAND_L       (78),
		.PKT_QOS_H                 (80),
		.PKT_QOS_L                 (80),
		.PKT_ADDR_SIDEBAND_H       (77),
		.PKT_ADDR_SIDEBAND_L       (77),
		.PKT_RESPONSE_STATUS_H     (96),
		.PKT_RESPONSE_STATUS_L     (95),
		.PKT_ORI_BURST_SIZE_L      (97),
		.PKT_ORI_BURST_SIZE_H      (99),
		.ST_DATA_W                 (100),
		.ST_CHANNEL_W              (7),
		.AV_BURSTCOUNT_W           (3),
		.SUPPRESS_0_BYTEEN_RSP     (0),
		.ID                        (1),
		.BURSTWRAP_VALUE           (3),
		.CACHE_VALUE               (0),
		.SECURE_ACCESS_BIT         (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0)
	) nios_instruction_master_translator_avalon_universal_master_0_agent (
		.clk                     (clock_clk_clk),                                                                       //       clk.clk
		.reset                   (NIOS_reset_n_reset_bridge_in_reset_reset),                                            // clk_reset.reset
		.av_address              (nios_instruction_master_translator_avalon_universal_master_0_address),                //        av.address
		.av_write                (nios_instruction_master_translator_avalon_universal_master_0_write),                  //          .write
		.av_read                 (nios_instruction_master_translator_avalon_universal_master_0_read),                   //          .read
		.av_writedata            (nios_instruction_master_translator_avalon_universal_master_0_writedata),              //          .writedata
		.av_readdata             (nios_instruction_master_translator_avalon_universal_master_0_readdata),               //          .readdata
		.av_waitrequest          (nios_instruction_master_translator_avalon_universal_master_0_waitrequest),            //          .waitrequest
		.av_readdatavalid        (nios_instruction_master_translator_avalon_universal_master_0_readdatavalid),          //          .readdatavalid
		.av_byteenable           (nios_instruction_master_translator_avalon_universal_master_0_byteenable),             //          .byteenable
		.av_burstcount           (nios_instruction_master_translator_avalon_universal_master_0_burstcount),             //          .burstcount
		.av_debugaccess          (nios_instruction_master_translator_avalon_universal_master_0_debugaccess),            //          .debugaccess
		.av_lock                 (nios_instruction_master_translator_avalon_universal_master_0_lock),                   //          .lock
		.cp_valid                (nios_instruction_master_translator_avalon_universal_master_0_agent_cp_valid),         //        cp.valid
		.cp_data                 (nios_instruction_master_translator_avalon_universal_master_0_agent_cp_data),          //          .data
		.cp_startofpacket        (nios_instruction_master_translator_avalon_universal_master_0_agent_cp_startofpacket), //          .startofpacket
		.cp_endofpacket          (nios_instruction_master_translator_avalon_universal_master_0_agent_cp_endofpacket),   //          .endofpacket
		.cp_ready                (nios_instruction_master_translator_avalon_universal_master_0_agent_cp_ready),         //          .ready
		.rp_valid                (rsp_xbar_mux_src_valid),                                                              //        rp.valid
		.rp_data                 (rsp_xbar_mux_src_data),                                                               //          .data
		.rp_channel              (rsp_xbar_mux_src_channel),                                                            //          .channel
		.rp_startofpacket        (rsp_xbar_mux_src_startofpacket),                                                      //          .startofpacket
		.rp_endofpacket          (rsp_xbar_mux_src_endofpacket),                                                        //          .endofpacket
		.rp_ready                (rsp_xbar_mux_src_ready),                                                              //          .ready
		.av_response             (),                                                                                    // (terminated)
		.av_writeresponserequest (1'b0),                                                                                // (terminated)
		.av_writeresponsevalid   ()                                                                                     // (terminated)
	);

	altera_merlin_master_agent #(
		.PKT_PROTECTION_H          (90),
		.PKT_PROTECTION_L          (88),
		.PKT_BEGIN_BURST           (79),
		.PKT_BURSTWRAP_H           (71),
		.PKT_BURSTWRAP_L           (69),
		.PKT_BURST_SIZE_H          (74),
		.PKT_BURST_SIZE_L          (72),
		.PKT_BURST_TYPE_H          (76),
		.PKT_BURST_TYPE_L          (75),
		.PKT_BYTE_CNT_H            (68),
		.PKT_BYTE_CNT_L            (66),
		.PKT_ADDR_H                (59),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (60),
		.PKT_TRANS_POSTED          (61),
		.PKT_TRANS_WRITE           (62),
		.PKT_TRANS_READ            (63),
		.PKT_TRANS_LOCK            (64),
		.PKT_TRANS_EXCLUSIVE       (65),
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_SRC_ID_H              (83),
		.PKT_SRC_ID_L              (81),
		.PKT_DEST_ID_H             (86),
		.PKT_DEST_ID_L             (84),
		.PKT_THREAD_ID_H           (87),
		.PKT_THREAD_ID_L           (87),
		.PKT_CACHE_H               (94),
		.PKT_CACHE_L               (91),
		.PKT_DATA_SIDEBAND_H       (78),
		.PKT_DATA_SIDEBAND_L       (78),
		.PKT_QOS_H                 (80),
		.PKT_QOS_L                 (80),
		.PKT_ADDR_SIDEBAND_H       (77),
		.PKT_ADDR_SIDEBAND_L       (77),
		.PKT_RESPONSE_STATUS_H     (96),
		.PKT_RESPONSE_STATUS_L     (95),
		.PKT_ORI_BURST_SIZE_L      (97),
		.PKT_ORI_BURST_SIZE_H      (99),
		.ST_DATA_W                 (100),
		.ST_CHANNEL_W              (7),
		.AV_BURSTCOUNT_W           (3),
		.SUPPRESS_0_BYTEEN_RSP     (0),
		.ID                        (0),
		.BURSTWRAP_VALUE           (7),
		.CACHE_VALUE               (0),
		.SECURE_ACCESS_BIT         (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0)
	) nios_data_master_translator_avalon_universal_master_0_agent (
		.clk                     (clock_clk_clk),                                                                //       clk.clk
		.reset                   (NIOS_reset_n_reset_bridge_in_reset_reset),                                     // clk_reset.reset
		.av_address              (nios_data_master_translator_avalon_universal_master_0_address),                //        av.address
		.av_write                (nios_data_master_translator_avalon_universal_master_0_write),                  //          .write
		.av_read                 (nios_data_master_translator_avalon_universal_master_0_read),                   //          .read
		.av_writedata            (nios_data_master_translator_avalon_universal_master_0_writedata),              //          .writedata
		.av_readdata             (nios_data_master_translator_avalon_universal_master_0_readdata),               //          .readdata
		.av_waitrequest          (nios_data_master_translator_avalon_universal_master_0_waitrequest),            //          .waitrequest
		.av_readdatavalid        (nios_data_master_translator_avalon_universal_master_0_readdatavalid),          //          .readdatavalid
		.av_byteenable           (nios_data_master_translator_avalon_universal_master_0_byteenable),             //          .byteenable
		.av_burstcount           (nios_data_master_translator_avalon_universal_master_0_burstcount),             //          .burstcount
		.av_debugaccess          (nios_data_master_translator_avalon_universal_master_0_debugaccess),            //          .debugaccess
		.av_lock                 (nios_data_master_translator_avalon_universal_master_0_lock),                   //          .lock
		.cp_valid                (nios_data_master_translator_avalon_universal_master_0_agent_cp_valid),         //        cp.valid
		.cp_data                 (nios_data_master_translator_avalon_universal_master_0_agent_cp_data),          //          .data
		.cp_startofpacket        (nios_data_master_translator_avalon_universal_master_0_agent_cp_startofpacket), //          .startofpacket
		.cp_endofpacket          (nios_data_master_translator_avalon_universal_master_0_agent_cp_endofpacket),   //          .endofpacket
		.cp_ready                (nios_data_master_translator_avalon_universal_master_0_agent_cp_ready),         //          .ready
		.rp_valid                (rsp_xbar_mux_001_src_valid),                                                   //        rp.valid
		.rp_data                 (rsp_xbar_mux_001_src_data),                                                    //          .data
		.rp_channel              (rsp_xbar_mux_001_src_channel),                                                 //          .channel
		.rp_startofpacket        (rsp_xbar_mux_001_src_startofpacket),                                           //          .startofpacket
		.rp_endofpacket          (rsp_xbar_mux_001_src_endofpacket),                                             //          .endofpacket
		.rp_ready                (rsp_xbar_mux_001_src_ready),                                                   //          .ready
		.av_response             (),                                                                             // (terminated)
		.av_writeresponserequest (1'b0),                                                                         // (terminated)
		.av_writeresponsevalid   ()                                                                              // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BEGIN_BURST           (79),
		.PKT_SYMBOL_W              (8),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_ADDR_H                (59),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (60),
		.PKT_TRANS_POSTED          (61),
		.PKT_TRANS_WRITE           (62),
		.PKT_TRANS_READ            (63),
		.PKT_TRANS_LOCK            (64),
		.PKT_SRC_ID_H              (83),
		.PKT_SRC_ID_L              (81),
		.PKT_DEST_ID_H             (86),
		.PKT_DEST_ID_L             (84),
		.PKT_BURSTWRAP_H           (71),
		.PKT_BURSTWRAP_L           (69),
		.PKT_BYTE_CNT_H            (68),
		.PKT_BYTE_CNT_L            (66),
		.PKT_PROTECTION_H          (90),
		.PKT_PROTECTION_L          (88),
		.PKT_RESPONSE_STATUS_H     (96),
		.PKT_RESPONSE_STATUS_L     (95),
		.PKT_BURST_SIZE_H          (74),
		.PKT_BURST_SIZE_L          (72),
		.PKT_ORI_BURST_SIZE_L      (97),
		.PKT_ORI_BURST_SIZE_H      (99),
		.ST_CHANNEL_W              (7),
		.ST_DATA_W                 (100),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0)
	) nios_jtag_debug_module_translator_avalon_universal_slave_0_agent (
		.clk                     (clock_clk_clk),                                                                               //             clk.clk
		.reset                   (NIOS_reset_n_reset_bridge_in_reset_reset),                                                    //       clk_reset.reset
		.m0_address              (nios_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_address),                 //              m0.address
		.m0_burstcount           (nios_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (nios_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (nios_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (nios_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_lock),                    //                .lock
		.m0_readdata             (nios_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (nios_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (nios_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_read),                    //                .read
		.m0_waitrequest          (nios_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (nios_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_writedata),               //                .writedata
		.m0_write                (nios_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_write),                   //                .write
		.rp_endofpacket          (nios_jtag_debug_module_translator_avalon_universal_slave_0_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (nios_jtag_debug_module_translator_avalon_universal_slave_0_agent_rp_ready),                   //                .ready
		.rp_valid                (nios_jtag_debug_module_translator_avalon_universal_slave_0_agent_rp_valid),                   //                .valid
		.rp_data                 (nios_jtag_debug_module_translator_avalon_universal_slave_0_agent_rp_data),                    //                .data
		.rp_startofpacket        (nios_jtag_debug_module_translator_avalon_universal_slave_0_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (cmd_xbar_mux_src_ready),                                                                      //              cp.ready
		.cp_valid                (cmd_xbar_mux_src_valid),                                                                      //                .valid
		.cp_data                 (cmd_xbar_mux_src_data),                                                                       //                .data
		.cp_startofpacket        (cmd_xbar_mux_src_startofpacket),                                                              //                .startofpacket
		.cp_endofpacket          (cmd_xbar_mux_src_endofpacket),                                                                //                .endofpacket
		.cp_channel              (cmd_xbar_mux_src_channel),                                                                    //                .channel
		.rf_sink_ready           (nios_jtag_debug_module_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (nios_jtag_debug_module_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (nios_jtag_debug_module_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (nios_jtag_debug_module_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (nios_jtag_debug_module_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (nios_jtag_debug_module_translator_avalon_universal_slave_0_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (nios_jtag_debug_module_translator_avalon_universal_slave_0_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (nios_jtag_debug_module_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (nios_jtag_debug_module_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (nios_jtag_debug_module_translator_avalon_universal_slave_0_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (nios_jtag_debug_module_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (nios_jtag_debug_module_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_sink_data    (nios_jtag_debug_module_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.rdata_fifo_src_ready    (nios_jtag_debug_module_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (nios_jtag_debug_module_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (nios_jtag_debug_module_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                                                                       //     (terminated)
		.m0_writeresponserequest (),                                                                                            //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                                                         //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (101),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) nios_jtag_debug_module_translator_avalon_universal_slave_0_agent_rsp_fifo (
		.clk               (clock_clk_clk),                                                                               //       clk.clk
		.reset             (NIOS_reset_n_reset_bridge_in_reset_reset),                                                    // clk_reset.reset
		.in_data           (nios_jtag_debug_module_translator_avalon_universal_slave_0_agent_rf_source_data),             //        in.data
		.in_valid          (nios_jtag_debug_module_translator_avalon_universal_slave_0_agent_rf_source_valid),            //          .valid
		.in_ready          (nios_jtag_debug_module_translator_avalon_universal_slave_0_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (nios_jtag_debug_module_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (nios_jtag_debug_module_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (nios_jtag_debug_module_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (nios_jtag_debug_module_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (nios_jtag_debug_module_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (nios_jtag_debug_module_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (nios_jtag_debug_module_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                                                       // (terminated)
		.csr_read          (1'b0),                                                                                        // (terminated)
		.csr_write         (1'b0),                                                                                        // (terminated)
		.csr_readdata      (),                                                                                            // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                                        // (terminated)
		.almost_full_data  (),                                                                                            // (terminated)
		.almost_empty_data (),                                                                                            // (terminated)
		.in_empty          (1'b0),                                                                                        // (terminated)
		.out_empty         (),                                                                                            // (terminated)
		.in_error          (1'b0),                                                                                        // (terminated)
		.out_error         (),                                                                                            // (terminated)
		.in_channel        (1'b0),                                                                                        // (terminated)
		.out_channel       ()                                                                                             // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BEGIN_BURST           (79),
		.PKT_SYMBOL_W              (8),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_ADDR_H                (59),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (60),
		.PKT_TRANS_POSTED          (61),
		.PKT_TRANS_WRITE           (62),
		.PKT_TRANS_READ            (63),
		.PKT_TRANS_LOCK            (64),
		.PKT_SRC_ID_H              (83),
		.PKT_SRC_ID_L              (81),
		.PKT_DEST_ID_H             (86),
		.PKT_DEST_ID_L             (84),
		.PKT_BURSTWRAP_H           (71),
		.PKT_BURSTWRAP_L           (69),
		.PKT_BYTE_CNT_H            (68),
		.PKT_BYTE_CNT_L            (66),
		.PKT_PROTECTION_H          (90),
		.PKT_PROTECTION_L          (88),
		.PKT_RESPONSE_STATUS_H     (96),
		.PKT_RESPONSE_STATUS_L     (95),
		.PKT_BURST_SIZE_H          (74),
		.PKT_BURST_SIZE_L          (72),
		.PKT_ORI_BURST_SIZE_L      (97),
		.PKT_ORI_BURST_SIZE_H      (99),
		.ST_CHANNEL_W              (7),
		.ST_DATA_W                 (100),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0)
	) onchip_ram_s1_translator_avalon_universal_slave_0_agent (
		.clk                     (clock_clk_clk),                                                                      //             clk.clk
		.reset                   (NIOS_reset_n_reset_bridge_in_reset_reset),                                           //       clk_reset.reset
		.m0_address              (onchip_ram_s1_translator_avalon_universal_slave_0_agent_m0_address),                 //              m0.address
		.m0_burstcount           (onchip_ram_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (onchip_ram_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (onchip_ram_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (onchip_ram_s1_translator_avalon_universal_slave_0_agent_m0_lock),                    //                .lock
		.m0_readdata             (onchip_ram_s1_translator_avalon_universal_slave_0_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (onchip_ram_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (onchip_ram_s1_translator_avalon_universal_slave_0_agent_m0_read),                    //                .read
		.m0_waitrequest          (onchip_ram_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (onchip_ram_s1_translator_avalon_universal_slave_0_agent_m0_writedata),               //                .writedata
		.m0_write                (onchip_ram_s1_translator_avalon_universal_slave_0_agent_m0_write),                   //                .write
		.rp_endofpacket          (onchip_ram_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (onchip_ram_s1_translator_avalon_universal_slave_0_agent_rp_ready),                   //                .ready
		.rp_valid                (onchip_ram_s1_translator_avalon_universal_slave_0_agent_rp_valid),                   //                .valid
		.rp_data                 (onchip_ram_s1_translator_avalon_universal_slave_0_agent_rp_data),                    //                .data
		.rp_startofpacket        (onchip_ram_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (pipeline_stage_source0_ready),                                                       //              cp.ready
		.cp_valid                (pipeline_stage_source0_valid),                                                       //                .valid
		.cp_data                 (pipeline_stage_source0_data),                                                        //                .data
		.cp_startofpacket        (pipeline_stage_source0_startofpacket),                                               //                .startofpacket
		.cp_endofpacket          (pipeline_stage_source0_endofpacket),                                                 //                .endofpacket
		.cp_channel              (pipeline_stage_source0_channel),                                                     //                .channel
		.rf_sink_ready           (onchip_ram_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (onchip_ram_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (onchip_ram_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (onchip_ram_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (onchip_ram_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (onchip_ram_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (onchip_ram_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (onchip_ram_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (onchip_ram_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (onchip_ram_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (onchip_ram_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (onchip_ram_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_sink_data    (onchip_ram_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.rdata_fifo_src_ready    (onchip_ram_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (onchip_ram_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (onchip_ram_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                                                              //     (terminated)
		.m0_writeresponserequest (),                                                                                   //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                                                //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (101),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) onchip_ram_s1_translator_avalon_universal_slave_0_agent_rsp_fifo (
		.clk               (clock_clk_clk),                                                                      //       clk.clk
		.reset             (NIOS_reset_n_reset_bridge_in_reset_reset),                                           // clk_reset.reset
		.in_data           (onchip_ram_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //        in.data
		.in_valid          (onchip_ram_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //          .valid
		.in_ready          (onchip_ram_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (onchip_ram_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (onchip_ram_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (onchip_ram_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (onchip_ram_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (onchip_ram_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (onchip_ram_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (onchip_ram_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                                              // (terminated)
		.csr_read          (1'b0),                                                                               // (terminated)
		.csr_write         (1'b0),                                                                               // (terminated)
		.csr_readdata      (),                                                                                   // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                               // (terminated)
		.almost_full_data  (),                                                                                   // (terminated)
		.almost_empty_data (),                                                                                   // (terminated)
		.in_empty          (1'b0),                                                                               // (terminated)
		.out_empty         (),                                                                                   // (terminated)
		.in_error          (1'b0),                                                                               // (terminated)
		.out_error         (),                                                                                   // (terminated)
		.in_channel        (1'b0),                                                                               // (terminated)
		.out_channel       ()                                                                                    // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_DATA_H                (15),
		.PKT_DATA_L                (0),
		.PKT_BEGIN_BURST           (61),
		.PKT_SYMBOL_W              (8),
		.PKT_BYTEEN_H              (17),
		.PKT_BYTEEN_L              (16),
		.PKT_ADDR_H                (41),
		.PKT_ADDR_L                (18),
		.PKT_TRANS_COMPRESSED_READ (42),
		.PKT_TRANS_POSTED          (43),
		.PKT_TRANS_WRITE           (44),
		.PKT_TRANS_READ            (45),
		.PKT_TRANS_LOCK            (46),
		.PKT_SRC_ID_H              (65),
		.PKT_SRC_ID_L              (63),
		.PKT_DEST_ID_H             (68),
		.PKT_DEST_ID_L             (66),
		.PKT_BURSTWRAP_H           (53),
		.PKT_BURSTWRAP_L           (51),
		.PKT_BYTE_CNT_H            (50),
		.PKT_BYTE_CNT_L            (48),
		.PKT_PROTECTION_H          (72),
		.PKT_PROTECTION_L          (70),
		.PKT_RESPONSE_STATUS_H     (78),
		.PKT_RESPONSE_STATUS_L     (77),
		.PKT_BURST_SIZE_H          (56),
		.PKT_BURST_SIZE_L          (54),
		.PKT_ORI_BURST_SIZE_L      (79),
		.PKT_ORI_BURST_SIZE_H      (81),
		.ST_CHANNEL_W              (7),
		.ST_DATA_W                 (82),
		.AVS_BURSTCOUNT_W          (2),
		.SUPPRESS_0_BYTEEN_CMD     (1),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0)
	) sdram_s1_translator_avalon_universal_slave_0_agent (
		.clk                     (clock_clk_clk),                                                                 //             clk.clk
		.reset                   (NIOS_reset_n_reset_bridge_in_reset_reset),                                      //       clk_reset.reset
		.m0_address              (sdram_s1_translator_avalon_universal_slave_0_agent_m0_address),                 //              m0.address
		.m0_burstcount           (sdram_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (sdram_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (sdram_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (sdram_s1_translator_avalon_universal_slave_0_agent_m0_lock),                    //                .lock
		.m0_readdata             (sdram_s1_translator_avalon_universal_slave_0_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (sdram_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (sdram_s1_translator_avalon_universal_slave_0_agent_m0_read),                    //                .read
		.m0_waitrequest          (sdram_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (sdram_s1_translator_avalon_universal_slave_0_agent_m0_writedata),               //                .writedata
		.m0_write                (sdram_s1_translator_avalon_universal_slave_0_agent_m0_write),                   //                .write
		.rp_endofpacket          (sdram_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (sdram_s1_translator_avalon_universal_slave_0_agent_rp_ready),                   //                .ready
		.rp_valid                (sdram_s1_translator_avalon_universal_slave_0_agent_rp_valid),                   //                .valid
		.rp_data                 (sdram_s1_translator_avalon_universal_slave_0_agent_rp_data),                    //                .data
		.rp_startofpacket        (sdram_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (pipeline_stage_001_source0_ready),                                              //              cp.ready
		.cp_valid                (pipeline_stage_001_source0_valid),                                              //                .valid
		.cp_data                 (pipeline_stage_001_source0_data),                                               //                .data
		.cp_startofpacket        (pipeline_stage_001_source0_startofpacket),                                      //                .startofpacket
		.cp_endofpacket          (pipeline_stage_001_source0_endofpacket),                                        //                .endofpacket
		.cp_channel              (pipeline_stage_001_source0_channel),                                            //                .channel
		.rf_sink_ready           (sdram_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (sdram_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (sdram_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (sdram_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (sdram_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (sdram_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (sdram_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (sdram_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (sdram_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (sdram_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (sdram_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_out_ready),       // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (sdram_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_out_valid),       //                .valid
		.rdata_fifo_sink_data    (sdram_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_out_data),        //                .data
		.rdata_fifo_src_ready    (sdram_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (sdram_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (sdram_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                                                         //     (terminated)
		.m0_writeresponserequest (),                                                                              //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                                           //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (83),
		.FIFO_DEPTH          (8),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) sdram_s1_translator_avalon_universal_slave_0_agent_rsp_fifo (
		.clk               (clock_clk_clk),                                                                 //       clk.clk
		.reset             (NIOS_reset_n_reset_bridge_in_reset_reset),                                      // clk_reset.reset
		.in_data           (sdram_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //        in.data
		.in_valid          (sdram_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //          .valid
		.in_ready          (sdram_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (sdram_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (sdram_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (sdram_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (sdram_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (sdram_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (sdram_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (sdram_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                                         // (terminated)
		.csr_read          (1'b0),                                                                          // (terminated)
		.csr_write         (1'b0),                                                                          // (terminated)
		.csr_readdata      (),                                                                              // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                          // (terminated)
		.almost_full_data  (),                                                                              // (terminated)
		.almost_empty_data (),                                                                              // (terminated)
		.in_empty          (1'b0),                                                                          // (terminated)
		.out_empty         (),                                                                              // (terminated)
		.in_error          (1'b0),                                                                          // (terminated)
		.out_error         (),                                                                              // (terminated)
		.in_channel        (1'b0),                                                                          // (terminated)
		.out_channel       ()                                                                               // (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (18),
		.FIFO_DEPTH          (8),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (0),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (3),
		.USE_MEMORY_BLOCKS   (1),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) sdram_s1_translator_avalon_universal_slave_0_agent_rdata_fifo (
		.clk               (clock_clk_clk),                                                           //       clk.clk
		.reset             (NIOS_reset_n_reset_bridge_in_reset_reset),                                // clk_reset.reset
		.in_data           (sdram_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),  //        in.data
		.in_valid          (sdram_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid), //          .valid
		.in_ready          (sdram_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready), //          .ready
		.out_data          (sdram_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_out_data),  //       out.data
		.out_valid         (sdram_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_out_valid), //          .valid
		.out_ready         (sdram_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_out_ready), //          .ready
		.csr_address       (2'b00),                                                                   // (terminated)
		.csr_read          (1'b0),                                                                    // (terminated)
		.csr_write         (1'b0),                                                                    // (terminated)
		.csr_readdata      (),                                                                        // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                    // (terminated)
		.almost_full_data  (),                                                                        // (terminated)
		.almost_empty_data (),                                                                        // (terminated)
		.in_startofpacket  (1'b0),                                                                    // (terminated)
		.in_endofpacket    (1'b0),                                                                    // (terminated)
		.out_startofpacket (),                                                                        // (terminated)
		.out_endofpacket   (),                                                                        // (terminated)
		.in_empty          (1'b0),                                                                    // (terminated)
		.out_empty         (),                                                                        // (terminated)
		.in_error          (1'b0),                                                                    // (terminated)
		.out_error         (),                                                                        // (terminated)
		.in_channel        (1'b0),                                                                    // (terminated)
		.out_channel       ()                                                                         // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BEGIN_BURST           (79),
		.PKT_SYMBOL_W              (8),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_ADDR_H                (59),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (60),
		.PKT_TRANS_POSTED          (61),
		.PKT_TRANS_WRITE           (62),
		.PKT_TRANS_READ            (63),
		.PKT_TRANS_LOCK            (64),
		.PKT_SRC_ID_H              (83),
		.PKT_SRC_ID_L              (81),
		.PKT_DEST_ID_H             (86),
		.PKT_DEST_ID_L             (84),
		.PKT_BURSTWRAP_H           (71),
		.PKT_BURSTWRAP_L           (69),
		.PKT_BYTE_CNT_H            (68),
		.PKT_BYTE_CNT_L            (66),
		.PKT_PROTECTION_H          (90),
		.PKT_PROTECTION_L          (88),
		.PKT_RESPONSE_STATUS_H     (96),
		.PKT_RESPONSE_STATUS_L     (95),
		.PKT_BURST_SIZE_H          (74),
		.PKT_BURST_SIZE_L          (72),
		.PKT_ORI_BURST_SIZE_L      (97),
		.PKT_ORI_BURST_SIZE_H      (99),
		.ST_CHANNEL_W              (7),
		.ST_DATA_W                 (100),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0)
	) jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent (
		.clk                     (clock_clk_clk),                                                                                    //             clk.clk
		.reset                   (NIOS_reset_n_reset_bridge_in_reset_reset),                                                         //       clk_reset.reset
		.m0_address              (jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_address),                 //              m0.address
		.m0_burstcount           (jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_lock),                    //                .lock
		.m0_readdata             (jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_read),                    //                .read
		.m0_waitrequest          (jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_writedata),               //                .writedata
		.m0_write                (jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_write),                   //                .write
		.rp_endofpacket          (jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rp_ready),                   //                .ready
		.rp_valid                (jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rp_valid),                   //                .valid
		.rp_data                 (jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rp_data),                    //                .data
		.rp_startofpacket        (jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (cmd_xbar_mux_003_src_ready),                                                                       //              cp.ready
		.cp_valid                (cmd_xbar_mux_003_src_valid),                                                                       //                .valid
		.cp_data                 (cmd_xbar_mux_003_src_data),                                                                        //                .data
		.cp_startofpacket        (cmd_xbar_mux_003_src_startofpacket),                                                               //                .startofpacket
		.cp_endofpacket          (cmd_xbar_mux_003_src_endofpacket),                                                                 //                .endofpacket
		.cp_channel              (cmd_xbar_mux_003_src_channel),                                                                     //                .channel
		.rf_sink_ready           (jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_sink_data    (jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.rdata_fifo_src_ready    (jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                                                                            //     (terminated)
		.m0_writeresponserequest (),                                                                                                 //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                                                              //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (101),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rsp_fifo (
		.clk               (clock_clk_clk),                                                                                    //       clk.clk
		.reset             (NIOS_reset_n_reset_bridge_in_reset_reset),                                                         // clk_reset.reset
		.in_data           (jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rf_source_data),             //        in.data
		.in_valid          (jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rf_source_valid),            //          .valid
		.in_ready          (jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                                                            // (terminated)
		.csr_read          (1'b0),                                                                                             // (terminated)
		.csr_write         (1'b0),                                                                                             // (terminated)
		.csr_readdata      (),                                                                                                 // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                                             // (terminated)
		.almost_full_data  (),                                                                                                 // (terminated)
		.almost_empty_data (),                                                                                                 // (terminated)
		.in_empty          (1'b0),                                                                                             // (terminated)
		.out_empty         (),                                                                                                 // (terminated)
		.in_error          (1'b0),                                                                                             // (terminated)
		.out_error         (),                                                                                                 // (terminated)
		.in_channel        (1'b0),                                                                                             // (terminated)
		.out_channel       ()                                                                                                  // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BEGIN_BURST           (79),
		.PKT_SYMBOL_W              (8),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_ADDR_H                (59),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (60),
		.PKT_TRANS_POSTED          (61),
		.PKT_TRANS_WRITE           (62),
		.PKT_TRANS_READ            (63),
		.PKT_TRANS_LOCK            (64),
		.PKT_SRC_ID_H              (83),
		.PKT_SRC_ID_L              (81),
		.PKT_DEST_ID_H             (86),
		.PKT_DEST_ID_L             (84),
		.PKT_BURSTWRAP_H           (71),
		.PKT_BURSTWRAP_L           (69),
		.PKT_BYTE_CNT_H            (68),
		.PKT_BYTE_CNT_L            (66),
		.PKT_PROTECTION_H          (90),
		.PKT_PROTECTION_L          (88),
		.PKT_RESPONSE_STATUS_H     (96),
		.PKT_RESPONSE_STATUS_L     (95),
		.PKT_BURST_SIZE_H          (74),
		.PKT_BURST_SIZE_L          (72),
		.PKT_ORI_BURST_SIZE_L      (97),
		.PKT_ORI_BURST_SIZE_H      (99),
		.ST_CHANNEL_W              (7),
		.ST_DATA_W                 (100),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0)
	) phase_increment_s1_translator_avalon_universal_slave_0_agent (
		.clk                     (clock_clk_clk),                                                                           //             clk.clk
		.reset                   (NIOS_reset_n_reset_bridge_in_reset_reset),                                                //       clk_reset.reset
		.m0_address              (phase_increment_s1_translator_avalon_universal_slave_0_agent_m0_address),                 //              m0.address
		.m0_burstcount           (phase_increment_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (phase_increment_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (phase_increment_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (phase_increment_s1_translator_avalon_universal_slave_0_agent_m0_lock),                    //                .lock
		.m0_readdata             (phase_increment_s1_translator_avalon_universal_slave_0_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (phase_increment_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (phase_increment_s1_translator_avalon_universal_slave_0_agent_m0_read),                    //                .read
		.m0_waitrequest          (phase_increment_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (phase_increment_s1_translator_avalon_universal_slave_0_agent_m0_writedata),               //                .writedata
		.m0_write                (phase_increment_s1_translator_avalon_universal_slave_0_agent_m0_write),                   //                .write
		.rp_endofpacket          (phase_increment_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (phase_increment_s1_translator_avalon_universal_slave_0_agent_rp_ready),                   //                .ready
		.rp_valid                (phase_increment_s1_translator_avalon_universal_slave_0_agent_rp_valid),                   //                .valid
		.rp_data                 (phase_increment_s1_translator_avalon_universal_slave_0_agent_rp_data),                    //                .data
		.rp_startofpacket        (phase_increment_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (cmd_xbar_mux_004_src_ready),                                                              //              cp.ready
		.cp_valid                (cmd_xbar_mux_004_src_valid),                                                              //                .valid
		.cp_data                 (cmd_xbar_mux_004_src_data),                                                               //                .data
		.cp_startofpacket        (cmd_xbar_mux_004_src_startofpacket),                                                      //                .startofpacket
		.cp_endofpacket          (cmd_xbar_mux_004_src_endofpacket),                                                        //                .endofpacket
		.cp_channel              (cmd_xbar_mux_004_src_channel),                                                            //                .channel
		.rf_sink_ready           (phase_increment_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (phase_increment_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (phase_increment_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (phase_increment_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (phase_increment_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (phase_increment_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (phase_increment_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (phase_increment_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (phase_increment_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (phase_increment_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (phase_increment_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (phase_increment_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_sink_data    (phase_increment_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.rdata_fifo_src_ready    (phase_increment_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (phase_increment_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (phase_increment_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                                                                   //     (terminated)
		.m0_writeresponserequest (),                                                                                        //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                                                     //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (101),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) phase_increment_s1_translator_avalon_universal_slave_0_agent_rsp_fifo (
		.clk               (clock_clk_clk),                                                                           //       clk.clk
		.reset             (NIOS_reset_n_reset_bridge_in_reset_reset),                                                // clk_reset.reset
		.in_data           (phase_increment_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //        in.data
		.in_valid          (phase_increment_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //          .valid
		.in_ready          (phase_increment_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (phase_increment_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (phase_increment_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (phase_increment_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (phase_increment_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (phase_increment_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (phase_increment_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (phase_increment_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                                                   // (terminated)
		.csr_read          (1'b0),                                                                                    // (terminated)
		.csr_write         (1'b0),                                                                                    // (terminated)
		.csr_readdata      (),                                                                                        // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                                    // (terminated)
		.almost_full_data  (),                                                                                        // (terminated)
		.almost_empty_data (),                                                                                        // (terminated)
		.in_empty          (1'b0),                                                                                    // (terminated)
		.out_empty         (),                                                                                        // (terminated)
		.in_error          (1'b0),                                                                                    // (terminated)
		.out_error         (),                                                                                        // (terminated)
		.in_channel        (1'b0),                                                                                    // (terminated)
		.out_channel       ()                                                                                         // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BEGIN_BURST           (79),
		.PKT_SYMBOL_W              (8),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_ADDR_H                (59),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (60),
		.PKT_TRANS_POSTED          (61),
		.PKT_TRANS_WRITE           (62),
		.PKT_TRANS_READ            (63),
		.PKT_TRANS_LOCK            (64),
		.PKT_SRC_ID_H              (83),
		.PKT_SRC_ID_L              (81),
		.PKT_DEST_ID_H             (86),
		.PKT_DEST_ID_L             (84),
		.PKT_BURSTWRAP_H           (71),
		.PKT_BURSTWRAP_L           (69),
		.PKT_BYTE_CNT_H            (68),
		.PKT_BYTE_CNT_L            (66),
		.PKT_PROTECTION_H          (90),
		.PKT_PROTECTION_L          (88),
		.PKT_RESPONSE_STATUS_H     (96),
		.PKT_RESPONSE_STATUS_L     (95),
		.PKT_BURST_SIZE_H          (74),
		.PKT_BURST_SIZE_L          (72),
		.PKT_ORI_BURST_SIZE_L      (97),
		.PKT_ORI_BURST_SIZE_H      (99),
		.ST_CHANNEL_W              (7),
		.ST_DATA_W                 (100),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0)
	) cic_gain_s1_translator_avalon_universal_slave_0_agent (
		.clk                     (clock_clk_clk),                                                                    //             clk.clk
		.reset                   (NIOS_reset_n_reset_bridge_in_reset_reset),                                         //       clk_reset.reset
		.m0_address              (cic_gain_s1_translator_avalon_universal_slave_0_agent_m0_address),                 //              m0.address
		.m0_burstcount           (cic_gain_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (cic_gain_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (cic_gain_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (cic_gain_s1_translator_avalon_universal_slave_0_agent_m0_lock),                    //                .lock
		.m0_readdata             (cic_gain_s1_translator_avalon_universal_slave_0_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (cic_gain_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (cic_gain_s1_translator_avalon_universal_slave_0_agent_m0_read),                    //                .read
		.m0_waitrequest          (cic_gain_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (cic_gain_s1_translator_avalon_universal_slave_0_agent_m0_writedata),               //                .writedata
		.m0_write                (cic_gain_s1_translator_avalon_universal_slave_0_agent_m0_write),                   //                .write
		.rp_endofpacket          (cic_gain_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (cic_gain_s1_translator_avalon_universal_slave_0_agent_rp_ready),                   //                .ready
		.rp_valid                (cic_gain_s1_translator_avalon_universal_slave_0_agent_rp_valid),                   //                .valid
		.rp_data                 (cic_gain_s1_translator_avalon_universal_slave_0_agent_rp_data),                    //                .data
		.rp_startofpacket        (cic_gain_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (cmd_xbar_mux_005_src_ready),                                                       //              cp.ready
		.cp_valid                (cmd_xbar_mux_005_src_valid),                                                       //                .valid
		.cp_data                 (cmd_xbar_mux_005_src_data),                                                        //                .data
		.cp_startofpacket        (cmd_xbar_mux_005_src_startofpacket),                                               //                .startofpacket
		.cp_endofpacket          (cmd_xbar_mux_005_src_endofpacket),                                                 //                .endofpacket
		.cp_channel              (cmd_xbar_mux_005_src_channel),                                                     //                .channel
		.rf_sink_ready           (cic_gain_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (cic_gain_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (cic_gain_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (cic_gain_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (cic_gain_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (cic_gain_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (cic_gain_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (cic_gain_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (cic_gain_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (cic_gain_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (cic_gain_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (cic_gain_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_sink_data    (cic_gain_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.rdata_fifo_src_ready    (cic_gain_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (cic_gain_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (cic_gain_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                                                            //     (terminated)
		.m0_writeresponserequest (),                                                                                 //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                                              //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (101),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) cic_gain_s1_translator_avalon_universal_slave_0_agent_rsp_fifo (
		.clk               (clock_clk_clk),                                                                    //       clk.clk
		.reset             (NIOS_reset_n_reset_bridge_in_reset_reset),                                         // clk_reset.reset
		.in_data           (cic_gain_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //        in.data
		.in_valid          (cic_gain_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //          .valid
		.in_ready          (cic_gain_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (cic_gain_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (cic_gain_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (cic_gain_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (cic_gain_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (cic_gain_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (cic_gain_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (cic_gain_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                                            // (terminated)
		.csr_read          (1'b0),                                                                             // (terminated)
		.csr_write         (1'b0),                                                                             // (terminated)
		.csr_readdata      (),                                                                                 // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                             // (terminated)
		.almost_full_data  (),                                                                                 // (terminated)
		.almost_empty_data (),                                                                                 // (terminated)
		.in_empty          (1'b0),                                                                             // (terminated)
		.out_empty         (),                                                                                 // (terminated)
		.in_error          (1'b0),                                                                             // (terminated)
		.out_error         (),                                                                                 // (terminated)
		.in_channel        (1'b0),                                                                             // (terminated)
		.out_channel       ()                                                                                  // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BEGIN_BURST           (79),
		.PKT_SYMBOL_W              (8),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_ADDR_H                (59),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (60),
		.PKT_TRANS_POSTED          (61),
		.PKT_TRANS_WRITE           (62),
		.PKT_TRANS_READ            (63),
		.PKT_TRANS_LOCK            (64),
		.PKT_SRC_ID_H              (83),
		.PKT_SRC_ID_L              (81),
		.PKT_DEST_ID_H             (86),
		.PKT_DEST_ID_L             (84),
		.PKT_BURSTWRAP_H           (71),
		.PKT_BURSTWRAP_L           (69),
		.PKT_BYTE_CNT_H            (68),
		.PKT_BYTE_CNT_L            (66),
		.PKT_PROTECTION_H          (90),
		.PKT_PROTECTION_L          (88),
		.PKT_RESPONSE_STATUS_H     (96),
		.PKT_RESPONSE_STATUS_L     (95),
		.PKT_BURST_SIZE_H          (74),
		.PKT_BURST_SIZE_L          (72),
		.PKT_ORI_BURST_SIZE_L      (97),
		.PKT_ORI_BURST_SIZE_H      (99),
		.ST_CHANNEL_W              (7),
		.ST_DATA_W                 (100),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0)
	) ps2_slave_translator_avalon_universal_slave_0_agent (
		.clk                     (clock_clk_clk),                                                                  //             clk.clk
		.reset                   (NIOS_reset_n_reset_bridge_in_reset_reset),                                       //       clk_reset.reset
		.m0_address              (ps2_slave_translator_avalon_universal_slave_0_agent_m0_address),                 //              m0.address
		.m0_burstcount           (ps2_slave_translator_avalon_universal_slave_0_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (ps2_slave_translator_avalon_universal_slave_0_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (ps2_slave_translator_avalon_universal_slave_0_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (ps2_slave_translator_avalon_universal_slave_0_agent_m0_lock),                    //                .lock
		.m0_readdata             (ps2_slave_translator_avalon_universal_slave_0_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (ps2_slave_translator_avalon_universal_slave_0_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (ps2_slave_translator_avalon_universal_slave_0_agent_m0_read),                    //                .read
		.m0_waitrequest          (ps2_slave_translator_avalon_universal_slave_0_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (ps2_slave_translator_avalon_universal_slave_0_agent_m0_writedata),               //                .writedata
		.m0_write                (ps2_slave_translator_avalon_universal_slave_0_agent_m0_write),                   //                .write
		.rp_endofpacket          (ps2_slave_translator_avalon_universal_slave_0_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (ps2_slave_translator_avalon_universal_slave_0_agent_rp_ready),                   //                .ready
		.rp_valid                (ps2_slave_translator_avalon_universal_slave_0_agent_rp_valid),                   //                .valid
		.rp_data                 (ps2_slave_translator_avalon_universal_slave_0_agent_rp_data),                    //                .data
		.rp_startofpacket        (ps2_slave_translator_avalon_universal_slave_0_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (cmd_xbar_mux_006_src_ready),                                                     //              cp.ready
		.cp_valid                (cmd_xbar_mux_006_src_valid),                                                     //                .valid
		.cp_data                 (cmd_xbar_mux_006_src_data),                                                      //                .data
		.cp_startofpacket        (cmd_xbar_mux_006_src_startofpacket),                                             //                .startofpacket
		.cp_endofpacket          (cmd_xbar_mux_006_src_endofpacket),                                               //                .endofpacket
		.cp_channel              (cmd_xbar_mux_006_src_channel),                                                   //                .channel
		.rf_sink_ready           (ps2_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (ps2_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (ps2_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (ps2_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (ps2_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (ps2_slave_translator_avalon_universal_slave_0_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (ps2_slave_translator_avalon_universal_slave_0_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (ps2_slave_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (ps2_slave_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (ps2_slave_translator_avalon_universal_slave_0_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (ps2_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (ps2_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_sink_data    (ps2_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.rdata_fifo_src_ready    (ps2_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (ps2_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (ps2_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                                                          //     (terminated)
		.m0_writeresponserequest (),                                                                               //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                                            //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (101),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) ps2_slave_translator_avalon_universal_slave_0_agent_rsp_fifo (
		.clk               (clock_clk_clk),                                                                  //       clk.clk
		.reset             (NIOS_reset_n_reset_bridge_in_reset_reset),                                       // clk_reset.reset
		.in_data           (ps2_slave_translator_avalon_universal_slave_0_agent_rf_source_data),             //        in.data
		.in_valid          (ps2_slave_translator_avalon_universal_slave_0_agent_rf_source_valid),            //          .valid
		.in_ready          (ps2_slave_translator_avalon_universal_slave_0_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (ps2_slave_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (ps2_slave_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (ps2_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (ps2_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (ps2_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (ps2_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (ps2_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                                          // (terminated)
		.csr_read          (1'b0),                                                                           // (terminated)
		.csr_write         (1'b0),                                                                           // (terminated)
		.csr_readdata      (),                                                                               // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                           // (terminated)
		.almost_full_data  (),                                                                               // (terminated)
		.almost_empty_data (),                                                                               // (terminated)
		.in_empty          (1'b0),                                                                           // (terminated)
		.out_empty         (),                                                                               // (terminated)
		.in_error          (1'b0),                                                                           // (terminated)
		.out_error         (),                                                                               // (terminated)
		.in_channel        (1'b0),                                                                           // (terminated)
		.out_channel       ()                                                                                // (terminated)
	);

	qsys_block_mm_interconnect_0_addr_router addr_router (
		.sink_ready         (nios_instruction_master_translator_avalon_universal_master_0_agent_cp_ready),         //      sink.ready
		.sink_valid         (nios_instruction_master_translator_avalon_universal_master_0_agent_cp_valid),         //          .valid
		.sink_data          (nios_instruction_master_translator_avalon_universal_master_0_agent_cp_data),          //          .data
		.sink_startofpacket (nios_instruction_master_translator_avalon_universal_master_0_agent_cp_startofpacket), //          .startofpacket
		.sink_endofpacket   (nios_instruction_master_translator_avalon_universal_master_0_agent_cp_endofpacket),   //          .endofpacket
		.clk                (clock_clk_clk),                                                                       //       clk.clk
		.reset              (NIOS_reset_n_reset_bridge_in_reset_reset),                                            // clk_reset.reset
		.src_ready          (addr_router_src_ready),                                                               //       src.ready
		.src_valid          (addr_router_src_valid),                                                               //          .valid
		.src_data           (addr_router_src_data),                                                                //          .data
		.src_channel        (addr_router_src_channel),                                                             //          .channel
		.src_startofpacket  (addr_router_src_startofpacket),                                                       //          .startofpacket
		.src_endofpacket    (addr_router_src_endofpacket)                                                          //          .endofpacket
	);

	qsys_block_mm_interconnect_0_addr_router_001 addr_router_001 (
		.sink_ready         (nios_data_master_translator_avalon_universal_master_0_agent_cp_ready),         //      sink.ready
		.sink_valid         (nios_data_master_translator_avalon_universal_master_0_agent_cp_valid),         //          .valid
		.sink_data          (nios_data_master_translator_avalon_universal_master_0_agent_cp_data),          //          .data
		.sink_startofpacket (nios_data_master_translator_avalon_universal_master_0_agent_cp_startofpacket), //          .startofpacket
		.sink_endofpacket   (nios_data_master_translator_avalon_universal_master_0_agent_cp_endofpacket),   //          .endofpacket
		.clk                (clock_clk_clk),                                                                //       clk.clk
		.reset              (NIOS_reset_n_reset_bridge_in_reset_reset),                                     // clk_reset.reset
		.src_ready          (addr_router_001_src_ready),                                                    //       src.ready
		.src_valid          (addr_router_001_src_valid),                                                    //          .valid
		.src_data           (addr_router_001_src_data),                                                     //          .data
		.src_channel        (addr_router_001_src_channel),                                                  //          .channel
		.src_startofpacket  (addr_router_001_src_startofpacket),                                            //          .startofpacket
		.src_endofpacket    (addr_router_001_src_endofpacket)                                               //          .endofpacket
	);

	qsys_block_mm_interconnect_0_id_router id_router (
		.sink_ready         (nios_jtag_debug_module_translator_avalon_universal_slave_0_agent_rp_ready),         //      sink.ready
		.sink_valid         (nios_jtag_debug_module_translator_avalon_universal_slave_0_agent_rp_valid),         //          .valid
		.sink_data          (nios_jtag_debug_module_translator_avalon_universal_slave_0_agent_rp_data),          //          .data
		.sink_startofpacket (nios_jtag_debug_module_translator_avalon_universal_slave_0_agent_rp_startofpacket), //          .startofpacket
		.sink_endofpacket   (nios_jtag_debug_module_translator_avalon_universal_slave_0_agent_rp_endofpacket),   //          .endofpacket
		.clk                (clock_clk_clk),                                                                     //       clk.clk
		.reset              (NIOS_reset_n_reset_bridge_in_reset_reset),                                          // clk_reset.reset
		.src_ready          (id_router_src_ready),                                                               //       src.ready
		.src_valid          (id_router_src_valid),                                                               //          .valid
		.src_data           (id_router_src_data),                                                                //          .data
		.src_channel        (id_router_src_channel),                                                             //          .channel
		.src_startofpacket  (id_router_src_startofpacket),                                                       //          .startofpacket
		.src_endofpacket    (id_router_src_endofpacket)                                                          //          .endofpacket
	);

	qsys_block_mm_interconnect_0_id_router id_router_001 (
		.sink_ready         (onchip_ram_s1_translator_avalon_universal_slave_0_agent_rp_ready),         //      sink.ready
		.sink_valid         (onchip_ram_s1_translator_avalon_universal_slave_0_agent_rp_valid),         //          .valid
		.sink_data          (onchip_ram_s1_translator_avalon_universal_slave_0_agent_rp_data),          //          .data
		.sink_startofpacket (onchip_ram_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket), //          .startofpacket
		.sink_endofpacket   (onchip_ram_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),   //          .endofpacket
		.clk                (clock_clk_clk),                                                            //       clk.clk
		.reset              (NIOS_reset_n_reset_bridge_in_reset_reset),                                 // clk_reset.reset
		.src_ready          (id_router_001_src_ready),                                                  //       src.ready
		.src_valid          (id_router_001_src_valid),                                                  //          .valid
		.src_data           (id_router_001_src_data),                                                   //          .data
		.src_channel        (id_router_001_src_channel),                                                //          .channel
		.src_startofpacket  (id_router_001_src_startofpacket),                                          //          .startofpacket
		.src_endofpacket    (id_router_001_src_endofpacket)                                             //          .endofpacket
	);

	qsys_block_mm_interconnect_0_id_router_002 id_router_002 (
		.sink_ready         (pipeline_stage_004_source0_ready),         //      sink.ready
		.sink_valid         (pipeline_stage_004_source0_valid),         //          .valid
		.sink_data          (pipeline_stage_004_source0_data),          //          .data
		.sink_startofpacket (pipeline_stage_004_source0_startofpacket), //          .startofpacket
		.sink_endofpacket   (pipeline_stage_004_source0_endofpacket),   //          .endofpacket
		.clk                (clock_clk_clk),                            //       clk.clk
		.reset              (NIOS_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready          (id_router_002_src_ready),                  //       src.ready
		.src_valid          (id_router_002_src_valid),                  //          .valid
		.src_data           (id_router_002_src_data),                   //          .data
		.src_channel        (id_router_002_src_channel),                //          .channel
		.src_startofpacket  (id_router_002_src_startofpacket),          //          .startofpacket
		.src_endofpacket    (id_router_002_src_endofpacket)             //          .endofpacket
	);

	qsys_block_mm_interconnect_0_id_router_003 id_router_003 (
		.sink_ready         (jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rp_ready),         //      sink.ready
		.sink_valid         (jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rp_valid),         //          .valid
		.sink_data          (jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rp_data),          //          .data
		.sink_startofpacket (jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rp_startofpacket), //          .startofpacket
		.sink_endofpacket   (jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rp_endofpacket),   //          .endofpacket
		.clk                (clock_clk_clk),                                                                          //       clk.clk
		.reset              (NIOS_reset_n_reset_bridge_in_reset_reset),                                               // clk_reset.reset
		.src_ready          (id_router_003_src_ready),                                                                //       src.ready
		.src_valid          (id_router_003_src_valid),                                                                //          .valid
		.src_data           (id_router_003_src_data),                                                                 //          .data
		.src_channel        (id_router_003_src_channel),                                                              //          .channel
		.src_startofpacket  (id_router_003_src_startofpacket),                                                        //          .startofpacket
		.src_endofpacket    (id_router_003_src_endofpacket)                                                           //          .endofpacket
	);

	qsys_block_mm_interconnect_0_id_router_003 id_router_004 (
		.sink_ready         (phase_increment_s1_translator_avalon_universal_slave_0_agent_rp_ready),         //      sink.ready
		.sink_valid         (phase_increment_s1_translator_avalon_universal_slave_0_agent_rp_valid),         //          .valid
		.sink_data          (phase_increment_s1_translator_avalon_universal_slave_0_agent_rp_data),          //          .data
		.sink_startofpacket (phase_increment_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket), //          .startofpacket
		.sink_endofpacket   (phase_increment_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),   //          .endofpacket
		.clk                (clock_clk_clk),                                                                 //       clk.clk
		.reset              (NIOS_reset_n_reset_bridge_in_reset_reset),                                      // clk_reset.reset
		.src_ready          (id_router_004_src_ready),                                                       //       src.ready
		.src_valid          (id_router_004_src_valid),                                                       //          .valid
		.src_data           (id_router_004_src_data),                                                        //          .data
		.src_channel        (id_router_004_src_channel),                                                     //          .channel
		.src_startofpacket  (id_router_004_src_startofpacket),                                               //          .startofpacket
		.src_endofpacket    (id_router_004_src_endofpacket)                                                  //          .endofpacket
	);

	qsys_block_mm_interconnect_0_id_router_003 id_router_005 (
		.sink_ready         (cic_gain_s1_translator_avalon_universal_slave_0_agent_rp_ready),         //      sink.ready
		.sink_valid         (cic_gain_s1_translator_avalon_universal_slave_0_agent_rp_valid),         //          .valid
		.sink_data          (cic_gain_s1_translator_avalon_universal_slave_0_agent_rp_data),          //          .data
		.sink_startofpacket (cic_gain_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket), //          .startofpacket
		.sink_endofpacket   (cic_gain_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),   //          .endofpacket
		.clk                (clock_clk_clk),                                                          //       clk.clk
		.reset              (NIOS_reset_n_reset_bridge_in_reset_reset),                               // clk_reset.reset
		.src_ready          (id_router_005_src_ready),                                                //       src.ready
		.src_valid          (id_router_005_src_valid),                                                //          .valid
		.src_data           (id_router_005_src_data),                                                 //          .data
		.src_channel        (id_router_005_src_channel),                                              //          .channel
		.src_startofpacket  (id_router_005_src_startofpacket),                                        //          .startofpacket
		.src_endofpacket    (id_router_005_src_endofpacket)                                           //          .endofpacket
	);

	qsys_block_mm_interconnect_0_id_router_003 id_router_006 (
		.sink_ready         (ps2_slave_translator_avalon_universal_slave_0_agent_rp_ready),         //      sink.ready
		.sink_valid         (ps2_slave_translator_avalon_universal_slave_0_agent_rp_valid),         //          .valid
		.sink_data          (ps2_slave_translator_avalon_universal_slave_0_agent_rp_data),          //          .data
		.sink_startofpacket (ps2_slave_translator_avalon_universal_slave_0_agent_rp_startofpacket), //          .startofpacket
		.sink_endofpacket   (ps2_slave_translator_avalon_universal_slave_0_agent_rp_endofpacket),   //          .endofpacket
		.clk                (clock_clk_clk),                                                        //       clk.clk
		.reset              (NIOS_reset_n_reset_bridge_in_reset_reset),                             // clk_reset.reset
		.src_ready          (id_router_006_src_ready),                                              //       src.ready
		.src_valid          (id_router_006_src_valid),                                              //          .valid
		.src_data           (id_router_006_src_data),                                               //          .data
		.src_channel        (id_router_006_src_channel),                                            //          .channel
		.src_startofpacket  (id_router_006_src_startofpacket),                                      //          .startofpacket
		.src_endofpacket    (id_router_006_src_endofpacket)                                         //          .endofpacket
	);

	altera_merlin_burst_adapter #(
		.PKT_ADDR_H                (41),
		.PKT_ADDR_L                (18),
		.PKT_BEGIN_BURST           (61),
		.PKT_BYTE_CNT_H            (50),
		.PKT_BYTE_CNT_L            (48),
		.PKT_BYTEEN_H              (17),
		.PKT_BYTEEN_L              (16),
		.PKT_BURST_SIZE_H          (56),
		.PKT_BURST_SIZE_L          (54),
		.PKT_BURST_TYPE_H          (58),
		.PKT_BURST_TYPE_L          (57),
		.PKT_BURSTWRAP_H           (53),
		.PKT_BURSTWRAP_L           (51),
		.PKT_TRANS_COMPRESSED_READ (42),
		.PKT_TRANS_WRITE           (44),
		.PKT_TRANS_READ            (45),
		.OUT_NARROW_SIZE           (0),
		.IN_NARROW_SIZE            (0),
		.OUT_FIXED                 (0),
		.OUT_COMPLETE_WRAP         (0),
		.ST_DATA_W                 (82),
		.ST_CHANNEL_W              (7),
		.OUT_BYTE_CNT_H            (49),
		.OUT_BURSTWRAP_H           (53),
		.COMPRESSED_READ_SUPPORT   (0),
		.BYTEENABLE_SYNTHESIS      (1),
		.PIPE_INPUTS               (0),
		.NO_WRAP_SUPPORT           (0),
		.BURSTWRAP_CONST_MASK      (3),
		.BURSTWRAP_CONST_VALUE     (3)
	) burst_adapter (
		.clk                   (clock_clk_clk),                            //       cr0.clk
		.reset                 (NIOS_reset_n_reset_bridge_in_reset_reset), // cr0_reset.reset
		.sink0_valid           (width_adapter_001_src_valid),              //     sink0.valid
		.sink0_data            (width_adapter_001_src_data),               //          .data
		.sink0_channel         (width_adapter_001_src_channel),            //          .channel
		.sink0_startofpacket   (width_adapter_001_src_startofpacket),      //          .startofpacket
		.sink0_endofpacket     (width_adapter_001_src_endofpacket),        //          .endofpacket
		.sink0_ready           (width_adapter_001_src_ready),              //          .ready
		.source0_valid         (burst_adapter_source0_valid),              //   source0.valid
		.source0_data          (burst_adapter_source0_data),               //          .data
		.source0_channel       (burst_adapter_source0_channel),            //          .channel
		.source0_startofpacket (burst_adapter_source0_startofpacket),      //          .startofpacket
		.source0_endofpacket   (burst_adapter_source0_endofpacket),        //          .endofpacket
		.source0_ready         (burst_adapter_source0_ready)               //          .ready
	);

	qsys_block_mm_interconnect_0_cmd_xbar_demux cmd_xbar_demux (
		.clk                (clock_clk_clk),                            //       clk.clk
		.reset              (NIOS_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (addr_router_src_ready),                    //      sink.ready
		.sink_channel       (addr_router_src_channel),                  //          .channel
		.sink_data          (addr_router_src_data),                     //          .data
		.sink_startofpacket (addr_router_src_startofpacket),            //          .startofpacket
		.sink_endofpacket   (addr_router_src_endofpacket),              //          .endofpacket
		.sink_valid         (addr_router_src_valid),                    //          .valid
		.src0_ready         (cmd_xbar_demux_src0_ready),                //      src0.ready
		.src0_valid         (cmd_xbar_demux_src0_valid),                //          .valid
		.src0_data          (cmd_xbar_demux_src0_data),                 //          .data
		.src0_channel       (cmd_xbar_demux_src0_channel),              //          .channel
		.src0_startofpacket (cmd_xbar_demux_src0_startofpacket),        //          .startofpacket
		.src0_endofpacket   (cmd_xbar_demux_src0_endofpacket),          //          .endofpacket
		.src1_ready         (cmd_xbar_demux_src1_ready),                //      src1.ready
		.src1_valid         (cmd_xbar_demux_src1_valid),                //          .valid
		.src1_data          (cmd_xbar_demux_src1_data),                 //          .data
		.src1_channel       (cmd_xbar_demux_src1_channel),              //          .channel
		.src1_startofpacket (cmd_xbar_demux_src1_startofpacket),        //          .startofpacket
		.src1_endofpacket   (cmd_xbar_demux_src1_endofpacket),          //          .endofpacket
		.src2_ready         (cmd_xbar_demux_src2_ready),                //      src2.ready
		.src2_valid         (cmd_xbar_demux_src2_valid),                //          .valid
		.src2_data          (cmd_xbar_demux_src2_data),                 //          .data
		.src2_channel       (cmd_xbar_demux_src2_channel),              //          .channel
		.src2_startofpacket (cmd_xbar_demux_src2_startofpacket),        //          .startofpacket
		.src2_endofpacket   (cmd_xbar_demux_src2_endofpacket)           //          .endofpacket
	);

	qsys_block_mm_interconnect_0_cmd_xbar_demux_001 cmd_xbar_demux_001 (
		.clk                (clock_clk_clk),                            //       clk.clk
		.reset              (NIOS_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (addr_router_001_src_ready),                //      sink.ready
		.sink_channel       (addr_router_001_src_channel),              //          .channel
		.sink_data          (addr_router_001_src_data),                 //          .data
		.sink_startofpacket (addr_router_001_src_startofpacket),        //          .startofpacket
		.sink_endofpacket   (addr_router_001_src_endofpacket),          //          .endofpacket
		.sink_valid         (addr_router_001_src_valid),                //          .valid
		.src0_ready         (cmd_xbar_demux_001_src0_ready),            //      src0.ready
		.src0_valid         (cmd_xbar_demux_001_src0_valid),            //          .valid
		.src0_data          (cmd_xbar_demux_001_src0_data),             //          .data
		.src0_channel       (cmd_xbar_demux_001_src0_channel),          //          .channel
		.src0_startofpacket (cmd_xbar_demux_001_src0_startofpacket),    //          .startofpacket
		.src0_endofpacket   (cmd_xbar_demux_001_src0_endofpacket),      //          .endofpacket
		.src1_ready         (cmd_xbar_demux_001_src1_ready),            //      src1.ready
		.src1_valid         (cmd_xbar_demux_001_src1_valid),            //          .valid
		.src1_data          (cmd_xbar_demux_001_src1_data),             //          .data
		.src1_channel       (cmd_xbar_demux_001_src1_channel),          //          .channel
		.src1_startofpacket (cmd_xbar_demux_001_src1_startofpacket),    //          .startofpacket
		.src1_endofpacket   (cmd_xbar_demux_001_src1_endofpacket),      //          .endofpacket
		.src2_ready         (cmd_xbar_demux_001_src2_ready),            //      src2.ready
		.src2_valid         (cmd_xbar_demux_001_src2_valid),            //          .valid
		.src2_data          (cmd_xbar_demux_001_src2_data),             //          .data
		.src2_channel       (cmd_xbar_demux_001_src2_channel),          //          .channel
		.src2_startofpacket (cmd_xbar_demux_001_src2_startofpacket),    //          .startofpacket
		.src2_endofpacket   (cmd_xbar_demux_001_src2_endofpacket),      //          .endofpacket
		.src3_ready         (cmd_xbar_demux_001_src3_ready),            //      src3.ready
		.src3_valid         (cmd_xbar_demux_001_src3_valid),            //          .valid
		.src3_data          (cmd_xbar_demux_001_src3_data),             //          .data
		.src3_channel       (cmd_xbar_demux_001_src3_channel),          //          .channel
		.src3_startofpacket (cmd_xbar_demux_001_src3_startofpacket),    //          .startofpacket
		.src3_endofpacket   (cmd_xbar_demux_001_src3_endofpacket),      //          .endofpacket
		.src4_ready         (cmd_xbar_demux_001_src4_ready),            //      src4.ready
		.src4_valid         (cmd_xbar_demux_001_src4_valid),            //          .valid
		.src4_data          (cmd_xbar_demux_001_src4_data),             //          .data
		.src4_channel       (cmd_xbar_demux_001_src4_channel),          //          .channel
		.src4_startofpacket (cmd_xbar_demux_001_src4_startofpacket),    //          .startofpacket
		.src4_endofpacket   (cmd_xbar_demux_001_src4_endofpacket),      //          .endofpacket
		.src5_ready         (cmd_xbar_demux_001_src5_ready),            //      src5.ready
		.src5_valid         (cmd_xbar_demux_001_src5_valid),            //          .valid
		.src5_data          (cmd_xbar_demux_001_src5_data),             //          .data
		.src5_channel       (cmd_xbar_demux_001_src5_channel),          //          .channel
		.src5_startofpacket (cmd_xbar_demux_001_src5_startofpacket),    //          .startofpacket
		.src5_endofpacket   (cmd_xbar_demux_001_src5_endofpacket),      //          .endofpacket
		.src6_ready         (cmd_xbar_demux_001_src6_ready),            //      src6.ready
		.src6_valid         (cmd_xbar_demux_001_src6_valid),            //          .valid
		.src6_data          (cmd_xbar_demux_001_src6_data),             //          .data
		.src6_channel       (cmd_xbar_demux_001_src6_channel),          //          .channel
		.src6_startofpacket (cmd_xbar_demux_001_src6_startofpacket),    //          .startofpacket
		.src6_endofpacket   (cmd_xbar_demux_001_src6_endofpacket)       //          .endofpacket
	);

	qsys_block_mm_interconnect_0_cmd_xbar_mux cmd_xbar_mux (
		.clk                 (clock_clk_clk),                            //       clk.clk
		.reset               (NIOS_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_xbar_mux_src_ready),                   //       src.ready
		.src_valid           (cmd_xbar_mux_src_valid),                   //          .valid
		.src_data            (cmd_xbar_mux_src_data),                    //          .data
		.src_channel         (cmd_xbar_mux_src_channel),                 //          .channel
		.src_startofpacket   (cmd_xbar_mux_src_startofpacket),           //          .startofpacket
		.src_endofpacket     (cmd_xbar_mux_src_endofpacket),             //          .endofpacket
		.sink0_ready         (cmd_xbar_demux_src0_ready),                //     sink0.ready
		.sink0_valid         (cmd_xbar_demux_src0_valid),                //          .valid
		.sink0_channel       (cmd_xbar_demux_src0_channel),              //          .channel
		.sink0_data          (cmd_xbar_demux_src0_data),                 //          .data
		.sink0_startofpacket (cmd_xbar_demux_src0_startofpacket),        //          .startofpacket
		.sink0_endofpacket   (cmd_xbar_demux_src0_endofpacket),          //          .endofpacket
		.sink1_ready         (cmd_xbar_demux_001_src0_ready),            //     sink1.ready
		.sink1_valid         (cmd_xbar_demux_001_src0_valid),            //          .valid
		.sink1_channel       (cmd_xbar_demux_001_src0_channel),          //          .channel
		.sink1_data          (cmd_xbar_demux_001_src0_data),             //          .data
		.sink1_startofpacket (cmd_xbar_demux_001_src0_startofpacket),    //          .startofpacket
		.sink1_endofpacket   (cmd_xbar_demux_001_src0_endofpacket)       //          .endofpacket
	);

	qsys_block_mm_interconnect_0_cmd_xbar_mux cmd_xbar_mux_001 (
		.clk                 (clock_clk_clk),                            //       clk.clk
		.reset               (NIOS_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_xbar_mux_001_src_ready),               //       src.ready
		.src_valid           (cmd_xbar_mux_001_src_valid),               //          .valid
		.src_data            (cmd_xbar_mux_001_src_data),                //          .data
		.src_channel         (cmd_xbar_mux_001_src_channel),             //          .channel
		.src_startofpacket   (cmd_xbar_mux_001_src_startofpacket),       //          .startofpacket
		.src_endofpacket     (cmd_xbar_mux_001_src_endofpacket),         //          .endofpacket
		.sink0_ready         (cmd_xbar_demux_src1_ready),                //     sink0.ready
		.sink0_valid         (cmd_xbar_demux_src1_valid),                //          .valid
		.sink0_channel       (cmd_xbar_demux_src1_channel),              //          .channel
		.sink0_data          (cmd_xbar_demux_src1_data),                 //          .data
		.sink0_startofpacket (cmd_xbar_demux_src1_startofpacket),        //          .startofpacket
		.sink0_endofpacket   (cmd_xbar_demux_src1_endofpacket),          //          .endofpacket
		.sink1_ready         (cmd_xbar_demux_001_src1_ready),            //     sink1.ready
		.sink1_valid         (cmd_xbar_demux_001_src1_valid),            //          .valid
		.sink1_channel       (cmd_xbar_demux_001_src1_channel),          //          .channel
		.sink1_data          (cmd_xbar_demux_001_src1_data),             //          .data
		.sink1_startofpacket (cmd_xbar_demux_001_src1_startofpacket),    //          .startofpacket
		.sink1_endofpacket   (cmd_xbar_demux_001_src1_endofpacket)       //          .endofpacket
	);

	qsys_block_mm_interconnect_0_cmd_xbar_mux cmd_xbar_mux_002 (
		.clk                 (clock_clk_clk),                            //       clk.clk
		.reset               (NIOS_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_xbar_mux_002_src_ready),               //       src.ready
		.src_valid           (cmd_xbar_mux_002_src_valid),               //          .valid
		.src_data            (cmd_xbar_mux_002_src_data),                //          .data
		.src_channel         (cmd_xbar_mux_002_src_channel),             //          .channel
		.src_startofpacket   (cmd_xbar_mux_002_src_startofpacket),       //          .startofpacket
		.src_endofpacket     (cmd_xbar_mux_002_src_endofpacket),         //          .endofpacket
		.sink0_ready         (cmd_xbar_demux_src2_ready),                //     sink0.ready
		.sink0_valid         (cmd_xbar_demux_src2_valid),                //          .valid
		.sink0_channel       (cmd_xbar_demux_src2_channel),              //          .channel
		.sink0_data          (cmd_xbar_demux_src2_data),                 //          .data
		.sink0_startofpacket (cmd_xbar_demux_src2_startofpacket),        //          .startofpacket
		.sink0_endofpacket   (cmd_xbar_demux_src2_endofpacket),          //          .endofpacket
		.sink1_ready         (cmd_xbar_demux_001_src2_ready),            //     sink1.ready
		.sink1_valid         (cmd_xbar_demux_001_src2_valid),            //          .valid
		.sink1_channel       (cmd_xbar_demux_001_src2_channel),          //          .channel
		.sink1_data          (cmd_xbar_demux_001_src2_data),             //          .data
		.sink1_startofpacket (cmd_xbar_demux_001_src2_startofpacket),    //          .startofpacket
		.sink1_endofpacket   (cmd_xbar_demux_001_src2_endofpacket)       //          .endofpacket
	);

	qsys_block_mm_interconnect_0_cmd_xbar_mux_003 cmd_xbar_mux_003 (
		.clk                 (clock_clk_clk),                            //       clk.clk
		.reset               (NIOS_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_xbar_mux_003_src_ready),               //       src.ready
		.src_valid           (cmd_xbar_mux_003_src_valid),               //          .valid
		.src_data            (cmd_xbar_mux_003_src_data),                //          .data
		.src_channel         (cmd_xbar_mux_003_src_channel),             //          .channel
		.src_startofpacket   (cmd_xbar_mux_003_src_startofpacket),       //          .startofpacket
		.src_endofpacket     (cmd_xbar_mux_003_src_endofpacket),         //          .endofpacket
		.sink0_ready         (cmd_xbar_demux_001_src3_ready),            //     sink0.ready
		.sink0_valid         (cmd_xbar_demux_001_src3_valid),            //          .valid
		.sink0_channel       (cmd_xbar_demux_001_src3_channel),          //          .channel
		.sink0_data          (cmd_xbar_demux_001_src3_data),             //          .data
		.sink0_startofpacket (cmd_xbar_demux_001_src3_startofpacket),    //          .startofpacket
		.sink0_endofpacket   (cmd_xbar_demux_001_src3_endofpacket)       //          .endofpacket
	);

	qsys_block_mm_interconnect_0_cmd_xbar_mux_003 cmd_xbar_mux_004 (
		.clk                 (clock_clk_clk),                            //       clk.clk
		.reset               (NIOS_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_xbar_mux_004_src_ready),               //       src.ready
		.src_valid           (cmd_xbar_mux_004_src_valid),               //          .valid
		.src_data            (cmd_xbar_mux_004_src_data),                //          .data
		.src_channel         (cmd_xbar_mux_004_src_channel),             //          .channel
		.src_startofpacket   (cmd_xbar_mux_004_src_startofpacket),       //          .startofpacket
		.src_endofpacket     (cmd_xbar_mux_004_src_endofpacket),         //          .endofpacket
		.sink0_ready         (cmd_xbar_demux_001_src4_ready),            //     sink0.ready
		.sink0_valid         (cmd_xbar_demux_001_src4_valid),            //          .valid
		.sink0_channel       (cmd_xbar_demux_001_src4_channel),          //          .channel
		.sink0_data          (cmd_xbar_demux_001_src4_data),             //          .data
		.sink0_startofpacket (cmd_xbar_demux_001_src4_startofpacket),    //          .startofpacket
		.sink0_endofpacket   (cmd_xbar_demux_001_src4_endofpacket)       //          .endofpacket
	);

	qsys_block_mm_interconnect_0_cmd_xbar_mux_003 cmd_xbar_mux_005 (
		.clk                 (clock_clk_clk),                            //       clk.clk
		.reset               (NIOS_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_xbar_mux_005_src_ready),               //       src.ready
		.src_valid           (cmd_xbar_mux_005_src_valid),               //          .valid
		.src_data            (cmd_xbar_mux_005_src_data),                //          .data
		.src_channel         (cmd_xbar_mux_005_src_channel),             //          .channel
		.src_startofpacket   (cmd_xbar_mux_005_src_startofpacket),       //          .startofpacket
		.src_endofpacket     (cmd_xbar_mux_005_src_endofpacket),         //          .endofpacket
		.sink0_ready         (cmd_xbar_demux_001_src5_ready),            //     sink0.ready
		.sink0_valid         (cmd_xbar_demux_001_src5_valid),            //          .valid
		.sink0_channel       (cmd_xbar_demux_001_src5_channel),          //          .channel
		.sink0_data          (cmd_xbar_demux_001_src5_data),             //          .data
		.sink0_startofpacket (cmd_xbar_demux_001_src5_startofpacket),    //          .startofpacket
		.sink0_endofpacket   (cmd_xbar_demux_001_src5_endofpacket)       //          .endofpacket
	);

	qsys_block_mm_interconnect_0_cmd_xbar_mux_003 cmd_xbar_mux_006 (
		.clk                 (clock_clk_clk),                            //       clk.clk
		.reset               (NIOS_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_xbar_mux_006_src_ready),               //       src.ready
		.src_valid           (cmd_xbar_mux_006_src_valid),               //          .valid
		.src_data            (cmd_xbar_mux_006_src_data),                //          .data
		.src_channel         (cmd_xbar_mux_006_src_channel),             //          .channel
		.src_startofpacket   (cmd_xbar_mux_006_src_startofpacket),       //          .startofpacket
		.src_endofpacket     (cmd_xbar_mux_006_src_endofpacket),         //          .endofpacket
		.sink0_ready         (cmd_xbar_demux_001_src6_ready),            //     sink0.ready
		.sink0_valid         (cmd_xbar_demux_001_src6_valid),            //          .valid
		.sink0_channel       (cmd_xbar_demux_001_src6_channel),          //          .channel
		.sink0_data          (cmd_xbar_demux_001_src6_data),             //          .data
		.sink0_startofpacket (cmd_xbar_demux_001_src6_startofpacket),    //          .startofpacket
		.sink0_endofpacket   (cmd_xbar_demux_001_src6_endofpacket)       //          .endofpacket
	);

	qsys_block_mm_interconnect_0_rsp_xbar_demux rsp_xbar_demux (
		.clk                (clock_clk_clk),                            //       clk.clk
		.reset              (NIOS_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (id_router_src_ready),                      //      sink.ready
		.sink_channel       (id_router_src_channel),                    //          .channel
		.sink_data          (id_router_src_data),                       //          .data
		.sink_startofpacket (id_router_src_startofpacket),              //          .startofpacket
		.sink_endofpacket   (id_router_src_endofpacket),                //          .endofpacket
		.sink_valid         (id_router_src_valid),                      //          .valid
		.src0_ready         (rsp_xbar_demux_src0_ready),                //      src0.ready
		.src0_valid         (rsp_xbar_demux_src0_valid),                //          .valid
		.src0_data          (rsp_xbar_demux_src0_data),                 //          .data
		.src0_channel       (rsp_xbar_demux_src0_channel),              //          .channel
		.src0_startofpacket (rsp_xbar_demux_src0_startofpacket),        //          .startofpacket
		.src0_endofpacket   (rsp_xbar_demux_src0_endofpacket),          //          .endofpacket
		.src1_ready         (rsp_xbar_demux_src1_ready),                //      src1.ready
		.src1_valid         (rsp_xbar_demux_src1_valid),                //          .valid
		.src1_data          (rsp_xbar_demux_src1_data),                 //          .data
		.src1_channel       (rsp_xbar_demux_src1_channel),              //          .channel
		.src1_startofpacket (rsp_xbar_demux_src1_startofpacket),        //          .startofpacket
		.src1_endofpacket   (rsp_xbar_demux_src1_endofpacket)           //          .endofpacket
	);

	qsys_block_mm_interconnect_0_rsp_xbar_demux rsp_xbar_demux_001 (
		.clk                (clock_clk_clk),                            //       clk.clk
		.reset              (NIOS_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (id_router_001_src_ready),                  //      sink.ready
		.sink_channel       (id_router_001_src_channel),                //          .channel
		.sink_data          (id_router_001_src_data),                   //          .data
		.sink_startofpacket (id_router_001_src_startofpacket),          //          .startofpacket
		.sink_endofpacket   (id_router_001_src_endofpacket),            //          .endofpacket
		.sink_valid         (id_router_001_src_valid),                  //          .valid
		.src0_ready         (rsp_xbar_demux_001_src0_ready),            //      src0.ready
		.src0_valid         (rsp_xbar_demux_001_src0_valid),            //          .valid
		.src0_data          (rsp_xbar_demux_001_src0_data),             //          .data
		.src0_channel       (rsp_xbar_demux_001_src0_channel),          //          .channel
		.src0_startofpacket (rsp_xbar_demux_001_src0_startofpacket),    //          .startofpacket
		.src0_endofpacket   (rsp_xbar_demux_001_src0_endofpacket),      //          .endofpacket
		.src1_ready         (rsp_xbar_demux_001_src1_ready),            //      src1.ready
		.src1_valid         (rsp_xbar_demux_001_src1_valid),            //          .valid
		.src1_data          (rsp_xbar_demux_001_src1_data),             //          .data
		.src1_channel       (rsp_xbar_demux_001_src1_channel),          //          .channel
		.src1_startofpacket (rsp_xbar_demux_001_src1_startofpacket),    //          .startofpacket
		.src1_endofpacket   (rsp_xbar_demux_001_src1_endofpacket)       //          .endofpacket
	);

	qsys_block_mm_interconnect_0_rsp_xbar_demux rsp_xbar_demux_002 (
		.clk                (clock_clk_clk),                            //       clk.clk
		.reset              (NIOS_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (width_adapter_src_ready),                  //      sink.ready
		.sink_channel       (width_adapter_src_channel),                //          .channel
		.sink_data          (width_adapter_src_data),                   //          .data
		.sink_startofpacket (width_adapter_src_startofpacket),          //          .startofpacket
		.sink_endofpacket   (width_adapter_src_endofpacket),            //          .endofpacket
		.sink_valid         (width_adapter_src_valid),                  //          .valid
		.src0_ready         (rsp_xbar_demux_002_src0_ready),            //      src0.ready
		.src0_valid         (rsp_xbar_demux_002_src0_valid),            //          .valid
		.src0_data          (rsp_xbar_demux_002_src0_data),             //          .data
		.src0_channel       (rsp_xbar_demux_002_src0_channel),          //          .channel
		.src0_startofpacket (rsp_xbar_demux_002_src0_startofpacket),    //          .startofpacket
		.src0_endofpacket   (rsp_xbar_demux_002_src0_endofpacket),      //          .endofpacket
		.src1_ready         (rsp_xbar_demux_002_src1_ready),            //      src1.ready
		.src1_valid         (rsp_xbar_demux_002_src1_valid),            //          .valid
		.src1_data          (rsp_xbar_demux_002_src1_data),             //          .data
		.src1_channel       (rsp_xbar_demux_002_src1_channel),          //          .channel
		.src1_startofpacket (rsp_xbar_demux_002_src1_startofpacket),    //          .startofpacket
		.src1_endofpacket   (rsp_xbar_demux_002_src1_endofpacket)       //          .endofpacket
	);

	qsys_block_mm_interconnect_0_rsp_xbar_demux_003 rsp_xbar_demux_003 (
		.clk                (clock_clk_clk),                            //       clk.clk
		.reset              (NIOS_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (pipeline_stage_005_source0_ready),         //      sink.ready
		.sink_channel       (pipeline_stage_005_source0_channel),       //          .channel
		.sink_data          (pipeline_stage_005_source0_data),          //          .data
		.sink_startofpacket (pipeline_stage_005_source0_startofpacket), //          .startofpacket
		.sink_endofpacket   (pipeline_stage_005_source0_endofpacket),   //          .endofpacket
		.sink_valid         (pipeline_stage_005_source0_valid),         //          .valid
		.src0_ready         (rsp_xbar_demux_003_src0_ready),            //      src0.ready
		.src0_valid         (rsp_xbar_demux_003_src0_valid),            //          .valid
		.src0_data          (rsp_xbar_demux_003_src0_data),             //          .data
		.src0_channel       (rsp_xbar_demux_003_src0_channel),          //          .channel
		.src0_startofpacket (rsp_xbar_demux_003_src0_startofpacket),    //          .startofpacket
		.src0_endofpacket   (rsp_xbar_demux_003_src0_endofpacket)       //          .endofpacket
	);

	qsys_block_mm_interconnect_0_rsp_xbar_demux_003 rsp_xbar_demux_004 (
		.clk                (clock_clk_clk),                            //       clk.clk
		.reset              (NIOS_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (id_router_004_src_ready),                  //      sink.ready
		.sink_channel       (id_router_004_src_channel),                //          .channel
		.sink_data          (id_router_004_src_data),                   //          .data
		.sink_startofpacket (id_router_004_src_startofpacket),          //          .startofpacket
		.sink_endofpacket   (id_router_004_src_endofpacket),            //          .endofpacket
		.sink_valid         (id_router_004_src_valid),                  //          .valid
		.src0_ready         (rsp_xbar_demux_004_src0_ready),            //      src0.ready
		.src0_valid         (rsp_xbar_demux_004_src0_valid),            //          .valid
		.src0_data          (rsp_xbar_demux_004_src0_data),             //          .data
		.src0_channel       (rsp_xbar_demux_004_src0_channel),          //          .channel
		.src0_startofpacket (rsp_xbar_demux_004_src0_startofpacket),    //          .startofpacket
		.src0_endofpacket   (rsp_xbar_demux_004_src0_endofpacket)       //          .endofpacket
	);

	qsys_block_mm_interconnect_0_rsp_xbar_demux_003 rsp_xbar_demux_005 (
		.clk                (clock_clk_clk),                            //       clk.clk
		.reset              (NIOS_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (id_router_005_src_ready),                  //      sink.ready
		.sink_channel       (id_router_005_src_channel),                //          .channel
		.sink_data          (id_router_005_src_data),                   //          .data
		.sink_startofpacket (id_router_005_src_startofpacket),          //          .startofpacket
		.sink_endofpacket   (id_router_005_src_endofpacket),            //          .endofpacket
		.sink_valid         (id_router_005_src_valid),                  //          .valid
		.src0_ready         (rsp_xbar_demux_005_src0_ready),            //      src0.ready
		.src0_valid         (rsp_xbar_demux_005_src0_valid),            //          .valid
		.src0_data          (rsp_xbar_demux_005_src0_data),             //          .data
		.src0_channel       (rsp_xbar_demux_005_src0_channel),          //          .channel
		.src0_startofpacket (rsp_xbar_demux_005_src0_startofpacket),    //          .startofpacket
		.src0_endofpacket   (rsp_xbar_demux_005_src0_endofpacket)       //          .endofpacket
	);

	qsys_block_mm_interconnect_0_rsp_xbar_demux_003 rsp_xbar_demux_006 (
		.clk                (clock_clk_clk),                            //       clk.clk
		.reset              (NIOS_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (id_router_006_src_ready),                  //      sink.ready
		.sink_channel       (id_router_006_src_channel),                //          .channel
		.sink_data          (id_router_006_src_data),                   //          .data
		.sink_startofpacket (id_router_006_src_startofpacket),          //          .startofpacket
		.sink_endofpacket   (id_router_006_src_endofpacket),            //          .endofpacket
		.sink_valid         (id_router_006_src_valid),                  //          .valid
		.src0_ready         (rsp_xbar_demux_006_src0_ready),            //      src0.ready
		.src0_valid         (rsp_xbar_demux_006_src0_valid),            //          .valid
		.src0_data          (rsp_xbar_demux_006_src0_data),             //          .data
		.src0_channel       (rsp_xbar_demux_006_src0_channel),          //          .channel
		.src0_startofpacket (rsp_xbar_demux_006_src0_startofpacket),    //          .startofpacket
		.src0_endofpacket   (rsp_xbar_demux_006_src0_endofpacket)       //          .endofpacket
	);

	qsys_block_mm_interconnect_0_rsp_xbar_mux rsp_xbar_mux (
		.clk                 (clock_clk_clk),                            //       clk.clk
		.reset               (NIOS_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (rsp_xbar_mux_src_ready),                   //       src.ready
		.src_valid           (rsp_xbar_mux_src_valid),                   //          .valid
		.src_data            (rsp_xbar_mux_src_data),                    //          .data
		.src_channel         (rsp_xbar_mux_src_channel),                 //          .channel
		.src_startofpacket   (rsp_xbar_mux_src_startofpacket),           //          .startofpacket
		.src_endofpacket     (rsp_xbar_mux_src_endofpacket),             //          .endofpacket
		.sink0_ready         (pipeline_stage_003_source0_ready),         //     sink0.ready
		.sink0_valid         (pipeline_stage_003_source0_valid),         //          .valid
		.sink0_channel       (pipeline_stage_003_source0_channel),       //          .channel
		.sink0_data          (pipeline_stage_003_source0_data),          //          .data
		.sink0_startofpacket (pipeline_stage_003_source0_startofpacket), //          .startofpacket
		.sink0_endofpacket   (pipeline_stage_003_source0_endofpacket),   //          .endofpacket
		.sink1_ready         (pipeline_stage_002_source0_ready),         //     sink1.ready
		.sink1_valid         (pipeline_stage_002_source0_valid),         //          .valid
		.sink1_channel       (pipeline_stage_002_source0_channel),       //          .channel
		.sink1_data          (pipeline_stage_002_source0_data),          //          .data
		.sink1_startofpacket (pipeline_stage_002_source0_startofpacket), //          .startofpacket
		.sink1_endofpacket   (pipeline_stage_002_source0_endofpacket),   //          .endofpacket
		.sink2_ready         (rsp_xbar_demux_002_src0_ready),            //     sink2.ready
		.sink2_valid         (rsp_xbar_demux_002_src0_valid),            //          .valid
		.sink2_channel       (rsp_xbar_demux_002_src0_channel),          //          .channel
		.sink2_data          (rsp_xbar_demux_002_src0_data),             //          .data
		.sink2_startofpacket (rsp_xbar_demux_002_src0_startofpacket),    //          .startofpacket
		.sink2_endofpacket   (rsp_xbar_demux_002_src0_endofpacket)       //          .endofpacket
	);

	qsys_block_mm_interconnect_0_rsp_xbar_mux_001 rsp_xbar_mux_001 (
		.clk                 (clock_clk_clk),                            //       clk.clk
		.reset               (NIOS_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (rsp_xbar_mux_001_src_ready),               //       src.ready
		.src_valid           (rsp_xbar_mux_001_src_valid),               //          .valid
		.src_data            (rsp_xbar_mux_001_src_data),                //          .data
		.src_channel         (rsp_xbar_mux_001_src_channel),             //          .channel
		.src_startofpacket   (rsp_xbar_mux_001_src_startofpacket),       //          .startofpacket
		.src_endofpacket     (rsp_xbar_mux_001_src_endofpacket),         //          .endofpacket
		.sink0_ready         (rsp_xbar_demux_src1_ready),                //     sink0.ready
		.sink0_valid         (rsp_xbar_demux_src1_valid),                //          .valid
		.sink0_channel       (rsp_xbar_demux_src1_channel),              //          .channel
		.sink0_data          (rsp_xbar_demux_src1_data),                 //          .data
		.sink0_startofpacket (rsp_xbar_demux_src1_startofpacket),        //          .startofpacket
		.sink0_endofpacket   (rsp_xbar_demux_src1_endofpacket),          //          .endofpacket
		.sink1_ready         (rsp_xbar_demux_001_src1_ready),            //     sink1.ready
		.sink1_valid         (rsp_xbar_demux_001_src1_valid),            //          .valid
		.sink1_channel       (rsp_xbar_demux_001_src1_channel),          //          .channel
		.sink1_data          (rsp_xbar_demux_001_src1_data),             //          .data
		.sink1_startofpacket (rsp_xbar_demux_001_src1_startofpacket),    //          .startofpacket
		.sink1_endofpacket   (rsp_xbar_demux_001_src1_endofpacket),      //          .endofpacket
		.sink2_ready         (rsp_xbar_demux_002_src1_ready),            //     sink2.ready
		.sink2_valid         (rsp_xbar_demux_002_src1_valid),            //          .valid
		.sink2_channel       (rsp_xbar_demux_002_src1_channel),          //          .channel
		.sink2_data          (rsp_xbar_demux_002_src1_data),             //          .data
		.sink2_startofpacket (rsp_xbar_demux_002_src1_startofpacket),    //          .startofpacket
		.sink2_endofpacket   (rsp_xbar_demux_002_src1_endofpacket),      //          .endofpacket
		.sink3_ready         (rsp_xbar_demux_003_src0_ready),            //     sink3.ready
		.sink3_valid         (rsp_xbar_demux_003_src0_valid),            //          .valid
		.sink3_channel       (rsp_xbar_demux_003_src0_channel),          //          .channel
		.sink3_data          (rsp_xbar_demux_003_src0_data),             //          .data
		.sink3_startofpacket (rsp_xbar_demux_003_src0_startofpacket),    //          .startofpacket
		.sink3_endofpacket   (rsp_xbar_demux_003_src0_endofpacket),      //          .endofpacket
		.sink4_ready         (rsp_xbar_demux_004_src0_ready),            //     sink4.ready
		.sink4_valid         (rsp_xbar_demux_004_src0_valid),            //          .valid
		.sink4_channel       (rsp_xbar_demux_004_src0_channel),          //          .channel
		.sink4_data          (rsp_xbar_demux_004_src0_data),             //          .data
		.sink4_startofpacket (rsp_xbar_demux_004_src0_startofpacket),    //          .startofpacket
		.sink4_endofpacket   (rsp_xbar_demux_004_src0_endofpacket),      //          .endofpacket
		.sink5_ready         (rsp_xbar_demux_005_src0_ready),            //     sink5.ready
		.sink5_valid         (rsp_xbar_demux_005_src0_valid),            //          .valid
		.sink5_channel       (rsp_xbar_demux_005_src0_channel),          //          .channel
		.sink5_data          (rsp_xbar_demux_005_src0_data),             //          .data
		.sink5_startofpacket (rsp_xbar_demux_005_src0_startofpacket),    //          .startofpacket
		.sink5_endofpacket   (rsp_xbar_demux_005_src0_endofpacket),      //          .endofpacket
		.sink6_ready         (rsp_xbar_demux_006_src0_ready),            //     sink6.ready
		.sink6_valid         (rsp_xbar_demux_006_src0_valid),            //          .valid
		.sink6_channel       (rsp_xbar_demux_006_src0_channel),          //          .channel
		.sink6_data          (rsp_xbar_demux_006_src0_data),             //          .data
		.sink6_startofpacket (rsp_xbar_demux_006_src0_startofpacket),    //          .startofpacket
		.sink6_endofpacket   (rsp_xbar_demux_006_src0_endofpacket)       //          .endofpacket
	);

	altera_merlin_width_adapter #(
		.IN_PKT_ADDR_H                 (41),
		.IN_PKT_ADDR_L                 (18),
		.IN_PKT_DATA_H                 (15),
		.IN_PKT_DATA_L                 (0),
		.IN_PKT_BYTEEN_H               (17),
		.IN_PKT_BYTEEN_L               (16),
		.IN_PKT_BYTE_CNT_H             (50),
		.IN_PKT_BYTE_CNT_L             (48),
		.IN_PKT_TRANS_COMPRESSED_READ  (42),
		.IN_PKT_BURSTWRAP_H            (53),
		.IN_PKT_BURSTWRAP_L            (51),
		.IN_PKT_BURST_SIZE_H           (56),
		.IN_PKT_BURST_SIZE_L           (54),
		.IN_PKT_RESPONSE_STATUS_H      (78),
		.IN_PKT_RESPONSE_STATUS_L      (77),
		.IN_PKT_TRANS_EXCLUSIVE        (47),
		.IN_PKT_BURST_TYPE_H           (58),
		.IN_PKT_BURST_TYPE_L           (57),
		.IN_PKT_ORI_BURST_SIZE_L       (79),
		.IN_PKT_ORI_BURST_SIZE_H       (81),
		.IN_ST_DATA_W                  (82),
		.OUT_PKT_ADDR_H                (59),
		.OUT_PKT_ADDR_L                (36),
		.OUT_PKT_DATA_H                (31),
		.OUT_PKT_DATA_L                (0),
		.OUT_PKT_BYTEEN_H              (35),
		.OUT_PKT_BYTEEN_L              (32),
		.OUT_PKT_BYTE_CNT_H            (68),
		.OUT_PKT_BYTE_CNT_L            (66),
		.OUT_PKT_TRANS_COMPRESSED_READ (60),
		.OUT_PKT_BURST_SIZE_H          (74),
		.OUT_PKT_BURST_SIZE_L          (72),
		.OUT_PKT_RESPONSE_STATUS_H     (96),
		.OUT_PKT_RESPONSE_STATUS_L     (95),
		.OUT_PKT_TRANS_EXCLUSIVE       (65),
		.OUT_PKT_BURST_TYPE_H          (76),
		.OUT_PKT_BURST_TYPE_L          (75),
		.OUT_PKT_ORI_BURST_SIZE_L      (97),
		.OUT_PKT_ORI_BURST_SIZE_H      (99),
		.OUT_ST_DATA_W                 (100),
		.ST_CHANNEL_W                  (7),
		.OPTIMIZE_FOR_RSP              (1),
		.RESPONSE_PATH                 (1),
		.CONSTANT_BURST_SIZE           (1),
		.PACKING                       (1)
	) width_adapter (
		.clk                  (clock_clk_clk),                            //       clk.clk
		.reset                (NIOS_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.in_valid             (id_router_002_src_valid),                  //      sink.valid
		.in_channel           (id_router_002_src_channel),                //          .channel
		.in_startofpacket     (id_router_002_src_startofpacket),          //          .startofpacket
		.in_endofpacket       (id_router_002_src_endofpacket),            //          .endofpacket
		.in_ready             (id_router_002_src_ready),                  //          .ready
		.in_data              (id_router_002_src_data),                   //          .data
		.out_endofpacket      (width_adapter_src_endofpacket),            //       src.endofpacket
		.out_data             (width_adapter_src_data),                   //          .data
		.out_channel          (width_adapter_src_channel),                //          .channel
		.out_valid            (width_adapter_src_valid),                  //          .valid
		.out_ready            (width_adapter_src_ready),                  //          .ready
		.out_startofpacket    (width_adapter_src_startofpacket),          //          .startofpacket
		.in_command_size_data (3'b000)                                    // (terminated)
	);

	altera_merlin_width_adapter #(
		.IN_PKT_ADDR_H                 (59),
		.IN_PKT_ADDR_L                 (36),
		.IN_PKT_DATA_H                 (31),
		.IN_PKT_DATA_L                 (0),
		.IN_PKT_BYTEEN_H               (35),
		.IN_PKT_BYTEEN_L               (32),
		.IN_PKT_BYTE_CNT_H             (68),
		.IN_PKT_BYTE_CNT_L             (66),
		.IN_PKT_TRANS_COMPRESSED_READ  (60),
		.IN_PKT_BURSTWRAP_H            (71),
		.IN_PKT_BURSTWRAP_L            (69),
		.IN_PKT_BURST_SIZE_H           (74),
		.IN_PKT_BURST_SIZE_L           (72),
		.IN_PKT_RESPONSE_STATUS_H      (96),
		.IN_PKT_RESPONSE_STATUS_L      (95),
		.IN_PKT_TRANS_EXCLUSIVE        (65),
		.IN_PKT_BURST_TYPE_H           (76),
		.IN_PKT_BURST_TYPE_L           (75),
		.IN_PKT_ORI_BURST_SIZE_L       (97),
		.IN_PKT_ORI_BURST_SIZE_H       (99),
		.IN_ST_DATA_W                  (100),
		.OUT_PKT_ADDR_H                (41),
		.OUT_PKT_ADDR_L                (18),
		.OUT_PKT_DATA_H                (15),
		.OUT_PKT_DATA_L                (0),
		.OUT_PKT_BYTEEN_H              (17),
		.OUT_PKT_BYTEEN_L              (16),
		.OUT_PKT_BYTE_CNT_H            (50),
		.OUT_PKT_BYTE_CNT_L            (48),
		.OUT_PKT_TRANS_COMPRESSED_READ (42),
		.OUT_PKT_BURST_SIZE_H          (56),
		.OUT_PKT_BURST_SIZE_L          (54),
		.OUT_PKT_RESPONSE_STATUS_H     (78),
		.OUT_PKT_RESPONSE_STATUS_L     (77),
		.OUT_PKT_TRANS_EXCLUSIVE       (47),
		.OUT_PKT_BURST_TYPE_H          (58),
		.OUT_PKT_BURST_TYPE_L          (57),
		.OUT_PKT_ORI_BURST_SIZE_L      (79),
		.OUT_PKT_ORI_BURST_SIZE_H      (81),
		.OUT_ST_DATA_W                 (82),
		.ST_CHANNEL_W                  (7),
		.OPTIMIZE_FOR_RSP              (0),
		.RESPONSE_PATH                 (0),
		.CONSTANT_BURST_SIZE           (1),
		.PACKING                       (1)
	) width_adapter_001 (
		.clk                  (clock_clk_clk),                            //       clk.clk
		.reset                (NIOS_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.in_valid             (cmd_xbar_mux_002_src_valid),               //      sink.valid
		.in_channel           (cmd_xbar_mux_002_src_channel),             //          .channel
		.in_startofpacket     (cmd_xbar_mux_002_src_startofpacket),       //          .startofpacket
		.in_endofpacket       (cmd_xbar_mux_002_src_endofpacket),         //          .endofpacket
		.in_ready             (cmd_xbar_mux_002_src_ready),               //          .ready
		.in_data              (cmd_xbar_mux_002_src_data),                //          .data
		.out_endofpacket      (width_adapter_001_src_endofpacket),        //       src.endofpacket
		.out_data             (width_adapter_001_src_data),               //          .data
		.out_channel          (width_adapter_001_src_channel),            //          .channel
		.out_valid            (width_adapter_001_src_valid),              //          .valid
		.out_ready            (width_adapter_001_src_ready),              //          .ready
		.out_startofpacket    (width_adapter_001_src_startofpacket),      //          .startofpacket
		.in_command_size_data (3'b000)                                    // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (100),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (7),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) pipeline_stage (
		.clk               (clock_clk_clk),                            //       cr0.clk
		.reset             (NIOS_reset_n_reset_bridge_in_reset_reset), // cr0_reset.reset
		.in_ready          (cmd_xbar_mux_001_src_ready),               //     sink0.ready
		.in_valid          (cmd_xbar_mux_001_src_valid),               //          .valid
		.in_startofpacket  (cmd_xbar_mux_001_src_startofpacket),       //          .startofpacket
		.in_endofpacket    (cmd_xbar_mux_001_src_endofpacket),         //          .endofpacket
		.in_data           (cmd_xbar_mux_001_src_data),                //          .data
		.in_channel        (cmd_xbar_mux_001_src_channel),             //          .channel
		.out_ready         (pipeline_stage_source0_ready),             //   source0.ready
		.out_valid         (pipeline_stage_source0_valid),             //          .valid
		.out_startofpacket (pipeline_stage_source0_startofpacket),     //          .startofpacket
		.out_endofpacket   (pipeline_stage_source0_endofpacket),       //          .endofpacket
		.out_data          (pipeline_stage_source0_data),              //          .data
		.out_channel       (pipeline_stage_source0_channel),           //          .channel
		.in_empty          (1'b0),                                     // (terminated)
		.out_empty         (),                                         // (terminated)
		.out_error         (),                                         // (terminated)
		.in_error          (1'b0)                                      // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (82),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (7),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) pipeline_stage_001 (
		.clk               (clock_clk_clk),                            //       cr0.clk
		.reset             (NIOS_reset_n_reset_bridge_in_reset_reset), // cr0_reset.reset
		.in_ready          (burst_adapter_source0_ready),              //     sink0.ready
		.in_valid          (burst_adapter_source0_valid),              //          .valid
		.in_startofpacket  (burst_adapter_source0_startofpacket),      //          .startofpacket
		.in_endofpacket    (burst_adapter_source0_endofpacket),        //          .endofpacket
		.in_data           (burst_adapter_source0_data),               //          .data
		.in_channel        (burst_adapter_source0_channel),            //          .channel
		.out_ready         (pipeline_stage_001_source0_ready),         //   source0.ready
		.out_valid         (pipeline_stage_001_source0_valid),         //          .valid
		.out_startofpacket (pipeline_stage_001_source0_startofpacket), //          .startofpacket
		.out_endofpacket   (pipeline_stage_001_source0_endofpacket),   //          .endofpacket
		.out_data          (pipeline_stage_001_source0_data),          //          .data
		.out_channel       (pipeline_stage_001_source0_channel),       //          .channel
		.in_empty          (1'b0),                                     // (terminated)
		.out_empty         (),                                         // (terminated)
		.out_error         (),                                         // (terminated)
		.in_error          (1'b0)                                      // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (100),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (7),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) pipeline_stage_002 (
		.clk               (clock_clk_clk),                            //       cr0.clk
		.reset             (NIOS_reset_n_reset_bridge_in_reset_reset), // cr0_reset.reset
		.in_ready          (rsp_xbar_demux_001_src0_ready),            //     sink0.ready
		.in_valid          (rsp_xbar_demux_001_src0_valid),            //          .valid
		.in_startofpacket  (rsp_xbar_demux_001_src0_startofpacket),    //          .startofpacket
		.in_endofpacket    (rsp_xbar_demux_001_src0_endofpacket),      //          .endofpacket
		.in_data           (rsp_xbar_demux_001_src0_data),             //          .data
		.in_channel        (rsp_xbar_demux_001_src0_channel),          //          .channel
		.out_ready         (pipeline_stage_002_source0_ready),         //   source0.ready
		.out_valid         (pipeline_stage_002_source0_valid),         //          .valid
		.out_startofpacket (pipeline_stage_002_source0_startofpacket), //          .startofpacket
		.out_endofpacket   (pipeline_stage_002_source0_endofpacket),   //          .endofpacket
		.out_data          (pipeline_stage_002_source0_data),          //          .data
		.out_channel       (pipeline_stage_002_source0_channel),       //          .channel
		.in_empty          (1'b0),                                     // (terminated)
		.out_empty         (),                                         // (terminated)
		.out_error         (),                                         // (terminated)
		.in_error          (1'b0)                                      // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (100),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (7),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) pipeline_stage_003 (
		.clk               (clock_clk_clk),                            //       cr0.clk
		.reset             (NIOS_reset_n_reset_bridge_in_reset_reset), // cr0_reset.reset
		.in_ready          (rsp_xbar_demux_src0_ready),                //     sink0.ready
		.in_valid          (rsp_xbar_demux_src0_valid),                //          .valid
		.in_startofpacket  (rsp_xbar_demux_src0_startofpacket),        //          .startofpacket
		.in_endofpacket    (rsp_xbar_demux_src0_endofpacket),          //          .endofpacket
		.in_data           (rsp_xbar_demux_src0_data),                 //          .data
		.in_channel        (rsp_xbar_demux_src0_channel),              //          .channel
		.out_ready         (pipeline_stage_003_source0_ready),         //   source0.ready
		.out_valid         (pipeline_stage_003_source0_valid),         //          .valid
		.out_startofpacket (pipeline_stage_003_source0_startofpacket), //          .startofpacket
		.out_endofpacket   (pipeline_stage_003_source0_endofpacket),   //          .endofpacket
		.out_data          (pipeline_stage_003_source0_data),          //          .data
		.out_channel       (pipeline_stage_003_source0_channel),       //          .channel
		.in_empty          (1'b0),                                     // (terminated)
		.out_empty         (),                                         // (terminated)
		.out_error         (),                                         // (terminated)
		.in_error          (1'b0)                                      // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (82),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (0),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) pipeline_stage_004 (
		.clk               (clock_clk_clk),                                                       //       cr0.clk
		.reset             (NIOS_reset_n_reset_bridge_in_reset_reset),                            // cr0_reset.reset
		.in_ready          (sdram_s1_translator_avalon_universal_slave_0_agent_rp_ready),         //     sink0.ready
		.in_valid          (sdram_s1_translator_avalon_universal_slave_0_agent_rp_valid),         //          .valid
		.in_startofpacket  (sdram_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket), //          .startofpacket
		.in_endofpacket    (sdram_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),   //          .endofpacket
		.in_data           (sdram_s1_translator_avalon_universal_slave_0_agent_rp_data),          //          .data
		.out_ready         (pipeline_stage_004_source0_ready),                                    //   source0.ready
		.out_valid         (pipeline_stage_004_source0_valid),                                    //          .valid
		.out_startofpacket (pipeline_stage_004_source0_startofpacket),                            //          .startofpacket
		.out_endofpacket   (pipeline_stage_004_source0_endofpacket),                              //          .endofpacket
		.out_data          (pipeline_stage_004_source0_data),                                     //          .data
		.in_empty          (1'b0),                                                                // (terminated)
		.out_empty         (),                                                                    // (terminated)
		.out_error         (),                                                                    // (terminated)
		.in_error          (1'b0),                                                                // (terminated)
		.out_channel       (),                                                                    // (terminated)
		.in_channel        (1'b0)                                                                 // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (100),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (7),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) pipeline_stage_005 (
		.clk               (clock_clk_clk),                            //       cr0.clk
		.reset             (NIOS_reset_n_reset_bridge_in_reset_reset), // cr0_reset.reset
		.in_ready          (id_router_003_src_ready),                  //     sink0.ready
		.in_valid          (id_router_003_src_valid),                  //          .valid
		.in_startofpacket  (id_router_003_src_startofpacket),          //          .startofpacket
		.in_endofpacket    (id_router_003_src_endofpacket),            //          .endofpacket
		.in_data           (id_router_003_src_data),                   //          .data
		.in_channel        (id_router_003_src_channel),                //          .channel
		.out_ready         (pipeline_stage_005_source0_ready),         //   source0.ready
		.out_valid         (pipeline_stage_005_source0_valid),         //          .valid
		.out_startofpacket (pipeline_stage_005_source0_startofpacket), //          .startofpacket
		.out_endofpacket   (pipeline_stage_005_source0_endofpacket),   //          .endofpacket
		.out_data          (pipeline_stage_005_source0_data),          //          .data
		.out_channel       (pipeline_stage_005_source0_channel),       //          .channel
		.in_empty          (1'b0),                                     // (terminated)
		.out_empty         (),                                         // (terminated)
		.out_error         (),                                         // (terminated)
		.in_error          (1'b0)                                      // (terminated)
	);

endmodule
